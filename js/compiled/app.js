var shadow$provide = {};
var CLOSURE_NO_DEPS = true;
var CLOSURE_BASE_PATH = '/js/compiled/cljs-runtime/';
var CLOSURE_DEFINES = {"goog.DEBUG":true,"goog.LOCALE":"en","goog.TRANSPILE":"never","goog.ENABLE_DEBUG_LOADER":false};
var COMPILED = false;
var goog = goog || {};
goog.global = this || self;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.exportPath_ = function(name, object, overwriteImplicit, objectToExportTo) {
  var parts = name.split(".");
  var cur = objectToExportTo || goog.global;
  if (!(parts[0] in cur) && typeof cur.execScript != "undefined") {
    cur.execScript("var " + parts[0]);
  }
  for (var part; parts.length && (part = parts.shift());) {
    if (!parts.length && object !== undefined) {
      if (!overwriteImplicit && goog.isObject(object) && goog.isObject(cur[part])) {
        for (var prop in object) {
          if (object.hasOwnProperty(prop)) {
            cur[part][prop] = object[prop];
          }
        }
      } else {
        cur[part] = object;
      }
    } else if (cur[part] && cur[part] !== Object.prototype[part]) {
      cur = cur[part];
    } else {
      cur = cur[part] = {};
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    var uncompiledDefines = goog.global.CLOSURE_UNCOMPILED_DEFINES;
    var defines = goog.global.CLOSURE_DEFINES;
    if (uncompiledDefines && uncompiledDefines.nodeType === undefined && Object.prototype.hasOwnProperty.call(uncompiledDefines, name)) {
      value = uncompiledDefines[name];
    } else if (defines && defines.nodeType === undefined && Object.prototype.hasOwnProperty.call(defines, name)) {
      value = defines[name];
    }
  }
  return value;
};
goog.FEATURESET_YEAR = goog.define("goog.FEATURESET_YEAR", 2012);
goog.DEBUG = goog.define("goog.DEBUG", true);
goog.LOCALE = goog.define("goog.LOCALE", "en");
goog.getLocale = function() {
  return goog.LOCALE;
};
goog.TRUSTED_SITE = goog.define("goog.TRUSTED_SITE", true);
goog.DISALLOW_TEST_ONLY_CODE = goog.define("goog.DISALLOW_TEST_ONLY_CODE", COMPILED && !goog.DEBUG);
goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING = goog.define("goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING", false);
goog.provide = function(name) {
  if (goog.isInModuleLoader_()) {
    throw new Error("goog.provide cannot be used within a module.");
  }
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw new Error('Namespace "' + name + '" already declared.');
    }
  }
  goog.constructNamespace_(name);
};
goog.constructNamespace_ = function(name, object, overwriteImplicit) {
  if (!COMPILED) {
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name, object, overwriteImplicit);
};
goog.NONCE_PATTERN_ = /^[\w+/_-]+[=]{0,2}$/;
goog.getScriptNonce_ = function(opt_window) {
  var doc = (opt_window || goog.global).document;
  var script = doc.querySelector && doc.querySelector("script[nonce]");
  if (script) {
    var nonce = script["nonce"] || script.getAttribute("nonce");
    if (nonce && goog.NONCE_PATTERN_.test(nonce)) {
      return nonce;
    }
  }
  return "";
};
goog.VALID_MODULE_RE_ = /^[a-zA-Z_$][a-zA-Z0-9._$]*$/;
goog.module = function(name) {
  if (typeof name !== "string" || !name || name.search(goog.VALID_MODULE_RE_) == -1) {
    throw new Error("Invalid module identifier");
  }
  if (!goog.isInGoogModuleLoader_()) {
    throw new Error("Module " + name + " has been loaded incorrectly. Note, " + "modules cannot be loaded as normal scripts. They require some kind of " + "pre-processing step. You're likely trying to load a module via a " + "script tag or as a part of a concatenated bundle without rewriting the " + "module. For more info see: " + "https://github.com/google/closure-library/wiki/goog.module:-an-ES6-module-like-alternative-to-goog.provide.");
  }
  if (goog.moduleLoaderState_.moduleName) {
    throw new Error("goog.module may only be called once per module.");
  }
  goog.moduleLoaderState_.moduleName = name;
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw new Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
  }
};
goog.module.get = function(name) {
  return goog.module.getInternal_(name);
};
goog.module.getInternal_ = function(name) {
  if (!COMPILED) {
    if (name in goog.loadedModules_) {
      return goog.loadedModules_[name].exports;
    } else if (!goog.implicitNamespaces_[name]) {
      var ns = goog.getObjectByName(name);
      return ns != null ? ns : null;
    }
  }
  return null;
};
goog.ModuleType = {ES6:"es6", GOOG:"goog"};
goog.moduleLoaderState_ = null;
goog.isInModuleLoader_ = function() {
  return goog.isInGoogModuleLoader_() || goog.isInEs6ModuleLoader_();
};
goog.isInGoogModuleLoader_ = function() {
  return !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.GOOG;
};
goog.isInEs6ModuleLoader_ = function() {
  var inLoader = !!goog.moduleLoaderState_ && goog.moduleLoaderState_.type == goog.ModuleType.ES6;
  if (inLoader) {
    return true;
  }
  var jscomp = goog.global["$jscomp"];
  if (jscomp) {
    if (typeof jscomp.getCurrentModulePath != "function") {
      return false;
    }
    return !!jscomp.getCurrentModulePath();
  }
  return false;
};
goog.module.declareLegacyNamespace = function() {
  if (!COMPILED && !goog.isInGoogModuleLoader_()) {
    throw new Error("goog.module.declareLegacyNamespace must be called from " + "within a goog.module");
  }
  if (!COMPILED && !goog.moduleLoaderState_.moduleName) {
    throw new Error("goog.module must be called prior to " + "goog.module.declareLegacyNamespace.");
  }
  goog.moduleLoaderState_.declareLegacyNamespace = true;
};
goog.declareModuleId = function(namespace) {
  if (!COMPILED) {
    if (!goog.isInEs6ModuleLoader_()) {
      throw new Error("goog.declareModuleId may only be called from " + "within an ES6 module");
    }
    if (goog.moduleLoaderState_ && goog.moduleLoaderState_.moduleName) {
      throw new Error("goog.declareModuleId may only be called once per module.");
    }
    if (namespace in goog.loadedModules_) {
      throw new Error('Module with namespace "' + namespace + '" already exists.');
    }
  }
  if (goog.moduleLoaderState_) {
    goog.moduleLoaderState_.moduleName = namespace;
  } else {
    var jscomp = goog.global["$jscomp"];
    if (!jscomp || typeof jscomp.getCurrentModulePath != "function") {
      throw new Error('Module with namespace "' + namespace + '" has been loaded incorrectly.');
    }
    var exports = jscomp.require(jscomp.getCurrentModulePath());
    goog.loadedModules_[namespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:namespace};
  }
};
goog.setTestOnly = function(opt_message) {
  if (goog.DISALLOW_TEST_ONLY_CODE) {
    opt_message = opt_message || "";
    throw new Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
goog.forwardDeclare("Document");
goog.forwardDeclare("HTMLScriptElement");
goog.forwardDeclare("XMLHttpRequest");
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return name in goog.loadedModules_ || !goog.implicitNamespaces_[name] && goog.getObjectByName(name) != null;
  };
  goog.implicitNamespaces_ = {"goog.module":true};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var i = 0; i < parts.length; i++) {
    cur = cur[parts[i]];
    if (cur == null) {
      return null;
    }
  }
  return cur;
};
goog.addDependency = function(relPath, provides, requires, opt_loadFlags) {
  if (!COMPILED && goog.DEPENDENCIES_ENABLED) {
    goog.debugLoader_.addDependency(relPath, provides, requires, opt_loadFlags);
  }
};
goog.ENABLE_DEBUG_LOADER = goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.logToConsole_ = function(msg) {
  if (goog.global.console) {
    goog.global.console["error"](msg);
  }
};
goog.require = function(namespace) {
  if (!COMPILED) {
    if (goog.ENABLE_DEBUG_LOADER) {
      goog.debugLoader_.requested(namespace);
    }
    if (goog.isProvided_(namespace)) {
      if (goog.isInModuleLoader_()) {
        return goog.module.getInternal_(namespace);
      }
    } else if (goog.ENABLE_DEBUG_LOADER) {
      var moduleLoaderState = goog.moduleLoaderState_;
      goog.moduleLoaderState_ = null;
      try {
        goog.debugLoader_.load_(namespace);
      } finally {
        goog.moduleLoaderState_ = moduleLoaderState;
      }
    }
    return null;
  }
};
goog.requireType = function(namespace) {
  return {};
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.abstractMethod = function() {
  throw new Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.instance_ = undefined;
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor();
  };
};
goog.instantiatedSingletons_ = [];
goog.LOAD_MODULE_USING_EVAL = goog.define("goog.LOAD_MODULE_USING_EVAL", true);
goog.SEAL_MODULE_EXPORTS = goog.define("goog.SEAL_MODULE_EXPORTS", goog.DEBUG);
goog.loadedModules_ = {};
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
goog.TRANSPILE = goog.define("goog.TRANSPILE", "detect");
goog.ASSUME_ES_MODULES_TRANSPILED = goog.define("goog.ASSUME_ES_MODULES_TRANSPILED", false);
goog.TRANSPILE_TO_LANGUAGE = goog.define("goog.TRANSPILE_TO_LANGUAGE", "");
goog.TRANSPILER = goog.define("goog.TRANSPILER", "transpile.js");
goog.TRUSTED_TYPES_POLICY_NAME = goog.define("goog.TRUSTED_TYPES_POLICY_NAME", "goog");
goog.hasBadLetScoping = null;
goog.loadModule = function(moduleDef) {
  var previousState = goog.moduleLoaderState_;
  try {
    goog.moduleLoaderState_ = {moduleName:"", declareLegacyNamespace:false, type:goog.ModuleType.GOOG};
    var origExports = {};
    var exports = origExports;
    if (typeof moduleDef === "function") {
      exports = moduleDef.call(undefined, exports);
    } else if (typeof moduleDef === "string") {
      exports = goog.loadModuleFromSource_.call(undefined, exports, moduleDef);
    } else {
      throw new Error("Invalid module definition");
    }
    var moduleName = goog.moduleLoaderState_.moduleName;
    if (typeof moduleName === "string" && moduleName) {
      if (goog.moduleLoaderState_.declareLegacyNamespace) {
        var isDefaultExport = origExports !== exports;
        goog.constructNamespace_(moduleName, exports, isDefaultExport);
      } else if (goog.SEAL_MODULE_EXPORTS && Object.seal && typeof exports == "object" && exports != null) {
        Object.seal(exports);
      }
      var data = {exports:exports, type:goog.ModuleType.GOOG, moduleId:goog.moduleLoaderState_.moduleName};
      goog.loadedModules_[moduleName] = data;
    } else {
      throw new Error('Invalid module name "' + moduleName + '"');
    }
  } finally {
    goog.moduleLoaderState_ = previousState;
  }
};
goog.loadModuleFromSource_ = function(exports) {
  eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(arguments[1]));
  return exports;
};
goog.normalizePath_ = function(path) {
  var components = path.split("/");
  var i = 0;
  while (i < components.length) {
    if (components[i] == ".") {
      components.splice(i, 1);
    } else if (i && components[i] == ".." && components[i - 1] && components[i - 1] != "..") {
      components.splice(--i, 2);
    } else {
      i++;
    }
  }
  return components.join("/");
};
goog.global.CLOSURE_LOAD_FILE_SYNC;
goog.loadFileSync_ = function(src) {
  if (goog.global.CLOSURE_LOAD_FILE_SYNC) {
    return goog.global.CLOSURE_LOAD_FILE_SYNC(src);
  } else {
    try {
      var xhr = new goog.global["XMLHttpRequest"]();
      xhr.open("get", src, false);
      xhr.send();
      return xhr.status == 0 || xhr.status == 200 ? xhr.responseText : null;
    } catch (err) {
      return null;
    }
  }
};
goog.transpile_ = function(code, path, target) {
  var jscomp = goog.global["$jscomp"];
  if (!jscomp) {
    goog.global["$jscomp"] = jscomp = {};
  }
  var transpile = jscomp.transpile;
  if (!transpile) {
    var transpilerPath = goog.basePath + goog.TRANSPILER;
    var transpilerCode = goog.loadFileSync_(transpilerPath);
    if (transpilerCode) {
      (function() {
        (0,eval)(transpilerCode + "\n//# sourceURL\x3d" + transpilerPath);
      }).call(goog.global);
      if (goog.global["$gwtExport"] && goog.global["$gwtExport"]["$jscomp"] && !goog.global["$gwtExport"]["$jscomp"]["transpile"]) {
        throw new Error('The transpiler did not properly export the "transpile" ' + "method. $gwtExport: " + JSON.stringify(goog.global["$gwtExport"]));
      }
      goog.global["$jscomp"].transpile = goog.global["$gwtExport"]["$jscomp"]["transpile"];
      jscomp = goog.global["$jscomp"];
      transpile = jscomp.transpile;
    }
  }
  if (!transpile) {
    var suffix = " requires transpilation but no transpiler was found.";
    transpile = jscomp.transpile = function(code, path) {
      goog.logToConsole_(path + suffix);
      return code;
    };
  }
  return transpile(code, path, target);
};
goog.typeOf = function(value) {
  var s = typeof value;
  if (s != "object") {
    return s;
  }
  if (!value) {
    return "null";
  }
  if (Array.isArray(value)) {
    return "array";
  }
  return s;
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return Object.prototype.hasOwnProperty.call(obj, goog.UID_PROPERTY_) && obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return !!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if (obj !== null && "removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1e9 >>> 0);
goog.uidCounter_ = 0;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (typeof obj.clone === "function") {
      return obj.clone();
    }
    if (typeof Map !== "undefined" && obj instanceof Map) {
      return new Map(obj);
    } else if (typeof Set !== "undefined" && obj instanceof Set) {
      return new Set(obj);
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments);
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error();
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = function() {
  return Date.now();
};
goog.globalEval = function(script) {
  (0,eval)(script);
};
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.global.CLOSURE_CSS_NAME_MAP_FN;
goog.getCssName = function(className, opt_modifier) {
  if (String(className).charAt(0) == ".") {
    throw new Error('className passed in goog.getCssName must not start with ".".' + " You passed: " + className);
  }
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0; i < parts.length; i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  var result = opt_modifier ? className + "-" + rename(opt_modifier) : rename(className);
  if (goog.global.CLOSURE_CSS_NAME_MAP_FN) {
    return goog.global.CLOSURE_CSS_NAME_MAP_FN(result);
  }
  return result;
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values, opt_options) {
  if (opt_options && opt_options.html) {
    str = str.replace(/</g, "\x26lt;");
  }
  if (opt_options && opt_options.unescapeHtmlEntities) {
    str = str.replace(/&lt;/g, "\x3c").replace(/&gt;/g, "\x3e").replace(/&apos;/g, "'").replace(/&quot;/g, '"').replace(/&amp;/g, "\x26");
  }
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return opt_values != null && key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, objectToExportTo) {
  goog.exportPath_(publicPath, object, true, objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor();
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = new Array(arguments.length - 2);
    for (var i = 2; i < arguments.length; i++) {
      args[i - 2] = arguments[i];
    }
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.scope = function(fn) {
  if (goog.isInModuleLoader_()) {
    throw new Error("goog.scope is not supported within a module.");
  }
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw new Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.defineClass.SEAL_CLASS_INSTANCES = goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (!goog.defineClass.SEAL_CLASS_INSTANCES) {
    return ctr;
  }
  var wrappedCtr = function() {
    var instance = ctr.apply(this, arguments) || this;
    instance[goog.UID_PROPERTY_] = instance[goog.UID_PROPERTY_];
    return instance;
  };
  return wrappedCtr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0; i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length; i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.identity_ = function(s) {
  return s;
};
goog.createTrustedTypesPolicy = function(name) {
  var policy = null;
  var policyFactory = goog.global.trustedTypes;
  if (!policyFactory || !policyFactory.createPolicy) {
    return policy;
  }
  try {
    policy = policyFactory.createPolicy(name, {createHTML:goog.identity_, createScript:goog.identity_, createScriptURL:goog.identity_});
  } catch (e) {
    goog.logToConsole_(e.message);
  }
  return policy;
};
if (!COMPILED && goog.DEPENDENCIES_ENABLED) {
  goog.isEdge_ = function() {
    var userAgent = goog.global.navigator && goog.global.navigator.userAgent ? goog.global.navigator.userAgent : "";
    var edgeRe = /Edge\/(\d+)(\.\d)*/i;
    return !!userAgent.match(edgeRe);
  };
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return doc != null && "write" in doc;
  };
  goog.isDocumentLoading_ = function() {
    var doc = goog.global.document;
    return doc.attachEvent ? doc.readyState != "complete" : doc.readyState == "loading";
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH != undefined && typeof goog.global.CLOSURE_BASE_PATH === "string") {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else if (!goog.inHtmlDocument_()) {
      return;
    }
    var doc = goog.global.document;
    var currentScript = doc.currentScript;
    if (currentScript) {
      var scripts = [currentScript];
    } else {
      var scripts = doc.getElementsByTagName("SCRIPT");
    }
    for (var i = scripts.length - 1; i >= 0; --i) {
      var script = scripts[i];
      var src = script.src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.findBasePath_();
  goog.Transpiler = function() {
    this.requiresTranspilation_ = null;
    this.transpilationTarget_ = goog.TRANSPILE_TO_LANGUAGE;
  };
  goog.Transpiler.prototype.createRequiresTranspilation_ = function() {
    var transpilationTarget = "es3";
    var requiresTranspilation = {"es3":false};
    var transpilationRequiredForAllLaterModes = false;
    function addNewerLanguageTranspilationCheck(modeName, isSupported) {
      if (transpilationRequiredForAllLaterModes) {
        requiresTranspilation[modeName] = true;
      } else if (isSupported()) {
        transpilationTarget = modeName;
        requiresTranspilation[modeName] = false;
      } else {
        requiresTranspilation[modeName] = true;
        transpilationRequiredForAllLaterModes = true;
      }
    }
    function evalCheck(code) {
      try {
        return !!eval(goog.CLOSURE_EVAL_PREFILTER_.createScript(code));
      } catch (ignored) {
        return false;
      }
    }
    addNewerLanguageTranspilationCheck("es5", function() {
      return evalCheck("[1,].length\x3d\x3d1");
    });
    addNewerLanguageTranspilationCheck("es6", function() {
      if (goog.isEdge_()) {
        return false;
      }
      var es6fullTest = "class X{constructor(){if(new.target!\x3dString)throw 1;this.x\x3d42}}" + "let q\x3dReflect.construct(X,[],String);if(q.x!\x3d42||!(q instanceof " + "String))throw 1;for(const a of[2,3]){if(a\x3d\x3d2)continue;function " + "f(z\x3d{a}){let a\x3d0;return z.a}{function f(){return 0;}}return f()" + "\x3d\x3d3}";
      return evalCheck('(()\x3d\x3e{"use strict";' + es6fullTest + "})()");
    });
    addNewerLanguageTranspilationCheck("es7", function() {
      return evalCheck("2**3\x3d\x3d8");
    });
    addNewerLanguageTranspilationCheck("es8", function() {
      return evalCheck("async()\x3d\x3e1,1");
    });
    addNewerLanguageTranspilationCheck("es9", function() {
      return evalCheck("({...rest}\x3d{}),1");
    });
    addNewerLanguageTranspilationCheck("es_2019", function() {
      return evalCheck('let r;try{r\x3d" "}catch{};r');
    });
    addNewerLanguageTranspilationCheck("es_2020", function() {
      return evalCheck("null?.x??1");
    });
    addNewerLanguageTranspilationCheck("es_next", function() {
      return false;
    });
    return {target:transpilationTarget, map:requiresTranspilation};
  };
  goog.Transpiler.prototype.needsTranspile = function(lang, module) {
    if (goog.TRANSPILE == "always") {
      return true;
    } else if (goog.TRANSPILE == "never") {
      return false;
    } else if (!this.requiresTranspilation_) {
      var obj = this.createRequiresTranspilation_();
      this.requiresTranspilation_ = obj.map;
      this.transpilationTarget_ = this.transpilationTarget_ || obj.target;
    }
    if (lang in this.requiresTranspilation_) {
      if (this.requiresTranspilation_[lang]) {
        return true;
      } else if (goog.inHtmlDocument_() && module == "es6" && !("noModule" in goog.global.document.createElement("script"))) {
        return true;
      } else {
        return false;
      }
    } else {
      throw new Error("Unknown language mode: " + lang);
    }
  };
  goog.Transpiler.prototype.transpile = function(code, path) {
    return goog.transpile_(code, path, this.transpilationTarget_);
  };
  goog.transpiler_ = new goog.Transpiler();
  goog.protectScriptTag_ = function(str) {
    return str.replace(/<\/(SCRIPT)/ig, "\\x3c/$1");
  };
  goog.DebugLoader_ = function() {
    this.dependencies_ = {};
    this.idToPath_ = {};
    this.written_ = {};
    this.loadingDeps_ = [];
    this.depsToLoad_ = [];
    this.paused_ = false;
    this.factory_ = new goog.DependencyFactory(goog.transpiler_);
    this.deferredCallbacks_ = {};
    this.deferredQueue_ = [];
  };
  goog.DebugLoader_.prototype.bootstrap = function(namespaces, callback) {
    var cb = callback;
    function resolve() {
      if (cb) {
        goog.global.setTimeout(cb, 0);
        cb = null;
      }
    }
    if (!namespaces.length) {
      resolve();
      return;
    }
    var deps = [];
    for (var i = 0; i < namespaces.length; i++) {
      var path = this.getPathFromDeps_(namespaces[i]);
      if (!path) {
        throw new Error("Unregonized namespace: " + namespaces[i]);
      }
      deps.push(this.dependencies_[path]);
    }
    var require = goog.require;
    var loaded = 0;
    for (var i = 0; i < namespaces.length; i++) {
      require(namespaces[i]);
      deps[i].onLoad(function() {
        if (++loaded == namespaces.length) {
          resolve();
        }
      });
    }
  };
  goog.DebugLoader_.prototype.loadClosureDeps = function() {
    var relPath = "deps.js";
    this.depsToLoad_.push(this.factory_.createDependency(goog.normalizePath_(goog.basePath + relPath), relPath, [], [], {}, false));
    this.loadDeps_();
  };
  goog.DebugLoader_.prototype.requested = function(absPathOrId, opt_force) {
    var path = this.getPathFromDeps_(absPathOrId);
    if (path && (opt_force || this.areDepsLoaded_(this.dependencies_[path].requires))) {
      var callback = this.deferredCallbacks_[path];
      if (callback) {
        delete this.deferredCallbacks_[path];
        callback();
      }
    }
  };
  goog.DebugLoader_.prototype.setDependencyFactory = function(factory) {
    this.factory_ = factory;
  };
  goog.DebugLoader_.prototype.load_ = function(namespace) {
    if (!this.getPathFromDeps_(namespace)) {
      var errorMessage = "goog.require could not find: " + namespace;
      goog.logToConsole_(errorMessage);
    } else {
      var loader = this;
      var deps = [];
      var visit = function(namespace) {
        var path = loader.getPathFromDeps_(namespace);
        if (!path) {
          throw new Error("Bad dependency path or symbol: " + namespace);
        }
        if (loader.written_[path]) {
          return;
        }
        loader.written_[path] = true;
        var dep = loader.dependencies_[path];
        for (var i = 0; i < dep.requires.length; i++) {
          if (!goog.isProvided_(dep.requires[i])) {
            visit(dep.requires[i]);
          }
        }
        deps.push(dep);
      };
      visit(namespace);
      var wasLoading = !!this.depsToLoad_.length;
      this.depsToLoad_ = this.depsToLoad_.concat(deps);
      if (!this.paused_ && !wasLoading) {
        this.loadDeps_();
      }
    }
  };
  goog.DebugLoader_.prototype.loadDeps_ = function() {
    var loader = this;
    var paused = this.paused_;
    while (this.depsToLoad_.length && !paused) {
      (function() {
        var loadCallDone = false;
        var dep = loader.depsToLoad_.shift();
        var loaded = false;
        loader.loading_(dep);
        var controller = {pause:function() {
          if (loadCallDone) {
            throw new Error("Cannot call pause after the call to load.");
          } else {
            paused = true;
          }
        }, resume:function() {
          if (loadCallDone) {
            loader.resume_();
          } else {
            paused = false;
          }
        }, loaded:function() {
          if (loaded) {
            throw new Error("Double call to loaded.");
          }
          loaded = true;
          loader.loaded_(dep);
        }, pending:function() {
          var pending = [];
          for (var i = 0; i < loader.loadingDeps_.length; i++) {
            pending.push(loader.loadingDeps_[i]);
          }
          return pending;
        }, setModuleState:function(type) {
          goog.moduleLoaderState_ = {type:type, moduleName:"", declareLegacyNamespace:false};
        }, registerEs6ModuleExports:function(path, exports, opt_closureNamespace) {
          if (opt_closureNamespace) {
            goog.loadedModules_[opt_closureNamespace] = {exports:exports, type:goog.ModuleType.ES6, moduleId:opt_closureNamespace || ""};
          }
        }, registerGoogModuleExports:function(moduleId, exports) {
          goog.loadedModules_[moduleId] = {exports:exports, type:goog.ModuleType.GOOG, moduleId:moduleId};
        }, clearModuleState:function() {
          goog.moduleLoaderState_ = null;
        }, defer:function(callback) {
          if (loadCallDone) {
            throw new Error("Cannot register with defer after the call to load.");
          }
          loader.defer_(dep, callback);
        }, areDepsLoaded:function() {
          return loader.areDepsLoaded_(dep.requires);
        }};
        try {
          dep.load(controller);
        } finally {
          loadCallDone = true;
        }
      })();
    }
    if (paused) {
      this.pause_();
    }
  };
  goog.DebugLoader_.prototype.pause_ = function() {
    this.paused_ = true;
  };
  goog.DebugLoader_.prototype.resume_ = function() {
    if (this.paused_) {
      this.paused_ = false;
      this.loadDeps_();
    }
  };
  goog.DebugLoader_.prototype.loading_ = function(dep) {
    this.loadingDeps_.push(dep);
  };
  goog.DebugLoader_.prototype.loaded_ = function(dep) {
    for (var i = 0; i < this.loadingDeps_.length; i++) {
      if (this.loadingDeps_[i] == dep) {
        this.loadingDeps_.splice(i, 1);
        break;
      }
    }
    for (var i = 0; i < this.deferredQueue_.length; i++) {
      if (this.deferredQueue_[i] == dep.path) {
        this.deferredQueue_.splice(i, 1);
        break;
      }
    }
    if (this.loadingDeps_.length == this.deferredQueue_.length && !this.depsToLoad_.length) {
      while (this.deferredQueue_.length) {
        this.requested(this.deferredQueue_.shift(), true);
      }
    }
    dep.loaded();
  };
  goog.DebugLoader_.prototype.areDepsLoaded_ = function(pathsOrIds) {
    for (var i = 0; i < pathsOrIds.length; i++) {
      var path = this.getPathFromDeps_(pathsOrIds[i]);
      if (!path || !(path in this.deferredCallbacks_) && !goog.isProvided_(pathsOrIds[i])) {
        return false;
      }
    }
    return true;
  };
  goog.DebugLoader_.prototype.getPathFromDeps_ = function(absPathOrId) {
    if (absPathOrId in this.idToPath_) {
      return this.idToPath_[absPathOrId];
    } else if (absPathOrId in this.dependencies_) {
      return absPathOrId;
    } else {
      return null;
    }
  };
  goog.DebugLoader_.prototype.defer_ = function(dependency, callback) {
    this.deferredCallbacks_[dependency.path] = callback;
    this.deferredQueue_.push(dependency.path);
  };
  goog.LoadController = function() {
  };
  goog.LoadController.prototype.pause = function() {
  };
  goog.LoadController.prototype.resume = function() {
  };
  goog.LoadController.prototype.loaded = function() {
  };
  goog.LoadController.prototype.pending = function() {
  };
  goog.LoadController.prototype.registerEs6ModuleExports = function(path, exports, opt_closureNamespace) {
  };
  goog.LoadController.prototype.setModuleState = function(type) {
  };
  goog.LoadController.prototype.clearModuleState = function() {
  };
  goog.LoadController.prototype.defer = function(callback) {
  };
  goog.LoadController.prototype.areDepsLoaded = function() {
  };
  goog.Dependency = function(path, relativePath, provides, requires, loadFlags) {
    this.path = path;
    this.relativePath = relativePath;
    this.provides = provides;
    this.requires = requires;
    this.loadFlags = loadFlags;
    this.loaded_ = false;
    this.loadCallbacks_ = [];
  };
  goog.Dependency.prototype.getPathName = function() {
    var pathName = this.path;
    var protocolIndex = pathName.indexOf("://");
    if (protocolIndex >= 0) {
      pathName = pathName.substring(protocolIndex + 3);
      var slashIndex = pathName.indexOf("/");
      if (slashIndex >= 0) {
        pathName = pathName.substring(slashIndex + 1);
      }
    }
    return pathName;
  };
  goog.Dependency.prototype.onLoad = function(callback) {
    if (this.loaded_) {
      callback();
    } else {
      this.loadCallbacks_.push(callback);
    }
  };
  goog.Dependency.prototype.loaded = function() {
    this.loaded_ = true;
    var callbacks = this.loadCallbacks_;
    this.loadCallbacks_ = [];
    for (var i = 0; i < callbacks.length; i++) {
      callbacks[i]();
    }
  };
  goog.Dependency.defer_ = false;
  goog.Dependency.callbackMap_ = {};
  goog.Dependency.registerCallback_ = function(callback) {
    var key = Math.random().toString(32);
    goog.Dependency.callbackMap_[key] = callback;
    return key;
  };
  goog.Dependency.unregisterCallback_ = function(key) {
    delete goog.Dependency.callbackMap_[key];
  };
  goog.Dependency.callback_ = function(key, var_args) {
    if (key in goog.Dependency.callbackMap_) {
      var callback = goog.Dependency.callbackMap_[key];
      var args = [];
      for (var i = 1; i < arguments.length; i++) {
        args.push(arguments[i]);
      }
      callback.apply(undefined, args);
    } else {
      var errorMessage = "Callback key " + key + " does not exist (was base.js loaded more than once?).";
      throw Error(errorMessage);
    }
  };
  goog.Dependency.prototype.load = function(controller) {
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    if (!goog.inHtmlDocument_()) {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents.");
      if (this.relativePath == "deps.js") {
        goog.logToConsole_("Consider setting CLOSURE_IMPORT_SCRIPT before loading base.js, " + "or setting CLOSURE_NO_DEPS to true.");
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    var doc = goog.global.document;
    if (doc.readyState == "complete" && !goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING) {
      var isDeps = /\bdeps.js$/.test(this.path);
      if (isDeps) {
        controller.loaded();
        return;
      } else {
        throw Error('Cannot write "' + this.path + '" after document load');
      }
    }
    var nonce = goog.getScriptNonce_();
    if (!goog.ENABLE_CHROME_APP_SAFE_SCRIPT_LOADING && goog.isDocumentLoading_()) {
      var key;
      var callback = function(script) {
        if (script.readyState && script.readyState != "complete") {
          script.onload = callback;
          return;
        }
        goog.Dependency.unregisterCallback_(key);
        controller.loaded();
      };
      key = goog.Dependency.registerCallback_(callback);
      var defer = goog.Dependency.defer_ ? " defer" : "";
      var nonceAttr = nonce ? ' nonce\x3d"' + nonce + '"' : "";
      var script = '\x3cscript src\x3d"' + this.path + '"' + nonceAttr + defer + ' id\x3d"script-' + key + '"\x3e\x3c/script\x3e';
      script += "\x3cscript" + nonceAttr + "\x3e";
      if (goog.Dependency.defer_) {
        script += "document.getElementById('script-" + key + "').onload \x3d function() {\n" + "  goog.Dependency.callback_('" + key + "', this);\n" + "};\n";
      } else {
        script += "goog.Dependency.callback_('" + key + "', document.getElementById('script-" + key + "'));";
      }
      script += "\x3c/script\x3e";
      doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
    } else {
      var scriptEl = doc.createElement("script");
      scriptEl.defer = goog.Dependency.defer_;
      scriptEl.async = false;
      if (nonce) {
        scriptEl.nonce = nonce;
      }
      if (goog.DebugLoader_.IS_OLD_IE_) {
        controller.pause();
        scriptEl.onreadystatechange = function() {
          if (scriptEl.readyState == "loaded" || scriptEl.readyState == "complete") {
            controller.loaded();
            controller.resume();
          }
        };
      } else {
        scriptEl.onload = function() {
          scriptEl.onload = null;
          controller.loaded();
        };
      }
      scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(this.path) : this.path;
      doc.head.appendChild(scriptEl);
    }
  };
  goog.Es6ModuleDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.Es6ModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
  };
  goog.inherits(goog.Es6ModuleDependency, goog.Dependency);
  goog.Es6ModuleDependency.prototype.load = function(controller) {
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      if (goog.global.CLOSURE_IMPORT_SCRIPT(this.path)) {
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    if (!goog.inHtmlDocument_()) {
      goog.logToConsole_("Cannot use default debug loader outside of HTML documents.");
      controller.pause();
      return;
    }
    var doc = goog.global.document;
    var dep = this;
    function write(src, contents) {
      var nonceAttr = "";
      var nonce = goog.getScriptNonce_();
      if (nonce) {
        nonceAttr = ' nonce\x3d"' + nonce + '"';
      }
      if (contents) {
        var script = '\x3cscript type\x3d"module" crossorigin' + nonceAttr + "\x3e" + contents + "\x3c/" + "script\x3e";
        doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
      } else {
        var script = '\x3cscript type\x3d"module" crossorigin src\x3d"' + src + '"' + nonceAttr + "\x3e\x3c/" + "script\x3e";
        doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
      }
    }
    function append(src, contents) {
      var scriptEl = doc.createElement("script");
      scriptEl.defer = true;
      scriptEl.async = false;
      scriptEl.type = "module";
      scriptEl.setAttribute("crossorigin", true);
      var nonce = goog.getScriptNonce_();
      if (nonce) {
        scriptEl.nonce = nonce;
      }
      if (contents) {
        scriptEl.text = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScript(contents) : contents;
      } else {
        scriptEl.src = goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createScriptURL(src) : src;
      }
      doc.head.appendChild(scriptEl);
    }
    var create;
    if (goog.isDocumentLoading_()) {
      create = write;
      goog.Dependency.defer_ = true;
    } else {
      create = append;
    }
    var beforeKey = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(beforeKey);
      controller.setModuleState(goog.ModuleType.ES6);
    });
    create(undefined, 'goog.Dependency.callback_("' + beforeKey + '")');
    create(this.path, undefined);
    var registerKey = goog.Dependency.registerCallback_(function(exports) {
      goog.Dependency.unregisterCallback_(registerKey);
      controller.registerEs6ModuleExports(dep.path, exports, goog.moduleLoaderState_.moduleName);
    });
    create(undefined, 'import * as m from "' + this.path + '"; goog.Dependency.callback_("' + registerKey + '", m)');
    var afterKey = goog.Dependency.registerCallback_(function() {
      goog.Dependency.unregisterCallback_(afterKey);
      controller.clearModuleState();
      controller.loaded();
    });
    create(undefined, 'goog.Dependency.callback_("' + afterKey + '")');
  };
  goog.TransformedDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.TransformedDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.contents_ = null;
    this.lazyFetch_ = !goog.inHtmlDocument_() || !("noModule" in goog.global.document.createElement("script"));
  };
  goog.inherits(goog.TransformedDependency, goog.Dependency);
  goog.TransformedDependency.prototype.load = function(controller) {
    var dep = this;
    function fetch() {
      dep.contents_ = goog.loadFileSync_(dep.path);
      if (dep.contents_) {
        dep.contents_ = dep.transform(dep.contents_);
        if (dep.contents_) {
          dep.contents_ += "\n//# sourceURL\x3d" + dep.path;
        }
      }
    }
    if (goog.global.CLOSURE_IMPORT_SCRIPT) {
      fetch();
      if (this.contents_ && goog.global.CLOSURE_IMPORT_SCRIPT("", this.contents_)) {
        this.contents_ = null;
        controller.loaded();
      } else {
        controller.pause();
      }
      return;
    }
    var isEs6 = this.loadFlags["module"] == goog.ModuleType.ES6;
    if (!this.lazyFetch_) {
      fetch();
    }
    function load() {
      if (dep.lazyFetch_) {
        fetch();
      }
      if (!dep.contents_) {
        return;
      }
      if (isEs6) {
        controller.setModuleState(goog.ModuleType.ES6);
      }
      var namespace;
      try {
        var contents = dep.contents_;
        dep.contents_ = null;
        goog.globalEval(goog.CLOSURE_EVAL_PREFILTER_.createScript(contents));
        if (isEs6) {
          namespace = goog.moduleLoaderState_.moduleName;
        }
      } finally {
        if (isEs6) {
          controller.clearModuleState();
        }
      }
      if (isEs6) {
        goog.global["$jscomp"]["require"]["ensure"]([dep.getPathName()], function() {
          controller.registerEs6ModuleExports(dep.path, goog.global["$jscomp"]["require"](dep.getPathName()), namespace);
        });
      }
      controller.loaded();
    }
    function fetchInOwnScriptThenLoad() {
      var doc = goog.global.document;
      var key = goog.Dependency.registerCallback_(function() {
        goog.Dependency.unregisterCallback_(key);
        load();
      });
      var nonce = goog.getScriptNonce_();
      var nonceAttr = nonce ? ' nonce\x3d"' + nonce + '"' : "";
      var script = "\x3cscript" + nonceAttr + "\x3e" + goog.protectScriptTag_('goog.Dependency.callback_("' + key + '");') + "\x3c/" + "script\x3e";
      doc.write(goog.TRUSTED_TYPES_POLICY_ ? goog.TRUSTED_TYPES_POLICY_.createHTML(script) : script);
    }
    var anythingElsePending = controller.pending().length > 1;
    var useOldIeWorkAround = anythingElsePending && goog.DebugLoader_.IS_OLD_IE_;
    var needsAsyncLoading = goog.Dependency.defer_ && (anythingElsePending || goog.isDocumentLoading_());
    if (useOldIeWorkAround || needsAsyncLoading) {
      controller.defer(function() {
        load();
      });
      return;
    }
    var doc = goog.global.document;
    var isInternetExplorerOrEdge = goog.inHtmlDocument_() && ("ActiveXObject" in goog.global || goog.isEdge_());
    if (isEs6 && goog.inHtmlDocument_() && goog.isDocumentLoading_() && !isInternetExplorerOrEdge) {
      goog.Dependency.defer_ = true;
      controller.pause();
      var oldCallback = doc.onreadystatechange;
      doc.onreadystatechange = function() {
        if (doc.readyState == "interactive") {
          doc.onreadystatechange = oldCallback;
          load();
          controller.resume();
        }
        if (typeof oldCallback === "function") {
          oldCallback.apply(undefined, arguments);
        }
      };
    } else {
      if (goog.DebugLoader_.IS_OLD_IE_ || !goog.inHtmlDocument_() || !goog.isDocumentLoading_()) {
        load();
      } else {
        fetchInOwnScriptThenLoad();
      }
    }
  };
  goog.TransformedDependency.prototype.transform = function(contents) {
  };
  goog.TranspiledDependency = function(path, relativePath, provides, requires, loadFlags, transpiler) {
    goog.TranspiledDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.transpiler = transpiler;
  };
  goog.inherits(goog.TranspiledDependency, goog.TransformedDependency);
  goog.TranspiledDependency.prototype.transform = function(contents) {
    return this.transpiler.transpile(contents, this.getPathName());
  };
  goog.PreTranspiledEs6ModuleDependency = function(path, relativePath, provides, requires, loadFlags) {
    goog.PreTranspiledEs6ModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
  };
  goog.inherits(goog.PreTranspiledEs6ModuleDependency, goog.TransformedDependency);
  goog.PreTranspiledEs6ModuleDependency.prototype.transform = function(contents) {
    return contents;
  };
  goog.GoogModuleDependency = function(path, relativePath, provides, requires, loadFlags, needsTranspile, transpiler) {
    goog.GoogModuleDependency.base(this, "constructor", path, relativePath, provides, requires, loadFlags);
    this.needsTranspile_ = needsTranspile;
    this.transpiler_ = transpiler;
  };
  goog.inherits(goog.GoogModuleDependency, goog.TransformedDependency);
  goog.GoogModuleDependency.prototype.transform = function(contents) {
    if (this.needsTranspile_) {
      contents = this.transpiler_.transpile(contents, this.getPathName());
    }
    if (!goog.LOAD_MODULE_USING_EVAL || goog.global.JSON === undefined) {
      return "" + "goog.loadModule(function(exports) {" + '"use strict";' + contents + "\n" + ";return exports" + "});" + "\n//# sourceURL\x3d" + this.path + "\n";
    } else {
      return "" + "goog.loadModule(" + goog.global.JSON.stringify(contents + "\n//# sourceURL\x3d" + this.path + "\n") + ");";
    }
  };
  goog.DebugLoader_.IS_OLD_IE_ = !!(!goog.global.atob && goog.global.document && goog.global.document["all"]);
  goog.DebugLoader_.prototype.addDependency = function(relPath, provides, requires, opt_loadFlags) {
    provides = provides || [];
    relPath = relPath.replace(/\\/g, "/");
    var path = goog.normalizePath_(goog.basePath + relPath);
    if (!opt_loadFlags || typeof opt_loadFlags === "boolean") {
      opt_loadFlags = opt_loadFlags ? {"module":goog.ModuleType.GOOG} : {};
    }
    var dep = this.factory_.createDependency(path, relPath, provides, requires, opt_loadFlags, goog.transpiler_.needsTranspile(opt_loadFlags["lang"] || "es3", opt_loadFlags["module"]));
    this.dependencies_[path] = dep;
    for (var i = 0; i < provides.length; i++) {
      this.idToPath_[provides[i]] = path;
    }
    this.idToPath_[relPath] = path;
  };
  goog.DependencyFactory = function(transpiler) {
    this.transpiler = transpiler;
  };
  goog.DependencyFactory.prototype.createDependency = function(path, relativePath, provides, requires, loadFlags, needsTranspile) {
    if (loadFlags["module"] == goog.ModuleType.GOOG) {
      return new goog.GoogModuleDependency(path, relativePath, provides, requires, loadFlags, needsTranspile, this.transpiler);
    } else if (needsTranspile) {
      return new goog.TranspiledDependency(path, relativePath, provides, requires, loadFlags, this.transpiler);
    } else {
      if (loadFlags["module"] == goog.ModuleType.ES6) {
        if (goog.TRANSPILE == "never" && goog.ASSUME_ES_MODULES_TRANSPILED) {
          return new goog.PreTranspiledEs6ModuleDependency(path, relativePath, provides, requires, loadFlags);
        } else {
          return new goog.Es6ModuleDependency(path, relativePath, provides, requires, loadFlags);
        }
      } else {
        return new goog.Dependency(path, relativePath, provides, requires, loadFlags);
      }
    }
  };
  goog.debugLoader_ = new goog.DebugLoader_();
  goog.loadClosureDeps = function() {
    goog.debugLoader_.loadClosureDeps();
  };
  goog.setDependencyFactory = function(factory) {
    goog.debugLoader_.setDependencyFactory(factory);
  };
  goog.TRUSTED_TYPES_POLICY_ = goog.TRUSTED_TYPES_POLICY_NAME ? goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + "#base") : null;
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.debugLoader_.loadClosureDeps();
  }
  goog.bootstrap = function(namespaces, callback) {
    goog.debugLoader_.bootstrap(namespaces, callback);
  };
}
if (!COMPILED) {
  var isChrome87 = false;
  try {
    isChrome87 = eval(goog.global.trustedTypes.emptyScript) !== goog.global.trustedTypes.emptyScript;
  } catch (err) {
  }
  goog.CLOSURE_EVAL_PREFILTER_ = goog.global.trustedTypes && isChrome87 && goog.createTrustedTypesPolicy("goog#base#devonly#eval") || {createScript:goog.identity_};
}

var SHADOW_ENV = function() {
  var loadedFiles = {};

  var env = {};

  var doc = goog.global.document;

  if (!doc) {
    throw new Error("browser bootstrap used in incorrect target");
  }

  var scriptBase = goog.global.window.location.origin;
  if (CLOSURE_BASE_PATH[0] == '/') {
    scriptBase = scriptBase + CLOSURE_BASE_PATH;
  } else {
    // FIXME: need to handle relative paths
    scriptBase = CLOSURE_BASE_PATH;
  }


  env.scriptBase = scriptBase;

  var wentAsync = false;

  var canDocumentWrite = function() {
    return !wentAsync && doc.readyState == "loading";
  };

  var reportError = function(path, e) {
    // chrome displays e.stack in a usable way while firefox is just a garbled mess
    if (e.constructor.toString().indexOf("function cljs$core$ExceptionInfo") === 0 && navigator.appVersion.indexOf("Chrome") != -1) {
      console.error(e);
      console.error(e.stack);
    } else {
      console.error(e);
    }
    console.warn("The above error occurred when loading \"" + path + "\". Any additional errors after that one may be the result of that failure. In general your code cannot be trusted to execute properly after such a failure. Make sure to fix the first one before looking at others.");
  };

  var asyncLoad = (function() {
    var loadOrder = [];
    var loadState = {};

    function loadPending() {
      for (var i = 0, len = loadOrder.length; i < len; i++) {
        var uri = loadOrder[i];
        var state = loadState[uri];

        if (typeof state === "string") {
          loadState[uri] = true;
          if (state != "") {
            var code = state + "\n//# sourceURL=" + uri + "\n";
            try {
              goog.globalEval(code);
            } catch (e) {
              reportError(uri, e);
            }
          }
        } else if (state === true) {
          continue;
        } else {
          break;
        }
      }
    }

    // ie11 doesn't have fetch, use xhr instead
    // FIXME: not sure if fetch provides any benefit over xhr
    if (typeof window.fetch === "undefined") {
      return function asyncXhr(uri) {
        loadOrder.push(uri);
        loadState[uri] = false;
        var req = new XMLHttpRequest();
        req.onload = function(e) {
          loadState[uri] = req.responseText;
          loadPending();
        };
        req.open("GET", uri);
        req.send();
      }
    } else {
      function responseText(response) {
        // FIXME: check status
        return response.text();
      }

      function evalFetch(uri) {
        return function(code) {
          loadState[uri] = code;
          loadPending();
        };
      }

      return function asyncFetch(uri) {
        if (loadState[uri] == undefined) {
          loadState[uri] = false;
          loadOrder.push(uri);
          fetch(uri)
            .then(responseText)
            .then(evalFetch(uri));
        }
      };
    }
  })();

  env.load = function(opts, paths) {
    var docWrite = opts.forceAsync ? false : canDocumentWrite();

    paths.forEach(function(path) {
      if (!loadedFiles[path]) {
        loadedFiles[path] = true;

        var uri = scriptBase + path;

        if (docWrite) {
          document.write(
            "<script src='" + uri + "' type='text/javascript'></script>"
          );
        } else {
          // once async always async
          wentAsync = true;
          asyncLoad(uri);
        }
      }
    });
  };

  env.isLoaded = function(path) {
    return loadedFiles[path] || false; // false is better than undefined
  };

  env.setLoaded = function(path) {
    loadedFiles[path] = true;
  };

  env.evalLoad = function(path, sourceMap, code) {
    loadedFiles[path] = true;
    code += ("\n//# sourceURL=" + scriptBase + path);
    if (sourceMap) {
      code += ("\n//# sourceMappingURL=" + path + ".map");
    }
    try {
      goog.globalEval(code);
    } catch (e) {
      reportError(path, e);
    }
  }

  return env;
}.call(this);


goog.global["$CLJS"] = goog.global;



SHADOW_ENV.evalLoad("goog.debug.error.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.debug.Error\x22);\n  goog.module.declareLegacyNamespace();\n  function DebugError(msg \x3d undefined, cause \x3d undefined) {\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, DebugError);\n    } else {\n      const stack \x3d (new Error()).stack;\n      if (stack) {\n        this.stack \x3d stack;\n      }\n    }\n    if (msg) {\n      this.message \x3d String(msg);\n    }\n    if (cause !\x3d\x3d undefined) {\n      this.cause \x3d cause;\n    }\n    this.reportErrorToServer \x3d true;\n  }\n  goog.inherits(DebugError, Error);\n  DebugError.prototype.name \x3d \x22CustomError\x22;\n  exports \x3d DebugError;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.dom.nodetype.js", true , "goog.provide(\x22goog.dom.NodeType\x22);\ngoog.dom.NodeType \x3d {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};\n");
SHADOW_ENV.evalLoad("goog.asserts.asserts.js", true , "goog.provide(\x22goog.asserts\x22);\ngoog.provide(\x22goog.asserts.AssertionError\x22);\ngoog.require(\x22goog.debug.Error\x22);\ngoog.require(\x22goog.dom.NodeType\x22);\ngoog.asserts.ENABLE_ASSERTS \x3d goog.define(\x22goog.asserts.ENABLE_ASSERTS\x22, goog.DEBUG);\ngoog.asserts.AssertionError \x3d function(messagePattern, messageArgs) {\n  goog.debug.Error.call(this, goog.asserts.subs_(messagePattern, messageArgs));\n  this.messagePattern \x3d messagePattern;\n};\ngoog.inherits(goog.asserts.AssertionError, goog.debug.Error);\ngoog.asserts.AssertionError.prototype.name \x3d \x22AssertionError\x22;\ngoog.asserts.DEFAULT_ERROR_HANDLER \x3d function(e) {\n  throw e;\n};\ngoog.asserts.errorHandler_ \x3d goog.asserts.DEFAULT_ERROR_HANDLER;\ngoog.asserts.subs_ \x3d function(pattern, subs) {\n  var splitParts \x3d pattern.split(\x22%s\x22);\n  var returnString \x3d \x22\x22;\n  var subLast \x3d splitParts.length - 1;\n  for (var i \x3d 0; i \x3c subLast; i++) {\n    var sub \x3d i \x3c subs.length ? subs[i] : \x22%s\x22;\n    returnString +\x3d splitParts[i] + sub;\n  }\n  return returnString + splitParts[subLast];\n};\ngoog.asserts.doAssertFailure_ \x3d function(defaultMessage, defaultArgs, givenMessage, givenArgs) {\n  var message \x3d \x22Assertion failed\x22;\n  if (givenMessage) {\n    message +\x3d \x22: \x22 + givenMessage;\n    var args \x3d givenArgs;\n  } else if (defaultMessage) {\n    message +\x3d \x22: \x22 + defaultMessage;\n    args \x3d defaultArgs;\n  }\n  var e \x3d new goog.asserts.AssertionError(\x22\x22 + message, args || []);\n  goog.asserts.errorHandler_(e);\n};\ngoog.asserts.setErrorHandler \x3d function(errorHandler) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    goog.asserts.errorHandler_ \x3d errorHandler;\n  }\n};\ngoog.asserts.assert \x3d function(condition, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 !condition) {\n    goog.asserts.doAssertFailure_(\x22\x22, null, opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return condition;\n};\ngoog.asserts.assertExists \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 value \x3d\x3d null) {\n    goog.asserts.doAssertFailure_(\x22Expected to exist: %s.\x22, [value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.fail \x3d function(opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    goog.asserts.errorHandler_(new goog.asserts.AssertionError(\x22Failure\x22 + (opt_message ? \x22: \x22 + opt_message : \x22\x22), Array.prototype.slice.call(arguments, 1)));\n  }\n};\ngoog.asserts.assertNumber \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 typeof value !\x3d\x3d \x22number\x22) {\n    goog.asserts.doAssertFailure_(\x22Expected number but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertString \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 typeof value !\x3d\x3d \x22string\x22) {\n    goog.asserts.doAssertFailure_(\x22Expected string but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertFunction \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 typeof value !\x3d\x3d \x22function\x22) {\n    goog.asserts.doAssertFailure_(\x22Expected function but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertObject \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 !goog.isObject(value)) {\n    goog.asserts.doAssertFailure_(\x22Expected object but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertArray \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 !Array.isArray(value)) {\n    goog.asserts.doAssertFailure_(\x22Expected array but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertBoolean \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 typeof value !\x3d\x3d \x22boolean\x22) {\n    goog.asserts.doAssertFailure_(\x22Expected boolean but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertElement \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 (!goog.isObject(value) || value.nodeType !\x3d goog.dom.NodeType.ELEMENT)) {\n    goog.asserts.doAssertFailure_(\x22Expected Element but got %s: %s.\x22, [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.assertInstanceof \x3d function(value, type, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 !(value instanceof type)) {\n    goog.asserts.doAssertFailure_(\x22Expected instanceof %s but got %s.\x22, [goog.asserts.getType_(type), goog.asserts.getType_(value)], opt_message, Array.prototype.slice.call(arguments, 3));\n  }\n  return value;\n};\ngoog.asserts.assertFinite \x3d function(value, opt_message, var_args) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 (typeof value !\x3d \x22number\x22 || !isFinite(value))) {\n    goog.asserts.doAssertFailure_(\x22Expected %s to be a finite number but it is not.\x22, [value], opt_message, Array.prototype.slice.call(arguments, 2));\n  }\n  return value;\n};\ngoog.asserts.getType_ \x3d function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || \x22unknown type name\x22;\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);\n  } else {\n    return value \x3d\x3d\x3d null ? \x22null\x22 : typeof value;\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.reflect.reflect.js", true , "goog.provide(\x22goog.reflect\x22);\ngoog.reflect.object \x3d function(type, object) {\n  return object;\n};\ngoog.reflect.objectProperty \x3d function(prop, object) {\n  return prop;\n};\ngoog.reflect.sinkValue \x3d function(x) {\n  goog.reflect.sinkValue[\x22 \x22](x);\n  return x;\n};\ngoog.reflect.sinkValue[\x22 \x22] \x3d goog.nullFunction;\ngoog.reflect.canAccessProperty \x3d function(obj, prop) {\n  try {\n    goog.reflect.sinkValue(obj[prop]);\n    return true;\n  } catch (e) {\n  }\n  return false;\n};\ngoog.reflect.cache \x3d function(cacheObj, key, valueFn, opt_keyFn) {\n  const storedKey \x3d opt_keyFn ? opt_keyFn(key) : key;\n  if (Object.prototype.hasOwnProperty.call(cacheObj, storedKey)) {\n    return cacheObj[storedKey];\n  }\n  return cacheObj[storedKey] \x3d valueFn(key);\n};\n");
SHADOW_ENV.evalLoad("goog.math.long.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.math.Long\x22);\n  goog.module.declareLegacyNamespace();\n  const asserts \x3d goog.require(\x22goog.asserts\x22);\n  const reflect \x3d goog.require(\x22goog.reflect\x22);\n  class Long {\n    constructor(low, high) {\n      this.low_ \x3d low | 0;\n      this.high_ \x3d high | 0;\n    }\n    toInt() {\n      return this.low_;\n    }\n    toNumber() {\n      return this.high_ * TWO_PWR_32_DBL_ + this.getLowBitsUnsigned();\n    }\n    isSafeInteger() {\n      var top11Bits \x3d this.high_ \x3e\x3e 21;\n      return top11Bits \x3d\x3d 0 || top11Bits \x3d\x3d -1 \x26\x26 !(this.low_ \x3d\x3d 0 \x26\x26 this.high_ \x3d\x3d (4292870144 | 0));\n    }\n    toString(opt_radix) {\n      var radix \x3d opt_radix || 10;\n      if (radix \x3c 2 || 36 \x3c radix) {\n        throw new Error(\x22radix out of range: \x22 + radix);\n      }\n      if (this.isSafeInteger()) {\n        var asNumber \x3d this.toNumber();\n        return radix \x3d\x3d 10 ? \x22\x22 + asNumber : asNumber.toString(radix);\n      }\n      var safeDigits \x3d 14 - (radix \x3e\x3e 2);\n      var radixPowSafeDigits \x3d Math.pow(radix, safeDigits);\n      var radixToPower \x3d Long.fromBits(radixPowSafeDigits, radixPowSafeDigits / TWO_PWR_32_DBL_);\n      var remDiv \x3d this.div(radixToPower);\n      var val \x3d Math.abs(this.subtract(remDiv.multiply(radixToPower)).toNumber());\n      var digits \x3d radix \x3d\x3d 10 ? \x22\x22 + val : val.toString(radix);\n      if (digits.length \x3c safeDigits) {\n        digits \x3d \x220000000000000\x22.substr(digits.length - safeDigits) + digits;\n      }\n      val \x3d remDiv.toNumber();\n      return (radix \x3d\x3d 10 ? val : val.toString(radix)) + digits;\n    }\n    getHighBits() {\n      return this.high_;\n    }\n    getLowBits() {\n      return this.low_;\n    }\n    getLowBitsUnsigned() {\n      return this.low_ \x3e\x3e\x3e 0;\n    }\n    getNumBitsAbs() {\n      if (this.isNegative()) {\n        if (this.equals(Long.getMinValue())) {\n          return 64;\n        } else {\n          return this.negate().getNumBitsAbs();\n        }\n      } else {\n        var val \x3d this.high_ !\x3d 0 ? this.high_ : this.low_;\n        for (var bit \x3d 31; bit \x3e 0; bit--) {\n          if ((val \x26 1 \x3c\x3c bit) !\x3d 0) {\n            break;\n          }\n        }\n        return this.high_ !\x3d 0 ? bit + 33 : bit + 1;\n      }\n    }\n    isZero() {\n      return this.low_ \x3d\x3d 0 \x26\x26 this.high_ \x3d\x3d 0;\n    }\n    isNegative() {\n      return this.high_ \x3c 0;\n    }\n    isOdd() {\n      return (this.low_ \x26 1) \x3d\x3d 1;\n    }\n    hashCode() {\n      return this.getLowBits() ^ this.getHighBits();\n    }\n    equals(other) {\n      return this.low_ \x3d\x3d other.low_ \x26\x26 this.high_ \x3d\x3d other.high_;\n    }\n    notEquals(other) {\n      return !this.equals(other);\n    }\n    lessThan(other) {\n      return this.compare(other) \x3c 0;\n    }\n    lessThanOrEqual(other) {\n      return this.compare(other) \x3c\x3d 0;\n    }\n    greaterThan(other) {\n      return this.compare(other) \x3e 0;\n    }\n    greaterThanOrEqual(other) {\n      return this.compare(other) \x3e\x3d 0;\n    }\n    compare(other) {\n      if (this.high_ \x3d\x3d other.high_) {\n        if (this.low_ \x3d\x3d other.low_) {\n          return 0;\n        }\n        return this.getLowBitsUnsigned() \x3e other.getLowBitsUnsigned() ? 1 : -1;\n      }\n      return this.high_ \x3e other.high_ ? 1 : -1;\n    }\n    negate() {\n      var negLow \x3d ~this.low_ + 1 | 0;\n      var overflowFromLow \x3d !negLow;\n      var negHigh \x3d ~this.high_ + overflowFromLow | 0;\n      return Long.fromBits(negLow, negHigh);\n    }\n    add(other) {\n      var a48 \x3d this.high_ \x3e\x3e\x3e 16;\n      var a32 \x3d this.high_ \x26 65535;\n      var a16 \x3d this.low_ \x3e\x3e\x3e 16;\n      var a00 \x3d this.low_ \x26 65535;\n      var b48 \x3d other.high_ \x3e\x3e\x3e 16;\n      var b32 \x3d other.high_ \x26 65535;\n      var b16 \x3d other.low_ \x3e\x3e\x3e 16;\n      var b00 \x3d other.low_ \x26 65535;\n      var c48 \x3d 0, c32 \x3d 0, c16 \x3d 0, c00 \x3d 0;\n      c00 +\x3d a00 + b00;\n      c16 +\x3d c00 \x3e\x3e\x3e 16;\n      c00 \x26\x3d 65535;\n      c16 +\x3d a16 + b16;\n      c32 +\x3d c16 \x3e\x3e\x3e 16;\n      c16 \x26\x3d 65535;\n      c32 +\x3d a32 + b32;\n      c48 +\x3d c32 \x3e\x3e\x3e 16;\n      c32 \x26\x3d 65535;\n      c48 +\x3d a48 + b48;\n      c48 \x26\x3d 65535;\n      return Long.fromBits(c16 \x3c\x3c 16 | c00, c48 \x3c\x3c 16 | c32);\n    }\n    subtract(other) {\n      return this.add(other.negate());\n    }\n    multiply(other) {\n      if (this.isZero()) {\n        return this;\n      }\n      if (other.isZero()) {\n        return other;\n      }\n      var a48 \x3d this.high_ \x3e\x3e\x3e 16;\n      var a32 \x3d this.high_ \x26 65535;\n      var a16 \x3d this.low_ \x3e\x3e\x3e 16;\n      var a00 \x3d this.low_ \x26 65535;\n      var b48 \x3d other.high_ \x3e\x3e\x3e 16;\n      var b32 \x3d other.high_ \x26 65535;\n      var b16 \x3d other.low_ \x3e\x3e\x3e 16;\n      var b00 \x3d other.low_ \x26 65535;\n      var c48 \x3d 0, c32 \x3d 0, c16 \x3d 0, c00 \x3d 0;\n      c00 +\x3d a00 * b00;\n      c16 +\x3d c00 \x3e\x3e\x3e 16;\n      c00 \x26\x3d 65535;\n      c16 +\x3d a16 * b00;\n      c32 +\x3d c16 \x3e\x3e\x3e 16;\n      c16 \x26\x3d 65535;\n      c16 +\x3d a00 * b16;\n      c32 +\x3d c16 \x3e\x3e\x3e 16;\n      c16 \x26\x3d 65535;\n      c32 +\x3d a32 * b00;\n      c48 +\x3d c32 \x3e\x3e\x3e 16;\n      c32 \x26\x3d 65535;\n      c32 +\x3d a16 * b16;\n      c48 +\x3d c32 \x3e\x3e\x3e 16;\n      c32 \x26\x3d 65535;\n      c32 +\x3d a00 * b32;\n      c48 +\x3d c32 \x3e\x3e\x3e 16;\n      c32 \x26\x3d 65535;\n      c48 +\x3d a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\n      c48 \x26\x3d 65535;\n      return Long.fromBits(c16 \x3c\x3c 16 | c00, c48 \x3c\x3c 16 | c32);\n    }\n    div(other) {\n      if (other.isZero()) {\n        throw new Error(\x22division by zero\x22);\n      }\n      if (this.isNegative()) {\n        if (this.equals(Long.getMinValue())) {\n          if (other.equals(Long.getOne()) || other.equals(Long.getNegOne())) {\n            return Long.getMinValue();\n          }\n          if (other.equals(Long.getMinValue())) {\n            return Long.getOne();\n          }\n          var halfThis \x3d this.shiftRight(1);\n          var approx \x3d halfThis.div(other).shiftLeft(1);\n          if (approx.equals(Long.getZero())) {\n            return other.isNegative() ? Long.getOne() : Long.getNegOne();\n          }\n          var rem \x3d this.subtract(other.multiply(approx));\n          var result \x3d approx.add(rem.div(other));\n          return result;\n        }\n        if (other.isNegative()) {\n          return this.negate().div(other.negate());\n        }\n        return this.negate().div(other).negate();\n      }\n      if (this.isZero()) {\n        return Long.getZero();\n      }\n      if (other.isNegative()) {\n        if (other.equals(Long.getMinValue())) {\n          return Long.getZero();\n        }\n        return this.div(other.negate()).negate();\n      }\n      var res \x3d Long.getZero();\n      var rem \x3d this;\n      while (rem.greaterThanOrEqual(other)) {\n        var approx \x3d Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n        var log2 \x3d Math.ceil(Math.log(approx) / Math.LN2);\n        var delta \x3d log2 \x3c\x3d 48 ? 1 : Math.pow(2, log2 - 48);\n        var approxRes \x3d Long.fromNumber(approx);\n        var approxRem \x3d approxRes.multiply(other);\n        while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n          approx -\x3d delta;\n          approxRes \x3d Long.fromNumber(approx);\n          approxRem \x3d approxRes.multiply(other);\n        }\n        if (approxRes.isZero()) {\n          approxRes \x3d Long.getOne();\n        }\n        res \x3d res.add(approxRes);\n        rem \x3d rem.subtract(approxRem);\n      }\n      return res;\n    }\n    modulo(other) {\n      return this.subtract(this.div(other).multiply(other));\n    }\n    not() {\n      return Long.fromBits(~this.low_, ~this.high_);\n    }\n    and(other) {\n      return Long.fromBits(this.low_ \x26 other.low_, this.high_ \x26 other.high_);\n    }\n    or(other) {\n      return Long.fromBits(this.low_ | other.low_, this.high_ | other.high_);\n    }\n    xor(other) {\n      return Long.fromBits(this.low_ ^ other.low_, this.high_ ^ other.high_);\n    }\n    shiftLeft(numBits) {\n      numBits \x26\x3d 63;\n      if (numBits \x3d\x3d 0) {\n        return this;\n      } else {\n        var low \x3d this.low_;\n        if (numBits \x3c 32) {\n          var high \x3d this.high_;\n          return Long.fromBits(low \x3c\x3c numBits, high \x3c\x3c numBits | low \x3e\x3e\x3e 32 - numBits);\n        } else {\n          return Long.fromBits(0, low \x3c\x3c numBits - 32);\n        }\n      }\n    }\n    shiftRight(numBits) {\n      numBits \x26\x3d 63;\n      if (numBits \x3d\x3d 0) {\n        return this;\n      } else {\n        var high \x3d this.high_;\n        if (numBits \x3c 32) {\n          var low \x3d this.low_;\n          return Long.fromBits(low \x3e\x3e\x3e numBits | high \x3c\x3c 32 - numBits, high \x3e\x3e numBits);\n        } else {\n          return Long.fromBits(high \x3e\x3e numBits - 32, high \x3e\x3d 0 ? 0 : -1);\n        }\n      }\n    }\n    shiftRightUnsigned(numBits) {\n      numBits \x26\x3d 63;\n      if (numBits \x3d\x3d 0) {\n        return this;\n      } else {\n        var high \x3d this.high_;\n        if (numBits \x3c 32) {\n          var low \x3d this.low_;\n          return Long.fromBits(low \x3e\x3e\x3e numBits | high \x3c\x3c 32 - numBits, high \x3e\x3e\x3e numBits);\n        } else if (numBits \x3d\x3d 32) {\n          return Long.fromBits(high, 0);\n        } else {\n          return Long.fromBits(high \x3e\x3e\x3e numBits - 32, 0);\n        }\n      }\n    }\n    static fromInt(value) {\n      var intValue \x3d value | 0;\n      asserts.assert(value \x3d\x3d\x3d intValue, \x22value should be a 32-bit integer\x22);\n      if (-128 \x3c\x3d intValue \x26\x26 intValue \x3c 128) {\n        return getCachedIntValue_(intValue);\n      } else {\n        return new Long(intValue, intValue \x3c 0 ? -1 : 0);\n      }\n    }\n    static fromNumber(value) {\n      if (value \x3e 0) {\n        if (value \x3e\x3d TWO_PWR_63_DBL_) {\n          return Long.getMaxValue();\n        }\n        return new Long(value, value / TWO_PWR_32_DBL_);\n      } else if (value \x3c 0) {\n        if (value \x3c\x3d -TWO_PWR_63_DBL_) {\n          return Long.getMinValue();\n        }\n        return (new Long(-value, -value / TWO_PWR_32_DBL_)).negate();\n      } else {\n        return Long.getZero();\n      }\n    }\n    static fromBits(lowBits, highBits) {\n      return new Long(lowBits, highBits);\n    }\n    static fromString(str, opt_radix) {\n      if (str.charAt(0) \x3d\x3d \x22-\x22) {\n        return Long.fromString(str.substring(1), opt_radix).negate();\n      }\n      var numberValue \x3d parseInt(str, opt_radix || 10);\n      if (numberValue \x3c\x3d MAX_SAFE_INTEGER_) {\n        return new Long(numberValue % TWO_PWR_32_DBL_ | 0, numberValue / TWO_PWR_32_DBL_ | 0);\n      }\n      if (str.length \x3d\x3d 0) {\n        throw new Error(\x22number format error: empty string\x22);\n      }\n      if (str.indexOf(\x22-\x22) \x3e\x3d 0) {\n        throw new Error(\x27number format error: interior \x22-\x22 character: \x27 + str);\n      }\n      var radix \x3d opt_radix || 10;\n      if (radix \x3c 2 || 36 \x3c radix) {\n        throw new Error(\x22radix out of range: \x22 + radix);\n      }\n      var radixToPower \x3d Long.fromNumber(Math.pow(radix, 8));\n      var result \x3d Long.getZero();\n      for (var i \x3d 0; i \x3c str.length; i +\x3d 8) {\n        var size \x3d Math.min(8, str.length - i);\n        var value \x3d parseInt(str.substring(i, i + size), radix);\n        if (size \x3c 8) {\n          var power \x3d Long.fromNumber(Math.pow(radix, size));\n          result \x3d result.multiply(power).add(Long.fromNumber(value));\n        } else {\n          result \x3d result.multiply(radixToPower);\n          result \x3d result.add(Long.fromNumber(value));\n        }\n      }\n      return result;\n    }\n    static isStringInRange(str, opt_radix) {\n      var radix \x3d opt_radix || 10;\n      if (radix \x3c 2 || 36 \x3c radix) {\n        throw new Error(\x22radix out of range: \x22 + radix);\n      }\n      var extremeValue \x3d str.charAt(0) \x3d\x3d \x22-\x22 ? MIN_VALUE_FOR_RADIX_[radix] : MAX_VALUE_FOR_RADIX_[radix];\n      if (str.length \x3c extremeValue.length) {\n        return true;\n      } else if (str.length \x3d\x3d extremeValue.length \x26\x26 str \x3c\x3d extremeValue) {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    static getZero() {\n      return ZERO_;\n    }\n    static getOne() {\n      return ONE_;\n    }\n    static getNegOne() {\n      return NEG_ONE_;\n    }\n    static getMaxValue() {\n      return MAX_VALUE_;\n    }\n    static getMinValue() {\n      return MIN_VALUE_;\n    }\n    static getTwoPwr24() {\n      return TWO_PWR_24_;\n    }\n  }\n  exports \x3d Long;\n  const IntCache_ \x3d {};\n  function getCachedIntValue_(value) {\n    return reflect.cache(IntCache_, value, function(val) {\n      return new Long(val, val \x3c 0 ? -1 : 0);\n    });\n  }\n  const MAX_VALUE_FOR_RADIX_ \x3d [\x22\x22, \x22\x22, \x22111111111111111111111111111111111111111111111111111111111111111\x22, \x222021110011022210012102010021220101220221\x22, \x2213333333333333333333333333333333\x22, \x221104332401304422434310311212\x22, \x221540241003031030222122211\x22, \x2222341010611245052052300\x22, \x22777777777777777777777\x22, \x2267404283172107811827\x22, \x229223372036854775807\x22, \x221728002635214590697\x22, \x2241a792678515120367\x22, \x2210b269549075433c37\x22, \x224340724c6c71dc7a7\x22, \x22160e2ad3246366807\x22, \x227fffffffffffffff\x22, \x2233d3d8307b214008\x22, \x2216agh595df825fa7\x22, \n  \x22ba643dci0ffeehh\x22, \x225cbfjia3fh26ja7\x22, \x222heiciiie82dh97\x22, \x221adaibb21dckfa7\x22, \x22i6k448cf4192c2\x22, \x22acd772jnc9l0l7\x22, \x2264ie1focnn5g77\x22, \x223igoecjbmca687\x22, \x2227c48l5b37oaop\x22, \x221bk39f3ah3dmq7\x22, \x22q1se8f0m04isb\x22, \x22hajppbc1fc207\x22, \x22bm03i95hia437\x22, \x227vvvvvvvvvvvv\x22, \x225hg4ck9jd4u37\x22, \x223tdtk1v8j6tpp\x22, \x222pijmikexrxp7\x22, \x221y2p0ij32e8e7\x22];\n  const MIN_VALUE_FOR_RADIX_ \x3d [\x22\x22, \x22\x22, \x22-1000000000000000000000000000000000000000000000000000000000000000\x22, \x22-2021110011022210012102010021220101220222\x22, \x22-20000000000000000000000000000000\x22, \x22-1104332401304422434310311213\x22, \x22-1540241003031030222122212\x22, \x22-22341010611245052052301\x22, \x22-1000000000000000000000\x22, \x22-67404283172107811828\x22, \x22-9223372036854775808\x22, \x22-1728002635214590698\x22, \x22-41a792678515120368\x22, \x22-10b269549075433c38\x22, \x22-4340724c6c71dc7a8\x22, \x22-160e2ad3246366808\x22, \x22-8000000000000000\x22, \x22-33d3d8307b214009\x22, \n  \x22-16agh595df825fa8\x22, \x22-ba643dci0ffeehi\x22, \x22-5cbfjia3fh26ja8\x22, \x22-2heiciiie82dh98\x22, \x22-1adaibb21dckfa8\x22, \x22-i6k448cf4192c3\x22, \x22-acd772jnc9l0l8\x22, \x22-64ie1focnn5g78\x22, \x22-3igoecjbmca688\x22, \x22-27c48l5b37oaoq\x22, \x22-1bk39f3ah3dmq8\x22, \x22-q1se8f0m04isc\x22, \x22-hajppbc1fc208\x22, \x22-bm03i95hia438\x22, \x22-8000000000000\x22, \x22-5hg4ck9jd4u38\x22, \x22-3tdtk1v8j6tpq\x22, \x22-2pijmikexrxp8\x22, \x22-1y2p0ij32e8e8\x22];\n  const MAX_SAFE_INTEGER_ \x3d 9007199254740991;\n  const TWO_PWR_32_DBL_ \x3d 4294967296;\n  const TWO_PWR_63_DBL_ \x3d 0x7fffffffffffffff;\n  const ZERO_ \x3d Long.fromBits(0, 0);\n  const ONE_ \x3d Long.fromBits(1, 0);\n  const NEG_ONE_ \x3d Long.fromBits(-1, -1);\n  const MAX_VALUE_ \x3d Long.fromBits(4294967295, 2147483647);\n  const MIN_VALUE_ \x3d Long.fromBits(0, 2147483648);\n  const TWO_PWR_24_ \x3d Long.fromBits(1 \x3c\x3c 24, 0);\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.math.integer.js", true , "goog.provide(\x22goog.math.Integer\x22);\ngoog.require(\x22goog.reflect\x22);\ngoog.math.Integer \x3d function(bits, sign) {\n  this.sign_ \x3d sign;\n  var localBits \x3d [];\n  var top \x3d true;\n  for (var i \x3d bits.length - 1; i \x3e\x3d 0; i--) {\n    var val \x3d bits[i] | 0;\n    if (!top || val !\x3d sign) {\n      localBits[i] \x3d val;\n      top \x3d false;\n    }\n  }\n  this.bits_ \x3d localBits;\n};\ngoog.math.Integer.IntCache_ \x3d {};\ngoog.math.Integer.fromInt \x3d function(value) {\n  if (-128 \x3c\x3d value \x26\x26 value \x3c 128) {\n    return goog.reflect.cache(goog.math.Integer.IntCache_, value, function(val) {\n      return new goog.math.Integer([val | 0], val \x3c 0 ? -1 : 0);\n    });\n  }\n  return new goog.math.Integer([value | 0], value \x3c 0 ? -1 : 0);\n};\ngoog.math.Integer.fromNumber \x3d function(value) {\n  if (isNaN(value) || !isFinite(value)) {\n    return goog.math.Integer.ZERO;\n  } else if (value \x3c 0) {\n    return goog.math.Integer.fromNumber(-value).negate();\n  } else {\n    var bits \x3d [];\n    var pow \x3d 1;\n    for (var i \x3d 0; value \x3e\x3d pow; i++) {\n      bits[i] \x3d value / pow | 0;\n      pow *\x3d goog.math.Integer.TWO_PWR_32_DBL_;\n    }\n    return new goog.math.Integer(bits, 0);\n  }\n};\ngoog.math.Integer.fromBits \x3d function(bits) {\n  var high \x3d bits[bits.length - 1];\n  return new goog.math.Integer(bits, high \x26 1 \x3c\x3c 31 ? -1 : 0);\n};\ngoog.math.Integer.fromString \x3d function(str, opt_radix) {\n  if (str.length \x3d\x3d 0) {\n    throw new Error(\x22number format error: empty string\x22);\n  }\n  var radix \x3d opt_radix || 10;\n  if (radix \x3c 2 || 36 \x3c radix) {\n    throw new Error(\x22radix out of range: \x22 + radix);\n  }\n  if (str.charAt(0) \x3d\x3d \x22-\x22) {\n    return goog.math.Integer.fromString(str.substring(1), radix).negate();\n  } else if (str.indexOf(\x22-\x22) \x3e\x3d 0) {\n    throw new Error(\x27number format error: interior \x22-\x22 character\x27);\n  }\n  var radixToPower \x3d goog.math.Integer.fromNumber(Math.pow(radix, 8));\n  var result \x3d goog.math.Integer.ZERO;\n  for (var i \x3d 0; i \x3c str.length; i +\x3d 8) {\n    var size \x3d Math.min(8, str.length - i);\n    var value \x3d parseInt(str.substring(i, i + size), radix);\n    if (size \x3c 8) {\n      var power \x3d goog.math.Integer.fromNumber(Math.pow(radix, size));\n      result \x3d result.multiply(power).add(goog.math.Integer.fromNumber(value));\n    } else {\n      result \x3d result.multiply(radixToPower);\n      result \x3d result.add(goog.math.Integer.fromNumber(value));\n    }\n  }\n  return result;\n};\ngoog.math.Integer.TWO_PWR_32_DBL_ \x3d (1 \x3c\x3c 16) * (1 \x3c\x3c 16);\ngoog.math.Integer.ZERO \x3d goog.math.Integer.fromInt(0);\ngoog.math.Integer.ONE \x3d goog.math.Integer.fromInt(1);\ngoog.math.Integer.TWO_PWR_24_ \x3d goog.math.Integer.fromInt(1 \x3c\x3c 24);\ngoog.math.Integer.prototype.toInt \x3d function() {\n  return this.bits_.length \x3e 0 ? this.bits_[0] : this.sign_;\n};\ngoog.math.Integer.prototype.toNumber \x3d function() {\n  if (this.isNegative()) {\n    return -this.negate().toNumber();\n  } else {\n    var val \x3d 0;\n    var pow \x3d 1;\n    for (var i \x3d 0; i \x3c this.bits_.length; i++) {\n      val +\x3d this.getBitsUnsigned(i) * pow;\n      pow *\x3d goog.math.Integer.TWO_PWR_32_DBL_;\n    }\n    return val;\n  }\n};\ngoog.math.Integer.prototype.toString \x3d function(opt_radix) {\n  var radix \x3d opt_radix || 10;\n  if (radix \x3c 2 || 36 \x3c radix) {\n    throw new Error(\x22radix out of range: \x22 + radix);\n  }\n  if (this.isZero()) {\n    return \x220\x22;\n  } else if (this.isNegative()) {\n    return \x22-\x22 + this.negate().toString(radix);\n  }\n  var radixToPower \x3d goog.math.Integer.fromNumber(Math.pow(radix, 6));\n  var rem \x3d this;\n  var result \x3d \x22\x22;\n  while (true) {\n    var remDiv \x3d rem.divide(radixToPower);\n    var intval \x3d rem.subtract(remDiv.multiply(radixToPower)).toInt() \x3e\x3e\x3e 0;\n    var digits \x3d intval.toString(radix);\n    rem \x3d remDiv;\n    if (rem.isZero()) {\n      return digits + result;\n    } else {\n      while (digits.length \x3c 6) {\n        digits \x3d \x220\x22 + digits;\n      }\n      result \x3d \x22\x22 + digits + result;\n    }\n  }\n};\ngoog.math.Integer.prototype.getBits \x3d function(index) {\n  if (index \x3c 0) {\n    return 0;\n  } else if (index \x3c this.bits_.length) {\n    return this.bits_[index];\n  } else {\n    return this.sign_;\n  }\n};\ngoog.math.Integer.prototype.getBitsUnsigned \x3d function(index) {\n  var val \x3d this.getBits(index);\n  return val \x3e\x3d 0 ? val : goog.math.Integer.TWO_PWR_32_DBL_ + val;\n};\ngoog.math.Integer.prototype.getSign \x3d function() {\n  return this.sign_;\n};\ngoog.math.Integer.prototype.isZero \x3d function() {\n  if (this.sign_ !\x3d 0) {\n    return false;\n  }\n  for (var i \x3d 0; i \x3c this.bits_.length; i++) {\n    if (this.bits_[i] !\x3d 0) {\n      return false;\n    }\n  }\n  return true;\n};\ngoog.math.Integer.prototype.isNegative \x3d function() {\n  return this.sign_ \x3d\x3d -1;\n};\ngoog.math.Integer.prototype.isOdd \x3d function() {\n  return this.bits_.length \x3d\x3d 0 \x26\x26 this.sign_ \x3d\x3d -1 || this.bits_.length \x3e 0 \x26\x26 (this.bits_[0] \x26 1) !\x3d 0;\n};\ngoog.math.Integer.prototype.equals \x3d function(other) {\n  if (this.sign_ !\x3d other.sign_) {\n    return false;\n  }\n  var len \x3d Math.max(this.bits_.length, other.bits_.length);\n  for (var i \x3d 0; i \x3c len; i++) {\n    if (this.getBits(i) !\x3d other.getBits(i)) {\n      return false;\n    }\n  }\n  return true;\n};\ngoog.math.Integer.prototype.notEquals \x3d function(other) {\n  return !this.equals(other);\n};\ngoog.math.Integer.prototype.greaterThan \x3d function(other) {\n  return this.compare(other) \x3e 0;\n};\ngoog.math.Integer.prototype.greaterThanOrEqual \x3d function(other) {\n  return this.compare(other) \x3e\x3d 0;\n};\ngoog.math.Integer.prototype.lessThan \x3d function(other) {\n  return this.compare(other) \x3c 0;\n};\ngoog.math.Integer.prototype.lessThanOrEqual \x3d function(other) {\n  return this.compare(other) \x3c\x3d 0;\n};\ngoog.math.Integer.prototype.compare \x3d function(other) {\n  var diff \x3d this.subtract(other);\n  if (diff.isNegative()) {\n    return -1;\n  } else if (diff.isZero()) {\n    return 0;\n  } else {\n    return +1;\n  }\n};\ngoog.math.Integer.prototype.shorten \x3d function(numBits) {\n  var arr_index \x3d numBits - 1 \x3e\x3e 5;\n  var bit_index \x3d (numBits - 1) % 32;\n  var bits \x3d [];\n  for (var i \x3d 0; i \x3c arr_index; i++) {\n    bits[i] \x3d this.getBits(i);\n  }\n  var sigBits \x3d bit_index \x3d\x3d 31 ? 4294967295 : (1 \x3c\x3c bit_index + 1) - 1;\n  var val \x3d this.getBits(arr_index) \x26 sigBits;\n  if (val \x26 1 \x3c\x3c bit_index) {\n    val |\x3d 4294967295 - sigBits;\n    bits[arr_index] \x3d val;\n    return new goog.math.Integer(bits, -1);\n  } else {\n    bits[arr_index] \x3d val;\n    return new goog.math.Integer(bits, 0);\n  }\n};\ngoog.math.Integer.prototype.negate \x3d function() {\n  return this.not().add(goog.math.Integer.ONE);\n};\ngoog.math.Integer.prototype.abs \x3d function() {\n  return this.isNegative() ? this.negate() : this;\n};\ngoog.math.Integer.prototype.add \x3d function(other) {\n  var len \x3d Math.max(this.bits_.length, other.bits_.length);\n  var arr \x3d [];\n  var carry \x3d 0;\n  for (var i \x3d 0; i \x3c\x3d len; i++) {\n    var a1 \x3d this.getBits(i) \x3e\x3e\x3e 16;\n    var a0 \x3d this.getBits(i) \x26 65535;\n    var b1 \x3d other.getBits(i) \x3e\x3e\x3e 16;\n    var b0 \x3d other.getBits(i) \x26 65535;\n    var c0 \x3d carry + a0 + b0;\n    var c1 \x3d (c0 \x3e\x3e\x3e 16) + a1 + b1;\n    carry \x3d c1 \x3e\x3e\x3e 16;\n    c0 \x26\x3d 65535;\n    c1 \x26\x3d 65535;\n    arr[i] \x3d c1 \x3c\x3c 16 | c0;\n  }\n  return goog.math.Integer.fromBits(arr);\n};\ngoog.math.Integer.prototype.subtract \x3d function(other) {\n  return this.add(other.negate());\n};\ngoog.math.Integer.prototype.multiply \x3d function(other) {\n  if (this.isZero()) {\n    return goog.math.Integer.ZERO;\n  } else if (other.isZero()) {\n    return goog.math.Integer.ZERO;\n  }\n  if (this.isNegative()) {\n    if (other.isNegative()) {\n      return this.negate().multiply(other.negate());\n    } else {\n      return this.negate().multiply(other).negate();\n    }\n  } else if (other.isNegative()) {\n    return this.multiply(other.negate()).negate();\n  }\n  if (this.lessThan(goog.math.Integer.TWO_PWR_24_) \x26\x26 other.lessThan(goog.math.Integer.TWO_PWR_24_)) {\n    return goog.math.Integer.fromNumber(this.toNumber() * other.toNumber());\n  }\n  var len \x3d this.bits_.length + other.bits_.length;\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c 2 * len; i++) {\n    arr[i] \x3d 0;\n  }\n  for (var i \x3d 0; i \x3c this.bits_.length; i++) {\n    for (var j \x3d 0; j \x3c other.bits_.length; j++) {\n      var a1 \x3d this.getBits(i) \x3e\x3e\x3e 16;\n      var a0 \x3d this.getBits(i) \x26 65535;\n      var b1 \x3d other.getBits(j) \x3e\x3e\x3e 16;\n      var b0 \x3d other.getBits(j) \x26 65535;\n      arr[2 * i + 2 * j] +\x3d a0 * b0;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j);\n      arr[2 * i + 2 * j + 1] +\x3d a1 * b0;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 1] +\x3d a0 * b1;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 1);\n      arr[2 * i + 2 * j + 2] +\x3d a1 * b1;\n      goog.math.Integer.carry16_(arr, 2 * i + 2 * j + 2);\n    }\n  }\n  for (var i \x3d 0; i \x3c len; i++) {\n    arr[i] \x3d arr[2 * i + 1] \x3c\x3c 16 | arr[2 * i];\n  }\n  for (var i \x3d len; i \x3c 2 * len; i++) {\n    arr[i] \x3d 0;\n  }\n  return new goog.math.Integer(arr, 0);\n};\ngoog.math.Integer.carry16_ \x3d function(bits, index) {\n  while ((bits[index] \x26 65535) !\x3d bits[index]) {\n    bits[index + 1] +\x3d bits[index] \x3e\x3e\x3e 16;\n    bits[index] \x26\x3d 65535;\n    index++;\n  }\n};\ngoog.math.Integer.prototype.slowDivide_ \x3d function(other) {\n  if (this.isNegative() || other.isNegative()) {\n    throw new Error(\x22slowDivide_ only works with positive integers.\x22);\n  }\n  var twoPower \x3d goog.math.Integer.ONE;\n  var multiple \x3d other;\n  while (multiple.lessThanOrEqual(this)) {\n    twoPower \x3d twoPower.shiftLeft(1);\n    multiple \x3d multiple.shiftLeft(1);\n  }\n  var res \x3d twoPower.shiftRight(1);\n  var total \x3d multiple.shiftRight(1);\n  var total2;\n  multiple \x3d multiple.shiftRight(2);\n  twoPower \x3d twoPower.shiftRight(2);\n  while (!multiple.isZero()) {\n    total2 \x3d total.add(multiple);\n    if (total2.lessThanOrEqual(this)) {\n      res \x3d res.add(twoPower);\n      total \x3d total2;\n    }\n    multiple \x3d multiple.shiftRight(1);\n    twoPower \x3d twoPower.shiftRight(1);\n  }\n  var remainder \x3d this.subtract(res.multiply(other));\n  return new goog.math.Integer.DivisionResult(res, remainder);\n};\ngoog.math.Integer.prototype.divide \x3d function(other) {\n  return this.divideAndRemainder(other).quotient;\n};\ngoog.math.Integer.DivisionResult \x3d function(quotient, remainder) {\n  this.quotient \x3d quotient;\n  this.remainder \x3d remainder;\n};\ngoog.math.Integer.prototype.divideAndRemainder \x3d function(other) {\n  if (other.isZero()) {\n    throw new Error(\x22division by zero\x22);\n  } else if (this.isZero()) {\n    return new goog.math.Integer.DivisionResult(goog.math.Integer.ZERO, goog.math.Integer.ZERO);\n  }\n  if (this.isNegative()) {\n    var result \x3d this.negate().divideAndRemainder(other);\n    return new goog.math.Integer.DivisionResult(result.quotient.negate(), result.remainder.negate());\n  } else if (other.isNegative()) {\n    var result \x3d this.divideAndRemainder(other.negate());\n    return new goog.math.Integer.DivisionResult(result.quotient.negate(), result.remainder);\n  }\n  if (this.bits_.length \x3e 30) {\n    return this.slowDivide_(other);\n  }\n  var res \x3d goog.math.Integer.ZERO;\n  var rem \x3d this;\n  while (rem.greaterThanOrEqual(other)) {\n    var approx \x3d Math.max(1, Math.floor(rem.toNumber() / other.toNumber()));\n    var log2 \x3d Math.ceil(Math.log(approx) / Math.LN2);\n    var delta \x3d log2 \x3c\x3d 48 ? 1 : Math.pow(2, log2 - 48);\n    var approxRes \x3d goog.math.Integer.fromNumber(approx);\n    var approxRem \x3d approxRes.multiply(other);\n    while (approxRem.isNegative() || approxRem.greaterThan(rem)) {\n      approx -\x3d delta;\n      approxRes \x3d goog.math.Integer.fromNumber(approx);\n      approxRem \x3d approxRes.multiply(other);\n    }\n    if (approxRes.isZero()) {\n      approxRes \x3d goog.math.Integer.ONE;\n    }\n    res \x3d res.add(approxRes);\n    rem \x3d rem.subtract(approxRem);\n  }\n  return new goog.math.Integer.DivisionResult(res, rem);\n};\ngoog.math.Integer.prototype.modulo \x3d function(other) {\n  return this.divideAndRemainder(other).remainder;\n};\ngoog.math.Integer.prototype.not \x3d function() {\n  var len \x3d this.bits_.length;\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    arr[i] \x3d ~this.bits_[i];\n  }\n  return new goog.math.Integer(arr, ~this.sign_);\n};\ngoog.math.Integer.prototype.and \x3d function(other) {\n  var len \x3d Math.max(this.bits_.length, other.bits_.length);\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    arr[i] \x3d this.getBits(i) \x26 other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ \x26 other.sign_);\n};\ngoog.math.Integer.prototype.or \x3d function(other) {\n  var len \x3d Math.max(this.bits_.length, other.bits_.length);\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    arr[i] \x3d this.getBits(i) | other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ | other.sign_);\n};\ngoog.math.Integer.prototype.xor \x3d function(other) {\n  var len \x3d Math.max(this.bits_.length, other.bits_.length);\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    arr[i] \x3d this.getBits(i) ^ other.getBits(i);\n  }\n  return new goog.math.Integer(arr, this.sign_ ^ other.sign_);\n};\ngoog.math.Integer.prototype.shiftLeft \x3d function(numBits) {\n  var arr_delta \x3d numBits \x3e\x3e 5;\n  var bit_delta \x3d numBits % 32;\n  var len \x3d this.bits_.length + arr_delta + (bit_delta \x3e 0 ? 1 : 0);\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    if (bit_delta \x3e 0) {\n      arr[i] \x3d this.getBits(i - arr_delta) \x3c\x3c bit_delta | this.getBits(i - arr_delta - 1) \x3e\x3e\x3e 32 - bit_delta;\n    } else {\n      arr[i] \x3d this.getBits(i - arr_delta);\n    }\n  }\n  return new goog.math.Integer(arr, this.sign_);\n};\ngoog.math.Integer.prototype.shiftRight \x3d function(numBits) {\n  var arr_delta \x3d numBits \x3e\x3e 5;\n  var bit_delta \x3d numBits % 32;\n  var len \x3d this.bits_.length - arr_delta;\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c len; i++) {\n    if (bit_delta \x3e 0) {\n      arr[i] \x3d this.getBits(i + arr_delta) \x3e\x3e\x3e bit_delta | this.getBits(i + arr_delta + 1) \x3c\x3c 32 - bit_delta;\n    } else {\n      arr[i] \x3d this.getBits(i + arr_delta);\n    }\n  }\n  return new goog.math.Integer(arr, this.sign_);\n};\n");
SHADOW_ENV.evalLoad("goog.dom.asserts.js", true , "goog.provide(\x22goog.dom.asserts\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.dom.asserts.assertIsLocation \x3d function(o) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    var win \x3d goog.dom.asserts.getWindow_(o);\n    if (win) {\n      if (!o || !(o instanceof win.Location) \x26\x26 o instanceof win.Element) {\n        goog.asserts.fail(\x22Argument is not a Location (or a non-Element mock); got: %s\x22, goog.dom.asserts.debugStringForType_(o));\n      }\n    }\n  }\n  return o;\n};\ngoog.dom.asserts.assertIsElementType_ \x3d function(o, typename) {\n  if (goog.asserts.ENABLE_ASSERTS) {\n    var win \x3d goog.dom.asserts.getWindow_(o);\n    if (win \x26\x26 typeof win[typename] !\x3d \x22undefined\x22) {\n      if (!o || !(o instanceof win[typename]) \x26\x26 (o instanceof win.Location || o instanceof win.Element)) {\n        goog.asserts.fail(\x22Argument is not a %s (or a non-Element, non-Location mock); \x22 + \x22got: %s\x22, typename, goog.dom.asserts.debugStringForType_(o));\n      }\n    }\n  }\n  return o;\n};\ngoog.dom.asserts.assertIsHTMLAnchorElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLAnchorElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLButtonElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLButtonElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLLinkElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLLinkElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLImageElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLImageElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLAudioElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLAudioElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLVideoElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLVideoElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLInputElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLInputElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLTextAreaElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLTextAreaElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLCanvasElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLCanvasElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLEmbedElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLEmbedElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLFormElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLFormElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLFrameElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLFrameElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLIFrameElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLIFrameElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLObjectElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLObjectElement\x22);\n};\ngoog.dom.asserts.assertIsHTMLScriptElement \x3d function(o) {\n  return goog.dom.asserts.assertIsElementType_(o, \x22HTMLScriptElement\x22);\n};\ngoog.dom.asserts.debugStringForType_ \x3d function(value) {\n  if (goog.isObject(value)) {\n    try {\n      return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);\n    } catch (e) {\n      return \x22\\x3cobject could not be stringified\\x3e\x22;\n    }\n  } else {\n    return value \x3d\x3d\x3d undefined ? \x22undefined\x22 : value \x3d\x3d\x3d null ? \x22null\x22 : typeof value;\n  }\n};\ngoog.dom.asserts.getWindow_ \x3d function(o) {\n  try {\n    var doc \x3d o \x26\x26 o.ownerDocument;\n    var win \x3d doc \x26\x26 (doc.defaultView || doc.parentWindow);\n    win \x3d win || goog.global;\n    if (win.Element \x26\x26 win.Location) {\n      return win;\n    }\n  } catch (ex) {\n  }\n  return null;\n};\n");
SHADOW_ENV.evalLoad("goog.functions.functions.js", true , "goog.provide(\x22goog.functions\x22);\ngoog.functions.constant \x3d function(retValue) {\n  return function() {\n    return retValue;\n  };\n};\ngoog.functions.FALSE \x3d function() {\n  return false;\n};\ngoog.functions.TRUE \x3d function() {\n  return true;\n};\ngoog.functions.NULL \x3d function() {\n  return null;\n};\ngoog.functions.UNDEFINED \x3d function() {\n  return undefined;\n};\ngoog.functions.EMPTY \x3d goog.functions.UNDEFINED;\ngoog.functions.identity \x3d function(opt_returnValue, var_args) {\n  return opt_returnValue;\n};\ngoog.functions.error \x3d function(message) {\n  return function() {\n    throw new Error(message);\n  };\n};\ngoog.functions.fail \x3d function(err) {\n  return function() {\n    throw err;\n  };\n};\ngoog.functions.lock \x3d function(f, opt_numArgs) {\n  opt_numArgs \x3d opt_numArgs || 0;\n  return function() {\n    const self \x3d this;\n    return f.apply(self, Array.prototype.slice.call(arguments, 0, opt_numArgs));\n  };\n};\ngoog.functions.nth \x3d function(n) {\n  return function() {\n    return arguments[n];\n  };\n};\ngoog.functions.partialRight \x3d function(fn, var_args) {\n  const rightArgs \x3d Array.prototype.slice.call(arguments, 1);\n  return function() {\n    let self \x3d this;\n    if (self \x3d\x3d\x3d goog.global) {\n      self \x3d undefined;\n    }\n    const newArgs \x3d Array.prototype.slice.call(arguments);\n    newArgs.push.apply(newArgs, rightArgs);\n    return fn.apply(self, newArgs);\n  };\n};\ngoog.functions.withReturnValue \x3d function(f, retValue) {\n  return goog.functions.sequence(f, goog.functions.constant(retValue));\n};\ngoog.functions.equalTo \x3d function(value, opt_useLooseComparison) {\n  return function(other) {\n    return opt_useLooseComparison ? value \x3d\x3d other : value \x3d\x3d\x3d other;\n  };\n};\ngoog.functions.compose \x3d function(fn, var_args) {\n  const functions \x3d arguments;\n  const length \x3d functions.length;\n  return function() {\n    const self \x3d this;\n    let result;\n    if (length) {\n      result \x3d functions[length - 1].apply(self, arguments);\n    }\n    for (let i \x3d length - 2; i \x3e\x3d 0; i--) {\n      result \x3d functions[i].call(self, result);\n    }\n    return result;\n  };\n};\ngoog.functions.sequence \x3d function(var_args) {\n  const functions \x3d arguments;\n  const length \x3d functions.length;\n  return function() {\n    const self \x3d this;\n    let result;\n    for (let i \x3d 0; i \x3c length; i++) {\n      result \x3d functions[i].apply(self, arguments);\n    }\n    return result;\n  };\n};\ngoog.functions.and \x3d function(var_args) {\n  const functions \x3d arguments;\n  const length \x3d functions.length;\n  return function() {\n    const self \x3d this;\n    for (let i \x3d 0; i \x3c length; i++) {\n      if (!functions[i].apply(self, arguments)) {\n        return false;\n      }\n    }\n    return true;\n  };\n};\ngoog.functions.or \x3d function(var_args) {\n  const functions \x3d arguments;\n  const length \x3d functions.length;\n  return function() {\n    const self \x3d this;\n    for (let i \x3d 0; i \x3c length; i++) {\n      if (functions[i].apply(self, arguments)) {\n        return true;\n      }\n    }\n    return false;\n  };\n};\ngoog.functions.not \x3d function(f) {\n  return function() {\n    const self \x3d this;\n    return !f.apply(self, arguments);\n  };\n};\ngoog.functions.create \x3d function(constructor, var_args) {\n  const temp \x3d function() {\n  };\n  temp.prototype \x3d constructor.prototype;\n  const obj \x3d new temp();\n  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));\n  return obj;\n};\ngoog.functions.CACHE_RETURN_VALUE \x3d goog.define(\x22goog.functions.CACHE_RETURN_VALUE\x22, true);\ngoog.functions.cacheReturnValue \x3d function(fn) {\n  let called \x3d false;\n  let value;\n  return function() {\n    if (!goog.functions.CACHE_RETURN_VALUE) {\n      return fn();\n    }\n    if (!called) {\n      value \x3d fn();\n      called \x3d true;\n    }\n    return value;\n  };\n};\ngoog.functions.once \x3d function(f) {\n  let inner \x3d f;\n  return function() {\n    if (inner) {\n      const tmp \x3d inner;\n      inner \x3d null;\n      tmp();\n    }\n  };\n};\ngoog.functions.debounce \x3d function(f, interval, opt_scope) {\n  let timeout \x3d 0;\n  return function(var_args) {\n    goog.global.clearTimeout(timeout);\n    const args \x3d arguments;\n    timeout \x3d goog.global.setTimeout(function() {\n      f.apply(opt_scope, args);\n    }, interval);\n  };\n};\ngoog.functions.throttle \x3d function(f, interval, opt_scope) {\n  let timeout \x3d 0;\n  let shouldFire \x3d false;\n  let storedArgs \x3d [];\n  const handleTimeout \x3d function() {\n    timeout \x3d 0;\n    if (shouldFire) {\n      shouldFire \x3d false;\n      fire();\n    }\n  };\n  const fire \x3d function() {\n    timeout \x3d goog.global.setTimeout(handleTimeout, interval);\n    let args \x3d storedArgs;\n    storedArgs \x3d [];\n    f.apply(opt_scope, args);\n  };\n  return function(var_args) {\n    storedArgs \x3d arguments;\n    if (!timeout) {\n      fire();\n    } else {\n      shouldFire \x3d true;\n    }\n  };\n};\ngoog.functions.rateLimit \x3d function(f, interval, opt_scope) {\n  let timeout \x3d 0;\n  const handleTimeout \x3d function() {\n    timeout \x3d 0;\n  };\n  return function(var_args) {\n    if (!timeout) {\n      timeout \x3d goog.global.setTimeout(handleTimeout, interval);\n      f.apply(opt_scope, arguments);\n    }\n  };\n};\ngoog.functions.isFunction \x3d val \x3d\x3e {\n  return typeof val \x3d\x3d\x3d \x22function\x22;\n};\n");
SHADOW_ENV.evalLoad("goog.string.typedstring.js", true , "goog.provide(\x22goog.string.TypedString\x22);\ngoog.string.TypedString \x3d function() {\n};\ngoog.string.TypedString.prototype.implementsGoogStringTypedString;\ngoog.string.TypedString.prototype.getTypedStringValue;\n");
SHADOW_ENV.evalLoad("goog.string.const.js", true , "goog.provide(\x22goog.string.Const\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.string.TypedString\x22);\ngoog.string.Const \x3d function(opt_token, opt_content) {\n  this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ \x3d opt_token \x3d\x3d\x3d goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ \x26\x26 opt_content || \x22\x22;\n  this.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ \x3d goog.string.Const.TYPE_MARKER_;\n};\ngoog.string.Const.prototype.implementsGoogStringTypedString \x3d true;\ngoog.string.Const.prototype.getTypedStringValue \x3d function() {\n  return this.stringConstValueWithSecurityContract__googStringSecurityPrivate_;\n};\nif (goog.DEBUG) {\n  goog.string.Const.prototype.toString \x3d function() {\n    return \x22Const{\x22 + this.stringConstValueWithSecurityContract__googStringSecurityPrivate_ + \x22}\x22;\n  };\n}\ngoog.string.Const.unwrap \x3d function(stringConst) {\n  if (stringConst instanceof goog.string.Const \x26\x26 stringConst.constructor \x3d\x3d\x3d goog.string.Const \x26\x26 stringConst.STRING_CONST_TYPE_MARKER__GOOG_STRING_SECURITY_PRIVATE_ \x3d\x3d\x3d goog.string.Const.TYPE_MARKER_) {\n    return stringConst.stringConstValueWithSecurityContract__googStringSecurityPrivate_;\n  } else {\n    goog.asserts.fail(\x22expected object of type Const, got \x27\x22 + stringConst + \x22\x27\x22);\n    return \x22type_error:Const\x22;\n  }\n};\ngoog.string.Const.from \x3d function(s) {\n  return new goog.string.Const(goog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_, s);\n};\ngoog.string.Const.TYPE_MARKER_ \x3d {};\ngoog.string.Const.GOOG_STRING_CONSTRUCTOR_TOKEN_PRIVATE_ \x3d {};\ngoog.string.Const.EMPTY \x3d goog.string.Const.from(\x22\x22);\n");
SHADOW_ENV.evalLoad("goog.i18n.bidi.js", true , "goog.provide(\x22goog.i18n.bidi\x22);\ngoog.provide(\x22goog.i18n.bidi.Dir\x22);\ngoog.provide(\x22goog.i18n.bidi.DirectionalString\x22);\ngoog.provide(\x22goog.i18n.bidi.Format\x22);\ngoog.i18n.bidi.FORCE_RTL \x3d goog.define(\x22goog.i18n.bidi.FORCE_RTL\x22, false);\ngoog.i18n.bidi.IS_RTL \x3d goog.i18n.bidi.FORCE_RTL || (goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22ar\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22fa\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22he\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22iw\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22ps\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22sd\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22ug\x22 || goog.LOCALE.substring(0, 2).toLowerCase() \x3d\x3d \x22ur\x22 || goog.LOCALE.substring(0, \n2).toLowerCase() \x3d\x3d \x22yi\x22) \x26\x26 (goog.LOCALE.length \x3d\x3d 2 || goog.LOCALE.substring(2, 3) \x3d\x3d \x22-\x22 || goog.LOCALE.substring(2, 3) \x3d\x3d \x22_\x22) || goog.LOCALE.length \x3e\x3d 3 \x26\x26 goog.LOCALE.substring(0, 3).toLowerCase() \x3d\x3d \x22ckb\x22 \x26\x26 (goog.LOCALE.length \x3d\x3d 3 || goog.LOCALE.substring(3, 4) \x3d\x3d \x22-\x22 || goog.LOCALE.substring(3, 4) \x3d\x3d \x22_\x22) || goog.LOCALE.length \x3e\x3d 7 \x26\x26 ((goog.LOCALE.substring(2, 3) \x3d\x3d \x22-\x22 || goog.LOCALE.substring(2, 3) \x3d\x3d \x22_\x22) \x26\x26 (goog.LOCALE.substring(3, 7).toLowerCase() \x3d\x3d \x22adlm\x22 || goog.LOCALE.substring(3, \n7).toLowerCase() \x3d\x3d \x22arab\x22 || goog.LOCALE.substring(3, 7).toLowerCase() \x3d\x3d \x22hebr\x22 || goog.LOCALE.substring(3, 7).toLowerCase() \x3d\x3d \x22nkoo\x22 || goog.LOCALE.substring(3, 7).toLowerCase() \x3d\x3d \x22rohg\x22 || goog.LOCALE.substring(3, 7).toLowerCase() \x3d\x3d \x22thaa\x22)) || goog.LOCALE.length \x3e\x3d 8 \x26\x26 ((goog.LOCALE.substring(3, 4) \x3d\x3d \x22-\x22 || goog.LOCALE.substring(3, 4) \x3d\x3d \x22_\x22) \x26\x26 (goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \x22adlm\x22 || goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \x22arab\x22 || goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \n\x22hebr\x22 || goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \x22nkoo\x22 || goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \x22rohg\x22 || goog.LOCALE.substring(4, 8).toLowerCase() \x3d\x3d \x22thaa\x22));\ngoog.i18n.bidi.Format \x3d {LRE:\x22\u202a\x22, RLE:\x22\u202b\x22, PDF:\x22\u202c\x22, LRM:\x22\u200e\x22, RLM:\x22\u200f\x22};\ngoog.i18n.bidi.Dir \x3d {LTR:1, RTL:-1, NEUTRAL:0};\ngoog.i18n.bidi.RIGHT \x3d \x22right\x22;\ngoog.i18n.bidi.LEFT \x3d \x22left\x22;\ngoog.i18n.bidi.I18N_RIGHT \x3d goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.LEFT : goog.i18n.bidi.RIGHT;\ngoog.i18n.bidi.I18N_LEFT \x3d goog.i18n.bidi.IS_RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;\ngoog.i18n.bidi.toDir \x3d function(givenDir, opt_noNeutral) {\n  if (typeof givenDir \x3d\x3d \x22number\x22) {\n    return givenDir \x3e 0 ? goog.i18n.bidi.Dir.LTR : givenDir \x3c 0 ? goog.i18n.bidi.Dir.RTL : opt_noNeutral ? null : goog.i18n.bidi.Dir.NEUTRAL;\n  } else if (givenDir \x3d\x3d null) {\n    return null;\n  } else {\n    return givenDir ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;\n  }\n};\ngoog.i18n.bidi.ltrChars_ \x3d \x22A-Za-z\xc0-\xd6\xd8-\xf6\xf8-\u02b8\u0300-\u0590\u0900-\u1fff\x22 + \x22\u200e\u2c00-\\ud801\\ud804-\\ud839\\ud83c-\\udbff\x22 + \x22\uf900-\ufb1c\ufe00-\ufe6f\ufefd-\uffff\x22;\ngoog.i18n.bidi.rtlChars_ \x3d \x22\u0591-\u06ef\u06fa-\u08ff\u200f\\ud802-\\ud803\\ud83a-\\ud83b\x22 + \x22\ufb1d-\ufdff\ufe70-\ufefc\x22;\ngoog.i18n.bidi.htmlSkipReg_ \x3d /\x3c[^\x3e]*\x3e|\x26[^;]+;/g;\ngoog.i18n.bidi.stripHtmlIfNeeded_ \x3d function(str, opt_isStripNeeded) {\n  return opt_isStripNeeded ? str.replace(goog.i18n.bidi.htmlSkipReg_, \x22\x22) : str;\n};\ngoog.i18n.bidi.rtlCharReg_ \x3d new RegExp(\x22[\x22 + goog.i18n.bidi.rtlChars_ + \x22]\x22);\ngoog.i18n.bidi.ltrCharReg_ \x3d new RegExp(\x22[\x22 + goog.i18n.bidi.ltrChars_ + \x22]\x22);\ngoog.i18n.bidi.hasAnyRtl \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.hasRtlChar \x3d goog.i18n.bidi.hasAnyRtl;\ngoog.i18n.bidi.hasAnyLtr \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrCharReg_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.ltrRe_ \x3d new RegExp(\x22^[\x22 + goog.i18n.bidi.ltrChars_ + \x22]\x22);\ngoog.i18n.bidi.rtlRe_ \x3d new RegExp(\x22^[\x22 + goog.i18n.bidi.rtlChars_ + \x22]\x22);\ngoog.i18n.bidi.isRtlChar \x3d function(str) {\n  return goog.i18n.bidi.rtlRe_.test(str);\n};\ngoog.i18n.bidi.isLtrChar \x3d function(str) {\n  return goog.i18n.bidi.ltrRe_.test(str);\n};\ngoog.i18n.bidi.isNeutralChar \x3d function(str) {\n  return !goog.i18n.bidi.isLtrChar(str) \x26\x26 !goog.i18n.bidi.isRtlChar(str);\n};\ngoog.i18n.bidi.ltrDirCheckRe_ \x3d new RegExp(\x22^[^\x22 + goog.i18n.bidi.rtlChars_ + \x22]*[\x22 + goog.i18n.bidi.ltrChars_ + \x22]\x22);\ngoog.i18n.bidi.rtlDirCheckRe_ \x3d new RegExp(\x22^[^\x22 + goog.i18n.bidi.ltrChars_ + \x22]*[\x22 + goog.i18n.bidi.rtlChars_ + \x22]\x22);\ngoog.i18n.bidi.startsWithRtl \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isRtlText \x3d goog.i18n.bidi.startsWithRtl;\ngoog.i18n.bidi.startsWithLtr \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isLtrText \x3d goog.i18n.bidi.startsWithLtr;\ngoog.i18n.bidi.isRequiredLtrRe_ \x3d /^http:\\/\\/.*/;\ngoog.i18n.bidi.isNeutralText \x3d function(str, opt_isHtml) {\n  str \x3d goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml);\n  return goog.i18n.bidi.isRequiredLtrRe_.test(str) || !goog.i18n.bidi.hasAnyLtr(str) \x26\x26 !goog.i18n.bidi.hasAnyRtl(str);\n};\ngoog.i18n.bidi.ltrExitDirCheckRe_ \x3d new RegExp(\x22[\x22 + goog.i18n.bidi.ltrChars_ + \x22]\x22 + \x22[^\x22 + goog.i18n.bidi.rtlChars_ + \x22]*$\x22);\ngoog.i18n.bidi.rtlExitDirCheckRe_ \x3d new RegExp(\x22[\x22 + goog.i18n.bidi.rtlChars_ + \x22]\x22 + \x22[^\x22 + goog.i18n.bidi.ltrChars_ + \x22]*$\x22);\ngoog.i18n.bidi.endsWithLtr \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.ltrExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isLtrExitText \x3d goog.i18n.bidi.endsWithLtr;\ngoog.i18n.bidi.endsWithRtl \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.rtlExitDirCheckRe_.test(goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml));\n};\ngoog.i18n.bidi.isRtlExitText \x3d goog.i18n.bidi.endsWithRtl;\ngoog.i18n.bidi.rtlLocalesRe_ \x3d new RegExp(\x22^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|\x22 + \x22.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))\x22 + \x22(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)\x22, \x22i\x22);\ngoog.i18n.bidi.isRtlLanguage \x3d function(lang) {\n  return goog.i18n.bidi.rtlLocalesRe_.test(lang);\n};\ngoog.i18n.bidi.bracketGuardTextRe_ \x3d /(\\(.*?\\)+)|(\\[.*?\\]+)|(\\{.*?\\}+)|(\x3c.*?\x3e+)/g;\ngoog.i18n.bidi.guardBracketInText \x3d function(s, opt_isRtlContext) {\n  const useRtl \x3d opt_isRtlContext \x3d\x3d\x3d undefined ? goog.i18n.bidi.hasAnyRtl(s) : opt_isRtlContext;\n  const mark \x3d useRtl ? goog.i18n.bidi.Format.RLM : goog.i18n.bidi.Format.LRM;\n  return s.replace(goog.i18n.bidi.bracketGuardTextRe_, mark + \x22$\\x26\x22 + mark);\n};\ngoog.i18n.bidi.enforceRtlInHtml \x3d function(html) {\n  if (html.charAt(0) \x3d\x3d \x22\\x3c\x22) {\n    return html.replace(/\x3c\\w+/, \x22$\\x26 dir\\x3drtl\x22);\n  }\n  return \x22\\n\\x3cspan dir\\x3drtl\\x3e\x22 + html + \x22\\x3c/span\\x3e\x22;\n};\ngoog.i18n.bidi.enforceRtlInText \x3d function(text) {\n  return goog.i18n.bidi.Format.RLE + text + goog.i18n.bidi.Format.PDF;\n};\ngoog.i18n.bidi.enforceLtrInHtml \x3d function(html) {\n  if (html.charAt(0) \x3d\x3d \x22\\x3c\x22) {\n    return html.replace(/\x3c\\w+/, \x22$\\x26 dir\\x3dltr\x22);\n  }\n  return \x22\\n\\x3cspan dir\\x3dltr\\x3e\x22 + html + \x22\\x3c/span\\x3e\x22;\n};\ngoog.i18n.bidi.enforceLtrInText \x3d function(text) {\n  return goog.i18n.bidi.Format.LRE + text + goog.i18n.bidi.Format.PDF;\n};\ngoog.i18n.bidi.dimensionsRe_ \x3d /:\\s*([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)\\s+([.\\d][.\\w]*)/g;\ngoog.i18n.bidi.leftRe_ \x3d /left/gi;\ngoog.i18n.bidi.rightRe_ \x3d /right/gi;\ngoog.i18n.bidi.tempRe_ \x3d /%%%%/g;\ngoog.i18n.bidi.mirrorCSS \x3d function(cssStr) {\n  return cssStr.replace(goog.i18n.bidi.dimensionsRe_, \x22:$1 $4 $3 $2\x22).replace(goog.i18n.bidi.leftRe_, \x22%%%%\x22).replace(goog.i18n.bidi.rightRe_, goog.i18n.bidi.LEFT).replace(goog.i18n.bidi.tempRe_, goog.i18n.bidi.RIGHT);\n};\ngoog.i18n.bidi.doubleQuoteSubstituteRe_ \x3d /([\\u0591-\\u05f2])\x22/g;\ngoog.i18n.bidi.singleQuoteSubstituteRe_ \x3d /([\\u0591-\\u05f2])\x27/g;\ngoog.i18n.bidi.normalizeHebrewQuote \x3d function(str) {\n  return str.replace(goog.i18n.bidi.doubleQuoteSubstituteRe_, \x22$1\u05f4\x22).replace(goog.i18n.bidi.singleQuoteSubstituteRe_, \x22$1\u05f3\x22);\n};\ngoog.i18n.bidi.wordSeparatorRe_ \x3d /\\s+/;\ngoog.i18n.bidi.hasNumeralsRe_ \x3d /[\\d\\u06f0-\\u06f9]/;\ngoog.i18n.bidi.rtlDetectionThreshold_ \x3d 0.40;\ngoog.i18n.bidi.estimateDirection \x3d function(str, opt_isHtml) {\n  let rtlCount \x3d 0;\n  let totalCount \x3d 0;\n  let hasWeaklyLtr \x3d false;\n  const tokens \x3d goog.i18n.bidi.stripHtmlIfNeeded_(str, opt_isHtml).split(goog.i18n.bidi.wordSeparatorRe_);\n  for (let i \x3d 0; i \x3c tokens.length; i++) {\n    const token \x3d tokens[i];\n    if (goog.i18n.bidi.startsWithRtl(token)) {\n      rtlCount++;\n      totalCount++;\n    } else if (goog.i18n.bidi.isRequiredLtrRe_.test(token)) {\n      hasWeaklyLtr \x3d true;\n    } else if (goog.i18n.bidi.hasAnyLtr(token)) {\n      totalCount++;\n    } else if (goog.i18n.bidi.hasNumeralsRe_.test(token)) {\n      hasWeaklyLtr \x3d true;\n    }\n  }\n  return totalCount \x3d\x3d 0 ? hasWeaklyLtr ? goog.i18n.bidi.Dir.LTR : goog.i18n.bidi.Dir.NEUTRAL : rtlCount / totalCount \x3e goog.i18n.bidi.rtlDetectionThreshold_ ? goog.i18n.bidi.Dir.RTL : goog.i18n.bidi.Dir.LTR;\n};\ngoog.i18n.bidi.detectRtlDirectionality \x3d function(str, opt_isHtml) {\n  return goog.i18n.bidi.estimateDirection(str, opt_isHtml) \x3d\x3d goog.i18n.bidi.Dir.RTL;\n};\ngoog.i18n.bidi.setElementDirAndAlign \x3d function(element, dir) {\n  if (element) {\n    const htmlElement \x3d element;\n    dir \x3d goog.i18n.bidi.toDir(dir);\n    if (dir) {\n      htmlElement.style.textAlign \x3d dir \x3d\x3d goog.i18n.bidi.Dir.RTL ? goog.i18n.bidi.RIGHT : goog.i18n.bidi.LEFT;\n      htmlElement.dir \x3d dir \x3d\x3d goog.i18n.bidi.Dir.RTL ? \x22rtl\x22 : \x22ltr\x22;\n    }\n  }\n};\ngoog.i18n.bidi.setElementDirByTextDirectionality \x3d function(element, text) {\n  const htmlElement \x3d element;\n  switch(goog.i18n.bidi.estimateDirection(text)) {\n    case goog.i18n.bidi.Dir.LTR:\n      if (htmlElement.dir !\x3d\x3d \x22ltr\x22) {\n        htmlElement.dir \x3d \x22ltr\x22;\n      }\n      break;\n    case goog.i18n.bidi.Dir.RTL:\n      if (htmlElement.dir !\x3d\x3d \x22rtl\x22) {\n        htmlElement.dir \x3d \x22rtl\x22;\n      }\n      break;\n    default:\n      htmlElement.removeAttribute(\x22dir\x22);\n  }\n};\ngoog.i18n.bidi.DirectionalString \x3d function() {\n};\ngoog.i18n.bidi.DirectionalString.prototype.implementsGoogI18nBidiDirectionalString;\ngoog.i18n.bidi.DirectionalString.prototype.getDirection;\n");
SHADOW_ENV.evalLoad("goog.html.trustedtypes.js", true , "goog.provide(\x22goog.html.trustedtypes\x22);\ngoog.html.trustedtypes.cachedPolicy_;\ngoog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse \x3d function() {\n  if (!goog.TRUSTED_TYPES_POLICY_NAME) {\n    return null;\n  }\n  if (goog.html.trustedtypes.cachedPolicy_ \x3d\x3d\x3d undefined) {\n    goog.html.trustedtypes.cachedPolicy_ \x3d goog.createTrustedTypesPolicy(goog.TRUSTED_TYPES_POLICY_NAME + \x22#html\x22);\n  }\n  return goog.html.trustedtypes.cachedPolicy_;\n};\n");
SHADOW_ENV.evalLoad("goog.html.safescript.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.html.SafeScript\x22);\n  goog.module.declareLegacyNamespace();\n  const Const \x3d goog.require(\x22goog.string.Const\x22);\n  const TypedString \x3d goog.require(\x22goog.string.TypedString\x22);\n  const trustedtypes \x3d goog.require(\x22goog.html.trustedtypes\x22);\n  const {fail} \x3d goog.require(\x22goog.asserts\x22);\n  const CONSTRUCTOR_TOKEN_PRIVATE \x3d {};\n  class SafeScript {\n    constructor(value, token) {\n      this.privateDoNotAccessOrElseSafeScriptWrappedValue_ \x3d token \x3d\x3d\x3d CONSTRUCTOR_TOKEN_PRIVATE ? value : \x22\x22;\n      this.implementsGoogStringTypedString \x3d true;\n    }\n    static fromConstant(script) {\n      const scriptString \x3d Const.unwrap(script);\n      if (scriptString.length \x3d\x3d\x3d 0) {\n        return SafeScript.EMPTY;\n      }\n      return SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(scriptString);\n    }\n    static fromJson(val) {\n      return SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(SafeScript.stringify_(val));\n    }\n    getTypedStringValue() {\n      return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();\n    }\n    static unwrap(safeScript) {\n      return SafeScript.unwrapTrustedScript(safeScript).toString();\n    }\n    static unwrapTrustedScript(safeScript) {\n      if (safeScript instanceof SafeScript \x26\x26 safeScript.constructor \x3d\x3d\x3d SafeScript) {\n        return safeScript.privateDoNotAccessOrElseSafeScriptWrappedValue_;\n      } else {\n        fail(\x22expected object of type SafeScript, got \x27\x22 + safeScript + \x22\x27 of type \x22 + goog.typeOf(safeScript));\n        return \x22type_error:SafeScript\x22;\n      }\n    }\n    static stringify_(val) {\n      const json \x3d JSON.stringify(val);\n      return json.replace(/\x3c/g, \x22\\\\x3c\x22);\n    }\n    static createSafeScriptSecurityPrivateDoNotAccessOrElse(script) {\n      const policy \x3d trustedtypes.getPolicyPrivateDoNotAccessOrElse();\n      const trustedScript \x3d policy ? policy.createScript(script) : script;\n      return new SafeScript(trustedScript, CONSTRUCTOR_TOKEN_PRIVATE);\n    }\n  }\n  SafeScript.prototype.toString \x3d function() {\n    return this.privateDoNotAccessOrElseSafeScriptWrappedValue_.toString();\n  };\n  SafeScript.EMPTY \x3d {valueOf:function() {\n    return SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(\x22\x22);\n  },}.valueOf();\n  exports \x3d SafeScript;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.fs.url.js", true , "goog.provide(\x22goog.fs.url\x22);\ngoog.fs.url.createObjectUrl \x3d function(obj) {\n  return goog.fs.url.getUrlObject_().createObjectURL(obj);\n};\ngoog.fs.url.revokeObjectUrl \x3d function(url) {\n  goog.fs.url.getUrlObject_().revokeObjectURL(url);\n};\ngoog.fs.url.UrlObject_ \x3d function() {\n};\ngoog.fs.url.UrlObject_.prototype.createObjectURL \x3d function(arg) {\n};\ngoog.fs.url.UrlObject_.prototype.revokeObjectURL \x3d function(s) {\n};\ngoog.fs.url.getUrlObject_ \x3d function() {\n  const urlObject \x3d goog.fs.url.findUrlObject_();\n  if (urlObject !\x3d null) {\n    return urlObject;\n  } else {\n    throw new Error(\x22This browser doesn\x27t seem to support blob URLs\x22);\n  }\n};\ngoog.fs.url.findUrlObject_ \x3d function() {\n  if (goog.global.URL !\x3d\x3d undefined \x26\x26 goog.global.URL.createObjectURL !\x3d\x3d undefined) {\n    return goog.global.URL;\n  } else if (goog.global.createObjectURL !\x3d\x3d undefined) {\n    return goog.global;\n  } else {\n    return null;\n  }\n};\ngoog.fs.url.browserSupportsObjectUrls \x3d function() {\n  return goog.fs.url.findUrlObject_() !\x3d null;\n};\n");
SHADOW_ENV.evalLoad("goog.fs.blob.js", true , "goog.provide(\x22goog.fs.blob\x22);\ngoog.fs.blob.getBlob \x3d function(var_args) {\n  const BlobBuilder \x3d goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;\n  if (BlobBuilder !\x3d\x3d undefined) {\n    const bb \x3d new BlobBuilder();\n    for (let i \x3d 0; i \x3c arguments.length; i++) {\n      bb.append(arguments[i]);\n    }\n    return bb.getBlob();\n  } else {\n    return goog.fs.blob.getBlobWithProperties(Array.prototype.slice.call(arguments));\n  }\n};\ngoog.fs.blob.getBlobWithProperties \x3d function(parts, opt_type, opt_endings) {\n  const BlobBuilder \x3d goog.global.BlobBuilder || goog.global.WebKitBlobBuilder;\n  if (BlobBuilder !\x3d\x3d undefined) {\n    const bb \x3d new BlobBuilder();\n    for (let i \x3d 0; i \x3c parts.length; i++) {\n      bb.append(parts[i], opt_endings);\n    }\n    return bb.getBlob(opt_type);\n  } else if (goog.global.Blob !\x3d\x3d undefined) {\n    const properties \x3d {};\n    if (opt_type) {\n      properties[\x22type\x22] \x3d opt_type;\n    }\n    if (opt_endings) {\n      properties[\x22endings\x22] \x3d opt_endings;\n    }\n    return new Blob(parts, properties);\n  } else {\n    throw new Error(\x22This browser doesn\x27t seem to support creating Blobs\x22);\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.html.trustedresourceurl.js", true , "goog.provide(\x22goog.html.TrustedResourceUrl\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.fs.blob\x22);\ngoog.require(\x22goog.fs.url\x22);\ngoog.require(\x22goog.html.SafeScript\x22);\ngoog.require(\x22goog.html.trustedtypes\x22);\ngoog.require(\x22goog.i18n.bidi.Dir\x22);\ngoog.require(\x22goog.i18n.bidi.DirectionalString\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.TypedString\x22);\ngoog.html.TrustedResourceUrl \x3d class {\n  constructor(value, token) {\n    this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ \x3d token \x3d\x3d\x3d goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? value : \x22\x22;\n  }\n};\ngoog.html.TrustedResourceUrl.prototype.implementsGoogStringTypedString \x3d true;\ngoog.html.TrustedResourceUrl.prototype.getTypedStringValue \x3d function() {\n  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_.toString();\n};\ngoog.html.TrustedResourceUrl.prototype.implementsGoogI18nBidiDirectionalString \x3d true;\ngoog.html.TrustedResourceUrl.prototype.getDirection \x3d function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\ngoog.html.TrustedResourceUrl.prototype.cloneWithParams \x3d function(searchParams, opt_hashParams) {\n  var url \x3d goog.html.TrustedResourceUrl.unwrap(this);\n  var parts \x3d goog.html.TrustedResourceUrl.URL_PARAM_PARSER_.exec(url);\n  var urlBase \x3d parts[1];\n  var urlSearch \x3d parts[2] || \x22\x22;\n  var urlHash \x3d parts[3] || \x22\x22;\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(urlBase + goog.html.TrustedResourceUrl.stringifyParams_(\x22?\x22, urlSearch, searchParams) + goog.html.TrustedResourceUrl.stringifyParams_(\x22#\x22, urlHash, opt_hashParams));\n};\ngoog.html.TrustedResourceUrl.prototype.toString \x3d function() {\n  return this.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_ + \x22\x22;\n};\ngoog.html.TrustedResourceUrl.unwrap \x3d function(trustedResourceUrl) {\n  return goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(trustedResourceUrl).toString();\n};\ngoog.html.TrustedResourceUrl.unwrapTrustedScriptURL \x3d function(trustedResourceUrl) {\n  if (trustedResourceUrl instanceof goog.html.TrustedResourceUrl \x26\x26 trustedResourceUrl.constructor \x3d\x3d\x3d goog.html.TrustedResourceUrl) {\n    return trustedResourceUrl.privateDoNotAccessOrElseTrustedResourceUrlWrappedValue_;\n  } else {\n    goog.asserts.fail(\x22expected object of type TrustedResourceUrl, got \x27\x22 + trustedResourceUrl + \x22\x27 of type \x22 + goog.typeOf(trustedResourceUrl));\n    return \x22type_error:TrustedResourceUrl\x22;\n  }\n};\ngoog.html.TrustedResourceUrl.format \x3d function(format, args) {\n  var formatStr \x3d goog.string.Const.unwrap(format);\n  if (!goog.html.TrustedResourceUrl.BASE_URL_.test(formatStr)) {\n    throw new Error(\x22Invalid TrustedResourceUrl format: \x22 + formatStr);\n  }\n  var result \x3d formatStr.replace(goog.html.TrustedResourceUrl.FORMAT_MARKER_, function(match, id) {\n    if (!Object.prototype.hasOwnProperty.call(args, id)) {\n      throw new Error(\x27Found marker, \x22\x27 + id + \x27\x22, in format string, \x22\x27 + formatStr + \x27\x22, but no valid label mapping found \x27 + \x22in args: \x22 + JSON.stringify(args));\n    }\n    var arg \x3d args[id];\n    if (arg instanceof goog.string.Const) {\n      return goog.string.Const.unwrap(arg);\n    } else {\n      return encodeURIComponent(String(arg));\n    }\n  });\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(result);\n};\ngoog.html.TrustedResourceUrl.FORMAT_MARKER_ \x3d /%{(\\w+)}/g;\ngoog.html.TrustedResourceUrl.BASE_URL_ \x3d new RegExp(\x22^((https:)?//[0-9a-z.:[\\\\]-]+/\x22 + \x22|/[^/\\\\\\\\]\x22 + \x22|[^:/\\\\\\\\%]+/\x22 + \x22|[^:/\\\\\\\\%]*[?#]\x22 + \x22|about:blank#\x22 + \x22)\x22, \x22i\x22);\ngoog.html.TrustedResourceUrl.URL_PARAM_PARSER_ \x3d /^([^?#]*)(\\?[^#]*)?(#[\\s\\S]*)?/;\ngoog.html.TrustedResourceUrl.formatWithParams \x3d function(format, args, searchParams, opt_hashParams) {\n  var url \x3d goog.html.TrustedResourceUrl.format(format, args);\n  return url.cloneWithParams(searchParams, opt_hashParams);\n};\ngoog.html.TrustedResourceUrl.fromConstant \x3d function(url) {\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));\n};\ngoog.html.TrustedResourceUrl.fromConstants \x3d function(parts) {\n  var unwrapped \x3d \x22\x22;\n  for (var i \x3d 0; i \x3c parts.length; i++) {\n    unwrapped +\x3d goog.string.Const.unwrap(parts[i]);\n  }\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(unwrapped);\n};\ngoog.html.TrustedResourceUrl.fromSafeScript \x3d function(safeScript) {\n  var blob \x3d goog.fs.blob.getBlobWithProperties([goog.html.SafeScript.unwrap(safeScript)], \x22text/javascript\x22);\n  var url \x3d goog.fs.url.createObjectUrl(blob);\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_ \x3d {};\ngoog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse \x3d function(url) {\n  const policy \x3d goog.html.trustedtypes.getPolicyPrivateDoNotAccessOrElse();\n  var value \x3d policy ? policy.createScriptURL(url) : url;\n  return new goog.html.TrustedResourceUrl(value, goog.html.TrustedResourceUrl.CONSTRUCTOR_TOKEN_PRIVATE_);\n};\ngoog.html.TrustedResourceUrl.stringifyParams_ \x3d function(prefix, currentString, params) {\n  if (params \x3d\x3d null) {\n    return currentString;\n  }\n  if (typeof params \x3d\x3d\x3d \x22string\x22) {\n    return params ? prefix + encodeURIComponent(params) : \x22\x22;\n  }\n  for (var key in params) {\n    if (Object.prototype.hasOwnProperty.call(params, key)) {\n      var value \x3d params[key];\n      var outputValues \x3d Array.isArray(value) ? value : [value];\n      for (var i \x3d 0; i \x3c outputValues.length; i++) {\n        var outputValue \x3d outputValues[i];\n        if (outputValue !\x3d null) {\n          if (!currentString) {\n            currentString \x3d prefix;\n          }\n          currentString +\x3d (currentString.length \x3e prefix.length ? \x22\\x26\x22 : \x22\x22) + encodeURIComponent(key) + \x22\\x3d\x22 + encodeURIComponent(String(outputValue));\n        }\n      }\n    }\n  }\n  return currentString;\n};\n");
SHADOW_ENV.evalLoad("goog.string.internal.js", true , "goog.provide(\x22goog.string.internal\x22);\ngoog.string.internal.startsWith \x3d function(str, prefix) {\n  return str.lastIndexOf(prefix, 0) \x3d\x3d 0;\n};\ngoog.string.internal.endsWith \x3d function(str, suffix) {\n  const l \x3d str.length - suffix.length;\n  return l \x3e\x3d 0 \x26\x26 str.indexOf(suffix, l) \x3d\x3d l;\n};\ngoog.string.internal.caseInsensitiveStartsWith \x3d function(str, prefix) {\n  return goog.string.internal.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) \x3d\x3d 0;\n};\ngoog.string.internal.caseInsensitiveEndsWith \x3d function(str, suffix) {\n  return goog.string.internal.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) \x3d\x3d 0;\n};\ngoog.string.internal.caseInsensitiveEquals \x3d function(str1, str2) {\n  return str1.toLowerCase() \x3d\x3d str2.toLowerCase();\n};\ngoog.string.internal.isEmptyOrWhitespace \x3d function(str) {\n  return /^[\\s\\xa0]*$/.test(str);\n};\ngoog.string.internal.trim \x3d goog.TRUSTED_SITE \x26\x26 String.prototype.trim ? function(str) {\n  return str.trim();\n} : function(str) {\n  return /^[\\s\\xa0]*([\\s\\S]*?)[\\s\\xa0]*$/.exec(str)[1];\n};\ngoog.string.internal.caseInsensitiveCompare \x3d function(str1, str2) {\n  const test1 \x3d String(str1).toLowerCase();\n  const test2 \x3d String(str2).toLowerCase();\n  if (test1 \x3c test2) {\n    return -1;\n  } else if (test1 \x3d\x3d test2) {\n    return 0;\n  } else {\n    return 1;\n  }\n};\ngoog.string.internal.newLineToBr \x3d function(str, opt_xml) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, opt_xml ? \x22\\x3cbr /\\x3e\x22 : \x22\\x3cbr\\x3e\x22);\n};\ngoog.string.internal.htmlEscape \x3d function(str, opt_isLikelyToContainHtmlChars) {\n  if (opt_isLikelyToContainHtmlChars) {\n    str \x3d str.replace(goog.string.internal.AMP_RE_, \x22\\x26amp;\x22).replace(goog.string.internal.LT_RE_, \x22\\x26lt;\x22).replace(goog.string.internal.GT_RE_, \x22\\x26gt;\x22).replace(goog.string.internal.QUOT_RE_, \x22\\x26quot;\x22).replace(goog.string.internal.SINGLE_QUOTE_RE_, \x22\\x26#39;\x22).replace(goog.string.internal.NULL_RE_, \x22\\x26#0;\x22);\n    return str;\n  } else {\n    if (!goog.string.internal.ALL_RE_.test(str)) {\n      return str;\n    }\n    if (str.indexOf(\x22\\x26\x22) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.AMP_RE_, \x22\\x26amp;\x22);\n    }\n    if (str.indexOf(\x22\\x3c\x22) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.LT_RE_, \x22\\x26lt;\x22);\n    }\n    if (str.indexOf(\x22\\x3e\x22) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.GT_RE_, \x22\\x26gt;\x22);\n    }\n    if (str.indexOf(\x27\x22\x27) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.QUOT_RE_, \x22\\x26quot;\x22);\n    }\n    if (str.indexOf(\x22\x27\x22) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.SINGLE_QUOTE_RE_, \x22\\x26#39;\x22);\n    }\n    if (str.indexOf(\x22\\x00\x22) !\x3d -1) {\n      str \x3d str.replace(goog.string.internal.NULL_RE_, \x22\\x26#0;\x22);\n    }\n    return str;\n  }\n};\ngoog.string.internal.AMP_RE_ \x3d /\x26/g;\ngoog.string.internal.LT_RE_ \x3d /\x3c/g;\ngoog.string.internal.GT_RE_ \x3d /\x3e/g;\ngoog.string.internal.QUOT_RE_ \x3d /\x22/g;\ngoog.string.internal.SINGLE_QUOTE_RE_ \x3d /\x27/g;\ngoog.string.internal.NULL_RE_ \x3d /\\x00/g;\ngoog.string.internal.ALL_RE_ \x3d /[\\x00\x26\x3c\x3e\x22\x27]/;\ngoog.string.internal.whitespaceEscape \x3d function(str, opt_xml) {\n  return goog.string.internal.newLineToBr(str.replace(/  /g, \x22 \\x26#160;\x22), opt_xml);\n};\ngoog.string.internal.contains \x3d function(str, subString) {\n  return str.indexOf(subString) !\x3d -1;\n};\ngoog.string.internal.caseInsensitiveContains \x3d function(str, subString) {\n  return goog.string.internal.contains(str.toLowerCase(), subString.toLowerCase());\n};\ngoog.string.internal.compareVersions \x3d function(version1, version2) {\n  let order \x3d 0;\n  const v1Subs \x3d goog.string.internal.trim(String(version1)).split(\x22.\x22);\n  const v2Subs \x3d goog.string.internal.trim(String(version2)).split(\x22.\x22);\n  const subCount \x3d Math.max(v1Subs.length, v2Subs.length);\n  for (let subIdx \x3d 0; order \x3d\x3d 0 \x26\x26 subIdx \x3c subCount; subIdx++) {\n    let v1Sub \x3d v1Subs[subIdx] || \x22\x22;\n    let v2Sub \x3d v2Subs[subIdx] || \x22\x22;\n    do {\n      const v1Comp \x3d /(\\d*)(\\D*)(.*)/.exec(v1Sub) || [\x22\x22, \x22\x22, \x22\x22, \x22\x22];\n      const v2Comp \x3d /(\\d*)(\\D*)(.*)/.exec(v2Sub) || [\x22\x22, \x22\x22, \x22\x22, \x22\x22];\n      if (v1Comp[0].length \x3d\x3d 0 \x26\x26 v2Comp[0].length \x3d\x3d 0) {\n        break;\n      }\n      const v1CompNum \x3d v1Comp[1].length \x3d\x3d 0 ? 0 : parseInt(v1Comp[1], 10);\n      const v2CompNum \x3d v2Comp[1].length \x3d\x3d 0 ? 0 : parseInt(v2Comp[1], 10);\n      order \x3d goog.string.internal.compareElements_(v1CompNum, v2CompNum) || goog.string.internal.compareElements_(v1Comp[2].length \x3d\x3d 0, v2Comp[2].length \x3d\x3d 0) || goog.string.internal.compareElements_(v1Comp[2], v2Comp[2]);\n      v1Sub \x3d v1Comp[3];\n      v2Sub \x3d v2Comp[3];\n    } while (order \x3d\x3d 0);\n  }\n  return order;\n};\ngoog.string.internal.compareElements_ \x3d function(left, right) {\n  if (left \x3c right) {\n    return -1;\n  } else if (left \x3e right) {\n    return 1;\n  }\n  return 0;\n};\n");
SHADOW_ENV.evalLoad("goog.html.safeurl.js", true , "goog.provide(\x22goog.html.SafeUrl\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.fs.url\x22);\ngoog.require(\x22goog.html.TrustedResourceUrl\x22);\ngoog.require(\x22goog.i18n.bidi.Dir\x22);\ngoog.require(\x22goog.i18n.bidi.DirectionalString\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.TypedString\x22);\ngoog.require(\x22goog.string.internal\x22);\ngoog.html.SafeUrl \x3d class {\n  constructor(value, token) {\n    this.privateDoNotAccessOrElseSafeUrlWrappedValue_ \x3d token \x3d\x3d\x3d goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ ? value : \x22\x22;\n  }\n};\ngoog.html.SafeUrl.INNOCUOUS_STRING \x3d \x22about:invalid#zClosurez\x22;\ngoog.html.SafeUrl.prototype.implementsGoogStringTypedString \x3d true;\ngoog.html.SafeUrl.prototype.getTypedStringValue \x3d function() {\n  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();\n};\ngoog.html.SafeUrl.prototype.implementsGoogI18nBidiDirectionalString \x3d true;\ngoog.html.SafeUrl.prototype.getDirection \x3d function() {\n  return goog.i18n.bidi.Dir.LTR;\n};\ngoog.html.SafeUrl.prototype.toString \x3d function() {\n  return this.privateDoNotAccessOrElseSafeUrlWrappedValue_.toString();\n};\ngoog.html.SafeUrl.unwrap \x3d function(safeUrl) {\n  if (safeUrl instanceof goog.html.SafeUrl \x26\x26 safeUrl.constructor \x3d\x3d\x3d goog.html.SafeUrl) {\n    return safeUrl.privateDoNotAccessOrElseSafeUrlWrappedValue_;\n  } else {\n    goog.asserts.fail(\x22expected object of type SafeUrl, got \x27\x22 + safeUrl + \x22\x27 of type \x22 + goog.typeOf(safeUrl));\n    return \x22type_error:SafeUrl\x22;\n  }\n};\ngoog.html.SafeUrl.fromConstant \x3d function(url) {\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.string.Const.unwrap(url));\n};\ngoog.html.SAFE_MIME_TYPE_PATTERN_ \x3d new RegExp(\x22^(?:audio/(?:3gpp2|3gpp|aac|L16|midi|mp3|mp4|mpeg|oga|ogg|opus|x-m4a|x-matroska|x-wav|wav|webm)|\x22 + \x22font/\\\\w+|\x22 + \x22image/(?:bmp|gif|jpeg|jpg|png|tiff|webp|x-icon)|\x22 + \x22video/(?:mpeg|mp4|ogg|webm|quicktime|x-matroska))\x22 + \x27(?:;\\\\w+\\x3d(?:\\\\w+|\x22[\\\\w;,\\x3d ]+\x22))*$\x27, \x22i\x22);\ngoog.html.SafeUrl.isSafeMimeType \x3d function(mimeType) {\n  return goog.html.SAFE_MIME_TYPE_PATTERN_.test(mimeType);\n};\ngoog.html.SafeUrl.fromBlob \x3d function(blob) {\n  var url \x3d goog.html.SafeUrl.isSafeMimeType(blob.type) ? goog.fs.url.createObjectUrl(blob) : goog.html.SafeUrl.INNOCUOUS_STRING;\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.revokeObjectUrl \x3d function(safeUrl) {\n  var url \x3d safeUrl.getTypedStringValue();\n  if (url !\x3d\x3d goog.html.SafeUrl.INNOCUOUS_STRING) {\n    goog.fs.url.revokeObjectUrl(url);\n  }\n};\ngoog.html.SafeUrl.fromMediaSource \x3d function(mediaSource) {\n  goog.asserts.assert(\x22MediaSource\x22 in goog.global, \x22No support for MediaSource\x22);\n  const url \x3d mediaSource instanceof MediaSource ? goog.fs.url.createObjectUrl(mediaSource) : goog.html.SafeUrl.INNOCUOUS_STRING;\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.DATA_URL_PATTERN_ \x3d /^data:(.*);base64,[a-z0-9+\\/]+\x3d*$/i;\ngoog.html.SafeUrl.tryFromDataUrl \x3d function(dataUrl) {\n  dataUrl \x3d String(dataUrl);\n  var filteredDataUrl \x3d dataUrl.replace(/(%0A|%0D)/g, \x22\x22);\n  var match \x3d filteredDataUrl.match(goog.html.DATA_URL_PATTERN_);\n  var valid \x3d match \x26\x26 goog.html.SafeUrl.isSafeMimeType(match[1]);\n  if (valid) {\n    return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(filteredDataUrl);\n  }\n  return null;\n};\ngoog.html.SafeUrl.fromDataUrl \x3d function(dataUrl) {\n  return goog.html.SafeUrl.tryFromDataUrl(dataUrl) || goog.html.SafeUrl.INNOCUOUS_URL;\n};\ngoog.html.SafeUrl.fromTelUrl \x3d function(telUrl) {\n  if (!goog.string.internal.caseInsensitiveStartsWith(telUrl, \x22tel:\x22)) {\n    telUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(telUrl);\n};\ngoog.html.SIP_URL_PATTERN_ \x3d new RegExp(\x22^sip[s]?:[+a-z0-9_.!$%\\x26\x27*\\\\/\\x3d^`{|}~-]+@([a-z0-9-]+\\\\.)+[a-z0-9]{2,63}$\x22, \x22i\x22);\ngoog.html.SafeUrl.fromSipUrl \x3d function(sipUrl) {\n  if (!goog.html.SIP_URL_PATTERN_.test(decodeURIComponent(sipUrl))) {\n    sipUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sipUrl);\n};\ngoog.html.SafeUrl.fromFacebookMessengerUrl \x3d function(facebookMessengerUrl) {\n  if (!goog.string.internal.caseInsensitiveStartsWith(facebookMessengerUrl, \x22fb-messenger://share\x22)) {\n    facebookMessengerUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(facebookMessengerUrl);\n};\ngoog.html.SafeUrl.fromWhatsAppUrl \x3d function(whatsAppUrl) {\n  if (!goog.string.internal.caseInsensitiveStartsWith(whatsAppUrl, \x22whatsapp://send\x22)) {\n    whatsAppUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(whatsAppUrl);\n};\ngoog.html.SafeUrl.fromSmsUrl \x3d function(smsUrl) {\n  if (!goog.string.internal.caseInsensitiveStartsWith(smsUrl, \x22sms:\x22) || !goog.html.SafeUrl.isSmsUrlBodyValid_(smsUrl)) {\n    smsUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(smsUrl);\n};\ngoog.html.SafeUrl.isSmsUrlBodyValid_ \x3d function(smsUrl) {\n  var hash \x3d smsUrl.indexOf(\x22#\x22);\n  if (hash \x3e 0) {\n    smsUrl \x3d smsUrl.substring(0, hash);\n  }\n  var bodyParams \x3d smsUrl.match(/[?\x26]body\x3d/gi);\n  if (!bodyParams) {\n    return true;\n  }\n  if (bodyParams.length \x3e 1) {\n    return false;\n  }\n  var bodyValue \x3d smsUrl.match(/[?\x26]body\x3d([^\x26]*)/)[1];\n  if (!bodyValue) {\n    return true;\n  }\n  try {\n    decodeURIComponent(bodyValue);\n  } catch (error) {\n    return false;\n  }\n  return /^(?:[a-z0-9\\-_.~]|%[0-9a-f]{2})+$/i.test(bodyValue);\n};\ngoog.html.SafeUrl.fromSshUrl \x3d function(sshUrl) {\n  if (!goog.string.internal.caseInsensitiveStartsWith(sshUrl, \x22ssh://\x22)) {\n    sshUrl \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(sshUrl);\n};\ngoog.html.SafeUrl.sanitizeChromeExtensionUrl \x3d function(url, extensionId) {\n  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^chrome-extension:\\/\\/([^\\/]+)\\//, url, extensionId);\n};\ngoog.html.SafeUrl.sanitizeFirefoxExtensionUrl \x3d function(url, extensionId) {\n  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^moz-extension:\\/\\/([^\\/]+)\\//, url, extensionId);\n};\ngoog.html.SafeUrl.sanitizeEdgeExtensionUrl \x3d function(url, extensionId) {\n  return goog.html.SafeUrl.sanitizeExtensionUrl_(/^ms-browser-extension:\\/\\/([^\\/]+)\\//, url, extensionId);\n};\ngoog.html.SafeUrl.sanitizeExtensionUrl_ \x3d function(scheme, url, extensionId) {\n  var matches \x3d scheme.exec(url);\n  if (!matches) {\n    url \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  } else {\n    var extractedExtensionId \x3d matches[1];\n    var acceptedExtensionIds;\n    if (extensionId instanceof goog.string.Const) {\n      acceptedExtensionIds \x3d [goog.string.Const.unwrap(extensionId)];\n    } else {\n      acceptedExtensionIds \x3d extensionId.map(function unwrap(x) {\n        return goog.string.Const.unwrap(x);\n      });\n    }\n    if (acceptedExtensionIds.indexOf(extractedExtensionId) \x3d\x3d -1) {\n      url \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n    }\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.fromTrustedResourceUrl \x3d function(trustedResourceUrl) {\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.TrustedResourceUrl.unwrap(trustedResourceUrl));\n};\ngoog.html.SAFE_URL_PATTERN_ \x3d /^(?:(?:https?|mailto|ftp):|[^:/?#]*(?:[/?#]|$))/i;\ngoog.html.SafeUrl.SAFE_URL_PATTERN \x3d goog.html.SAFE_URL_PATTERN_;\ngoog.html.SafeUrl.trySanitize \x3d function(url) {\n  if (url instanceof goog.html.SafeUrl) {\n    return url;\n  }\n  if (typeof url \x3d\x3d \x22object\x22 \x26\x26 url.implementsGoogStringTypedString) {\n    url \x3d url.getTypedStringValue();\n  } else {\n    url \x3d String(url);\n  }\n  if (!goog.html.SAFE_URL_PATTERN_.test(url)) {\n    return goog.html.SafeUrl.tryFromDataUrl(url);\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.sanitize \x3d function(url) {\n  return goog.html.SafeUrl.trySanitize(url) || goog.html.SafeUrl.INNOCUOUS_URL;\n};\ngoog.html.SafeUrl.sanitizeAssertUnchanged \x3d function(url, opt_allowDataUrl) {\n  if (url instanceof goog.html.SafeUrl) {\n    return url;\n  } else if (typeof url \x3d\x3d \x22object\x22 \x26\x26 url.implementsGoogStringTypedString) {\n    url \x3d url.getTypedStringValue();\n  } else {\n    url \x3d String(url);\n  }\n  if (opt_allowDataUrl \x26\x26 /^data:/i.test(url)) {\n    var safeUrl \x3d goog.html.SafeUrl.fromDataUrl(url);\n    if (safeUrl.getTypedStringValue() \x3d\x3d url) {\n      return safeUrl;\n    }\n  }\n  if (!goog.asserts.assert(goog.html.SAFE_URL_PATTERN_.test(url), \x22%s does not match the safe URL pattern\x22, url)) {\n    url \x3d goog.html.SafeUrl.INNOCUOUS_STRING;\n  }\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_ \x3d {};\ngoog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse \x3d function(url) {\n  return new goog.html.SafeUrl(url, goog.html.SafeUrl.CONSTRUCTOR_TOKEN_PRIVATE_);\n};\ngoog.html.SafeUrl.INNOCUOUS_URL \x3d goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(goog.html.SafeUrl.INNOCUOUS_STRING);\ngoog.html.SafeUrl.ABOUT_BLANK \x3d goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(\x22about:blank\x22);\n");
SHADOW_ENV.evalLoad("goog.html.safestyle.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.html.SafeStyle\x22);\n  goog.module.declareLegacyNamespace();\n  const Const \x3d goog.require(\x22goog.string.Const\x22);\n  const SafeUrl \x3d goog.require(\x22goog.html.SafeUrl\x22);\n  const TypedString \x3d goog.require(\x22goog.string.TypedString\x22);\n  const {AssertionError, assert, fail} \x3d goog.require(\x22goog.asserts\x22);\n  const {contains, endsWith} \x3d goog.require(\x22goog.string.internal\x22);\n  const CONSTRUCTOR_TOKEN_PRIVATE \x3d {};\n  class SafeStyle {\n    constructor(value, token) {\n      this.privateDoNotAccessOrElseSafeStyleWrappedValue_ \x3d token \x3d\x3d\x3d CONSTRUCTOR_TOKEN_PRIVATE ? value : \x22\x22;\n      this.implementsGoogStringTypedString \x3d true;\n    }\n    static fromConstant(style) {\n      const styleString \x3d Const.unwrap(style);\n      if (styleString.length \x3d\x3d\x3d 0) {\n        return SafeStyle.EMPTY;\n      }\n      assert(endsWith(styleString, \x22;\x22), `Last character of style string is not \x27;\x27: ${styleString}`);\n      assert(contains(styleString, \x22:\x22), \x22Style string must contain at least one \x27:\x27, to \x22 + \x27specify a \x22name: value\x22 pair: \x27 + styleString);\n      return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(styleString);\n    }\n    getTypedStringValue() {\n      return this.privateDoNotAccessOrElseSafeStyleWrappedValue_;\n    }\n    toString() {\n      return this.privateDoNotAccessOrElseSafeStyleWrappedValue_.toString();\n    }\n    static unwrap(safeStyle) {\n      if (safeStyle instanceof SafeStyle \x26\x26 safeStyle.constructor \x3d\x3d\x3d SafeStyle) {\n        return safeStyle.privateDoNotAccessOrElseSafeStyleWrappedValue_;\n      } else {\n        fail(`expected object of type SafeStyle, got \x27${safeStyle}` + \x22\x27 of type \x22 + goog.typeOf(safeStyle));\n        return \x22type_error:SafeStyle\x22;\n      }\n    }\n    static createSafeStyleSecurityPrivateDoNotAccessOrElse(style) {\n      return new SafeStyle(style, CONSTRUCTOR_TOKEN_PRIVATE);\n    }\n    static create(map) {\n      let style \x3d \x22\x22;\n      for (let name in map) {\n        if (Object.prototype.hasOwnProperty.call(map, name)) {\n          if (!/^[-_a-zA-Z0-9]+$/.test(name)) {\n            throw new Error(`Name allows only [-_a-zA-Z0-9], got: ${name}`);\n          }\n          let value \x3d map[name];\n          if (value \x3d\x3d null) {\n            continue;\n          }\n          if (Array.isArray(value)) {\n            value \x3d value.map(sanitizePropertyValue).join(\x22 \x22);\n          } else {\n            value \x3d sanitizePropertyValue(value);\n          }\n          style +\x3d `${name}:${value};`;\n        }\n      }\n      if (!style) {\n        return SafeStyle.EMPTY;\n      }\n      return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);\n    }\n    static concat(var_args) {\n      let style \x3d \x22\x22;\n      const addArgument \x3d argument \x3d\x3e {\n        if (Array.isArray(argument)) {\n          argument.forEach(addArgument);\n        } else {\n          style +\x3d SafeStyle.unwrap(argument);\n        }\n      };\n      Array.prototype.forEach.call(arguments, addArgument);\n      if (!style) {\n        return SafeStyle.EMPTY;\n      }\n      return SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);\n    }\n  }\n  SafeStyle.EMPTY \x3d SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(\x22\x22);\n  SafeStyle.INNOCUOUS_STRING \x3d \x22zClosurez\x22;\n  SafeStyle.PropertyValue;\n  SafeStyle.PropertyMap;\n  function sanitizePropertyValue(value) {\n    if (value instanceof SafeUrl) {\n      const url \x3d SafeUrl.unwrap(value);\n      return \x27url(\x22\x27 + url.replace(/\x3c/g, \x22%3c\x22).replace(/[\\\\\x22]/g, \x22\\\\$\\x26\x22) + \x27\x22)\x27;\n    }\n    const result \x3d value instanceof Const ? Const.unwrap(value) : sanitizePropertyValueString(String(value));\n    if (/[{;}]/.test(result)) {\n      throw new AssertionError(\x22Value does not allow [{;}], got: %s.\x22, [result]);\n    }\n    return result;\n  }\n  function sanitizePropertyValueString(value) {\n    const valueWithoutFunctions \x3d value.replace(FUNCTIONS_RE, \x22$1\x22).replace(FUNCTIONS_RE, \x22$1\x22).replace(URL_RE, \x22url\x22);\n    if (!VALUE_RE.test(valueWithoutFunctions)) {\n      fail(`String value allows only ${VALUE_ALLOWED_CHARS}` + \x22 and simple functions, got: \x22 + value);\n      return SafeStyle.INNOCUOUS_STRING;\n    } else if (COMMENT_RE.test(value)) {\n      fail(`String value disallows comments, got: ${value}`);\n      return SafeStyle.INNOCUOUS_STRING;\n    } else if (!hasBalancedQuotes(value)) {\n      fail(`String value requires balanced quotes, got: ${value}`);\n      return SafeStyle.INNOCUOUS_STRING;\n    } else if (!hasBalancedSquareBrackets(value)) {\n      fail(\x22String value requires balanced square brackets and one\x22 + \x22 identifier per pair of brackets, got: \x22 + value);\n      return SafeStyle.INNOCUOUS_STRING;\n    }\n    return sanitizeUrl(value);\n  }\n  function hasBalancedQuotes(value) {\n    let outsideSingle \x3d true;\n    let outsideDouble \x3d true;\n    for (let i \x3d 0; i \x3c value.length; i++) {\n      const c \x3d value.charAt(i);\n      if (c \x3d\x3d \x22\x27\x22 \x26\x26 outsideDouble) {\n        outsideSingle \x3d !outsideSingle;\n      } else if (c \x3d\x3d \x27\x22\x27 \x26\x26 outsideSingle) {\n        outsideDouble \x3d !outsideDouble;\n      }\n    }\n    return outsideSingle \x26\x26 outsideDouble;\n  }\n  function hasBalancedSquareBrackets(value) {\n    let outside \x3d true;\n    const tokenRe \x3d /^[-_a-zA-Z0-9]$/;\n    for (let i \x3d 0; i \x3c value.length; i++) {\n      const c \x3d value.charAt(i);\n      if (c \x3d\x3d \x22]\x22) {\n        if (outside) {\n          return false;\n        }\n        outside \x3d true;\n      } else if (c \x3d\x3d \x22[\x22) {\n        if (!outside) {\n          return false;\n        }\n        outside \x3d false;\n      } else if (!outside \x26\x26 !tokenRe.test(c)) {\n        return false;\n      }\n    }\n    return outside;\n  }\n  const VALUE_ALLOWED_CHARS \x3d \x22[-,.\\\x22\x27%_!# a-zA-Z0-9\\\\[\\\\]]\x22;\n  const VALUE_RE \x3d new RegExp(`^${VALUE_ALLOWED_CHARS}+\\$`);\n  const URL_RE \x3d new RegExp(\x22\\\\b(url\\\\([ \\t\\n]*)(\x22 + \x22\x27[ -\\x26(-\\\\[\\\\]-~]*\x27\x22 + \x27|\x22[ !#-\\\\[\\\\]-~]*\x22\x27 + \x22|[!#-\\x26*-\\\\[\\\\]-~]*\x22 + \x22)([ \\t\\n]*\\\\))\x22, \x22g\x22);\n  const ALLOWED_FUNCTIONS \x3d [\x22calc\x22, \x22cubic-bezier\x22, \x22fit-content\x22, \x22hsl\x22, \x22hsla\x22, \x22linear-gradient\x22, \x22matrix\x22, \x22minmax\x22, \x22repeat\x22, \x22rgb\x22, \x22rgba\x22, \x22(rotate|scale|translate)(X|Y|Z|3d)?\x22, \x22var\x22,];\n  const FUNCTIONS_RE \x3d new RegExp(\x22\\\\b(\x22 + ALLOWED_FUNCTIONS.join(\x22|\x22) + \x22)\x22 + \x22\\\\([-+*/0-9a-z.%#\\\\[\\\\], ]+\\\\)\x22, \x22g\x22);\n  const COMMENT_RE \x3d /\\/\\*/;\n  function sanitizeUrl(value) {\n    return value.replace(URL_RE, (match, before, url, after) \x3d\x3e {\n      let quote \x3d \x22\x22;\n      url \x3d url.replace(/^([\x27\x22])(.*)\\1$/, (match, start, inside) \x3d\x3e {\n        quote \x3d start;\n        return inside;\n      });\n      const sanitized \x3d SafeUrl.sanitize(url).getTypedStringValue();\n      return before + quote + sanitized + quote + after;\n    });\n  }\n  exports \x3d SafeStyle;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.object.object.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.object\x22);\n  goog.module.declareLegacyNamespace();\n  function forEach(obj, f, opt_obj) {\n    for (const key in obj) {\n      f.call(opt_obj, obj[key], key, obj);\n    }\n  }\n  function filter(obj, f, opt_obj) {\n    const res \x3d {};\n    for (const key in obj) {\n      if (f.call(opt_obj, obj[key], key, obj)) {\n        res[key] \x3d obj[key];\n      }\n    }\n    return res;\n  }\n  function map(obj, f, opt_obj) {\n    const res \x3d {};\n    for (const key in obj) {\n      res[key] \x3d f.call(opt_obj, obj[key], key, obj);\n    }\n    return res;\n  }\n  function some(obj, f, opt_obj) {\n    for (const key in obj) {\n      if (f.call(opt_obj, obj[key], key, obj)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function every(obj, f, opt_obj) {\n    for (const key in obj) {\n      if (!f.call(opt_obj, obj[key], key, obj)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function getCount(obj) {\n    let rv \x3d 0;\n    for (const key in obj) {\n      rv++;\n    }\n    return rv;\n  }\n  function getAnyKey(obj) {\n    for (const key in obj) {\n      return key;\n    }\n  }\n  function getAnyValue(obj) {\n    for (const key in obj) {\n      return obj[key];\n    }\n  }\n  function contains(obj, val) {\n    return containsValue(obj, val);\n  }\n  function getValues(obj) {\n    const res \x3d [];\n    let i \x3d 0;\n    for (const key in obj) {\n      res[i++] \x3d obj[key];\n    }\n    return res;\n  }\n  function getKeys(obj) {\n    const res \x3d [];\n    let i \x3d 0;\n    for (const key in obj) {\n      res[i++] \x3d key;\n    }\n    return res;\n  }\n  function getValueByKeys(obj, var_args) {\n    const isArrayLike \x3d goog.isArrayLike(var_args);\n    const keys \x3d isArrayLike ? var_args : arguments;\n    for (let i \x3d isArrayLike ? 0 : 1; i \x3c keys.length; i++) {\n      if (obj \x3d\x3d null) {\n        return undefined;\n      }\n      obj \x3d obj[keys[i]];\n    }\n    return obj;\n  }\n  function containsKey(obj, key) {\n    return obj !\x3d\x3d null \x26\x26 key in obj;\n  }\n  function containsValue(obj, val) {\n    for (const key in obj) {\n      if (obj[key] \x3d\x3d val) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function findKey(obj, f, thisObj \x3d undefined) {\n    for (const key in obj) {\n      if (f.call(thisObj, obj[key], key, obj)) {\n        return key;\n      }\n    }\n    return undefined;\n  }\n  function findValue(obj, f, thisObj \x3d undefined) {\n    const key \x3d findKey(obj, f, thisObj);\n    return key \x26\x26 obj[key];\n  }\n  function isEmpty(obj) {\n    for (const key in obj) {\n      return false;\n    }\n    return true;\n  }\n  function clear(obj) {\n    for (const i in obj) {\n      delete obj[i];\n    }\n  }\n  function remove(obj, key) {\n    let rv;\n    if (rv \x3d key in obj) {\n      delete obj[key];\n    }\n    return rv;\n  }\n  function add(obj, key, val) {\n    if (obj !\x3d\x3d null \x26\x26 key in obj) {\n      throw new Error(`The object already contains the key \x22${key}\x22`);\n    }\n    set(obj, key, val);\n  }\n  function get(obj, key, val \x3d undefined) {\n    if (obj !\x3d\x3d null \x26\x26 key in obj) {\n      return obj[key];\n    }\n    return val;\n  }\n  function set(obj, key, value) {\n    obj[key] \x3d value;\n  }\n  function setIfUndefined(obj, key, value) {\n    return key in obj ? obj[key] : obj[key] \x3d value;\n  }\n  function setWithReturnValueIfNotSet(obj, key, f) {\n    if (key in obj) {\n      return obj[key];\n    }\n    const val \x3d f();\n    obj[key] \x3d val;\n    return val;\n  }\n  function equals(a, b) {\n    for (const k in a) {\n      if (!(k in b) || a[k] !\x3d\x3d b[k]) {\n        return false;\n      }\n    }\n    for (const k in b) {\n      if (!(k in a)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function clone(obj) {\n    const res \x3d {};\n    for (const key in obj) {\n      res[key] \x3d obj[key];\n    }\n    return res;\n  }\n  function unsafeClone(obj) {\n    if (!obj || typeof obj !\x3d\x3d \x22object\x22) {\n      return obj;\n    }\n    if (typeof obj.clone \x3d\x3d\x3d \x22function\x22) {\n      return obj.clone();\n    }\n    if (typeof Map !\x3d\x3d \x22undefined\x22 \x26\x26 obj instanceof Map) {\n      return new Map(obj);\n    } else if (typeof Set !\x3d\x3d \x22undefined\x22 \x26\x26 obj instanceof Set) {\n      return new Set(obj);\n    }\n    const clone \x3d Array.isArray(obj) ? [] : typeof ArrayBuffer \x3d\x3d\x3d \x22function\x22 \x26\x26 typeof ArrayBuffer.isView \x3d\x3d\x3d \x22function\x22 \x26\x26 ArrayBuffer.isView(obj) \x26\x26 !(obj instanceof DataView) ? new obj.constructor(obj.length) : {};\n    for (const key in obj) {\n      clone[key] \x3d unsafeClone(obj[key]);\n    }\n    return clone;\n  }\n  function transpose(obj) {\n    const transposed \x3d {};\n    for (const key in obj) {\n      transposed[obj[key]] \x3d key;\n    }\n    return transposed;\n  }\n  const PROTOTYPE_FIELDS \x3d [\x22constructor\x22, \x22hasOwnProperty\x22, \x22isPrototypeOf\x22, \x22propertyIsEnumerable\x22, \x22toLocaleString\x22, \x22toString\x22, \x22valueOf\x22,];\n  function extend(target, var_args) {\n    let key;\n    let source;\n    for (let i \x3d 1; i \x3c arguments.length; i++) {\n      source \x3d arguments[i];\n      for (key in source) {\n        target[key] \x3d source[key];\n      }\n      for (let j \x3d 0; j \x3c PROTOTYPE_FIELDS.length; j++) {\n        key \x3d PROTOTYPE_FIELDS[j];\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] \x3d source[key];\n        }\n      }\n    }\n  }\n  function create(var_args) {\n    const argLength \x3d arguments.length;\n    if (argLength \x3d\x3d 1 \x26\x26 Array.isArray(arguments[0])) {\n      return create.apply(null, arguments[0]);\n    }\n    if (argLength % 2) {\n      throw new Error(\x22Uneven number of arguments\x22);\n    }\n    const rv \x3d {};\n    for (let i \x3d 0; i \x3c argLength; i +\x3d 2) {\n      rv[arguments[i]] \x3d arguments[i + 1];\n    }\n    return rv;\n  }\n  function createSet(var_args) {\n    const argLength \x3d arguments.length;\n    if (argLength \x3d\x3d 1 \x26\x26 Array.isArray(arguments[0])) {\n      return createSet.apply(null, arguments[0]);\n    }\n    const rv \x3d {};\n    for (let i \x3d 0; i \x3c argLength; i++) {\n      rv[arguments[i]] \x3d true;\n    }\n    return rv;\n  }\n  function createImmutableView(obj) {\n    let result \x3d obj;\n    if (Object.isFrozen \x26\x26 !Object.isFrozen(obj)) {\n      result \x3d Object.create(obj);\n      Object.freeze(result);\n    }\n    return result;\n  }\n  function isImmutableView(obj) {\n    return !!Object.isFrozen \x26\x26 Object.isFrozen(obj);\n  }\n  function getAllPropertyNames(obj, includeObjectPrototype \x3d undefined, includeFunctionPrototype \x3d undefined) {\n    if (!obj) {\n      return [];\n    }\n    if (!Object.getOwnPropertyNames || !Object.getPrototypeOf) {\n      return getKeys(obj);\n    }\n    const visitedSet \x3d {};\n    let proto \x3d obj;\n    while (proto \x26\x26 (proto !\x3d\x3d Object.prototype || !!includeObjectPrototype) \x26\x26 (proto !\x3d\x3d Function.prototype || !!includeFunctionPrototype)) {\n      const names \x3d Object.getOwnPropertyNames(proto);\n      for (let i \x3d 0; i \x3c names.length; i++) {\n        visitedSet[names[i]] \x3d true;\n      }\n      proto \x3d Object.getPrototypeOf(proto);\n    }\n    return getKeys(visitedSet);\n  }\n  function getSuperClass(constructor) {\n    const proto \x3d Object.getPrototypeOf(constructor.prototype);\n    return proto \x26\x26 proto.constructor;\n  }\n  exports \x3d {add, clear, clone, contains, containsKey, containsValue, create, createImmutableView, createSet, equals, every, extend, filter, findKey, findValue, forEach, get, getAllPropertyNames, getAnyKey, getAnyValue, getCount, getKeys, getSuperClass, getValueByKeys, getValues, isEmpty, isImmutableView, map, remove, set, setIfUndefined, setWithReturnValueIfNotSet, some, transpose, unsafeClone,};\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.html.safestylesheet.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.html.SafeStyleSheet\x22);\n  goog.module.declareLegacyNamespace();\n  const Const \x3d goog.require(\x22goog.string.Const\x22);\n  const SafeStyle \x3d goog.require(\x22goog.html.SafeStyle\x22);\n  const TypedString \x3d goog.require(\x22goog.string.TypedString\x22);\n  const googObject \x3d goog.require(\x22goog.object\x22);\n  const {assert, fail} \x3d goog.require(\x22goog.asserts\x22);\n  const {contains} \x3d goog.require(\x22goog.string.internal\x22);\n  const CONSTRUCTOR_TOKEN_PRIVATE \x3d {};\n  class SafeStyleSheet {\n    constructor(value, token) {\n      this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_ \x3d token \x3d\x3d\x3d CONSTRUCTOR_TOKEN_PRIVATE ? value : \x22\x22;\n      this.implementsGoogStringTypedString \x3d true;\n    }\n    static createRule(selector, style) {\n      if (contains(selector, \x22\\x3c\x22)) {\n        throw new Error(`Selector does not allow \x27\x3c\x27, got: ${selector}`);\n      }\n      const selectorToCheck \x3d selector.replace(/(\x27|\x22)((?!\\1)[^\\r\\n\\f\\\\]|\\\\[\\s\\S])*\\1/g, \x22\x22);\n      if (!/^[-_a-zA-Z0-9#.:* ,\x3e+~[\\]()\x3d^$|]+$/.test(selectorToCheck)) {\n        throw new Error(\x22Selector allows only [-_a-zA-Z0-9#.:* ,\\x3e+~[\\\\]()\\x3d^$|] and \x22 + \x22strings, got: \x22 + selector);\n      }\n      if (!SafeStyleSheet.hasBalancedBrackets_(selectorToCheck)) {\n        throw new Error(\x22() and [] in selector must be balanced, got: \x22 + selector);\n      }\n      if (!(style instanceof SafeStyle)) {\n        style \x3d SafeStyle.create(style);\n      }\n      const styleSheet \x3d `${selector}{` + SafeStyle.unwrap(style).replace(/\x3c/g, \x22\\\\3C \x22) + \x22}\x22;\n      return SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);\n    }\n    static hasBalancedBrackets_(s) {\n      const brackets \x3d {\x22(\x22:\x22)\x22, \x22[\x22:\x22]\x22};\n      const expectedBrackets \x3d [];\n      for (let i \x3d 0; i \x3c s.length; i++) {\n        const ch \x3d s[i];\n        if (brackets[ch]) {\n          expectedBrackets.push(brackets[ch]);\n        } else if (googObject.contains(brackets, ch)) {\n          if (expectedBrackets.pop() !\x3d ch) {\n            return false;\n          }\n        }\n      }\n      return expectedBrackets.length \x3d\x3d 0;\n    }\n    static concat(var_args) {\n      let result \x3d \x22\x22;\n      const addArgument \x3d argument \x3d\x3e {\n        if (Array.isArray(argument)) {\n          argument.forEach(addArgument);\n        } else {\n          result +\x3d SafeStyleSheet.unwrap(argument);\n        }\n      };\n      Array.prototype.forEach.call(arguments, addArgument);\n      return SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(result);\n    }\n    static fromConstant(styleSheet) {\n      const styleSheetString \x3d Const.unwrap(styleSheet);\n      if (styleSheetString.length \x3d\x3d\x3d 0) {\n        return SafeStyleSheet.EMPTY;\n      }\n      assert(!contains(styleSheetString, \x22\\x3c\x22), `Forbidden \x27\x3c\x27 character in style sheet string: ${styleSheetString}`);\n      return SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheetString);\n    }\n    getTypedStringValue() {\n      return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;\n    }\n    static unwrap(safeStyleSheet) {\n      if (safeStyleSheet instanceof SafeStyleSheet \x26\x26 safeStyleSheet.constructor \x3d\x3d\x3d SafeStyleSheet) {\n        return safeStyleSheet.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_;\n      } else {\n        fail(\x22expected object of type SafeStyleSheet, got \x27\x22 + safeStyleSheet + \x22\x27 of type \x22 + goog.typeOf(safeStyleSheet));\n        return \x22type_error:SafeStyleSheet\x22;\n      }\n    }\n    static createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet) {\n      return new SafeStyleSheet(styleSheet, CONSTRUCTOR_TOKEN_PRIVATE);\n    }\n  }\n  SafeStyleSheet.prototype.toString \x3d function() {\n    return this.privateDoNotAccessOrElseSafeStyleSheetWrappedValue_.toString();\n  };\n  SafeStyleSheet.EMPTY \x3d SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(\x22\x22);\n  exports \x3d SafeStyleSheet;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.dom.htmlelement.js", true , "goog.provide(\x22goog.dom.HtmlElement\x22);\ngoog.dom.HtmlElement \x3d function() {\n};\n");
SHADOW_ENV.evalLoad("goog.dom.tagname.js", true , "goog.provide(\x22goog.dom.TagName\x22);\ngoog.require(\x22goog.dom.HtmlElement\x22);\ngoog.dom.TagName \x3d class {\n  static cast(name, type) {\n    return name;\n  }\n  constructor() {\n    this.googDomTagName_doNotImplementThisTypeOrElse_;\n    this.ensureTypeScriptRemembersTypeT_;\n  }\n  toString() {\n  }\n};\ngoog.dom.TagName.A \x3d \x22A\x22;\ngoog.dom.TagName.ABBR \x3d \x22ABBR\x22;\ngoog.dom.TagName.ACRONYM \x3d \x22ACRONYM\x22;\ngoog.dom.TagName.ADDRESS \x3d \x22ADDRESS\x22;\ngoog.dom.TagName.APPLET \x3d \x22APPLET\x22;\ngoog.dom.TagName.AREA \x3d \x22AREA\x22;\ngoog.dom.TagName.ARTICLE \x3d \x22ARTICLE\x22;\ngoog.dom.TagName.ASIDE \x3d \x22ASIDE\x22;\ngoog.dom.TagName.AUDIO \x3d \x22AUDIO\x22;\ngoog.dom.TagName.B \x3d \x22B\x22;\ngoog.dom.TagName.BASE \x3d \x22BASE\x22;\ngoog.dom.TagName.BASEFONT \x3d \x22BASEFONT\x22;\ngoog.dom.TagName.BDI \x3d \x22BDI\x22;\ngoog.dom.TagName.BDO \x3d \x22BDO\x22;\ngoog.dom.TagName.BIG \x3d \x22BIG\x22;\ngoog.dom.TagName.BLOCKQUOTE \x3d \x22BLOCKQUOTE\x22;\ngoog.dom.TagName.BODY \x3d \x22BODY\x22;\ngoog.dom.TagName.BR \x3d \x22BR\x22;\ngoog.dom.TagName.BUTTON \x3d \x22BUTTON\x22;\ngoog.dom.TagName.CANVAS \x3d \x22CANVAS\x22;\ngoog.dom.TagName.CAPTION \x3d \x22CAPTION\x22;\ngoog.dom.TagName.CENTER \x3d \x22CENTER\x22;\ngoog.dom.TagName.CITE \x3d \x22CITE\x22;\ngoog.dom.TagName.CODE \x3d \x22CODE\x22;\ngoog.dom.TagName.COL \x3d \x22COL\x22;\ngoog.dom.TagName.COLGROUP \x3d \x22COLGROUP\x22;\ngoog.dom.TagName.COMMAND \x3d \x22COMMAND\x22;\ngoog.dom.TagName.DATA \x3d \x22DATA\x22;\ngoog.dom.TagName.DATALIST \x3d \x22DATALIST\x22;\ngoog.dom.TagName.DD \x3d \x22DD\x22;\ngoog.dom.TagName.DEL \x3d \x22DEL\x22;\ngoog.dom.TagName.DETAILS \x3d \x22DETAILS\x22;\ngoog.dom.TagName.DFN \x3d \x22DFN\x22;\ngoog.dom.TagName.DIALOG \x3d \x22DIALOG\x22;\ngoog.dom.TagName.DIR \x3d \x22DIR\x22;\ngoog.dom.TagName.DIV \x3d \x22DIV\x22;\ngoog.dom.TagName.DL \x3d \x22DL\x22;\ngoog.dom.TagName.DT \x3d \x22DT\x22;\ngoog.dom.TagName.EM \x3d \x22EM\x22;\ngoog.dom.TagName.EMBED \x3d \x22EMBED\x22;\ngoog.dom.TagName.FIELDSET \x3d \x22FIELDSET\x22;\ngoog.dom.TagName.FIGCAPTION \x3d \x22FIGCAPTION\x22;\ngoog.dom.TagName.FIGURE \x3d \x22FIGURE\x22;\ngoog.dom.TagName.FONT \x3d \x22FONT\x22;\ngoog.dom.TagName.FOOTER \x3d \x22FOOTER\x22;\ngoog.dom.TagName.FORM \x3d \x22FORM\x22;\ngoog.dom.TagName.FRAME \x3d \x22FRAME\x22;\ngoog.dom.TagName.FRAMESET \x3d \x22FRAMESET\x22;\ngoog.dom.TagName.H1 \x3d \x22H1\x22;\ngoog.dom.TagName.H2 \x3d \x22H2\x22;\ngoog.dom.TagName.H3 \x3d \x22H3\x22;\ngoog.dom.TagName.H4 \x3d \x22H4\x22;\ngoog.dom.TagName.H5 \x3d \x22H5\x22;\ngoog.dom.TagName.H6 \x3d \x22H6\x22;\ngoog.dom.TagName.HEAD \x3d \x22HEAD\x22;\ngoog.dom.TagName.HEADER \x3d \x22HEADER\x22;\ngoog.dom.TagName.HGROUP \x3d \x22HGROUP\x22;\ngoog.dom.TagName.HR \x3d \x22HR\x22;\ngoog.dom.TagName.HTML \x3d \x22HTML\x22;\ngoog.dom.TagName.I \x3d \x22I\x22;\ngoog.dom.TagName.IFRAME \x3d \x22IFRAME\x22;\ngoog.dom.TagName.IMG \x3d \x22IMG\x22;\ngoog.dom.TagName.INPUT \x3d \x22INPUT\x22;\ngoog.dom.TagName.INS \x3d \x22INS\x22;\ngoog.dom.TagName.ISINDEX \x3d \x22ISINDEX\x22;\ngoog.dom.TagName.KBD \x3d \x22KBD\x22;\ngoog.dom.TagName.KEYGEN \x3d \x22KEYGEN\x22;\ngoog.dom.TagName.LABEL \x3d \x22LABEL\x22;\ngoog.dom.TagName.LEGEND \x3d \x22LEGEND\x22;\ngoog.dom.TagName.LI \x3d \x22LI\x22;\ngoog.dom.TagName.LINK \x3d \x22LINK\x22;\ngoog.dom.TagName.MAIN \x3d \x22MAIN\x22;\ngoog.dom.TagName.MAP \x3d \x22MAP\x22;\ngoog.dom.TagName.MARK \x3d \x22MARK\x22;\ngoog.dom.TagName.MATH \x3d \x22MATH\x22;\ngoog.dom.TagName.MENU \x3d \x22MENU\x22;\ngoog.dom.TagName.MENUITEM \x3d \x22MENUITEM\x22;\ngoog.dom.TagName.META \x3d \x22META\x22;\ngoog.dom.TagName.METER \x3d \x22METER\x22;\ngoog.dom.TagName.NAV \x3d \x22NAV\x22;\ngoog.dom.TagName.NOFRAMES \x3d \x22NOFRAMES\x22;\ngoog.dom.TagName.NOSCRIPT \x3d \x22NOSCRIPT\x22;\ngoog.dom.TagName.OBJECT \x3d \x22OBJECT\x22;\ngoog.dom.TagName.OL \x3d \x22OL\x22;\ngoog.dom.TagName.OPTGROUP \x3d \x22OPTGROUP\x22;\ngoog.dom.TagName.OPTION \x3d \x22OPTION\x22;\ngoog.dom.TagName.OUTPUT \x3d \x22OUTPUT\x22;\ngoog.dom.TagName.P \x3d \x22P\x22;\ngoog.dom.TagName.PARAM \x3d \x22PARAM\x22;\ngoog.dom.TagName.PICTURE \x3d \x22PICTURE\x22;\ngoog.dom.TagName.PRE \x3d \x22PRE\x22;\ngoog.dom.TagName.PROGRESS \x3d \x22PROGRESS\x22;\ngoog.dom.TagName.Q \x3d \x22Q\x22;\ngoog.dom.TagName.RP \x3d \x22RP\x22;\ngoog.dom.TagName.RT \x3d \x22RT\x22;\ngoog.dom.TagName.RTC \x3d \x22RTC\x22;\ngoog.dom.TagName.RUBY \x3d \x22RUBY\x22;\ngoog.dom.TagName.S \x3d \x22S\x22;\ngoog.dom.TagName.SAMP \x3d \x22SAMP\x22;\ngoog.dom.TagName.SCRIPT \x3d \x22SCRIPT\x22;\ngoog.dom.TagName.SECTION \x3d \x22SECTION\x22;\ngoog.dom.TagName.SELECT \x3d \x22SELECT\x22;\ngoog.dom.TagName.SMALL \x3d \x22SMALL\x22;\ngoog.dom.TagName.SOURCE \x3d \x22SOURCE\x22;\ngoog.dom.TagName.SPAN \x3d \x22SPAN\x22;\ngoog.dom.TagName.STRIKE \x3d \x22STRIKE\x22;\ngoog.dom.TagName.STRONG \x3d \x22STRONG\x22;\ngoog.dom.TagName.STYLE \x3d \x22STYLE\x22;\ngoog.dom.TagName.SUB \x3d \x22SUB\x22;\ngoog.dom.TagName.SUMMARY \x3d \x22SUMMARY\x22;\ngoog.dom.TagName.SUP \x3d \x22SUP\x22;\ngoog.dom.TagName.SVG \x3d \x22SVG\x22;\ngoog.dom.TagName.TABLE \x3d \x22TABLE\x22;\ngoog.dom.TagName.TBODY \x3d \x22TBODY\x22;\ngoog.dom.TagName.TD \x3d \x22TD\x22;\ngoog.dom.TagName.TEMPLATE \x3d \x22TEMPLATE\x22;\ngoog.dom.TagName.TEXTAREA \x3d \x22TEXTAREA\x22;\ngoog.dom.TagName.TFOOT \x3d \x22TFOOT\x22;\ngoog.dom.TagName.TH \x3d \x22TH\x22;\ngoog.dom.TagName.THEAD \x3d \x22THEAD\x22;\ngoog.dom.TagName.TIME \x3d \x22TIME\x22;\ngoog.dom.TagName.TITLE \x3d \x22TITLE\x22;\ngoog.dom.TagName.TR \x3d \x22TR\x22;\ngoog.dom.TagName.TRACK \x3d \x22TRACK\x22;\ngoog.dom.TagName.TT \x3d \x22TT\x22;\ngoog.dom.TagName.U \x3d \x22U\x22;\ngoog.dom.TagName.UL \x3d \x22UL\x22;\ngoog.dom.TagName.VAR \x3d \x22VAR\x22;\ngoog.dom.TagName.VIDEO \x3d \x22VIDEO\x22;\ngoog.dom.TagName.WBR \x3d \x22WBR\x22;\n");
SHADOW_ENV.evalLoad("goog.array.array.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.array\x22);\n  goog.module.declareLegacyNamespace();\n  const asserts \x3d goog.require(\x22goog.asserts\x22);\n  goog.NATIVE_ARRAY_PROTOTYPES \x3d goog.define(\x22goog.NATIVE_ARRAY_PROTOTYPES\x22, goog.TRUSTED_SITE);\n  const ASSUME_NATIVE_FUNCTIONS \x3d goog.define(\x22goog.array.ASSUME_NATIVE_FUNCTIONS\x22, goog.FEATURESET_YEAR \x3e 2012);\n  exports.ASSUME_NATIVE_FUNCTIONS \x3d ASSUME_NATIVE_FUNCTIONS;\n  function peek(array) {\n    return array[array.length - 1];\n  }\n  exports.peek \x3d peek;\n  exports.last \x3d peek;\n  const indexOf \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.indexOf) ? function(arr, obj, opt_fromIndex) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.indexOf.call(arr, obj, opt_fromIndex);\n  } : function(arr, obj, opt_fromIndex) {\n    const fromIndex \x3d opt_fromIndex \x3d\x3d null ? 0 : opt_fromIndex \x3c 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;\n    if (typeof arr \x3d\x3d\x3d \x22string\x22) {\n      if (typeof obj !\x3d\x3d \x22string\x22 || obj.length !\x3d 1) {\n        return -1;\n      }\n      return arr.indexOf(obj, fromIndex);\n    }\n    for (let i \x3d fromIndex; i \x3c arr.length; i++) {\n      if (i in arr \x26\x26 arr[i] \x3d\x3d\x3d obj) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  exports.indexOf \x3d indexOf;\n  const lastIndexOf \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.lastIndexOf) ? function(arr, obj, opt_fromIndex) {\n    asserts.assert(arr.length !\x3d null);\n    const fromIndex \x3d opt_fromIndex \x3d\x3d null ? arr.length - 1 : opt_fromIndex;\n    return Array.prototype.lastIndexOf.call(arr, obj, fromIndex);\n  } : function(arr, obj, opt_fromIndex) {\n    let fromIndex \x3d opt_fromIndex \x3d\x3d null ? arr.length - 1 : opt_fromIndex;\n    if (fromIndex \x3c 0) {\n      fromIndex \x3d Math.max(0, arr.length + fromIndex);\n    }\n    if (typeof arr \x3d\x3d\x3d \x22string\x22) {\n      if (typeof obj !\x3d\x3d \x22string\x22 || obj.length !\x3d 1) {\n        return -1;\n      }\n      return arr.lastIndexOf(obj, fromIndex);\n    }\n    for (let i \x3d fromIndex; i \x3e\x3d 0; i--) {\n      if (i in arr \x26\x26 arr[i] \x3d\x3d\x3d obj) {\n        return i;\n      }\n    }\n    return -1;\n  };\n  exports.lastIndexOf \x3d lastIndexOf;\n  const forEach \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.forEach) ? function(arr, f, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    Array.prototype.forEach.call(arr, f, opt_obj);\n  } : function(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2) {\n        f.call(opt_obj, arr2[i], i, arr);\n      }\n    }\n  };\n  exports.forEach \x3d forEach;\n  function forEachRight(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d l - 1; i \x3e\x3d 0; --i) {\n      if (i in arr2) {\n        f.call(opt_obj, arr2[i], i, arr);\n      }\n    }\n  }\n  exports.forEachRight \x3d forEachRight;\n  const filter \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.filter) ? function(arr, f, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.filter.call(arr, f, opt_obj);\n  } : function(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const res \x3d [];\n    let resLength \x3d 0;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2) {\n        const val \x3d arr2[i];\n        if (f.call(opt_obj, val, i, arr)) {\n          res[resLength++] \x3d val;\n        }\n      }\n    }\n    return res;\n  };\n  exports.filter \x3d filter;\n  const map \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.map) ? function(arr, f, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.map.call(arr, f, opt_obj);\n  } : function(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const res \x3d new Array(l);\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2) {\n        res[i] \x3d f.call(opt_obj, arr2[i], i, arr);\n      }\n    }\n    return res;\n  };\n  exports.map \x3d map;\n  const reduce \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduce) ? function(arr, f, val, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    if (opt_obj) {\n      f \x3d goog.bind(f, opt_obj);\n    }\n    return Array.prototype.reduce.call(arr, f, val);\n  } : function(arr, f, val, opt_obj) {\n    let rval \x3d val;\n    forEach(arr, function(val, index) {\n      rval \x3d f.call(opt_obj, rval, val, index, arr);\n    });\n    return rval;\n  };\n  exports.reduce \x3d reduce;\n  const reduceRight \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.reduceRight) ? function(arr, f, val, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    asserts.assert(f !\x3d null);\n    if (opt_obj) {\n      f \x3d goog.bind(f, opt_obj);\n    }\n    return Array.prototype.reduceRight.call(arr, f, val);\n  } : function(arr, f, val, opt_obj) {\n    let rval \x3d val;\n    forEachRight(arr, function(val, index) {\n      rval \x3d f.call(opt_obj, rval, val, index, arr);\n    });\n    return rval;\n  };\n  exports.reduceRight \x3d reduceRight;\n  const some \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.some) ? function(arr, f, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.some.call(arr, f, opt_obj);\n  } : function(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2 \x26\x26 f.call(opt_obj, arr2[i], i, arr)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  exports.some \x3d some;\n  const every \x3d goog.NATIVE_ARRAY_PROTOTYPES \x26\x26 (ASSUME_NATIVE_FUNCTIONS || Array.prototype.every) ? function(arr, f, opt_obj) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.every.call(arr, f, opt_obj);\n  } : function(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2 \x26\x26 !f.call(opt_obj, arr2[i], i, arr)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  exports.every \x3d every;\n  function count(arr, f, opt_obj) {\n    let count \x3d 0;\n    forEach(arr, function(element, index, arr) {\n      if (f.call(opt_obj, element, index, arr)) {\n        ++count;\n      }\n    }, opt_obj);\n    return count;\n  }\n  exports.count \x3d count;\n  function find(arr, f, opt_obj) {\n    const i \x3d findIndex(arr, f, opt_obj);\n    return i \x3c 0 ? null : typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.charAt(i) : arr[i];\n  }\n  exports.find \x3d find;\n  function findIndex(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (i in arr2 \x26\x26 f.call(opt_obj, arr2[i], i, arr)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  exports.findIndex \x3d findIndex;\n  function findRight(arr, f, opt_obj) {\n    const i \x3d findIndexRight(arr, f, opt_obj);\n    return i \x3c 0 ? null : typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.charAt(i) : arr[i];\n  }\n  exports.findRight \x3d findRight;\n  function findIndexRight(arr, f, opt_obj) {\n    const l \x3d arr.length;\n    const arr2 \x3d typeof arr \x3d\x3d\x3d \x22string\x22 ? arr.split(\x22\x22) : arr;\n    for (let i \x3d l - 1; i \x3e\x3d 0; i--) {\n      if (i in arr2 \x26\x26 f.call(opt_obj, arr2[i], i, arr)) {\n        return i;\n      }\n    }\n    return -1;\n  }\n  exports.findIndexRight \x3d findIndexRight;\n  function contains(arr, obj) {\n    return indexOf(arr, obj) \x3e\x3d 0;\n  }\n  exports.contains \x3d contains;\n  function isEmpty(arr) {\n    return arr.length \x3d\x3d 0;\n  }\n  exports.isEmpty \x3d isEmpty;\n  function clear(arr) {\n    if (!Array.isArray(arr)) {\n      for (let i \x3d arr.length - 1; i \x3e\x3d 0; i--) {\n        delete arr[i];\n      }\n    }\n    arr.length \x3d 0;\n  }\n  exports.clear \x3d clear;\n  function insert(arr, obj) {\n    if (!contains(arr, obj)) {\n      arr.push(obj);\n    }\n  }\n  exports.insert \x3d insert;\n  function insertAt(arr, obj, opt_i) {\n    splice(arr, opt_i, 0, obj);\n  }\n  exports.insertAt \x3d insertAt;\n  function insertArrayAt(arr, elementsToAdd, opt_i) {\n    goog.partial(splice, arr, opt_i, 0).apply(null, elementsToAdd);\n  }\n  exports.insertArrayAt \x3d insertArrayAt;\n  function insertBefore(arr, obj, opt_obj2) {\n    let i;\n    if (arguments.length \x3d\x3d 2 || (i \x3d indexOf(arr, opt_obj2)) \x3c 0) {\n      arr.push(obj);\n    } else {\n      insertAt(arr, obj, i);\n    }\n  }\n  exports.insertBefore \x3d insertBefore;\n  function remove(arr, obj) {\n    const i \x3d indexOf(arr, obj);\n    let rv;\n    if (rv \x3d i \x3e\x3d 0) {\n      removeAt(arr, i);\n    }\n    return rv;\n  }\n  exports.remove \x3d remove;\n  function removeLast(arr, obj) {\n    const i \x3d lastIndexOf(arr, obj);\n    if (i \x3e\x3d 0) {\n      removeAt(arr, i);\n      return true;\n    }\n    return false;\n  }\n  exports.removeLast \x3d removeLast;\n  function removeAt(arr, i) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.splice.call(arr, i, 1).length \x3d\x3d 1;\n  }\n  exports.removeAt \x3d removeAt;\n  function removeIf(arr, f, opt_obj) {\n    const i \x3d findIndex(arr, f, opt_obj);\n    if (i \x3e\x3d 0) {\n      removeAt(arr, i);\n      return true;\n    }\n    return false;\n  }\n  exports.removeIf \x3d removeIf;\n  function removeAllIf(arr, f, opt_obj) {\n    let removedCount \x3d 0;\n    forEachRight(arr, function(val, index) {\n      if (f.call(opt_obj, val, index, arr)) {\n        if (removeAt(arr, index)) {\n          removedCount++;\n        }\n      }\n    });\n    return removedCount;\n  }\n  exports.removeAllIf \x3d removeAllIf;\n  function concat(var_args) {\n    return Array.prototype.concat.apply([], arguments);\n  }\n  exports.concat \x3d concat;\n  function join(var_args) {\n    return Array.prototype.concat.apply([], arguments);\n  }\n  exports.join \x3d join;\n  function toArray(object) {\n    const length \x3d object.length;\n    if (length \x3e 0) {\n      const rv \x3d new Array(length);\n      for (let i \x3d 0; i \x3c length; i++) {\n        rv[i] \x3d object[i];\n      }\n      return rv;\n    }\n    return [];\n  }\n  exports.toArray \x3d toArray;\n  const clone \x3d toArray;\n  exports.clone \x3d clone;\n  function extend(arr1, var_args) {\n    for (let i \x3d 1; i \x3c arguments.length; i++) {\n      const arr2 \x3d arguments[i];\n      if (goog.isArrayLike(arr2)) {\n        const len1 \x3d arr1.length || 0;\n        const len2 \x3d arr2.length || 0;\n        arr1.length \x3d len1 + len2;\n        for (let j \x3d 0; j \x3c len2; j++) {\n          arr1[len1 + j] \x3d arr2[j];\n        }\n      } else {\n        arr1.push(arr2);\n      }\n    }\n  }\n  exports.extend \x3d extend;\n  function splice(arr, index, howMany, var_args) {\n    asserts.assert(arr.length !\x3d null);\n    return Array.prototype.splice.apply(arr, slice(arguments, 1));\n  }\n  exports.splice \x3d splice;\n  function slice(arr, start, opt_end) {\n    asserts.assert(arr.length !\x3d null);\n    if (arguments.length \x3c\x3d 2) {\n      return Array.prototype.slice.call(arr, start);\n    } else {\n      return Array.prototype.slice.call(arr, start, opt_end);\n    }\n  }\n  exports.slice \x3d slice;\n  function removeDuplicates(arr, opt_rv, opt_hashFn) {\n    const returnArray \x3d opt_rv || arr;\n    const defaultHashFn \x3d function(item) {\n      return goog.isObject(item) ? \x22o\x22 + goog.getUid(item) : (typeof item).charAt(0) + item;\n    };\n    const hashFn \x3d opt_hashFn || defaultHashFn;\n    let cursorInsert \x3d 0;\n    let cursorRead \x3d 0;\n    const seen \x3d {};\n    while (cursorRead \x3c arr.length) {\n      const current \x3d arr[cursorRead++];\n      const key \x3d hashFn(current);\n      if (!Object.prototype.hasOwnProperty.call(seen, key)) {\n        seen[key] \x3d true;\n        returnArray[cursorInsert++] \x3d current;\n      }\n    }\n    returnArray.length \x3d cursorInsert;\n  }\n  exports.removeDuplicates \x3d removeDuplicates;\n  function binarySearch(arr, target, opt_compareFn) {\n    return binarySearch_(arr, opt_compareFn || defaultCompare, false, target);\n  }\n  exports.binarySearch \x3d binarySearch;\n  function binarySelect(arr, evaluator, opt_obj) {\n    return binarySearch_(arr, evaluator, true, undefined, opt_obj);\n  }\n  exports.binarySelect \x3d binarySelect;\n  function binarySearch_(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {\n    let left \x3d 0;\n    let right \x3d arr.length;\n    let found;\n    while (left \x3c right) {\n      const middle \x3d left + (right - left \x3e\x3e\x3e 1);\n      let compareResult;\n      if (isEvaluator) {\n        compareResult \x3d compareFn.call(opt_selfObj, arr[middle], middle, arr);\n      } else {\n        compareResult \x3d compareFn(opt_target, arr[middle]);\n      }\n      if (compareResult \x3e 0) {\n        left \x3d middle + 1;\n      } else {\n        right \x3d middle;\n        found \x3d !compareResult;\n      }\n    }\n    return found ? left : -left - 1;\n  }\n  function sort(arr, opt_compareFn) {\n    arr.sort(opt_compareFn || defaultCompare);\n  }\n  exports.sort \x3d sort;\n  function stableSort(arr, opt_compareFn) {\n    const compArr \x3d new Array(arr.length);\n    for (let i \x3d 0; i \x3c arr.length; i++) {\n      compArr[i] \x3d {index:i, value:arr[i]};\n    }\n    const valueCompareFn \x3d opt_compareFn || defaultCompare;\n    function stableCompareFn(obj1, obj2) {\n      return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;\n    }\n    sort(compArr, stableCompareFn);\n    for (let i \x3d 0; i \x3c arr.length; i++) {\n      arr[i] \x3d compArr[i].value;\n    }\n  }\n  exports.stableSort \x3d stableSort;\n  function sortByKey(arr, keyFn, opt_compareFn) {\n    const keyCompareFn \x3d opt_compareFn || defaultCompare;\n    sort(arr, function(a, b) {\n      return keyCompareFn(keyFn(a), keyFn(b));\n    });\n  }\n  exports.sortByKey \x3d sortByKey;\n  function sortObjectsByKey(arr, key, opt_compareFn) {\n    sortByKey(arr, function(obj) {\n      return obj[key];\n    }, opt_compareFn);\n  }\n  exports.sortObjectsByKey \x3d sortObjectsByKey;\n  function isSorted(arr, opt_compareFn, opt_strict) {\n    const compare \x3d opt_compareFn || defaultCompare;\n    for (let i \x3d 1; i \x3c arr.length; i++) {\n      const compareResult \x3d compare(arr[i - 1], arr[i]);\n      if (compareResult \x3e 0 || compareResult \x3d\x3d 0 \x26\x26 opt_strict) {\n        return false;\n      }\n    }\n    return true;\n  }\n  exports.isSorted \x3d isSorted;\n  function equals(arr1, arr2, opt_equalsFn) {\n    if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length !\x3d arr2.length) {\n      return false;\n    }\n    const l \x3d arr1.length;\n    const equalsFn \x3d opt_equalsFn || defaultCompareEquality;\n    for (let i \x3d 0; i \x3c l; i++) {\n      if (!equalsFn(arr1[i], arr2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  exports.equals \x3d equals;\n  function compare3(arr1, arr2, opt_compareFn) {\n    const compare \x3d opt_compareFn || defaultCompare;\n    const l \x3d Math.min(arr1.length, arr2.length);\n    for (let i \x3d 0; i \x3c l; i++) {\n      const result \x3d compare(arr1[i], arr2[i]);\n      if (result !\x3d 0) {\n        return result;\n      }\n    }\n    return defaultCompare(arr1.length, arr2.length);\n  }\n  exports.compare3 \x3d compare3;\n  function defaultCompare(a, b) {\n    return a \x3e b ? 1 : a \x3c b ? -1 : 0;\n  }\n  exports.defaultCompare \x3d defaultCompare;\n  function inverseDefaultCompare(a, b) {\n    return -defaultCompare(a, b);\n  }\n  exports.inverseDefaultCompare \x3d inverseDefaultCompare;\n  function defaultCompareEquality(a, b) {\n    return a \x3d\x3d\x3d b;\n  }\n  exports.defaultCompareEquality \x3d defaultCompareEquality;\n  function binaryInsert(array, value, opt_compareFn) {\n    const index \x3d binarySearch(array, value, opt_compareFn);\n    if (index \x3c 0) {\n      insertAt(array, value, -(index + 1));\n      return true;\n    }\n    return false;\n  }\n  exports.binaryInsert \x3d binaryInsert;\n  function binaryRemove(array, value, opt_compareFn) {\n    const index \x3d binarySearch(array, value, opt_compareFn);\n    return index \x3e\x3d 0 ? removeAt(array, index) : false;\n  }\n  exports.binaryRemove \x3d binaryRemove;\n  function bucket(array, sorter, opt_obj) {\n    const buckets \x3d {};\n    for (let i \x3d 0; i \x3c array.length; i++) {\n      const value \x3d array[i];\n      const key \x3d sorter.call(opt_obj, value, i, array);\n      if (key !\x3d\x3d undefined) {\n        const bucket \x3d buckets[key] || (buckets[key] \x3d []);\n        bucket.push(value);\n      }\n    }\n    return buckets;\n  }\n  exports.bucket \x3d bucket;\n  function bucketToMap(array, sorter) {\n    const buckets \x3d new Map();\n    for (let i \x3d 0; i \x3c array.length; i++) {\n      const value \x3d array[i];\n      const key \x3d sorter(value, i, array);\n      if (key !\x3d\x3d undefined) {\n        let bucket \x3d buckets.get(key);\n        if (!bucket) {\n          bucket \x3d [];\n          buckets.set(key, bucket);\n        }\n        bucket.push(value);\n      }\n    }\n    return buckets;\n  }\n  exports.bucketToMap \x3d bucketToMap;\n  function toObject(arr, keyFunc, opt_obj) {\n    const ret \x3d {};\n    forEach(arr, function(element, index) {\n      ret[keyFunc.call(opt_obj, element, index, arr)] \x3d element;\n    });\n    return ret;\n  }\n  exports.toObject \x3d toObject;\n  function toMap(arr, keyFunc) {\n    const map \x3d new Map();\n    for (let i \x3d 0; i \x3c arr.length; i++) {\n      const element \x3d arr[i];\n      map.set(keyFunc(element, i, arr), element);\n    }\n    return map;\n  }\n  exports.toMap \x3d toMap;\n  function range(startOrEnd, opt_end, opt_step) {\n    const array \x3d [];\n    let start \x3d 0;\n    let end \x3d startOrEnd;\n    const step \x3d opt_step || 1;\n    if (opt_end !\x3d\x3d undefined) {\n      start \x3d startOrEnd;\n      end \x3d opt_end;\n    }\n    if (step * (end - start) \x3c 0) {\n      return [];\n    }\n    if (step \x3e 0) {\n      for (let i \x3d start; i \x3c end; i +\x3d step) {\n        array.push(i);\n      }\n    } else {\n      for (let i \x3d start; i \x3e end; i +\x3d step) {\n        array.push(i);\n      }\n    }\n    return array;\n  }\n  exports.range \x3d range;\n  function repeat(value, n) {\n    const array \x3d [];\n    for (let i \x3d 0; i \x3c n; i++) {\n      array[i] \x3d value;\n    }\n    return array;\n  }\n  exports.repeat \x3d repeat;\n  function flatten(var_args) {\n    const CHUNK_SIZE \x3d 8192;\n    const result \x3d [];\n    for (let i \x3d 0; i \x3c arguments.length; i++) {\n      const element \x3d arguments[i];\n      if (Array.isArray(element)) {\n        for (let c \x3d 0; c \x3c element.length; c +\x3d CHUNK_SIZE) {\n          const chunk \x3d slice(element, c, c + CHUNK_SIZE);\n          const recurseResult \x3d flatten.apply(null, chunk);\n          for (let r \x3d 0; r \x3c recurseResult.length; r++) {\n            result.push(recurseResult[r]);\n          }\n        }\n      } else {\n        result.push(element);\n      }\n    }\n    return result;\n  }\n  exports.flatten \x3d flatten;\n  function rotate(array, n) {\n    asserts.assert(array.length !\x3d null);\n    if (array.length) {\n      n %\x3d array.length;\n      if (n \x3e 0) {\n        Array.prototype.unshift.apply(array, array.splice(-n, n));\n      } else if (n \x3c 0) {\n        Array.prototype.push.apply(array, array.splice(0, -n));\n      }\n    }\n    return array;\n  }\n  exports.rotate \x3d rotate;\n  function moveItem(arr, fromIndex, toIndex) {\n    asserts.assert(fromIndex \x3e\x3d 0 \x26\x26 fromIndex \x3c arr.length);\n    asserts.assert(toIndex \x3e\x3d 0 \x26\x26 toIndex \x3c arr.length);\n    const removedItems \x3d Array.prototype.splice.call(arr, fromIndex, 1);\n    Array.prototype.splice.call(arr, toIndex, 0, removedItems[0]);\n  }\n  exports.moveItem \x3d moveItem;\n  function zip(var_args) {\n    if (!arguments.length) {\n      return [];\n    }\n    const result \x3d [];\n    let minLen \x3d arguments[0].length;\n    for (let i \x3d 1; i \x3c arguments.length; i++) {\n      if (arguments[i].length \x3c minLen) {\n        minLen \x3d arguments[i].length;\n      }\n    }\n    for (let i \x3d 0; i \x3c minLen; i++) {\n      const value \x3d [];\n      for (let j \x3d 0; j \x3c arguments.length; j++) {\n        value.push(arguments[j][i]);\n      }\n      result.push(value);\n    }\n    return result;\n  }\n  exports.zip \x3d zip;\n  function shuffle(arr, opt_randFn) {\n    const randFn \x3d opt_randFn || Math.random;\n    for (let i \x3d arr.length - 1; i \x3e 0; i--) {\n      const j \x3d Math.floor(randFn() * (i + 1));\n      const tmp \x3d arr[i];\n      arr[i] \x3d arr[j];\n      arr[j] \x3d tmp;\n    }\n  }\n  exports.shuffle \x3d shuffle;\n  function copyByIndex(arr, index_arr) {\n    const result \x3d [];\n    forEach(index_arr, function(index) {\n      result.push(arr[index]);\n    });\n    return result;\n  }\n  exports.copyByIndex \x3d copyByIndex;\n  function concatMap(arr, f, opt_obj) {\n    return concat.apply([], map(arr, f, opt_obj));\n  }\n  exports.concatMap \x3d concatMap;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.labs.useragent.useragent.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.labs.userAgent\x22);\n  const USE_CLIENT_HINTS_OVERRIDE \x3d goog.define(\x22goog.labs.userAgent.USE_CLIENT_HINTS_OVERRIDE\x22, \x22\x22);\n  const USE_CLIENT_HINTS \x3d goog.define(\x22goog.labs.userAgent.USE_CLIENT_HINTS\x22, false);\n  exports.USE_CLIENT_HINTS \x3d (() \x3d\x3e {\n    const override \x3d USE_CLIENT_HINTS_OVERRIDE ? goog.getObjectByName(USE_CLIENT_HINTS_OVERRIDE) : null;\n    return override !\x3d null ? override : USE_CLIENT_HINTS;\n  })();\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.labs.useragent.util.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.labs.userAgent.util\x22);\n  goog.module.declareLegacyNamespace();\n  const {USE_CLIENT_HINTS} \x3d goog.require(\x22goog.labs.userAgent\x22);\n  const {caseInsensitiveContains, contains} \x3d goog.require(\x22goog.string.internal\x22);\n  const ASSUME_CLIENT_HINTS_SUPPORT \x3d false;\n  function getNativeUserAgentString() {\n    const navigator \x3d getNavigator();\n    if (navigator) {\n      const userAgent \x3d navigator.userAgent;\n      if (userAgent) {\n        return userAgent;\n      }\n    }\n    return \x22\x22;\n  }\n  function getNativeUserAgentData() {\n    if (!USE_CLIENT_HINTS) {\n      return null;\n    }\n    const navigator \x3d getNavigator();\n    if (navigator) {\n      return navigator.userAgentData || null;\n    }\n    return null;\n  }\n  function getNavigator() {\n    return goog.global.navigator;\n  }\n  let userAgentInternal \x3d getNativeUserAgentString();\n  let userAgentDataInternal \x3d getNativeUserAgentData();\n  function setUserAgent(userAgent \x3d undefined) {\n    userAgentInternal \x3d typeof userAgent \x3d\x3d\x3d \x22string\x22 ? userAgent : getNativeUserAgentString();\n  }\n  function getUserAgent() {\n    return userAgentInternal;\n  }\n  function setUserAgentData(userAgentData) {\n    userAgentDataInternal \x3d userAgentData;\n  }\n  function resetUserAgentData() {\n    userAgentDataInternal \x3d getNativeUserAgentData();\n  }\n  function getUserAgentData() {\n    return userAgentDataInternal;\n  }\n  function matchUserAgentDataBrand(str) {\n    const data \x3d getUserAgentData();\n    if (!data) {\n      return false;\n    }\n    return data.brands.some(({brand}) \x3d\x3e brand \x26\x26 contains(brand, str));\n  }\n  function matchUserAgent(str) {\n    const userAgent \x3d getUserAgent();\n    return contains(userAgent, str);\n  }\n  function matchUserAgentIgnoreCase(str) {\n    const userAgent \x3d getUserAgent();\n    return caseInsensitiveContains(userAgent, str);\n  }\n  function extractVersionTuples(userAgent) {\n    const versionRegExp \x3d new RegExp(\x22(\\\\w[\\\\w ]+)\x22 + \x22/\x22 + \x22([^\\\\s]+)\x22 + \x22\\\\s*\x22 + \x22(?:\\\\((.*?)\\\\))?\x22, \x22g\x22);\n    const data \x3d [];\n    let match;\n    while (match \x3d versionRegExp.exec(userAgent)) {\n      data.push([match[1], match[2], match[3] || undefined]);\n    }\n    return data;\n  }\n  exports \x3d {ASSUME_CLIENT_HINTS_SUPPORT, extractVersionTuples, getNativeUserAgentString, getUserAgent, getUserAgentData, matchUserAgent, matchUserAgentDataBrand, matchUserAgentIgnoreCase, resetUserAgentData, setUserAgent, setUserAgentData,};\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.labs.useragent.browser.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.labs.userAgent.browser\x22);\n  goog.module.declareLegacyNamespace();\n  const googArray \x3d goog.require(\x22goog.array\x22);\n  const googObject \x3d goog.require(\x22goog.object\x22);\n  const util \x3d goog.require(\x22goog.labs.userAgent.util\x22);\n  const {compareVersions} \x3d goog.require(\x22goog.string.internal\x22);\n  function useUserAgentBrand() {\n    const userAgentData \x3d util.getUserAgentData();\n    return !!userAgentData \x26\x26 userAgentData.brands.length \x3e 0;\n  }\n  function matchOpera() {\n    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {\n      return false;\n    }\n    return util.matchUserAgent(\x22Opera\x22);\n  }\n  function matchIE() {\n    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {\n      return false;\n    }\n    return util.matchUserAgent(\x22Trident\x22) || util.matchUserAgent(\x22MSIE\x22);\n  }\n  function matchEdgeHtml() {\n    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {\n      return false;\n    }\n    return util.matchUserAgent(\x22Edge\x22);\n  }\n  function matchEdgeChromium() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Edge\x22);\n    }\n    return util.matchUserAgent(\x22Edg/\x22);\n  }\n  function matchOperaChromium() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Opera\x22);\n    }\n    return util.matchUserAgent(\x22OPR\x22);\n  }\n  function matchFirefox() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Firefox\x22);\n    }\n    return util.matchUserAgent(\x22Firefox\x22) || util.matchUserAgent(\x22FxiOS\x22);\n  }\n  function matchSafari() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Safari\x22);\n    }\n    return util.matchUserAgent(\x22Safari\x22) \x26\x26 !(matchChrome() || matchCoast() || matchOpera() || matchEdgeHtml() || matchEdgeChromium() || matchOperaChromium() || matchFirefox() || isSilk() || util.matchUserAgent(\x22Android\x22));\n  }\n  function matchCoast() {\n    if (util.ASSUME_CLIENT_HINTS_SUPPORT || util.getUserAgentData()) {\n      return false;\n    }\n    return util.matchUserAgent(\x22Coast\x22);\n  }\n  function matchIosWebview() {\n    return (util.matchUserAgent(\x22iPad\x22) || util.matchUserAgent(\x22iPhone\x22)) \x26\x26 !matchSafari() \x26\x26 !matchChrome() \x26\x26 !matchCoast() \x26\x26 !matchFirefox() \x26\x26 util.matchUserAgent(\x22AppleWebKit\x22);\n  }\n  function matchChrome() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Chromium\x22);\n    }\n    return (util.matchUserAgent(\x22Chrome\x22) || util.matchUserAgent(\x22CriOS\x22)) \x26\x26 !matchEdgeHtml();\n  }\n  function matchAndroidBrowser() {\n    return util.matchUserAgent(\x22Android\x22) \x26\x26 !(isChrome() || isFirefox() || isOpera() || isSilk());\n  }\n  const isOpera \x3d matchOpera;\n  const isIE \x3d matchIE;\n  const isEdge \x3d matchEdgeHtml;\n  const isEdgeChromium \x3d matchEdgeChromium;\n  const isOperaChromium \x3d matchOperaChromium;\n  const isFirefox \x3d matchFirefox;\n  const isSafari \x3d matchSafari;\n  const isCoast \x3d matchCoast;\n  const isIosWebview \x3d matchIosWebview;\n  const isChrome \x3d matchChrome;\n  const isAndroidBrowser \x3d matchAndroidBrowser;\n  function isSilk() {\n    if (useUserAgentBrand()) {\n      return util.matchUserAgentDataBrand(\x22Silk\x22);\n    }\n    return util.matchUserAgent(\x22Silk\x22);\n  }\n  function getVersion() {\n    const userAgentString \x3d util.getUserAgent();\n    if (isIE()) {\n      return getIEVersion(userAgentString);\n    }\n    const versionTuples \x3d util.extractVersionTuples(userAgentString);\n    const versionMap \x3d {};\n    versionTuples.forEach(tuple \x3d\x3e {\n      const key \x3d tuple[0];\n      const value \x3d tuple[1];\n      versionMap[key] \x3d value;\n    });\n    const versionMapHasKey \x3d goog.partial(googObject.containsKey, versionMap);\n    function lookUpValueWithKeys(keys) {\n      const key \x3d googArray.find(keys, versionMapHasKey);\n      return versionMap[key] || \x22\x22;\n    }\n    if (isOpera()) {\n      return lookUpValueWithKeys([\x22Version\x22, \x22Opera\x22]);\n    }\n    if (isEdge()) {\n      return lookUpValueWithKeys([\x22Edge\x22]);\n    }\n    if (isEdgeChromium()) {\n      return lookUpValueWithKeys([\x22Edg\x22]);\n    }\n    if (isChrome()) {\n      return lookUpValueWithKeys([\x22Chrome\x22, \x22CriOS\x22, \x22HeadlessChrome\x22]);\n    }\n    const tuple \x3d versionTuples[2];\n    return tuple \x26\x26 tuple[1] || \x22\x22;\n  }\n  function isVersionOrHigher(version) {\n    return compareVersions(getVersion(), version) \x3e\x3d 0;\n  }\n  function getIEVersion(userAgent) {\n    const rv \x3d /rv: *([\\d\\.]*)/.exec(userAgent);\n    if (rv \x26\x26 rv[1]) {\n      return rv[1];\n    }\n    let version \x3d \x22\x22;\n    const msie \x3d /MSIE +([\\d\\.]+)/.exec(userAgent);\n    if (msie \x26\x26 msie[1]) {\n      const tridentVersion \x3d /Trident\\/(\\d.\\d)/.exec(userAgent);\n      if (msie[1] \x3d\x3d \x227.0\x22) {\n        if (tridentVersion \x26\x26 tridentVersion[1]) {\n          switch(tridentVersion[1]) {\n            case \x224.0\x22:\n              version \x3d \x228.0\x22;\n              break;\n            case \x225.0\x22:\n              version \x3d \x229.0\x22;\n              break;\n            case \x226.0\x22:\n              version \x3d \x2210.0\x22;\n              break;\n            case \x227.0\x22:\n              version \x3d \x2211.0\x22;\n              break;\n          }\n        } else {\n          version \x3d \x227.0\x22;\n        }\n      } else {\n        version \x3d msie[1];\n      }\n    }\n    return version;\n  }\n  exports \x3d {getVersion, isAndroidBrowser, isChrome, isCoast, isEdge, isEdgeChromium, isFirefox, isIE, isIosWebview, isOpera, isOperaChromium, isSafari, isSilk, isVersionOrHigher,};\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.dom.tags.js", true , "goog.provide(\x22goog.dom.tags\x22);\ngoog.require(\x22goog.object\x22);\ngoog.dom.tags.VOID_TAGS_ \x3d goog.object.createSet(\x22area\x22, \x22base\x22, \x22br\x22, \x22col\x22, \x22command\x22, \x22embed\x22, \x22hr\x22, \x22img\x22, \x22input\x22, \x22keygen\x22, \x22link\x22, \x22meta\x22, \x22param\x22, \x22source\x22, \x22track\x22, \x22wbr\x22);\ngoog.dom.tags.isVoidTag \x3d function(tagName) {\n  return goog.dom.tags.VOID_TAGS_[tagName] \x3d\x3d\x3d true;\n};\n");
SHADOW_ENV.evalLoad("goog.html.safehtml.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.html.SafeHtml\x22);\n  goog.module.declareLegacyNamespace();\n  const Const \x3d goog.require(\x22goog.string.Const\x22);\n  const Dir \x3d goog.require(\x22goog.i18n.bidi.Dir\x22);\n  const DirectionalString \x3d goog.require(\x22goog.i18n.bidi.DirectionalString\x22);\n  const SafeScript \x3d goog.require(\x22goog.html.SafeScript\x22);\n  const SafeStyle \x3d goog.require(\x22goog.html.SafeStyle\x22);\n  const SafeStyleSheet \x3d goog.require(\x22goog.html.SafeStyleSheet\x22);\n  const SafeUrl \x3d goog.require(\x22goog.html.SafeUrl\x22);\n  const TagName \x3d goog.require(\x22goog.dom.TagName\x22);\n  const TrustedResourceUrl \x3d goog.require(\x22goog.html.TrustedResourceUrl\x22);\n  const TypedString \x3d goog.require(\x22goog.string.TypedString\x22);\n  const asserts \x3d goog.require(\x22goog.asserts\x22);\n  const browser \x3d goog.require(\x22goog.labs.userAgent.browser\x22);\n  const googArray \x3d goog.require(\x22goog.array\x22);\n  const googObject \x3d goog.require(\x22goog.object\x22);\n  const internal \x3d goog.require(\x22goog.string.internal\x22);\n  const tags \x3d goog.require(\x22goog.dom.tags\x22);\n  const trustedtypes \x3d goog.require(\x22goog.html.trustedtypes\x22);\n  const CONSTRUCTOR_TOKEN_PRIVATE \x3d {};\n  class SafeHtml {\n    constructor(value, dir, token) {\n      this.privateDoNotAccessOrElseSafeHtmlWrappedValue_ \x3d token \x3d\x3d\x3d CONSTRUCTOR_TOKEN_PRIVATE ? value : \x22\x22;\n      this.dir_ \x3d dir;\n      this.implementsGoogI18nBidiDirectionalString \x3d true;\n      this.implementsGoogStringTypedString \x3d true;\n    }\n    getDirection() {\n      return this.dir_;\n    }\n    getTypedStringValue() {\n      return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\n    }\n    toString() {\n      return this.privateDoNotAccessOrElseSafeHtmlWrappedValue_.toString();\n    }\n    static unwrap(safeHtml) {\n      return SafeHtml.unwrapTrustedHTML(safeHtml).toString();\n    }\n    static unwrapTrustedHTML(safeHtml) {\n      if (safeHtml instanceof SafeHtml \x26\x26 safeHtml.constructor \x3d\x3d\x3d SafeHtml) {\n        return safeHtml.privateDoNotAccessOrElseSafeHtmlWrappedValue_;\n      } else {\n        asserts.fail(`expected object of type SafeHtml, got \x27${safeHtml}\x27 of type ` + goog.typeOf(safeHtml));\n        return \x22type_error:SafeHtml\x22;\n      }\n    }\n    static htmlEscape(textOrHtml) {\n      if (textOrHtml instanceof SafeHtml) {\n        return textOrHtml;\n      }\n      const textIsObject \x3d typeof textOrHtml \x3d\x3d \x22object\x22;\n      let dir \x3d null;\n      if (textIsObject \x26\x26 textOrHtml.implementsGoogI18nBidiDirectionalString) {\n        dir \x3d textOrHtml.getDirection();\n      }\n      let textAsString;\n      if (textIsObject \x26\x26 textOrHtml.implementsGoogStringTypedString) {\n        textAsString \x3d textOrHtml.getTypedStringValue();\n      } else {\n        textAsString \x3d String(textOrHtml);\n      }\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(internal.htmlEscape(textAsString), dir);\n    }\n    static htmlEscapePreservingNewlines(textOrHtml) {\n      if (textOrHtml instanceof SafeHtml) {\n        return textOrHtml;\n      }\n      const html \x3d SafeHtml.htmlEscape(textOrHtml);\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(internal.newLineToBr(SafeHtml.unwrap(html)), html.getDirection());\n    }\n    static htmlEscapePreservingNewlinesAndSpaces(textOrHtml) {\n      if (textOrHtml instanceof SafeHtml) {\n        return textOrHtml;\n      }\n      const html \x3d SafeHtml.htmlEscape(textOrHtml);\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(internal.whitespaceEscape(SafeHtml.unwrap(html)), html.getDirection());\n    }\n    static comment(text) {\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\x22\\x3c!--\x22 + internal.htmlEscape(text) + \x22--\\x3e\x22, null);\n    }\n    static create(tagName, attributes \x3d undefined, content \x3d undefined) {\n      SafeHtml.verifyTagName(String(tagName));\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(String(tagName), attributes, content);\n    }\n    static verifyTagName(tagName) {\n      if (!VALID_NAMES_IN_TAG.test(tagName)) {\n        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Invalid tag name \x3c${tagName}\x3e.` : \x22\x22);\n      }\n      if (tagName.toUpperCase() in NOT_ALLOWED_TAG_NAMES) {\n        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Tag name \x3c${tagName}\x3e is not allowed for SafeHtml.` : \x22\x22);\n      }\n    }\n    static createIframe(src \x3d undefined, srcdoc \x3d undefined, attributes \x3d undefined, content \x3d undefined) {\n      if (src) {\n        TrustedResourceUrl.unwrap(src);\n      }\n      const fixedAttributes \x3d {};\n      fixedAttributes[\x22src\x22] \x3d src || null;\n      fixedAttributes[\x22srcdoc\x22] \x3d srcdoc \x26\x26 SafeHtml.unwrap(srcdoc);\n      const defaultAttributes \x3d {\x22sandbox\x22:\x22\x22};\n      const combinedAttrs \x3d SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, attributes);\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22iframe\x22, combinedAttrs, content);\n    }\n    static createSandboxIframe(src \x3d undefined, srcdoc \x3d undefined, attributes \x3d undefined, content \x3d undefined) {\n      if (!SafeHtml.canUseSandboxIframe()) {\n        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? \x22The browser does not support sandboxed iframes.\x22 : \x22\x22);\n      }\n      const fixedAttributes \x3d {};\n      if (src) {\n        fixedAttributes[\x22src\x22] \x3d SafeUrl.unwrap(SafeUrl.sanitize(src));\n      } else {\n        fixedAttributes[\x22src\x22] \x3d null;\n      }\n      fixedAttributes[\x22srcdoc\x22] \x3d srcdoc || null;\n      fixedAttributes[\x22sandbox\x22] \x3d \x22\x22;\n      const combinedAttrs \x3d SafeHtml.combineAttributes(fixedAttributes, {}, attributes);\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22iframe\x22, combinedAttrs, content);\n    }\n    static canUseSandboxIframe() {\n      return goog.global[\x22HTMLIFrameElement\x22] \x26\x26 \x22sandbox\x22 in goog.global[\x22HTMLIFrameElement\x22].prototype;\n    }\n    static createScriptSrc(src, attributes \x3d undefined) {\n      TrustedResourceUrl.unwrap(src);\n      const fixedAttributes \x3d {\x22src\x22:src};\n      const defaultAttributes \x3d {};\n      const combinedAttrs \x3d SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, attributes);\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22script\x22, combinedAttrs);\n    }\n    static createScript(script, attributes \x3d undefined) {\n      for (let attr in attributes) {\n        if (Object.prototype.hasOwnProperty.call(attributes, attr)) {\n          const attrLower \x3d attr.toLowerCase();\n          if (attrLower \x3d\x3d \x22language\x22 || attrLower \x3d\x3d \x22src\x22 || attrLower \x3d\x3d \x22text\x22 || attrLower \x3d\x3d \x22type\x22) {\n            throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Cannot set \x22${attrLower}\x22 attribute` : \x22\x22);\n          }\n        }\n      }\n      let content \x3d \x22\x22;\n      script \x3d googArray.concat(script);\n      for (let i \x3d 0; i \x3c script.length; i++) {\n        content +\x3d SafeScript.unwrap(script[i]);\n      }\n      const htmlContent \x3d SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, Dir.NEUTRAL);\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22script\x22, attributes, htmlContent);\n    }\n    static createStyle(styleSheet, attributes \x3d undefined) {\n      const fixedAttributes \x3d {\x22type\x22:\x22text/css\x22};\n      const defaultAttributes \x3d {};\n      const combinedAttrs \x3d SafeHtml.combineAttributes(fixedAttributes, defaultAttributes, attributes);\n      let content \x3d \x22\x22;\n      styleSheet \x3d googArray.concat(styleSheet);\n      for (let i \x3d 0; i \x3c styleSheet.length; i++) {\n        content +\x3d SafeStyleSheet.unwrap(styleSheet[i]);\n      }\n      const htmlContent \x3d SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content, Dir.NEUTRAL);\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22style\x22, combinedAttrs, htmlContent);\n    }\n    static createMetaRefresh(url, secs \x3d undefined) {\n      let unwrappedUrl \x3d SafeUrl.unwrap(SafeUrl.sanitize(url));\n      if (browser.isIE() || browser.isEdge()) {\n        if (internal.contains(unwrappedUrl, \x22;\x22)) {\n          unwrappedUrl \x3d \x22\x27\x22 + unwrappedUrl.replace(/\x27/g, \x22%27\x22) + \x22\x27\x22;\n        }\n      }\n      const attributes \x3d {\x22http-equiv\x22:\x22refresh\x22, \x22content\x22:(secs || 0) + \x22; url\\x3d\x22 + unwrappedUrl,};\n      return SafeHtml.createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(\x22meta\x22, attributes);\n    }\n    static createWithDir(dir, tagName, attributes \x3d undefined, content \x3d undefined) {\n      const html \x3d SafeHtml.create(tagName, attributes, content);\n      html.dir_ \x3d dir;\n      return html;\n    }\n    static join(separator, parts) {\n      const separatorHtml \x3d SafeHtml.htmlEscape(separator);\n      let dir \x3d separatorHtml.getDirection();\n      const content \x3d [];\n      const addArgument \x3d argument \x3d\x3e {\n        if (Array.isArray(argument)) {\n          argument.forEach(addArgument);\n        } else {\n          const html \x3d SafeHtml.htmlEscape(argument);\n          content.push(SafeHtml.unwrap(html));\n          const htmlDir \x3d html.getDirection();\n          if (dir \x3d\x3d Dir.NEUTRAL) {\n            dir \x3d htmlDir;\n          } else if (htmlDir !\x3d Dir.NEUTRAL \x26\x26 dir !\x3d htmlDir) {\n            dir \x3d null;\n          }\n        }\n      };\n      parts.forEach(addArgument);\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(content.join(SafeHtml.unwrap(separatorHtml)), dir);\n    }\n    static concat(var_args) {\n      return SafeHtml.join(SafeHtml.EMPTY, Array.prototype.slice.call(arguments));\n    }\n    static concatWithDir(dir, var_args) {\n      const html \x3d SafeHtml.concat(Array.prototype.slice.call(arguments, 1));\n      html.dir_ \x3d dir;\n      return html;\n    }\n    static createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, dir) {\n      const policy \x3d trustedtypes.getPolicyPrivateDoNotAccessOrElse();\n      const trustedHtml \x3d policy ? policy.createHTML(html) : html;\n      return new SafeHtml(trustedHtml, dir, CONSTRUCTOR_TOKEN_PRIVATE);\n    }\n    static createSafeHtmlTagSecurityPrivateDoNotAccessOrElse(tagName, attributes \x3d undefined, content \x3d undefined) {\n      let dir \x3d null;\n      let result \x3d `\x3c${tagName}`;\n      result +\x3d SafeHtml.stringifyAttributes(tagName, attributes);\n      if (content \x3d\x3d null) {\n        content \x3d [];\n      } else if (!Array.isArray(content)) {\n        content \x3d [content];\n      }\n      if (tags.isVoidTag(tagName.toLowerCase())) {\n        asserts.assert(!content.length, `Void tag \x3c${tagName}\x3e does not allow content.`);\n        result +\x3d \x22\\x3e\x22;\n      } else {\n        const html \x3d SafeHtml.concat(content);\n        result +\x3d \x22\\x3e\x22 + SafeHtml.unwrap(html) + \x22\\x3c/\x22 + tagName + \x22\\x3e\x22;\n        dir \x3d html.getDirection();\n      }\n      const dirAttribute \x3d attributes \x26\x26 attributes[\x22dir\x22];\n      if (dirAttribute) {\n        if (/^(ltr|rtl|auto)$/i.test(dirAttribute)) {\n          dir \x3d Dir.NEUTRAL;\n        } else {\n          dir \x3d null;\n        }\n      }\n      return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(result, dir);\n    }\n    static stringifyAttributes(tagName, attributes \x3d undefined) {\n      let result \x3d \x22\x22;\n      if (attributes) {\n        for (let name in attributes) {\n          if (Object.prototype.hasOwnProperty.call(attributes, name)) {\n            if (!VALID_NAMES_IN_TAG.test(name)) {\n              throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Invalid attribute name \x22${name}\x22.` : \x22\x22);\n            }\n            const value \x3d attributes[name];\n            if (value \x3d\x3d null) {\n              continue;\n            }\n            result +\x3d \x22 \x22 + getAttrNameAndValue(tagName, name, value);\n          }\n        }\n      }\n      return result;\n    }\n    static combineAttributes(fixedAttributes, defaultAttributes, attributes \x3d undefined) {\n      const combinedAttributes \x3d {};\n      for (const name in fixedAttributes) {\n        if (Object.prototype.hasOwnProperty.call(fixedAttributes, name)) {\n          asserts.assert(name.toLowerCase() \x3d\x3d name, \x22Must be lower case\x22);\n          combinedAttributes[name] \x3d fixedAttributes[name];\n        }\n      }\n      for (const name in defaultAttributes) {\n        if (Object.prototype.hasOwnProperty.call(defaultAttributes, name)) {\n          asserts.assert(name.toLowerCase() \x3d\x3d name, \x22Must be lower case\x22);\n          combinedAttributes[name] \x3d defaultAttributes[name];\n        }\n      }\n      if (attributes) {\n        for (const name in attributes) {\n          if (Object.prototype.hasOwnProperty.call(attributes, name)) {\n            const nameLower \x3d name.toLowerCase();\n            if (nameLower in fixedAttributes) {\n              throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Cannot override \x22${nameLower}\x22 attribute, got \x22` + name + \x27\x22 with value \x22\x27 + attributes[name] + \x27\x22\x27 : \x22\x22);\n            }\n            if (nameLower in defaultAttributes) {\n              delete combinedAttributes[nameLower];\n            }\n            combinedAttributes[name] \x3d attributes[name];\n          }\n        }\n      }\n      return combinedAttributes;\n    }\n  }\n  SafeHtml.ENABLE_ERROR_MESSAGES \x3d goog.define(\x22goog.html.SafeHtml.ENABLE_ERROR_MESSAGES\x22, goog.DEBUG);\n  SafeHtml.SUPPORT_STYLE_ATTRIBUTE \x3d goog.define(\x22goog.html.SafeHtml.SUPPORT_STYLE_ATTRIBUTE\x22, true);\n  SafeHtml.TextOrHtml_;\n  SafeHtml.from \x3d SafeHtml.htmlEscape;\n  const VALID_NAMES_IN_TAG \x3d /^[a-zA-Z0-9-]+$/;\n  const URL_ATTRIBUTES \x3d googObject.createSet(\x22action\x22, \x22cite\x22, \x22data\x22, \x22formaction\x22, \x22href\x22, \x22manifest\x22, \x22poster\x22, \x22src\x22);\n  const NOT_ALLOWED_TAG_NAMES \x3d googObject.createSet(TagName.APPLET, TagName.BASE, TagName.EMBED, TagName.IFRAME, TagName.LINK, TagName.MATH, TagName.META, TagName.OBJECT, TagName.SCRIPT, TagName.STYLE, TagName.SVG, TagName.TEMPLATE);\n  SafeHtml.AttributeValue;\n  function getAttrNameAndValue(tagName, name, value) {\n    if (value instanceof Const) {\n      value \x3d Const.unwrap(value);\n    } else if (name.toLowerCase() \x3d\x3d \x22style\x22) {\n      if (SafeHtml.SUPPORT_STYLE_ATTRIBUTE) {\n        value \x3d getStyleValue(value);\n      } else {\n        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? \x27Attribute \x22style\x22 not supported.\x27 : \x22\x22);\n      }\n    } else if (/^on/i.test(name)) {\n      throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Attribute \x22${name}` + \x27\x22 requires goog.string.Const value, \x22\x27 + value + \x27\x22 given.\x27 : \x22\x22);\n    } else if (name.toLowerCase() in URL_ATTRIBUTES) {\n      if (value instanceof TrustedResourceUrl) {\n        value \x3d TrustedResourceUrl.unwrap(value);\n      } else if (value instanceof SafeUrl) {\n        value \x3d SafeUrl.unwrap(value);\n      } else if (typeof value \x3d\x3d\x3d \x22string\x22) {\n        value \x3d SafeUrl.sanitize(value).getTypedStringValue();\n      } else {\n        throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? `Attribute \x22${name}\x22 on tag \x22${tagName}` + \x27\x22 requires goog.html.SafeUrl, goog.string.Const, or\x27 + \x27 string, value \x22\x27 + value + \x27\x22 given.\x27 : \x22\x22);\n      }\n    }\n    if (value.implementsGoogStringTypedString) {\n      value \x3d value.getTypedStringValue();\n    }\n    asserts.assert(typeof value \x3d\x3d\x3d \x22string\x22 || typeof value \x3d\x3d\x3d \x22number\x22, \x22String or number value expected, got \x22 + typeof value + \x22 with value: \x22 + value);\n    return `${name}\x3d\x22` + internal.htmlEscape(String(value)) + \x27\x22\x27;\n  }\n  function getStyleValue(value) {\n    if (!goog.isObject(value)) {\n      throw new Error(SafeHtml.ENABLE_ERROR_MESSAGES ? \x27The \x22style\x22 attribute requires goog.html.SafeStyle or map \x27 + \x22of style properties, \x22 + typeof value + \x22 given: \x22 + value : \x22\x22);\n    }\n    if (!(value instanceof SafeStyle)) {\n      value \x3d SafeStyle.create(value);\n    }\n    return SafeStyle.unwrap(value);\n  }\n  SafeHtml.DOCTYPE_HTML \x3d {valueOf:function() {\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\x22\\x3c!DOCTYPE html\\x3e\x22, Dir.NEUTRAL);\n  },}.valueOf();\n  SafeHtml.EMPTY \x3d new SafeHtml(goog.global.trustedTypes \x26\x26 goog.global.trustedTypes.emptyHTML || \x22\x22, Dir.NEUTRAL, CONSTRUCTOR_TOKEN_PRIVATE);\n  SafeHtml.BR \x3d {valueOf:function() {\n    return SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(\x22\\x3cbr\\x3e\x22, Dir.NEUTRAL);\n  },}.valueOf();\n  exports \x3d SafeHtml;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.html.uncheckedconversions.js", true , "goog.provide(\x22goog.html.uncheckedconversions\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.html.SafeHtml\x22);\ngoog.require(\x22goog.html.SafeScript\x22);\ngoog.require(\x22goog.html.SafeStyle\x22);\ngoog.require(\x22goog.html.SafeStyleSheet\x22);\ngoog.require(\x22goog.html.SafeUrl\x22);\ngoog.require(\x22goog.html.TrustedResourceUrl\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.internal\x22);\ngoog.requireType(\x22goog.i18n.bidi.Dir\x22);\ngoog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract \x3d function(justification, html, opt_dir) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.SafeHtml.createSafeHtmlSecurityPrivateDoNotAccessOrElse(html, opt_dir || null);\n};\ngoog.html.uncheckedconversions.safeScriptFromStringKnownToSatisfyTypeContract \x3d function(justification, script) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.SafeScript.createSafeScriptSecurityPrivateDoNotAccessOrElse(script);\n};\ngoog.html.uncheckedconversions.safeStyleFromStringKnownToSatisfyTypeContract \x3d function(justification, style) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.SafeStyle.createSafeStyleSecurityPrivateDoNotAccessOrElse(style);\n};\ngoog.html.uncheckedconversions.safeStyleSheetFromStringKnownToSatisfyTypeContract \x3d function(justification, styleSheet) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.SafeStyleSheet.createSafeStyleSheetSecurityPrivateDoNotAccessOrElse(styleSheet);\n};\ngoog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract \x3d function(justification, url) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.SafeUrl.createSafeUrlSecurityPrivateDoNotAccessOrElse(url);\n};\ngoog.html.uncheckedconversions.trustedResourceUrlFromStringKnownToSatisfyTypeContract \x3d function(justification, url) {\n  goog.asserts.assertString(goog.string.Const.unwrap(justification), \x22must provide justification\x22);\n  goog.asserts.assert(!goog.string.internal.isEmptyOrWhitespace(goog.string.Const.unwrap(justification)), \x22must provide non-empty justification\x22);\n  return goog.html.TrustedResourceUrl.createTrustedResourceUrlSecurityPrivateDoNotAccessOrElse(url);\n};\n");
SHADOW_ENV.evalLoad("goog.dom.safe.js", true , "goog.provide(\x22goog.dom.safe\x22);\ngoog.provide(\x22goog.dom.safe.InsertAdjacentHtmlPosition\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.dom.asserts\x22);\ngoog.require(\x22goog.functions\x22);\ngoog.require(\x22goog.html.SafeHtml\x22);\ngoog.require(\x22goog.html.SafeScript\x22);\ngoog.require(\x22goog.html.SafeStyle\x22);\ngoog.require(\x22goog.html.SafeUrl\x22);\ngoog.require(\x22goog.html.TrustedResourceUrl\x22);\ngoog.require(\x22goog.html.uncheckedconversions\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.internal\x22);\ngoog.dom.safe.InsertAdjacentHtmlPosition \x3d {AFTERBEGIN:\x22afterbegin\x22, AFTEREND:\x22afterend\x22, BEFOREBEGIN:\x22beforebegin\x22, BEFOREEND:\x22beforeend\x22};\ngoog.dom.safe.insertAdjacentHtml \x3d function(node, position, html) {\n  node.insertAdjacentHTML(position, goog.html.SafeHtml.unwrapTrustedHTML(html));\n};\ngoog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_ \x3d {\x22MATH\x22:true, \x22SCRIPT\x22:true, \x22STYLE\x22:true, \x22SVG\x22:true, \x22TEMPLATE\x22:true};\ngoog.dom.safe.isInnerHtmlCleanupRecursive_ \x3d goog.functions.cacheReturnValue(function() {\n  if (goog.DEBUG \x26\x26 typeof document \x3d\x3d\x3d \x22undefined\x22) {\n    return false;\n  }\n  var div \x3d document.createElement(\x22div\x22);\n  var childDiv \x3d document.createElement(\x22div\x22);\n  childDiv.appendChild(document.createElement(\x22div\x22));\n  div.appendChild(childDiv);\n  if (goog.DEBUG \x26\x26 !div.firstChild) {\n    return false;\n  }\n  var innerChild \x3d div.firstChild.firstChild;\n  div.innerHTML \x3d goog.html.SafeHtml.unwrapTrustedHTML(goog.html.SafeHtml.EMPTY);\n  return !innerChild.parentElement;\n});\ngoog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse \x3d function(elem, html) {\n  if (goog.dom.safe.isInnerHtmlCleanupRecursive_()) {\n    while (elem.lastChild) {\n      elem.removeChild(elem.lastChild);\n    }\n  }\n  elem.innerHTML \x3d goog.html.SafeHtml.unwrapTrustedHTML(html);\n};\ngoog.dom.safe.setInnerHtml \x3d function(elem, html) {\n  if (goog.asserts.ENABLE_ASSERTS \x26\x26 elem.tagName) {\n    var tagName \x3d elem.tagName.toUpperCase();\n    if (goog.dom.safe.SET_INNER_HTML_DISALLOWED_TAGS_[tagName]) {\n      throw new Error(\x22goog.dom.safe.setInnerHtml cannot be used to set content of \x22 + elem.tagName + \x22.\x22);\n    }\n  }\n  goog.dom.safe.unsafeSetInnerHtmlDoNotUseOrElse(elem, html);\n};\ngoog.dom.safe.setInnerHtmlFromConstant \x3d function(element, constHtml) {\n  goog.dom.safe.setInnerHtml(element, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\x22Constant HTML to be immediatelly used.\x22), goog.string.Const.unwrap(constHtml)));\n};\ngoog.dom.safe.setOuterHtml \x3d function(elem, html) {\n  elem.outerHTML \x3d goog.html.SafeHtml.unwrapTrustedHTML(html);\n};\ngoog.dom.safe.setFormElementAction \x3d function(form, url) {\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLFormElement(form).action \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setButtonFormAction \x3d function(button, url) {\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLButtonElement(button).formAction \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setInputFormAction \x3d function(input, url) {\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  goog.dom.asserts.assertIsHTMLInputElement(input).formAction \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setStyle \x3d function(elem, style) {\n  elem.style.cssText \x3d goog.html.SafeStyle.unwrap(style);\n};\ngoog.dom.safe.documentWrite \x3d function(doc, html) {\n  doc.write(goog.html.SafeHtml.unwrapTrustedHTML(html));\n};\ngoog.dom.safe.setAnchorHref \x3d function(anchor, url) {\n  goog.dom.asserts.assertIsHTMLAnchorElement(anchor);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  anchor.href \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setImageSrc \x3d function(imageElement, url) {\n  goog.dom.asserts.assertIsHTMLImageElement(imageElement);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    var allowDataUrl \x3d /^data:image\\//i.test(url);\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);\n  }\n  imageElement.src \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setAudioSrc \x3d function(audioElement, url) {\n  goog.dom.asserts.assertIsHTMLAudioElement(audioElement);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    var allowDataUrl \x3d /^data:audio\\//i.test(url);\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);\n  }\n  audioElement.src \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setVideoSrc \x3d function(videoElement, url) {\n  goog.dom.asserts.assertIsHTMLVideoElement(videoElement);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    var allowDataUrl \x3d /^data:video\\//i.test(url);\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url, allowDataUrl);\n  }\n  videoElement.src \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.setEmbedSrc \x3d function(embed, url) {\n  goog.dom.asserts.assertIsHTMLEmbedElement(embed);\n  embed.src \x3d goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);\n};\ngoog.dom.safe.setFrameSrc \x3d function(frame, url) {\n  goog.dom.asserts.assertIsHTMLFrameElement(frame);\n  frame.src \x3d goog.html.TrustedResourceUrl.unwrap(url);\n};\ngoog.dom.safe.setIframeSrc \x3d function(iframe, url) {\n  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);\n  iframe.src \x3d goog.html.TrustedResourceUrl.unwrap(url);\n};\ngoog.dom.safe.setIframeSrcdoc \x3d function(iframe, html) {\n  goog.dom.asserts.assertIsHTMLIFrameElement(iframe);\n  iframe.srcdoc \x3d goog.html.SafeHtml.unwrapTrustedHTML(html);\n};\ngoog.dom.safe.setLinkHrefAndRel \x3d function(link, url, rel) {\n  goog.dom.asserts.assertIsHTMLLinkElement(link);\n  link.rel \x3d rel;\n  if (goog.string.internal.caseInsensitiveContains(rel, \x22stylesheet\x22)) {\n    goog.asserts.assert(url instanceof goog.html.TrustedResourceUrl, \x27URL must be TrustedResourceUrl because \x22rel\x22 contains \x22stylesheet\x22\x27);\n    link.href \x3d goog.html.TrustedResourceUrl.unwrap(url);\n    const win \x3d link.ownerDocument \x26\x26 link.ownerDocument.defaultView;\n    const nonce \x3d goog.dom.safe.getStyleNonce(win);\n    if (nonce) {\n      link.setAttribute(\x22nonce\x22, nonce);\n    }\n  } else if (url instanceof goog.html.TrustedResourceUrl) {\n    link.href \x3d goog.html.TrustedResourceUrl.unwrap(url);\n  } else if (url instanceof goog.html.SafeUrl) {\n    link.href \x3d goog.html.SafeUrl.unwrap(url);\n  } else {\n    link.href \x3d goog.html.SafeUrl.unwrap(goog.html.SafeUrl.sanitizeAssertUnchanged(url));\n  }\n};\ngoog.dom.safe.setObjectData \x3d function(object, url) {\n  goog.dom.asserts.assertIsHTMLObjectElement(object);\n  object.data \x3d goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);\n};\ngoog.dom.safe.setScriptSrc \x3d function(script, url) {\n  goog.dom.asserts.assertIsHTMLScriptElement(script);\n  script.src \x3d goog.html.TrustedResourceUrl.unwrapTrustedScriptURL(url);\n  goog.dom.safe.setNonceForScriptElement_(script);\n};\ngoog.dom.safe.setScriptContent \x3d function(script, content) {\n  goog.dom.asserts.assertIsHTMLScriptElement(script);\n  script.textContent \x3d goog.html.SafeScript.unwrapTrustedScript(content);\n  goog.dom.safe.setNonceForScriptElement_(script);\n};\ngoog.dom.safe.setNonceForScriptElement_ \x3d function(script) {\n  var win \x3d script.ownerDocument \x26\x26 script.ownerDocument.defaultView;\n  const nonce \x3d goog.dom.safe.getScriptNonce(win);\n  if (nonce) {\n    script.setAttribute(\x22nonce\x22, nonce);\n  }\n};\ngoog.dom.safe.setLocationHref \x3d function(loc, url) {\n  goog.dom.asserts.assertIsLocation(loc);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  loc.href \x3d goog.html.SafeUrl.unwrap(safeUrl);\n};\ngoog.dom.safe.assignLocation \x3d function(loc, url) {\n  goog.dom.asserts.assertIsLocation(loc);\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  loc.assign(goog.html.SafeUrl.unwrap(safeUrl));\n};\ngoog.dom.safe.replaceLocation \x3d function(loc, url) {\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  loc.replace(goog.html.SafeUrl.unwrap(safeUrl));\n};\ngoog.dom.safe.openInWindow \x3d function(url, opt_openerWin, opt_name, opt_specs) {\n  var safeUrl;\n  if (url instanceof goog.html.SafeUrl) {\n    safeUrl \x3d url;\n  } else {\n    safeUrl \x3d goog.html.SafeUrl.sanitizeAssertUnchanged(url);\n  }\n  var win \x3d opt_openerWin || goog.global;\n  var name \x3d opt_name instanceof goog.string.Const ? goog.string.Const.unwrap(opt_name) : opt_name || \x22\x22;\n  if (opt_specs !\x3d\x3d undefined) {\n    return win.open(goog.html.SafeUrl.unwrap(safeUrl), name, opt_specs);\n  } else {\n    return win.open(goog.html.SafeUrl.unwrap(safeUrl), name);\n  }\n};\ngoog.dom.safe.parseFromStringHtml \x3d function(parser, html) {\n  return goog.dom.safe.parseFromString(parser, html, \x22text/html\x22);\n};\ngoog.dom.safe.parseFromString \x3d function(parser, content, type) {\n  return parser.parseFromString(goog.html.SafeHtml.unwrapTrustedHTML(content), type);\n};\ngoog.dom.safe.createImageFromBlob \x3d function(blob) {\n  if (!/^image\\/.*/g.test(blob.type)) {\n    throw new Error(\x22goog.dom.safe.createImageFromBlob only accepts MIME type image/.*.\x22);\n  }\n  var objectUrl \x3d goog.global.URL.createObjectURL(blob);\n  var image \x3d new goog.global.Image();\n  image.onload \x3d function() {\n    goog.global.URL.revokeObjectURL(objectUrl);\n  };\n  goog.dom.safe.setImageSrc(image, goog.html.uncheckedconversions.safeUrlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\x22Image blob URL.\x22), objectUrl));\n  return image;\n};\ngoog.dom.safe.createContextualFragment \x3d function(range, html) {\n  return range.createContextualFragment(goog.html.SafeHtml.unwrapTrustedHTML(html));\n};\ngoog.dom.safe.getScriptNonce \x3d function(opt_window) {\n  return goog.dom.safe.getNonce_(\x22script[nonce]\x22, opt_window);\n};\ngoog.dom.safe.getStyleNonce \x3d function(opt_window) {\n  return goog.dom.safe.getNonce_(\x27style[nonce],link[rel\\x3d\x22stylesheet\x22][nonce]\x27, opt_window);\n};\ngoog.dom.safe.NONCE_PATTERN_ \x3d /^[\\w+/_-]+[\x3d]{0,2}$/;\ngoog.dom.safe.getNonce_ \x3d function(selector, win) {\n  const doc \x3d (win || goog.global).document;\n  if (!doc.querySelector) {\n    return \x22\x22;\n  }\n  let el \x3d doc.querySelector(selector);\n  if (el) {\n    const nonce \x3d el[\x22nonce\x22] || el.getAttribute(\x22nonce\x22);\n    if (nonce \x26\x26 goog.dom.safe.NONCE_PATTERN_.test(nonce)) {\n      return nonce;\n    }\n  }\n  return \x22\x22;\n};\n");
SHADOW_ENV.evalLoad("goog.string.string.js", true , "goog.provide(\x22goog.string\x22);\ngoog.provide(\x22goog.string.Unicode\x22);\ngoog.require(\x22goog.dom.safe\x22);\ngoog.require(\x22goog.html.uncheckedconversions\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.internal\x22);\ngoog.string.DETECT_DOUBLE_ESCAPING \x3d goog.define(\x22goog.string.DETECT_DOUBLE_ESCAPING\x22, false);\ngoog.string.FORCE_NON_DOM_HTML_UNESCAPING \x3d goog.define(\x22goog.string.FORCE_NON_DOM_HTML_UNESCAPING\x22, false);\ngoog.string.Unicode \x3d {NBSP:\x22\xa0\x22};\ngoog.string.startsWith \x3d goog.string.internal.startsWith;\ngoog.string.endsWith \x3d goog.string.internal.endsWith;\ngoog.string.caseInsensitiveStartsWith \x3d goog.string.internal.caseInsensitiveStartsWith;\ngoog.string.caseInsensitiveEndsWith \x3d goog.string.internal.caseInsensitiveEndsWith;\ngoog.string.caseInsensitiveEquals \x3d goog.string.internal.caseInsensitiveEquals;\ngoog.string.subs \x3d function(str, var_args) {\n  const splitParts \x3d str.split(\x22%s\x22);\n  let returnString \x3d \x22\x22;\n  const subsArguments \x3d Array.prototype.slice.call(arguments, 1);\n  while (subsArguments.length \x26\x26 splitParts.length \x3e 1) {\n    returnString +\x3d splitParts.shift() + subsArguments.shift();\n  }\n  return returnString + splitParts.join(\x22%s\x22);\n};\ngoog.string.collapseWhitespace \x3d function(str) {\n  return str.replace(/[\\s\\xa0]+/g, \x22 \x22).replace(/^\\s+|\\s+$/g, \x22\x22);\n};\ngoog.string.isEmptyOrWhitespace \x3d goog.string.internal.isEmptyOrWhitespace;\ngoog.string.isEmptyString \x3d function(str) {\n  return str.length \x3d\x3d 0;\n};\ngoog.string.isEmpty \x3d goog.string.isEmptyOrWhitespace;\ngoog.string.isEmptyOrWhitespaceSafe \x3d function(str) {\n  return goog.string.isEmptyOrWhitespace(goog.string.makeSafe(str));\n};\ngoog.string.isEmptySafe \x3d goog.string.isEmptyOrWhitespaceSafe;\ngoog.string.isBreakingWhitespace \x3d function(str) {\n  return !/[^\\t\\n\\r ]/.test(str);\n};\ngoog.string.isAlpha \x3d function(str) {\n  return !/[^a-zA-Z]/.test(str);\n};\ngoog.string.isNumeric \x3d function(str) {\n  return !/[^0-9]/.test(str);\n};\ngoog.string.isAlphaNumeric \x3d function(str) {\n  return !/[^a-zA-Z0-9]/.test(str);\n};\ngoog.string.isSpace \x3d function(ch) {\n  return ch \x3d\x3d \x22 \x22;\n};\ngoog.string.isUnicodeChar \x3d function(ch) {\n  return ch.length \x3d\x3d 1 \x26\x26 ch \x3e\x3d \x22 \x22 \x26\x26 ch \x3c\x3d \x22~\x22 || ch \x3e\x3d \x22\x80\x22 \x26\x26 ch \x3c\x3d \x22\ufffd\x22;\n};\ngoog.string.stripNewlines \x3d function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)+/g, \x22 \x22);\n};\ngoog.string.canonicalizeNewlines \x3d function(str) {\n  return str.replace(/(\\r\\n|\\r|\\n)/g, \x22\\n\x22);\n};\ngoog.string.normalizeWhitespace \x3d function(str) {\n  return str.replace(/\\xa0|\\s/g, \x22 \x22);\n};\ngoog.string.normalizeSpaces \x3d function(str) {\n  return str.replace(/\\xa0|[ \\t]+/g, \x22 \x22);\n};\ngoog.string.collapseBreakingSpaces \x3d function(str) {\n  return str.replace(/[\\t\\r\\n ]+/g, \x22 \x22).replace(/^[\\t\\r\\n ]+|[\\t\\r\\n ]+$/g, \x22\x22);\n};\ngoog.string.trim \x3d goog.string.internal.trim;\ngoog.string.trimLeft \x3d function(str) {\n  return str.replace(/^[\\s\\xa0]+/, \x22\x22);\n};\ngoog.string.trimRight \x3d function(str) {\n  return str.replace(/[\\s\\xa0]+$/, \x22\x22);\n};\ngoog.string.caseInsensitiveCompare \x3d goog.string.internal.caseInsensitiveCompare;\ngoog.string.numberAwareCompare_ \x3d function(str1, str2, tokenizerRegExp) {\n  if (str1 \x3d\x3d str2) {\n    return 0;\n  }\n  if (!str1) {\n    return -1;\n  }\n  if (!str2) {\n    return 1;\n  }\n  const tokens1 \x3d str1.toLowerCase().match(tokenizerRegExp);\n  const tokens2 \x3d str2.toLowerCase().match(tokenizerRegExp);\n  const count \x3d Math.min(tokens1.length, tokens2.length);\n  for (let i \x3d 0; i \x3c count; i++) {\n    const a \x3d tokens1[i];\n    const b \x3d tokens2[i];\n    if (a !\x3d b) {\n      const num1 \x3d parseInt(a, 10);\n      if (!isNaN(num1)) {\n        const num2 \x3d parseInt(b, 10);\n        if (!isNaN(num2) \x26\x26 num1 - num2) {\n          return num1 - num2;\n        }\n      }\n      return a \x3c b ? -1 : 1;\n    }\n  }\n  if (tokens1.length !\x3d tokens2.length) {\n    return tokens1.length - tokens2.length;\n  }\n  return str1 \x3c str2 ? -1 : 1;\n};\ngoog.string.intAwareCompare \x3d function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\D+/g);\n};\ngoog.string.floatAwareCompare \x3d function(str1, str2) {\n  return goog.string.numberAwareCompare_(str1, str2, /\\d+|\\.\\d+|\\D+/g);\n};\ngoog.string.numerateCompare \x3d goog.string.floatAwareCompare;\ngoog.string.urlEncode \x3d function(str) {\n  return encodeURIComponent(String(str));\n};\ngoog.string.urlDecode \x3d function(str) {\n  return decodeURIComponent(str.replace(/\\+/g, \x22 \x22));\n};\ngoog.string.newLineToBr \x3d goog.string.internal.newLineToBr;\ngoog.string.htmlEscape \x3d function(str, opt_isLikelyToContainHtmlChars) {\n  str \x3d goog.string.internal.htmlEscape(str, opt_isLikelyToContainHtmlChars);\n  if (goog.string.DETECT_DOUBLE_ESCAPING) {\n    str \x3d str.replace(goog.string.E_RE_, \x22\\x26#101;\x22);\n  }\n  return str;\n};\ngoog.string.E_RE_ \x3d /e/g;\ngoog.string.unescapeEntities \x3d function(str) {\n  if (goog.string.contains(str, \x22\\x26\x22)) {\n    if (!goog.string.FORCE_NON_DOM_HTML_UNESCAPING \x26\x26 \x22document\x22 in goog.global) {\n      return goog.string.unescapeEntitiesUsingDom_(str);\n    } else {\n      return goog.string.unescapePureXmlEntities_(str);\n    }\n  }\n  return str;\n};\ngoog.string.unescapeEntitiesWithDocument \x3d function(str, document) {\n  if (goog.string.contains(str, \x22\\x26\x22)) {\n    return goog.string.unescapeEntitiesUsingDom_(str, document);\n  }\n  return str;\n};\ngoog.string.unescapeEntitiesUsingDom_ \x3d function(str, opt_document) {\n  const seen \x3d {\x22\\x26amp;\x22:\x22\\x26\x22, \x22\\x26lt;\x22:\x22\\x3c\x22, \x22\\x26gt;\x22:\x22\\x3e\x22, \x22\\x26quot;\x22:\x27\x22\x27};\n  let div;\n  if (opt_document) {\n    div \x3d opt_document.createElement(\x22div\x22);\n  } else {\n    div \x3d goog.global.document.createElement(\x22div\x22);\n  }\n  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {\n    let value \x3d seen[s];\n    if (value) {\n      return value;\n    }\n    if (entity.charAt(0) \x3d\x3d \x22#\x22) {\n      const n \x3d Number(\x220\x22 + entity.substr(1));\n      if (!isNaN(n)) {\n        value \x3d String.fromCharCode(n);\n      }\n    }\n    if (!value) {\n      goog.dom.safe.setInnerHtml(div, goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\x22Single HTML entity.\x22), s + \x22 \x22));\n      value \x3d div.firstChild.nodeValue.slice(0, -1);\n    }\n    return seen[s] \x3d value;\n  });\n};\ngoog.string.unescapePureXmlEntities_ \x3d function(str) {\n  return str.replace(/\x26([^;]+);/g, function(s, entity) {\n    switch(entity) {\n      case \x22amp\x22:\n        return \x22\\x26\x22;\n      case \x22lt\x22:\n        return \x22\\x3c\x22;\n      case \x22gt\x22:\n        return \x22\\x3e\x22;\n      case \x22quot\x22:\n        return \x27\x22\x27;\n      default:\n        if (entity.charAt(0) \x3d\x3d \x22#\x22) {\n          const n \x3d Number(\x220\x22 + entity.substr(1));\n          if (!isNaN(n)) {\n            return String.fromCharCode(n);\n          }\n        }\n        return s;\n    }\n  });\n};\ngoog.string.HTML_ENTITY_PATTERN_ \x3d /\x26([^;\\s\x3c\x26]+);?/g;\ngoog.string.whitespaceEscape \x3d function(str, opt_xml) {\n  return goog.string.newLineToBr(str.replace(/  /g, \x22 \\x26#160;\x22), opt_xml);\n};\ngoog.string.preserveSpaces \x3d function(str) {\n  return str.replace(/(^|[\\n ]) /g, \x22$1\x22 + goog.string.Unicode.NBSP);\n};\ngoog.string.stripQuotes \x3d function(str, quoteChars) {\n  const length \x3d quoteChars.length;\n  for (let i \x3d 0; i \x3c length; i++) {\n    const quoteChar \x3d length \x3d\x3d 1 ? quoteChars : quoteChars.charAt(i);\n    if (str.charAt(0) \x3d\x3d quoteChar \x26\x26 str.charAt(str.length - 1) \x3d\x3d quoteChar) {\n      return str.substring(1, str.length - 1);\n    }\n  }\n  return str;\n};\ngoog.string.truncate \x3d function(str, chars, opt_protectEscapedCharacters) {\n  if (opt_protectEscapedCharacters) {\n    str \x3d goog.string.unescapeEntities(str);\n  }\n  if (str.length \x3e chars) {\n    str \x3d str.substring(0, chars - 3) + \x22...\x22;\n  }\n  if (opt_protectEscapedCharacters) {\n    str \x3d goog.string.htmlEscape(str);\n  }\n  return str;\n};\ngoog.string.truncateMiddle \x3d function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {\n  if (opt_protectEscapedCharacters) {\n    str \x3d goog.string.unescapeEntities(str);\n  }\n  if (opt_trailingChars \x26\x26 str.length \x3e chars) {\n    if (opt_trailingChars \x3e chars) {\n      opt_trailingChars \x3d chars;\n    }\n    const endPoint \x3d str.length - opt_trailingChars;\n    const startPoint \x3d chars - opt_trailingChars;\n    str \x3d str.substring(0, startPoint) + \x22...\x22 + str.substring(endPoint);\n  } else if (str.length \x3e chars) {\n    let half \x3d Math.floor(chars / 2);\n    const endPos \x3d str.length - half;\n    half +\x3d chars % 2;\n    str \x3d str.substring(0, half) + \x22...\x22 + str.substring(endPos);\n  }\n  if (opt_protectEscapedCharacters) {\n    str \x3d goog.string.htmlEscape(str);\n  }\n  return str;\n};\ngoog.string.specialEscapeChars_ \x3d {\x22\\x00\x22:\x22\\\\0\x22, \x22\\b\x22:\x22\\\\b\x22, \x22\\f\x22:\x22\\\\f\x22, \x22\\n\x22:\x22\\\\n\x22, \x22\\r\x22:\x22\\\\r\x22, \x22\\t\x22:\x22\\\\t\x22, \x22\\v\x22:\x22\\\\x0B\x22, \x27\x22\x27:\x27\\\\\x22\x27, \x22\\\\\x22:\x22\\\\\\\\\x22, \x22\\x3c\x22:\x22\\\\u003C\x22};\ngoog.string.jsEscapeCache_ \x3d {\x22\x27\x22:\x22\\\\\x27\x22};\ngoog.string.quote \x3d function(s) {\n  s \x3d String(s);\n  const sb \x3d [\x27\x22\x27];\n  for (let i \x3d 0; i \x3c s.length; i++) {\n    const ch \x3d s.charAt(i);\n    const cc \x3d ch.charCodeAt(0);\n    sb[i + 1] \x3d goog.string.specialEscapeChars_[ch] || (cc \x3e 31 \x26\x26 cc \x3c 127 ? ch : goog.string.escapeChar(ch));\n  }\n  sb.push(\x27\x22\x27);\n  return sb.join(\x22\x22);\n};\ngoog.string.escapeString \x3d function(str) {\n  const sb \x3d [];\n  for (let i \x3d 0; i \x3c str.length; i++) {\n    sb[i] \x3d goog.string.escapeChar(str.charAt(i));\n  }\n  return sb.join(\x22\x22);\n};\ngoog.string.escapeChar \x3d function(c) {\n  if (c in goog.string.jsEscapeCache_) {\n    return goog.string.jsEscapeCache_[c];\n  }\n  if (c in goog.string.specialEscapeChars_) {\n    return goog.string.jsEscapeCache_[c] \x3d goog.string.specialEscapeChars_[c];\n  }\n  let rv \x3d c;\n  const cc \x3d c.charCodeAt(0);\n  if (cc \x3e 31 \x26\x26 cc \x3c 127) {\n    rv \x3d c;\n  } else {\n    if (cc \x3c 256) {\n      rv \x3d \x22\\\\x\x22;\n      if (cc \x3c 16 || cc \x3e 256) {\n        rv +\x3d \x220\x22;\n      }\n    } else {\n      rv \x3d \x22\\\\u\x22;\n      if (cc \x3c 4096) {\n        rv +\x3d \x220\x22;\n      }\n    }\n    rv +\x3d cc.toString(16).toUpperCase();\n  }\n  return goog.string.jsEscapeCache_[c] \x3d rv;\n};\ngoog.string.contains \x3d goog.string.internal.contains;\ngoog.string.caseInsensitiveContains \x3d goog.string.internal.caseInsensitiveContains;\ngoog.string.countOf \x3d function(s, ss) {\n  return s \x26\x26 ss ? s.split(ss).length - 1 : 0;\n};\ngoog.string.removeAt \x3d function(s, index, stringLength) {\n  let resultStr \x3d s;\n  if (index \x3e\x3d 0 \x26\x26 index \x3c s.length \x26\x26 stringLength \x3e 0) {\n    resultStr \x3d s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);\n  }\n  return resultStr;\n};\ngoog.string.remove \x3d function(str, substr) {\n  return str.replace(substr, \x22\x22);\n};\ngoog.string.removeAll \x3d function(s, ss) {\n  const re \x3d new RegExp(goog.string.regExpEscape(ss), \x22g\x22);\n  return s.replace(re, \x22\x22);\n};\ngoog.string.replaceAll \x3d function(s, ss, replacement) {\n  const re \x3d new RegExp(goog.string.regExpEscape(ss), \x22g\x22);\n  return s.replace(re, replacement.replace(/\\$/g, \x22$$$$\x22));\n};\ngoog.string.regExpEscape \x3d function(s) {\n  return String(s).replace(/([-()\\[\\]{}+?*.$\\^|,:#\x3c!\\\\])/g, \x22\\\\$1\x22).replace(/\\x08/g, \x22\\\\x08\x22);\n};\ngoog.string.repeat \x3d String.prototype.repeat ? function(string, length) {\n  return string.repeat(length);\n} : function(string, length) {\n  return (new Array(length + 1)).join(string);\n};\ngoog.string.padNumber \x3d function(num, length, opt_precision) {\n  let s \x3d opt_precision !\x3d\x3d undefined ? num.toFixed(opt_precision) : String(num);\n  let index \x3d s.indexOf(\x22.\x22);\n  if (index \x3d\x3d\x3d -1) {\n    index \x3d s.length;\n  }\n  const sign \x3d s[0] \x3d\x3d\x3d \x22-\x22 ? \x22-\x22 : \x22\x22;\n  if (sign) {\n    s \x3d s.substring(1);\n  }\n  return sign + goog.string.repeat(\x220\x22, Math.max(0, length - index)) + s;\n};\ngoog.string.makeSafe \x3d function(obj) {\n  return obj \x3d\x3d null ? \x22\x22 : String(obj);\n};\ngoog.string.buildString \x3d function(var_args) {\n  return Array.prototype.join.call(arguments, \x22\x22);\n};\ngoog.string.getRandomString \x3d function() {\n  const x \x3d 2147483648;\n  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);\n};\ngoog.string.compareVersions \x3d goog.string.internal.compareVersions;\ngoog.string.hashCode \x3d function(str) {\n  let result \x3d 0;\n  for (let i \x3d 0; i \x3c str.length; ++i) {\n    result \x3d 31 * result + str.charCodeAt(i) \x3e\x3e\x3e 0;\n  }\n  return result;\n};\ngoog.string.uniqueStringCounter_ \x3d Math.random() * 2147483648 | 0;\ngoog.string.createUniqueString \x3d function() {\n  return \x22goog_\x22 + goog.string.uniqueStringCounter_++;\n};\ngoog.string.toNumber \x3d function(str) {\n  const num \x3d Number(str);\n  if (num \x3d\x3d 0 \x26\x26 goog.string.isEmptyOrWhitespace(str)) {\n    return NaN;\n  }\n  return num;\n};\ngoog.string.isLowerCamelCase \x3d function(str) {\n  return /^[a-z]+([A-Z][a-z]*)*$/.test(str);\n};\ngoog.string.isUpperCamelCase \x3d function(str) {\n  return /^([A-Z][a-z]*)+$/.test(str);\n};\ngoog.string.toCamelCase \x3d function(str) {\n  return String(str).replace(/\\-([a-z])/g, function(all, match) {\n    return match.toUpperCase();\n  });\n};\ngoog.string.toSelectorCase \x3d function(str) {\n  return String(str).replace(/([A-Z])/g, \x22-$1\x22).toLowerCase();\n};\ngoog.string.toTitleCase \x3d function(str, opt_delimiters) {\n  let delimiters \x3d typeof opt_delimiters \x3d\x3d\x3d \x22string\x22 ? goog.string.regExpEscape(opt_delimiters) : \x22\\\\s\x22;\n  delimiters \x3d delimiters ? \x22|[\x22 + delimiters + \x22]+\x22 : \x22\x22;\n  const regexp \x3d new RegExp(\x22(^\x22 + delimiters + \x22)([a-z])\x22, \x22g\x22);\n  return str.replace(regexp, function(all, p1, p2) {\n    return p1 + p2.toUpperCase();\n  });\n};\ngoog.string.capitalize \x3d function(str) {\n  return String(str.charAt(0)).toUpperCase() + String(str.substr(1)).toLowerCase();\n};\ngoog.string.parseInt \x3d function(value) {\n  if (isFinite(value)) {\n    value \x3d String(value);\n  }\n  if (typeof value \x3d\x3d\x3d \x22string\x22) {\n    return /^\\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);\n  }\n  return NaN;\n};\ngoog.string.splitLimit \x3d function(str, separator, limit) {\n  const parts \x3d str.split(separator);\n  const returnVal \x3d [];\n  while (limit \x3e 0 \x26\x26 parts.length) {\n    returnVal.push(parts.shift());\n    limit--;\n  }\n  if (parts.length) {\n    returnVal.push(parts.join(separator));\n  }\n  return returnVal;\n};\ngoog.string.lastComponent \x3d function(str, separators) {\n  if (!separators) {\n    return str;\n  } else if (typeof separators \x3d\x3d \x22string\x22) {\n    separators \x3d [separators];\n  }\n  let lastSeparatorIndex \x3d -1;\n  for (let i \x3d 0; i \x3c separators.length; i++) {\n    if (separators[i] \x3d\x3d \x22\x22) {\n      continue;\n    }\n    const currentSeparatorIndex \x3d str.lastIndexOf(separators[i]);\n    if (currentSeparatorIndex \x3e lastSeparatorIndex) {\n      lastSeparatorIndex \x3d currentSeparatorIndex;\n    }\n  }\n  if (lastSeparatorIndex \x3d\x3d -1) {\n    return str;\n  }\n  return str.slice(lastSeparatorIndex + 1);\n};\ngoog.string.editDistance \x3d function(a, b) {\n  const v0 \x3d [];\n  const v1 \x3d [];\n  if (a \x3d\x3d b) {\n    return 0;\n  }\n  if (!a.length || !b.length) {\n    return Math.max(a.length, b.length);\n  }\n  for (let i \x3d 0; i \x3c b.length + 1; i++) {\n    v0[i] \x3d i;\n  }\n  for (let i \x3d 0; i \x3c a.length; i++) {\n    v1[0] \x3d i + 1;\n    for (let j \x3d 0; j \x3c b.length; j++) {\n      const cost \x3d Number(a[i] !\x3d b[j]);\n      v1[j + 1] \x3d Math.min(v1[j] + 1, v0[j + 1] + 1, v0[j] + cost);\n    }\n    for (let j \x3d 0; j \x3c v0.length; j++) {\n      v0[j] \x3d v1[j];\n    }\n  }\n  return v1[b.length];\n};\n");
SHADOW_ENV.evalLoad("goog.collections.maps.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.collections.maps\x22);\n  goog.module.declareLegacyNamespace();\n  class MapLike {\n    constructor() {\n      this.size;\n    }\n    set(key, val) {\n    }\n    get(key) {\n    }\n    keys() {\n    }\n    values() {\n    }\n    has(key) {\n    }\n  }\n  exports.MapLike \x3d MapLike;\n  function setAll(map, entries) {\n    if (!entries) {\n      return;\n    }\n    for (const [k, v] of entries) {\n      map.set(k, v);\n    }\n  }\n  exports.setAll \x3d setAll;\n  function hasValue(map, val, valueEqualityFn \x3d defaultEqualityFn) {\n    for (const v of map.values()) {\n      if (valueEqualityFn(v, val)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  exports.hasValue \x3d hasValue;\n  const defaultEqualityFn \x3d (a, b) \x3d\x3e a \x3d\x3d\x3d b;\n  function equals(map, otherMap, valueEqualityFn \x3d defaultEqualityFn) {\n    if (map \x3d\x3d\x3d otherMap) {\n      return true;\n    }\n    if (map.size !\x3d\x3d otherMap.size) {\n      return false;\n    }\n    for (const key of map.keys()) {\n      if (!otherMap.has(key)) {\n        return false;\n      }\n      if (!valueEqualityFn(map.get(key), otherMap.get(key))) {\n        return false;\n      }\n    }\n    return true;\n  }\n  exports.equals \x3d equals;\n  function transpose(map) {\n    const transposed \x3d new Map();\n    for (const key of map.keys()) {\n      const val \x3d map.get(key);\n      transposed.set(val, key);\n    }\n    return transposed;\n  }\n  exports.transpose \x3d transpose;\n  function toObject(map) {\n    const obj \x3d {};\n    for (const key of map.keys()) {\n      obj[key] \x3d map.get(key);\n    }\n    return obj;\n  }\n  exports.toObject \x3d toObject;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.structs.structs.js", true , "goog.provide(\x22goog.structs\x22);\ngoog.require(\x22goog.array\x22);\ngoog.require(\x22goog.object\x22);\ngoog.structs.getCount \x3d function(col) {\n  if (col.getCount \x26\x26 typeof col.getCount \x3d\x3d \x22function\x22) {\n    return col.getCount();\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return col.length;\n  }\n  return goog.object.getCount(col);\n};\ngoog.structs.getValues \x3d function(col) {\n  if (col.getValues \x26\x26 typeof col.getValues \x3d\x3d \x22function\x22) {\n    return col.getValues();\n  }\n  if (typeof Map !\x3d\x3d \x22undefined\x22 \x26\x26 col instanceof Map || typeof Set !\x3d\x3d \x22undefined\x22 \x26\x26 col instanceof Set) {\n    return Array.from(col.values());\n  }\n  if (typeof col \x3d\x3d\x3d \x22string\x22) {\n    return col.split(\x22\x22);\n  }\n  if (goog.isArrayLike(col)) {\n    var rv \x3d [];\n    var l \x3d col.length;\n    for (var i \x3d 0; i \x3c l; i++) {\n      rv.push(col[i]);\n    }\n    return rv;\n  }\n  return goog.object.getValues(col);\n};\ngoog.structs.getKeys \x3d function(col) {\n  if (col.getKeys \x26\x26 typeof col.getKeys \x3d\x3d \x22function\x22) {\n    return col.getKeys();\n  }\n  if (col.getValues \x26\x26 typeof col.getValues \x3d\x3d \x22function\x22) {\n    return undefined;\n  }\n  if (typeof Map !\x3d\x3d \x22undefined\x22 \x26\x26 col instanceof Map) {\n    return Array.from(col.keys());\n  }\n  if (typeof Set !\x3d\x3d \x22undefined\x22 \x26\x26 col instanceof Set) {\n    return undefined;\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    var rv \x3d [];\n    var l \x3d col.length;\n    for (var i \x3d 0; i \x3c l; i++) {\n      rv.push(i);\n    }\n    return rv;\n  }\n  return goog.object.getKeys(col);\n};\ngoog.structs.contains \x3d function(col, val) {\n  if (col.contains \x26\x26 typeof col.contains \x3d\x3d \x22function\x22) {\n    return col.contains(val);\n  }\n  if (col.containsValue \x26\x26 typeof col.containsValue \x3d\x3d \x22function\x22) {\n    return col.containsValue(val);\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return goog.array.contains(col, val);\n  }\n  return goog.object.containsValue(col, val);\n};\ngoog.structs.isEmpty \x3d function(col) {\n  if (col.isEmpty \x26\x26 typeof col.isEmpty \x3d\x3d \x22function\x22) {\n    return col.isEmpty();\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return col.length \x3d\x3d\x3d 0;\n  }\n  return goog.object.isEmpty(col);\n};\ngoog.structs.clear \x3d function(col) {\n  if (col.clear \x26\x26 typeof col.clear \x3d\x3d \x22function\x22) {\n    col.clear();\n  } else if (goog.isArrayLike(col)) {\n    goog.array.clear(col);\n  } else {\n    goog.object.clear(col);\n  }\n};\ngoog.structs.forEach \x3d function(col, f, opt_obj) {\n  if (col.forEach \x26\x26 typeof col.forEach \x3d\x3d \x22function\x22) {\n    col.forEach(f, opt_obj);\n  } else if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    Array.prototype.forEach.call(col, f, opt_obj);\n  } else {\n    var keys \x3d goog.structs.getKeys(col);\n    var values \x3d goog.structs.getValues(col);\n    var l \x3d values.length;\n    for (var i \x3d 0; i \x3c l; i++) {\n      f.call(opt_obj, values[i], keys \x26\x26 keys[i], col);\n    }\n  }\n};\ngoog.structs.filter \x3d function(col, f, opt_obj) {\n  if (typeof col.filter \x3d\x3d \x22function\x22) {\n    return col.filter(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return Array.prototype.filter.call(col, f, opt_obj);\n  }\n  var rv;\n  var keys \x3d goog.structs.getKeys(col);\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  if (keys) {\n    rv \x3d {};\n    for (var i \x3d 0; i \x3c l; i++) {\n      if (f.call(opt_obj, values[i], keys[i], col)) {\n        rv[keys[i]] \x3d values[i];\n      }\n    }\n  } else {\n    rv \x3d [];\n    for (var i \x3d 0; i \x3c l; i++) {\n      if (f.call(opt_obj, values[i], undefined, col)) {\n        rv.push(values[i]);\n      }\n    }\n  }\n  return rv;\n};\ngoog.structs.map \x3d function(col, f, opt_obj) {\n  if (typeof col.map \x3d\x3d \x22function\x22) {\n    return col.map(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return Array.prototype.map.call(col, f, opt_obj);\n  }\n  var rv;\n  var keys \x3d goog.structs.getKeys(col);\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  if (keys) {\n    rv \x3d {};\n    for (var i \x3d 0; i \x3c l; i++) {\n      rv[keys[i]] \x3d f.call(opt_obj, values[i], keys[i], col);\n    }\n  } else {\n    rv \x3d [];\n    for (var i \x3d 0; i \x3c l; i++) {\n      rv[i] \x3d f.call(opt_obj, values[i], undefined, col);\n    }\n  }\n  return rv;\n};\ngoog.structs.some \x3d function(col, f, opt_obj) {\n  if (typeof col.some \x3d\x3d \x22function\x22) {\n    return col.some(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return Array.prototype.some.call(col, f, opt_obj);\n  }\n  var keys \x3d goog.structs.getKeys(col);\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  for (var i \x3d 0; i \x3c l; i++) {\n    if (f.call(opt_obj, values[i], keys \x26\x26 keys[i], col)) {\n      return true;\n    }\n  }\n  return false;\n};\ngoog.structs.every \x3d function(col, f, opt_obj) {\n  if (typeof col.every \x3d\x3d \x22function\x22) {\n    return col.every(f, opt_obj);\n  }\n  if (goog.isArrayLike(col) || typeof col \x3d\x3d\x3d \x22string\x22) {\n    return Array.prototype.every.call(col, f, opt_obj);\n  }\n  var keys \x3d goog.structs.getKeys(col);\n  var values \x3d goog.structs.getValues(col);\n  var l \x3d values.length;\n  for (var i \x3d 0; i \x3c l; i++) {\n    if (!f.call(opt_obj, values[i], keys \x26\x26 keys[i], col)) {\n      return false;\n    }\n  }\n  return true;\n};\n");
SHADOW_ENV.evalLoad("goog.uri.utils.js", true , "goog.provide(\x22goog.uri.utils\x22);\ngoog.provide(\x22goog.uri.utils.ComponentIndex\x22);\ngoog.provide(\x22goog.uri.utils.QueryArray\x22);\ngoog.provide(\x22goog.uri.utils.QueryValue\x22);\ngoog.provide(\x22goog.uri.utils.StandardQueryParam\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.string\x22);\ngoog.uri.utils.CharCode_ \x3d {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};\ngoog.uri.utils.buildFromEncodedParts \x3d function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {\n  var out \x3d \x22\x22;\n  if (opt_scheme) {\n    out +\x3d opt_scheme + \x22:\x22;\n  }\n  if (opt_domain) {\n    out +\x3d \x22//\x22;\n    if (opt_userInfo) {\n      out +\x3d opt_userInfo + \x22@\x22;\n    }\n    out +\x3d opt_domain;\n    if (opt_port) {\n      out +\x3d \x22:\x22 + opt_port;\n    }\n  }\n  if (opt_path) {\n    out +\x3d opt_path;\n  }\n  if (opt_queryData) {\n    out +\x3d \x22?\x22 + opt_queryData;\n  }\n  if (opt_fragment) {\n    out +\x3d \x22#\x22 + opt_fragment;\n  }\n  return out;\n};\ngoog.uri.utils.splitRe_ \x3d new RegExp(\x22^\x22 + \x22(?:\x22 + \x22([^:/?#.]+)\x22 + \x22:)?\x22 + \x22(?://\x22 + \x22(?:([^\\\\\\\\/?#]*)@)?\x22 + \x22([^\\\\\\\\/?#]*?)\x22 + \x22(?::([0-9]+))?\x22 + \x22(?\\x3d[\\\\\\\\/?#]|$)\x22 + \x22)?\x22 + \x22([^?#]+)?\x22 + \x22(?:\\\\?([^#]*))?\x22 + \x22(?:#([\\\\s\\\\S]*))?\x22 + \x22$\x22);\ngoog.uri.utils.ComponentIndex \x3d {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};\ngoog.uri.utils.urlPackageSupportLoggingHandler_ \x3d null;\ngoog.uri.utils.setUrlPackageSupportLoggingHandler \x3d function(handler) {\n  goog.uri.utils.urlPackageSupportLoggingHandler_ \x3d handler;\n};\ngoog.uri.utils.split \x3d function(uri) {\n  var result \x3d uri.match(goog.uri.utils.splitRe_);\n  if (goog.uri.utils.urlPackageSupportLoggingHandler_ \x26\x26 [\x22http\x22, \x22https\x22, \x22ws\x22, \x22wss\x22, \x22ftp\x22].indexOf(result[goog.uri.utils.ComponentIndex.SCHEME]) \x3e\x3d 0) {\n    goog.uri.utils.urlPackageSupportLoggingHandler_(uri);\n  }\n  return result;\n};\ngoog.uri.utils.decodeIfPossible_ \x3d function(uri, opt_preserveReserved) {\n  if (!uri) {\n    return uri;\n  }\n  return opt_preserveReserved ? decodeURI(uri) : decodeURIComponent(uri);\n};\ngoog.uri.utils.getComponentByIndex_ \x3d function(componentIndex, uri) {\n  return goog.uri.utils.split(uri)[componentIndex] || null;\n};\ngoog.uri.utils.getScheme \x3d function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);\n};\ngoog.uri.utils.getEffectiveScheme \x3d function(uri) {\n  var scheme \x3d goog.uri.utils.getScheme(uri);\n  if (!scheme \x26\x26 goog.global.self \x26\x26 goog.global.self.location) {\n    var protocol \x3d goog.global.self.location.protocol;\n    scheme \x3d protocol.substr(0, protocol.length - 1);\n  }\n  return scheme ? scheme.toLowerCase() : \x22\x22;\n};\ngoog.uri.utils.getUserInfoEncoded \x3d function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);\n};\ngoog.uri.utils.getUserInfo \x3d function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));\n};\ngoog.uri.utils.getDomainEncoded \x3d function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);\n};\ngoog.uri.utils.getDomain \x3d function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri), true);\n};\ngoog.uri.utils.getPort \x3d function(uri) {\n  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;\n};\ngoog.uri.utils.getPathEncoded \x3d function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);\n};\ngoog.uri.utils.getPath \x3d function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri), true);\n};\ngoog.uri.utils.getQueryData \x3d function(uri) {\n  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);\n};\ngoog.uri.utils.getFragmentEncoded \x3d function(uri) {\n  var hashIndex \x3d uri.indexOf(\x22#\x22);\n  return hashIndex \x3c 0 ? null : uri.substr(hashIndex + 1);\n};\ngoog.uri.utils.setFragmentEncoded \x3d function(uri, fragment) {\n  return goog.uri.utils.removeFragment(uri) + (fragment ? \x22#\x22 + fragment : \x22\x22);\n};\ngoog.uri.utils.getFragment \x3d function(uri) {\n  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));\n};\ngoog.uri.utils.getHost \x3d function(uri) {\n  var pieces \x3d goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\ngoog.uri.utils.getOrigin \x3d function(uri) {\n  var pieces \x3d goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], null, pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);\n};\ngoog.uri.utils.getPathAndAfter \x3d function(uri) {\n  var pieces \x3d goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\ngoog.uri.utils.removeFragment \x3d function(uri) {\n  var hashIndex \x3d uri.indexOf(\x22#\x22);\n  return hashIndex \x3c 0 ? uri : uri.substr(0, hashIndex);\n};\ngoog.uri.utils.haveSameDomain \x3d function(uri1, uri2) {\n  var pieces1 \x3d goog.uri.utils.split(uri1);\n  var pieces2 \x3d goog.uri.utils.split(uri2);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] \x3d\x3d pieces2[goog.uri.utils.ComponentIndex.DOMAIN] \x26\x26 pieces1[goog.uri.utils.ComponentIndex.SCHEME] \x3d\x3d pieces2[goog.uri.utils.ComponentIndex.SCHEME] \x26\x26 pieces1[goog.uri.utils.ComponentIndex.PORT] \x3d\x3d pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\ngoog.uri.utils.assertNoFragmentsOrQueries_ \x3d function(uri) {\n  goog.asserts.assert(uri.indexOf(\x22#\x22) \x3c 0 \x26\x26 uri.indexOf(\x22?\x22) \x3c 0, \x22goog.uri.utils: Fragment or query identifiers are not supported: [%s]\x22, uri);\n};\ngoog.uri.utils.QueryValue;\ngoog.uri.utils.QueryArray;\ngoog.uri.utils.parseQueryData \x3d function(encodedQuery, callback) {\n  if (!encodedQuery) {\n    return;\n  }\n  var pairs \x3d encodedQuery.split(\x22\\x26\x22);\n  for (var i \x3d 0; i \x3c pairs.length; i++) {\n    var indexOfEquals \x3d pairs[i].indexOf(\x22\\x3d\x22);\n    var name \x3d null;\n    var value \x3d null;\n    if (indexOfEquals \x3e\x3d 0) {\n      name \x3d pairs[i].substring(0, indexOfEquals);\n      value \x3d pairs[i].substring(indexOfEquals + 1);\n    } else {\n      name \x3d pairs[i];\n    }\n    callback(name, value ? goog.string.urlDecode(value) : \x22\x22);\n  }\n};\ngoog.uri.utils.splitQueryData_ \x3d function(uri) {\n  var hashIndex \x3d uri.indexOf(\x22#\x22);\n  if (hashIndex \x3c 0) {\n    hashIndex \x3d uri.length;\n  }\n  var questionIndex \x3d uri.indexOf(\x22?\x22);\n  var queryData;\n  if (questionIndex \x3c 0 || questionIndex \x3e hashIndex) {\n    questionIndex \x3d hashIndex;\n    queryData \x3d \x22\x22;\n  } else {\n    queryData \x3d uri.substring(questionIndex + 1, hashIndex);\n  }\n  return [uri.substr(0, questionIndex), queryData, uri.substr(hashIndex)];\n};\ngoog.uri.utils.joinQueryData_ \x3d function(parts) {\n  return parts[0] + (parts[1] ? \x22?\x22 + parts[1] : \x22\x22) + parts[2];\n};\ngoog.uri.utils.appendQueryData_ \x3d function(queryData, newData) {\n  if (!newData) {\n    return queryData;\n  }\n  return queryData ? queryData + \x22\\x26\x22 + newData : newData;\n};\ngoog.uri.utils.appendQueryDataToUri_ \x3d function(uri, queryData) {\n  if (!queryData) {\n    return uri;\n  }\n  var parts \x3d goog.uri.utils.splitQueryData_(uri);\n  parts[1] \x3d goog.uri.utils.appendQueryData_(parts[1], queryData);\n  return goog.uri.utils.joinQueryData_(parts);\n};\ngoog.uri.utils.appendKeyValuePairs_ \x3d function(key, value, pairs) {\n  goog.asserts.assertString(key);\n  if (Array.isArray(value)) {\n    goog.asserts.assertArray(value);\n    for (var j \x3d 0; j \x3c value.length; j++) {\n      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);\n    }\n  } else if (value !\x3d null) {\n    pairs.push(key + (value \x3d\x3d\x3d \x22\x22 ? \x22\x22 : \x22\\x3d\x22 + goog.string.urlEncode(value)));\n  }\n};\ngoog.uri.utils.buildQueryData \x3d function(keysAndValues, opt_startIndex) {\n  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 \x3d\x3d 0, \x22goog.uri.utils: Key/value lists must be even in length.\x22);\n  var params \x3d [];\n  for (var i \x3d opt_startIndex || 0; i \x3c keysAndValues.length; i +\x3d 2) {\n    var key \x3d keysAndValues[i];\n    goog.uri.utils.appendKeyValuePairs_(key, keysAndValues[i + 1], params);\n  }\n  return params.join(\x22\\x26\x22);\n};\ngoog.uri.utils.buildQueryDataFromMap \x3d function(map) {\n  var params \x3d [];\n  for (var key in map) {\n    goog.uri.utils.appendKeyValuePairs_(key, map[key], params);\n  }\n  return params.join(\x22\\x26\x22);\n};\ngoog.uri.utils.appendParams \x3d function(uri, var_args) {\n  var queryData \x3d arguments.length \x3d\x3d 2 ? goog.uri.utils.buildQueryData(arguments[1], 0) : goog.uri.utils.buildQueryData(arguments, 1);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\ngoog.uri.utils.appendParamsFromMap \x3d function(uri, map) {\n  var queryData \x3d goog.uri.utils.buildQueryDataFromMap(map);\n  return goog.uri.utils.appendQueryDataToUri_(uri, queryData);\n};\ngoog.uri.utils.appendParam \x3d function(uri, key, opt_value) {\n  var value \x3d opt_value !\x3d null ? \x22\\x3d\x22 + goog.string.urlEncode(opt_value) : \x22\x22;\n  return goog.uri.utils.appendQueryDataToUri_(uri, key + value);\n};\ngoog.uri.utils.findParam_ \x3d function(uri, startIndex, keyEncoded, hashOrEndIndex) {\n  var index \x3d startIndex;\n  var keyLength \x3d keyEncoded.length;\n  while ((index \x3d uri.indexOf(keyEncoded, index)) \x3e\x3d 0 \x26\x26 index \x3c hashOrEndIndex) {\n    var precedingChar \x3d uri.charCodeAt(index - 1);\n    if (precedingChar \x3d\x3d goog.uri.utils.CharCode_.AMPERSAND || precedingChar \x3d\x3d goog.uri.utils.CharCode_.QUESTION) {\n      var followingChar \x3d uri.charCodeAt(index + keyLength);\n      if (!followingChar || followingChar \x3d\x3d goog.uri.utils.CharCode_.EQUAL || followingChar \x3d\x3d goog.uri.utils.CharCode_.AMPERSAND || followingChar \x3d\x3d goog.uri.utils.CharCode_.HASH) {\n        return index;\n      }\n    }\n    index +\x3d keyLength + 1;\n  }\n  return -1;\n};\ngoog.uri.utils.hashOrEndRe_ \x3d /#|$/;\ngoog.uri.utils.hasParam \x3d function(uri, keyEncoded) {\n  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) \x3e\x3d 0;\n};\ngoog.uri.utils.getParamValue \x3d function(uri, keyEncoded) {\n  var hashOrEndIndex \x3d uri.search(goog.uri.utils.hashOrEndRe_);\n  var foundIndex \x3d goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);\n  if (foundIndex \x3c 0) {\n    return null;\n  } else {\n    var endPosition \x3d uri.indexOf(\x22\\x26\x22, foundIndex);\n    if (endPosition \x3c 0 || endPosition \x3e hashOrEndIndex) {\n      endPosition \x3d hashOrEndIndex;\n    }\n    foundIndex +\x3d keyEncoded.length + 1;\n    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));\n  }\n};\ngoog.uri.utils.getParamValues \x3d function(uri, keyEncoded) {\n  var hashOrEndIndex \x3d uri.search(goog.uri.utils.hashOrEndRe_);\n  var position \x3d 0;\n  var foundIndex;\n  var result \x3d [];\n  while ((foundIndex \x3d goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) \x3e\x3d 0) {\n    position \x3d uri.indexOf(\x22\\x26\x22, foundIndex);\n    if (position \x3c 0 || position \x3e hashOrEndIndex) {\n      position \x3d hashOrEndIndex;\n    }\n    foundIndex +\x3d keyEncoded.length + 1;\n    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));\n  }\n  return result;\n};\ngoog.uri.utils.trailingQueryPunctuationRe_ \x3d /[?\x26]($|#)/;\ngoog.uri.utils.removeParam \x3d function(uri, keyEncoded) {\n  var hashOrEndIndex \x3d uri.search(goog.uri.utils.hashOrEndRe_);\n  var position \x3d 0;\n  var foundIndex;\n  var buffer \x3d [];\n  while ((foundIndex \x3d goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) \x3e\x3d 0) {\n    buffer.push(uri.substring(position, foundIndex));\n    position \x3d Math.min(uri.indexOf(\x22\\x26\x22, foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);\n  }\n  buffer.push(uri.substr(position));\n  return buffer.join(\x22\x22).replace(goog.uri.utils.trailingQueryPunctuationRe_, \x22$1\x22);\n};\ngoog.uri.utils.setParam \x3d function(uri, keyEncoded, value) {\n  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);\n};\ngoog.uri.utils.setParamsFromMap \x3d function(uri, params) {\n  var parts \x3d goog.uri.utils.splitQueryData_(uri);\n  var queryData \x3d parts[1];\n  var buffer \x3d [];\n  if (queryData) {\n    queryData.split(\x22\\x26\x22).forEach(function(pair) {\n      var indexOfEquals \x3d pair.indexOf(\x22\\x3d\x22);\n      var name \x3d indexOfEquals \x3e\x3d 0 ? pair.substr(0, indexOfEquals) : pair;\n      if (!params.hasOwnProperty(name)) {\n        buffer.push(pair);\n      }\n    });\n  }\n  parts[1] \x3d goog.uri.utils.appendQueryData_(buffer.join(\x22\\x26\x22), goog.uri.utils.buildQueryDataFromMap(params));\n  return goog.uri.utils.joinQueryData_(parts);\n};\ngoog.uri.utils.appendPath \x3d function(baseUri, path) {\n  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);\n  if (goog.string.endsWith(baseUri, \x22/\x22)) {\n    baseUri \x3d baseUri.substr(0, baseUri.length - 1);\n  }\n  if (goog.string.startsWith(path, \x22/\x22)) {\n    path \x3d path.substr(1);\n  }\n  return \x22\x22 + baseUri + \x22/\x22 + path;\n};\ngoog.uri.utils.setPath \x3d function(uri, path) {\n  if (!goog.string.startsWith(path, \x22/\x22)) {\n    path \x3d \x22/\x22 + path;\n  }\n  var parts \x3d goog.uri.utils.split(uri);\n  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);\n};\ngoog.uri.utils.StandardQueryParam \x3d {RANDOM:\x22zx\x22};\ngoog.uri.utils.makeUnique \x3d function(uri) {\n  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());\n};\n");
SHADOW_ENV.evalLoad("goog.uri.uri.js", true , "goog.provide(\x22goog.Uri\x22);\ngoog.provide(\x22goog.Uri.QueryData\x22);\ngoog.require(\x22goog.array\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.collections.maps\x22);\ngoog.require(\x22goog.string\x22);\ngoog.require(\x22goog.structs\x22);\ngoog.require(\x22goog.uri.utils\x22);\ngoog.require(\x22goog.uri.utils.ComponentIndex\x22);\ngoog.require(\x22goog.uri.utils.StandardQueryParam\x22);\ngoog.Uri \x3d function(opt_uri, opt_ignoreCase) {\n  this.scheme_ \x3d \x22\x22;\n  this.userInfo_ \x3d \x22\x22;\n  this.domain_ \x3d \x22\x22;\n  this.port_ \x3d null;\n  this.path_ \x3d \x22\x22;\n  this.fragment_ \x3d \x22\x22;\n  this.isReadOnly_ \x3d false;\n  this.ignoreCase_ \x3d false;\n  this.queryData_;\n  var m;\n  if (opt_uri instanceof goog.Uri) {\n    this.ignoreCase_ \x3d opt_ignoreCase !\x3d\x3d undefined ? opt_ignoreCase : opt_uri.getIgnoreCase();\n    this.setScheme(opt_uri.getScheme());\n    this.setUserInfo(opt_uri.getUserInfo());\n    this.setDomain(opt_uri.getDomain());\n    this.setPort(opt_uri.getPort());\n    this.setPath(opt_uri.getPath());\n    this.setQueryData(opt_uri.getQueryData().clone());\n    this.setFragment(opt_uri.getFragment());\n  } else if (opt_uri \x26\x26 (m \x3d goog.uri.utils.split(String(opt_uri)))) {\n    this.ignoreCase_ \x3d !!opt_ignoreCase;\n    this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || \x22\x22, true);\n    this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || \x22\x22, true);\n    this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || \x22\x22, true);\n    this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);\n    this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || \x22\x22, true);\n    this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || \x22\x22, true);\n    this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || \x22\x22, true);\n  } else {\n    this.ignoreCase_ \x3d !!opt_ignoreCase;\n    this.queryData_ \x3d new goog.Uri.QueryData(null, this.ignoreCase_);\n  }\n};\ngoog.Uri.RANDOM_PARAM \x3d goog.uri.utils.StandardQueryParam.RANDOM;\ngoog.Uri.prototype.toString \x3d function() {\n  var out \x3d [];\n  var scheme \x3d this.getScheme();\n  if (scheme) {\n    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), \x22:\x22);\n  }\n  var domain \x3d this.getDomain();\n  if (domain || scheme \x3d\x3d \x22file\x22) {\n    out.push(\x22//\x22);\n    var userInfo \x3d this.getUserInfo();\n    if (userInfo) {\n      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_, true), \x22@\x22);\n    }\n    out.push(goog.Uri.removeDoubleEncoding_(goog.string.urlEncode(domain)));\n    var port \x3d this.getPort();\n    if (port !\x3d null) {\n      out.push(\x22:\x22, String(port));\n    }\n  }\n  var path \x3d this.getPath();\n  if (path) {\n    if (this.hasDomain() \x26\x26 path.charAt(0) !\x3d \x22/\x22) {\n      out.push(\x22/\x22);\n    }\n    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) \x3d\x3d \x22/\x22 ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_, true));\n  }\n  var query \x3d this.getEncodedQuery();\n  if (query) {\n    out.push(\x22?\x22, query);\n  }\n  var fragment \x3d this.getFragment();\n  if (fragment) {\n    out.push(\x22#\x22, goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));\n  }\n  return out.join(\x22\x22);\n};\ngoog.Uri.prototype.resolve \x3d function(relativeUri) {\n  var absoluteUri \x3d this.clone();\n  var overridden \x3d relativeUri.hasScheme();\n  if (overridden) {\n    absoluteUri.setScheme(relativeUri.getScheme());\n  } else {\n    overridden \x3d relativeUri.hasUserInfo();\n  }\n  if (overridden) {\n    absoluteUri.setUserInfo(relativeUri.getUserInfo());\n  } else {\n    overridden \x3d relativeUri.hasDomain();\n  }\n  if (overridden) {\n    absoluteUri.setDomain(relativeUri.getDomain());\n  } else {\n    overridden \x3d relativeUri.hasPort();\n  }\n  var path \x3d relativeUri.getPath();\n  if (overridden) {\n    absoluteUri.setPort(relativeUri.getPort());\n  } else {\n    overridden \x3d relativeUri.hasPath();\n    if (overridden) {\n      if (path.charAt(0) !\x3d \x22/\x22) {\n        if (this.hasDomain() \x26\x26 !this.hasPath()) {\n          path \x3d \x22/\x22 + path;\n        } else {\n          var lastSlashIndex \x3d absoluteUri.getPath().lastIndexOf(\x22/\x22);\n          if (lastSlashIndex !\x3d -1) {\n            path \x3d absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;\n          }\n        }\n      }\n      path \x3d goog.Uri.removeDotSegments(path);\n    }\n  }\n  if (overridden) {\n    absoluteUri.setPath(path);\n  } else {\n    overridden \x3d relativeUri.hasQuery();\n  }\n  if (overridden) {\n    absoluteUri.setQueryData(relativeUri.getQueryData().clone());\n  } else {\n    overridden \x3d relativeUri.hasFragment();\n  }\n  if (overridden) {\n    absoluteUri.setFragment(relativeUri.getFragment());\n  }\n  return absoluteUri;\n};\ngoog.Uri.prototype.clone \x3d function() {\n  return new goog.Uri(this);\n};\ngoog.Uri.prototype.getScheme \x3d function() {\n  return this.scheme_;\n};\ngoog.Uri.prototype.setScheme \x3d function(newScheme, opt_decode) {\n  this.enforceReadOnly();\n  this.scheme_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newScheme, true) : newScheme;\n  if (this.scheme_) {\n    this.scheme_ \x3d this.scheme_.replace(/:$/, \x22\x22);\n  }\n  return this;\n};\ngoog.Uri.prototype.hasScheme \x3d function() {\n  return !!this.scheme_;\n};\ngoog.Uri.prototype.getUserInfo \x3d function() {\n  return this.userInfo_;\n};\ngoog.Uri.prototype.setUserInfo \x3d function(newUserInfo, opt_decode) {\n  this.enforceReadOnly();\n  this.userInfo_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;\n  return this;\n};\ngoog.Uri.prototype.hasUserInfo \x3d function() {\n  return !!this.userInfo_;\n};\ngoog.Uri.prototype.getDomain \x3d function() {\n  return this.domain_;\n};\ngoog.Uri.prototype.setDomain \x3d function(newDomain, opt_decode) {\n  this.enforceReadOnly();\n  this.domain_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newDomain, true) : newDomain;\n  return this;\n};\ngoog.Uri.prototype.hasDomain \x3d function() {\n  return !!this.domain_;\n};\ngoog.Uri.prototype.getPort \x3d function() {\n  return this.port_;\n};\ngoog.Uri.prototype.setPort \x3d function(newPort) {\n  this.enforceReadOnly();\n  if (newPort) {\n    newPort \x3d Number(newPort);\n    if (isNaN(newPort) || newPort \x3c 0) {\n      throw new Error(\x22Bad port number \x22 + newPort);\n    }\n    this.port_ \x3d newPort;\n  } else {\n    this.port_ \x3d null;\n  }\n  return this;\n};\ngoog.Uri.prototype.hasPort \x3d function() {\n  return this.port_ !\x3d null;\n};\ngoog.Uri.prototype.getPath \x3d function() {\n  return this.path_;\n};\ngoog.Uri.prototype.setPath \x3d function(newPath, opt_decode) {\n  this.enforceReadOnly();\n  this.path_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newPath, true) : newPath;\n  return this;\n};\ngoog.Uri.prototype.hasPath \x3d function() {\n  return !!this.path_;\n};\ngoog.Uri.prototype.hasQuery \x3d function() {\n  return this.queryData_.toString() !\x3d\x3d \x22\x22;\n};\ngoog.Uri.prototype.setQueryData \x3d function(queryData, opt_decode) {\n  this.enforceReadOnly();\n  if (queryData instanceof goog.Uri.QueryData) {\n    this.queryData_ \x3d queryData;\n    this.queryData_.setIgnoreCase(this.ignoreCase_);\n  } else {\n    if (!opt_decode) {\n      queryData \x3d goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);\n    }\n    this.queryData_ \x3d new goog.Uri.QueryData(queryData, this.ignoreCase_);\n  }\n  return this;\n};\ngoog.Uri.prototype.setQuery \x3d function(newQuery, opt_decode) {\n  return this.setQueryData(newQuery, opt_decode);\n};\ngoog.Uri.prototype.getEncodedQuery \x3d function() {\n  return this.queryData_.toString();\n};\ngoog.Uri.prototype.getDecodedQuery \x3d function() {\n  return this.queryData_.toDecodedString();\n};\ngoog.Uri.prototype.getQueryData \x3d function() {\n  return this.queryData_;\n};\ngoog.Uri.prototype.getQuery \x3d function() {\n  return this.getEncodedQuery();\n};\ngoog.Uri.prototype.setParameterValue \x3d function(key, value) {\n  this.enforceReadOnly();\n  this.queryData_.set(key, value);\n  return this;\n};\ngoog.Uri.prototype.setParameterValues \x3d function(key, values) {\n  this.enforceReadOnly();\n  if (!Array.isArray(values)) {\n    values \x3d [String(values)];\n  }\n  this.queryData_.setValues(key, values);\n  return this;\n};\ngoog.Uri.prototype.getParameterValues \x3d function(name) {\n  return this.queryData_.getValues(name);\n};\ngoog.Uri.prototype.getParameterValue \x3d function(paramName) {\n  return this.queryData_.get(paramName);\n};\ngoog.Uri.prototype.getFragment \x3d function() {\n  return this.fragment_;\n};\ngoog.Uri.prototype.setFragment \x3d function(newFragment, opt_decode) {\n  this.enforceReadOnly();\n  this.fragment_ \x3d opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;\n  return this;\n};\ngoog.Uri.prototype.hasFragment \x3d function() {\n  return !!this.fragment_;\n};\ngoog.Uri.prototype.hasSameDomainAs \x3d function(uri2) {\n  return (!this.hasDomain() \x26\x26 !uri2.hasDomain() || this.getDomain() \x3d\x3d uri2.getDomain()) \x26\x26 (!this.hasPort() \x26\x26 !uri2.hasPort() || this.getPort() \x3d\x3d uri2.getPort());\n};\ngoog.Uri.prototype.makeUnique \x3d function() {\n  this.enforceReadOnly();\n  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());\n  return this;\n};\ngoog.Uri.prototype.removeParameter \x3d function(key) {\n  this.enforceReadOnly();\n  this.queryData_.remove(key);\n  return this;\n};\ngoog.Uri.prototype.setReadOnly \x3d function(isReadOnly) {\n  this.isReadOnly_ \x3d isReadOnly;\n  return this;\n};\ngoog.Uri.prototype.isReadOnly \x3d function() {\n  return this.isReadOnly_;\n};\ngoog.Uri.prototype.enforceReadOnly \x3d function() {\n  if (this.isReadOnly_) {\n    throw new Error(\x22Tried to modify a read-only Uri\x22);\n  }\n};\ngoog.Uri.prototype.setIgnoreCase \x3d function(ignoreCase) {\n  this.ignoreCase_ \x3d ignoreCase;\n  if (this.queryData_) {\n    this.queryData_.setIgnoreCase(ignoreCase);\n  }\n  return this;\n};\ngoog.Uri.prototype.getIgnoreCase \x3d function() {\n  return this.ignoreCase_;\n};\ngoog.Uri.parse \x3d function(uri, opt_ignoreCase) {\n  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);\n};\ngoog.Uri.create \x3d function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {\n  var uri \x3d new goog.Uri(null, opt_ignoreCase);\n  opt_scheme \x26\x26 uri.setScheme(opt_scheme);\n  opt_userInfo \x26\x26 uri.setUserInfo(opt_userInfo);\n  opt_domain \x26\x26 uri.setDomain(opt_domain);\n  opt_port \x26\x26 uri.setPort(opt_port);\n  opt_path \x26\x26 uri.setPath(opt_path);\n  opt_query \x26\x26 uri.setQueryData(opt_query);\n  opt_fragment \x26\x26 uri.setFragment(opt_fragment);\n  return uri;\n};\ngoog.Uri.resolve \x3d function(base, rel) {\n  if (!(base instanceof goog.Uri)) {\n    base \x3d goog.Uri.parse(base);\n  }\n  if (!(rel instanceof goog.Uri)) {\n    rel \x3d goog.Uri.parse(rel);\n  }\n  return base.resolve(rel);\n};\ngoog.Uri.removeDotSegments \x3d function(path) {\n  if (path \x3d\x3d \x22..\x22 || path \x3d\x3d \x22.\x22) {\n    return \x22\x22;\n  } else if (!goog.string.contains(path, \x22./\x22) \x26\x26 !goog.string.contains(path, \x22/.\x22)) {\n    return path;\n  } else {\n    var leadingSlash \x3d goog.string.startsWith(path, \x22/\x22);\n    var segments \x3d path.split(\x22/\x22);\n    var out \x3d [];\n    for (var pos \x3d 0; pos \x3c segments.length;) {\n      var segment \x3d segments[pos++];\n      if (segment \x3d\x3d \x22.\x22) {\n        if (leadingSlash \x26\x26 pos \x3d\x3d segments.length) {\n          out.push(\x22\x22);\n        }\n      } else if (segment \x3d\x3d \x22..\x22) {\n        if (out.length \x3e 1 || out.length \x3d\x3d 1 \x26\x26 out[0] !\x3d \x22\x22) {\n          out.pop();\n        }\n        if (leadingSlash \x26\x26 pos \x3d\x3d segments.length) {\n          out.push(\x22\x22);\n        }\n      } else {\n        out.push(segment);\n        leadingSlash \x3d true;\n      }\n    }\n    return out.join(\x22/\x22);\n  }\n};\ngoog.Uri.decodeOrEmpty_ \x3d function(val, opt_preserveReserved) {\n  if (!val) {\n    return \x22\x22;\n  }\n  return opt_preserveReserved ? decodeURI(val.replace(/%25/g, \x22%2525\x22)) : decodeURIComponent(val);\n};\ngoog.Uri.encodeSpecialChars_ \x3d function(unescapedPart, extra, opt_removeDoubleEncoding) {\n  if (typeof unescapedPart \x3d\x3d\x3d \x22string\x22) {\n    var encoded \x3d encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);\n    if (opt_removeDoubleEncoding) {\n      encoded \x3d goog.Uri.removeDoubleEncoding_(encoded);\n    }\n    return encoded;\n  }\n  return null;\n};\ngoog.Uri.encodeChar_ \x3d function(ch) {\n  var n \x3d ch.charCodeAt(0);\n  return \x22%\x22 + (n \x3e\x3e 4 \x26 15).toString(16) + (n \x26 15).toString(16);\n};\ngoog.Uri.removeDoubleEncoding_ \x3d function(doubleEncodedString) {\n  return doubleEncodedString.replace(/%25([0-9a-fA-F]{2})/g, \x22%$1\x22);\n};\ngoog.Uri.reDisallowedInSchemeOrUserInfo_ \x3d /[#\\/\\?@]/g;\ngoog.Uri.reDisallowedInRelativePath_ \x3d /[#\\?:]/g;\ngoog.Uri.reDisallowedInAbsolutePath_ \x3d /[#\\?]/g;\ngoog.Uri.reDisallowedInQuery_ \x3d /[#\\?@]/g;\ngoog.Uri.reDisallowedInFragment_ \x3d /#/g;\ngoog.Uri.haveSameDomain \x3d function(uri1String, uri2String) {\n  var pieces1 \x3d goog.uri.utils.split(uri1String);\n  var pieces2 \x3d goog.uri.utils.split(uri2String);\n  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] \x3d\x3d pieces2[goog.uri.utils.ComponentIndex.DOMAIN] \x26\x26 pieces1[goog.uri.utils.ComponentIndex.PORT] \x3d\x3d pieces2[goog.uri.utils.ComponentIndex.PORT];\n};\ngoog.Uri.QueryData \x3d function(opt_query, opt_ignoreCase) {\n  this.keyMap_ \x3d null;\n  this.count_ \x3d null;\n  this.encodedQuery_ \x3d opt_query || null;\n  this.ignoreCase_ \x3d !!opt_ignoreCase;\n};\ngoog.Uri.QueryData.prototype.ensureKeyMapInitialized_ \x3d function() {\n  if (!this.keyMap_) {\n    this.keyMap_ \x3d new Map();\n    this.count_ \x3d 0;\n    if (this.encodedQuery_) {\n      var self \x3d this;\n      goog.uri.utils.parseQueryData(this.encodedQuery_, function(name, value) {\n        self.add(goog.string.urlDecode(name), value);\n      });\n    }\n  }\n};\ngoog.Uri.QueryData.createFromMap \x3d function(map, opt_ignoreCase) {\n  var keys \x3d goog.structs.getKeys(map);\n  if (typeof keys \x3d\x3d \x22undefined\x22) {\n    throw new Error(\x22Keys are undefined\x22);\n  }\n  var queryData \x3d new goog.Uri.QueryData(null, opt_ignoreCase);\n  var values \x3d goog.structs.getValues(map);\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    var key \x3d keys[i];\n    var value \x3d values[i];\n    if (!Array.isArray(value)) {\n      queryData.add(key, value);\n    } else {\n      queryData.setValues(key, value);\n    }\n  }\n  return queryData;\n};\ngoog.Uri.QueryData.createFromKeysValues \x3d function(keys, values, opt_ignoreCase) {\n  if (keys.length !\x3d values.length) {\n    throw new Error(\x22Mismatched lengths for keys/values\x22);\n  }\n  var queryData \x3d new goog.Uri.QueryData(null, opt_ignoreCase);\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    queryData.add(keys[i], values[i]);\n  }\n  return queryData;\n};\ngoog.Uri.QueryData.prototype.getCount \x3d function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_;\n};\ngoog.Uri.QueryData.prototype.add \x3d function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n  key \x3d this.getKeyName_(key);\n  var values \x3d this.keyMap_.get(key);\n  if (!values) {\n    this.keyMap_.set(key, values \x3d []);\n  }\n  values.push(value);\n  this.count_ \x3d goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\ngoog.Uri.QueryData.prototype.remove \x3d function(key) {\n  this.ensureKeyMapInitialized_();\n  key \x3d this.getKeyName_(key);\n  if (this.keyMap_.has(key)) {\n    this.invalidateCache_();\n    this.count_ \x3d goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n    return this.keyMap_.delete(key);\n  }\n  return false;\n};\ngoog.Uri.QueryData.prototype.clear \x3d function() {\n  this.invalidateCache_();\n  this.keyMap_ \x3d null;\n  this.count_ \x3d 0;\n};\ngoog.Uri.QueryData.prototype.isEmpty \x3d function() {\n  this.ensureKeyMapInitialized_();\n  return this.count_ \x3d\x3d 0;\n};\ngoog.Uri.QueryData.prototype.containsKey \x3d function(key) {\n  this.ensureKeyMapInitialized_();\n  key \x3d this.getKeyName_(key);\n  return this.keyMap_.has(key);\n};\ngoog.Uri.QueryData.prototype.containsValue \x3d function(value) {\n  var vals \x3d this.getValues();\n  return goog.array.contains(vals, value);\n};\ngoog.Uri.QueryData.prototype.forEach \x3d function(f, opt_scope) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(values, key) {\n    values.forEach(function(value) {\n      f.call(opt_scope, value, key, this);\n    }, this);\n  }, this);\n};\ngoog.Uri.QueryData.prototype.getKeys \x3d function() {\n  this.ensureKeyMapInitialized_();\n  const vals \x3d Array.from(this.keyMap_.values());\n  const keys \x3d Array.from(this.keyMap_.keys());\n  const rv \x3d [];\n  for (let i \x3d 0; i \x3c keys.length; i++) {\n    const val \x3d vals[i];\n    for (let j \x3d 0; j \x3c val.length; j++) {\n      rv.push(keys[i]);\n    }\n  }\n  return rv;\n};\ngoog.Uri.QueryData.prototype.getValues \x3d function(opt_key) {\n  this.ensureKeyMapInitialized_();\n  let rv \x3d [];\n  if (typeof opt_key \x3d\x3d\x3d \x22string\x22) {\n    if (this.containsKey(opt_key)) {\n      rv \x3d rv.concat(this.keyMap_.get(this.getKeyName_(opt_key)));\n    }\n  } else {\n    const values \x3d Array.from(this.keyMap_.values());\n    for (let i \x3d 0; i \x3c values.length; i++) {\n      rv \x3d rv.concat(values[i]);\n    }\n  }\n  return rv;\n};\ngoog.Uri.QueryData.prototype.set \x3d function(key, value) {\n  this.ensureKeyMapInitialized_();\n  this.invalidateCache_();\n  key \x3d this.getKeyName_(key);\n  if (this.containsKey(key)) {\n    this.count_ \x3d goog.asserts.assertNumber(this.count_) - this.keyMap_.get(key).length;\n  }\n  this.keyMap_.set(key, [value]);\n  this.count_ \x3d goog.asserts.assertNumber(this.count_) + 1;\n  return this;\n};\ngoog.Uri.QueryData.prototype.get \x3d function(key, opt_default) {\n  if (!key) {\n    return opt_default;\n  }\n  var values \x3d this.getValues(key);\n  return values.length \x3e 0 ? String(values[0]) : opt_default;\n};\ngoog.Uri.QueryData.prototype.setValues \x3d function(key, values) {\n  this.remove(key);\n  if (values.length \x3e 0) {\n    this.invalidateCache_();\n    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));\n    this.count_ \x3d goog.asserts.assertNumber(this.count_) + values.length;\n  }\n};\ngoog.Uri.QueryData.prototype.toString \x3d function() {\n  if (this.encodedQuery_) {\n    return this.encodedQuery_;\n  }\n  if (!this.keyMap_) {\n    return \x22\x22;\n  }\n  const sb \x3d [];\n  const keys \x3d Array.from(this.keyMap_.keys());\n  for (var i \x3d 0; i \x3c keys.length; i++) {\n    const key \x3d keys[i];\n    const encodedKey \x3d goog.string.urlEncode(key);\n    const val \x3d this.getValues(key);\n    for (var j \x3d 0; j \x3c val.length; j++) {\n      var param \x3d encodedKey;\n      if (val[j] !\x3d\x3d \x22\x22) {\n        param +\x3d \x22\\x3d\x22 + goog.string.urlEncode(val[j]);\n      }\n      sb.push(param);\n    }\n  }\n  return this.encodedQuery_ \x3d sb.join(\x22\\x26\x22);\n};\ngoog.Uri.QueryData.prototype.toDecodedString \x3d function() {\n  return goog.Uri.decodeOrEmpty_(this.toString());\n};\ngoog.Uri.QueryData.prototype.invalidateCache_ \x3d function() {\n  this.encodedQuery_ \x3d null;\n};\ngoog.Uri.QueryData.prototype.filterKeys \x3d function(keys) {\n  this.ensureKeyMapInitialized_();\n  this.keyMap_.forEach(function(value, key) {\n    if (!goog.array.contains(keys, key)) {\n      this.remove(key);\n    }\n  }, this);\n  return this;\n};\ngoog.Uri.QueryData.prototype.clone \x3d function() {\n  var rv \x3d new goog.Uri.QueryData();\n  rv.encodedQuery_ \x3d this.encodedQuery_;\n  if (this.keyMap_) {\n    rv.keyMap_ \x3d new Map(this.keyMap_);\n    rv.count_ \x3d this.count_;\n  }\n  return rv;\n};\ngoog.Uri.QueryData.prototype.getKeyName_ \x3d function(arg) {\n  var keyName \x3d String(arg);\n  if (this.ignoreCase_) {\n    keyName \x3d keyName.toLowerCase();\n  }\n  return keyName;\n};\ngoog.Uri.QueryData.prototype.setIgnoreCase \x3d function(ignoreCase) {\n  var resetKeys \x3d ignoreCase \x26\x26 !this.ignoreCase_;\n  if (resetKeys) {\n    this.ensureKeyMapInitialized_();\n    this.invalidateCache_();\n    this.keyMap_.forEach(function(value, key) {\n      var lowerCase \x3d key.toLowerCase();\n      if (key !\x3d lowerCase) {\n        this.remove(key);\n        this.setValues(lowerCase, value);\n      }\n    }, this);\n  }\n  this.ignoreCase_ \x3d ignoreCase;\n};\ngoog.Uri.QueryData.prototype.extend \x3d function(var_args) {\n  for (var i \x3d 0; i \x3c arguments.length; i++) {\n    var data \x3d arguments[i];\n    goog.structs.forEach(data, function(value, key) {\n      this.add(key, value);\n    }, this);\n  }\n};\n");
SHADOW_ENV.evalLoad("goog.string.stringbuffer.js", true , "goog.provide(\x22goog.string.StringBuffer\x22);\ngoog.string.StringBuffer \x3d function(opt_a1, var_args) {\n  if (opt_a1 !\x3d null) {\n    this.append.apply(this, arguments);\n  }\n};\ngoog.string.StringBuffer.prototype.buffer_ \x3d \x22\x22;\ngoog.string.StringBuffer.prototype.set \x3d function(s) {\n  this.buffer_ \x3d \x22\x22 + s;\n};\ngoog.string.StringBuffer.prototype.append \x3d function(a1, opt_a2, var_args) {\n  this.buffer_ +\x3d String(a1);\n  if (opt_a2 !\x3d null) {\n    for (let i \x3d 1; i \x3c arguments.length; i++) {\n      this.buffer_ +\x3d arguments[i];\n    }\n  }\n  return this;\n};\ngoog.string.StringBuffer.prototype.clear \x3d function() {\n  this.buffer_ \x3d \x22\x22;\n};\ngoog.string.StringBuffer.prototype.getLength \x3d function() {\n  return this.buffer_.length;\n};\ngoog.string.StringBuffer.prototype.toString \x3d function() {\n  return this.buffer_;\n};\n");
SHADOW_ENV.evalLoad("cljs.core.js", true , "goog.provide(\x27cljs.core\x27);\ngoog.scope(function(){\n  cljs.core.goog$module$goog$math$Long \x3d goog.module.get(\x27goog.math.Long\x27);\n  cljs.core.goog$module$goog$object \x3d goog.module.get(\x27goog.object\x27);\n  cljs.core.goog$module$goog$array \x3d goog.module.get(\x27goog.array\x27);\n});\ncljs.core._STAR_clojurescript_version_STAR_ \x3d \x221.11.60\x22;\ncljs.core._STAR_unchecked_if_STAR_ \x3d false;\ncljs.core._STAR_unchecked_arrays_STAR_ \x3d false;\ncljs.core._STAR_warn_on_infer_STAR_ \x3d false;\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core.PROTOCOL_SENTINEL !\x3d\x3d \x27undefined\x27)){\n} else {\ncljs.core.PROTOCOL_SENTINEL \x3d ({});\n}\ncljs.core.MODULE_URIS \x3d null;\ncljs.core.MODULE_INFOS \x3d null;\n/**\n * Var bound to the name value of the compiler build :target option.\n *   For example, if the compiler build :target is :nodejs, *target* will be bound\n *   to \x22nodejs\x22. *target* is a Google Closure define and can be set by compiler\n *   :closure-defines option.\n * @define {string}\n */\ncljs.core._STAR_target_STAR_ \x3d goog.define(\x22cljs.core._STAR_target_STAR_\x22,\x22default\x22);\n/**\n * Manually set the JavaScript global context. Only \x22window\x22, \x22self\x22\n *   , and \x22global\x22 supported. \n * @define {string}\n */\ncljs.core._STAR_global_STAR_ \x3d goog.define(\x22cljs.core._STAR_global_STAR_\x22,\x22default\x22);\n/**\n * Var bound to the current namespace. Only used for bootstrapping.\n * @type {*}\n */\ncljs.core._STAR_ns_STAR_ \x3d null;\n/**\n * @type {*}\n */\ncljs.core._STAR_out_STAR_ \x3d null;\ncljs.core._STAR_assert_STAR_ \x3d true;\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core._STAR_print_fn_STAR_ !\x3d\x3d \x27undefined\x27)){\n} else {\n/**\n * Each runtime environment provides a different way to print output.\n *   Whatever function *print-fn* is bound to will be passed any\n *   Strings which should be printed.\n */\ncljs.core._STAR_print_fn_STAR_ \x3d null;\n}\n/**\n * Arranges to have tap functions executed via the supplied f, a\n *   function of no arguments. Returns true if successful, false otherwise.\n */\ncljs.core._STAR_exec_tap_fn_STAR_ \x3d (function cljs$core$_STAR_exec_tap_fn_STAR_(f){\nvar and__5043__auto__ \x3d (typeof setTimeout !\x3d\x3d \x27undefined\x27);\nif(and__5043__auto__){\nvar G__9706 \x3d setTimeout(f,(0));\nreturn (cljs.core.boolean$.cljs$core$IFn$_invoke$arity$1 ? cljs.core.boolean$.cljs$core$IFn$_invoke$arity$1(G__9706) : cljs.core.boolean$.call(null,G__9706));\n} else {\nreturn and__5043__auto__;\n}\n});\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core._STAR_print_err_fn_STAR_ !\x3d\x3d \x27undefined\x27)){\n} else {\n/**\n * Each runtime environment provides a different way to print error output.\n *   Whatever function *print-err-fn* is bound to will be passed any\n *   Strings which should be printed.\n */\ncljs.core._STAR_print_err_fn_STAR_ \x3d null;\n}\n/**\n * Set *print-fn* to f.\n */\ncljs.core.set_print_fn_BANG_ \x3d (function cljs$core$set_print_fn_BANG_(f){\nreturn (cljs.core._STAR_print_fn_STAR_ \x3d f);\n});\n/**\n * Set *print-err-fn* to f.\n */\ncljs.core.set_print_err_fn_BANG_ \x3d (function cljs$core$set_print_err_fn_BANG_(f){\nreturn (cljs.core._STAR_print_err_fn_STAR_ \x3d f);\n});\n/**\n * When set to true, output will be flushed whenever a newline is printed.\n * \n *   Defaults to true.\n */\ncljs.core._STAR_flush_on_newline_STAR_ \x3d true;\n/**\n * When set to logical false will drop newlines from printing calls.\n *   This is to work around the implicit newlines emitted by standard JavaScript\n *   console objects.\n */\ncljs.core._STAR_print_newline_STAR_ \x3d true;\n/**\n * When set to logical false, strings and characters will be printed with\n *   non-alphanumeric characters converted to the appropriate escape sequences.\n * \n *   Defaults to true\n */\ncljs.core._STAR_print_readably_STAR_ \x3d true;\n/**\n * If set to logical true, when printing an object, its metadata will also\n *   be printed in a form that can be read back by the reader.\n * \n *   Defaults to false.\n */\ncljs.core._STAR_print_meta_STAR_ \x3d false;\n/**\n * When set to logical true, objects will be printed in a way that preserves\n *   their type when read in later.\n * \n *   Defaults to false.\n */\ncljs.core._STAR_print_dup_STAR_ \x3d false;\n/**\n * *print-namespace-maps* controls whether the printer will print\n *   namespace map literal syntax.\n * \n *   Defaults to false, but the REPL binds it to true.\n */\ncljs.core._STAR_print_namespace_maps_STAR_ \x3d false;\n/**\n * *print-length* controls how many items of each collection the\n *   printer will print. If it is bound to logical false, there is no\n *   limit. Otherwise, it must be bound to an integer indicating the maximum\n *   number of items of each collection to print. If a collection contains\n *   more items, the printer will print items up to the limit followed by\n *   \x27...\x27 to represent the remaining items. The root binding is nil\n *   indicating no limit.\n * @type {null|number}\n */\ncljs.core._STAR_print_length_STAR_ \x3d null;\n/**\n * *print-level* controls how many levels deep the printer will\n *   print nested objects. If it is bound to logical false, there is no\n *   limit. Otherwise, it must be bound to an integer indicating the maximum\n *   level to print. Each argument to print is at level 0; if an argument is a\n *   collection, its items are at level 1; and so on. If an object is a\n *   collection and is at a level greater than or equal to the value bound to\n *   *print-level*, the printer prints \x27#\x27 to represent it. The root binding\n *   is nil indicating no limit.\n * @type {null|number}\n */\ncljs.core._STAR_print_level_STAR_ \x3d null;\n/**\n * *print-fns-bodies* controls whether functions print their source or\n *  only their names.\n */\ncljs.core._STAR_print_fn_bodies_STAR_ \x3d false;\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core._STAR_loaded_libs_STAR_ !\x3d\x3d \x27undefined\x27)){\n} else {\n/**\n * @type {*}\n */\ncljs.core._STAR_loaded_libs_STAR_ \x3d null;\n}\ncljs.core.pr_opts \x3d (function cljs$core$pr_opts(){\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22flush-on-newline\x22,\x22flush-on-newline\x22,-151457939),cljs.core._STAR_flush_on_newline_STAR_,new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760),cljs.core._STAR_print_readably_STAR_,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),cljs.core._STAR_print_meta_STAR_,new cljs.core.Keyword(null,\x22dup\x22,\x22dup\x22,556298533),cljs.core._STAR_print_dup_STAR_,new cljs.core.Keyword(null,\x22print-length\x22,\x22print-length\x22,1931866356),cljs.core._STAR_print_length_STAR_], null);\n});\n/**\n * Set *print-fn* to console.log\n */\ncljs.core.enable_console_print_BANG_ \x3d (function cljs$core$enable_console_print_BANG_(){\n(cljs.core._STAR_print_newline_STAR_ \x3d false);\n\ncljs.core.set_print_fn_BANG_((function (){\nvar xs \x3d arguments;\nreturn console.log.apply(console,cljs.core.goog$module$goog$array.clone(xs));\n}));\n\ncljs.core.set_print_err_fn_BANG_((function (){\nvar xs \x3d arguments;\nreturn console.error.apply(console,cljs.core.goog$module$goog$array.clone(xs));\n}));\n\nreturn null;\n});\n/**\n * Internal - do not use!\n */\ncljs.core.truth_ \x3d (function cljs$core$truth_(x){\nreturn (x !\x3d null \x26\x26 x !\x3d\x3d false);\n});\ncljs.core.not_native \x3d null;\n\n/**\n * Tests if 2 arguments are the same object\n */\ncljs.core.identical_QMARK_ \x3d (function cljs$core$identical_QMARK_(x,y){\nreturn (x \x3d\x3d\x3d y);\n});\n/**\n * Returns true if x is nil, false otherwise.\n */\ncljs.core.nil_QMARK_ \x3d (function cljs$core$nil_QMARK_(x){\nreturn (x \x3d\x3d null);\n});\n/**\n * Returns true if x is a JavaScript array.\n */\ncljs.core.array_QMARK_ \x3d (function cljs$core$array_QMARK_(x){\nif((cljs.core._STAR_target_STAR_ \x3d\x3d\x3d \x22nodejs\x22)){\nreturn Array.isArray(x);\n} else {\nreturn (x instanceof Array);\n}\n});\n/**\n * Returns true if x is a JavaScript number.\n */\ncljs.core.number_QMARK_ \x3d (function cljs$core$number_QMARK_(x){\nreturn typeof x \x3d\x3d\x3d \x27number\x27;\n});\n/**\n * Returns true if x is logical false, false otherwise.\n */\ncljs.core.not \x3d (function cljs$core$not(x){\nif((x \x3d\x3d null)){\nreturn true;\n} else {\nif(x \x3d\x3d\x3d false){\nreturn true;\n} else {\nreturn false;\n\n}\n}\n});\n/**\n * Returns true if x is not nil, false otherwise.\n */\ncljs.core.some_QMARK_ \x3d (function cljs$core$some_QMARK_(x){\nreturn (!((x \x3d\x3d null)));\n});\n/**\n * Returns true if x\x27s constructor is Object\n */\ncljs.core.object_QMARK_ \x3d (function cljs$core$object_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nreturn (x.constructor \x3d\x3d\x3d Object);\n} else {\nreturn false;\n}\n});\n/**\n * Returns true if x is a JavaScript string.\n */\ncljs.core.string_QMARK_ \x3d (function cljs$core$string_QMARK_(x){\nreturn (\x22string\x22 \x3d\x3d\x3d goog.typeOf(x));\n});\n/**\n * Returns true if x is a JavaScript string of length one.\n */\ncljs.core.char_QMARK_ \x3d (function cljs$core$char_QMARK_(x){\nreturn ((typeof x \x3d\x3d\x3d \x27string\x27) \x26\x26 (((1) \x3d\x3d\x3d x.length)));\n});\n/**\n * Returns true if given any argument.\n */\ncljs.core.any_QMARK_ \x3d (function cljs$core$any_QMARK_(x){\nreturn true;\n});\n/**\n * Internal - do not use!\n */\ncljs.core.native_satisfies_QMARK_ \x3d (function cljs$core$native_satisfies_QMARK_(p,x){\nvar x__$1 \x3d (((x \x3d\x3d null))?null:x);\nif((p[goog.typeOf(x__$1)])){\nreturn true;\n} else {\nif((p[\x22_\x22])){\nreturn true;\n} else {\nreturn false;\n\n}\n}\n});\ncljs.core.is_proto_ \x3d (function cljs$core$is_proto_(x){\nreturn (x.constructor.prototype \x3d\x3d\x3d x);\n});\n/**\n * When compiled for a command-line target, whatever function\n *   *main-cli-fn* is set to will be called with the command-line\n *   argv as arguments\n */\ncljs.core._STAR_main_cli_fn_STAR_ \x3d null;\n/**\n * A sequence of the supplied command line arguments, or nil if\n *   none were supplied\n */\ncljs.core._STAR_command_line_args_STAR_ \x3d null;\n/**\n * Return x\x27s constructor.\n */\ncljs.core.type \x3d (function cljs$core$type(x){\nif((x \x3d\x3d null)){\nreturn null;\n} else {\nreturn x.constructor;\n}\n});\ncljs.core.missing_protocol \x3d (function cljs$core$missing_protocol(proto,obj){\nvar ty \x3d cljs.core.type(obj);\nvar ty__$1 \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d ty;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn ty.cljs$lang$type;\n} else {\nreturn and__5043__auto__;\n}\n})())?ty.cljs$lang$ctorStr:goog.typeOf(obj));\nreturn (new Error([\x22No protocol method \x22,proto,\x22 defined for type \x22,ty__$1,\x22: \x22,obj].join(\x22\x22)));\n});\ncljs.core.type__GT_str \x3d (function cljs$core$type__GT_str(ty){\nvar temp__5802__auto__ \x3d ty.cljs$lang$ctorStr;\nif(cljs.core.truth_(temp__5802__auto__)){\nvar s \x3d temp__5802__auto__;\nreturn s;\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(ty);\n}\n});\ncljs.core.load_file \x3d (function cljs$core$load_file(file){\nif(cljs.core.truth_(COMPILED)){\nreturn null;\n} else {\nreturn goog.nodeGlobalRequire(file);\n}\n});\nif((((typeof Symbol !\x3d\x3d \x27undefined\x27)) \x26\x26 ((goog.typeOf(Symbol) \x3d\x3d\x3d \x22function\x22)))){\ncljs.core.ITER_SYMBOL \x3d Symbol.iterator;\n} else {\ncljs.core.ITER_SYMBOL \x3d \x22@@iterator\x22;\n}\n/**\n * @enum {string}\n */\ncljs.core.CHAR_MAP \x3d ({\x22]\x22: \x22_RBRACK_\x22, \x22\x27\x22: \x22_SINGLEQUOTE_\x22, \x22\x3d\x22: \x22_EQ_\x22, \x22\\\x22\x22: \x22_DOUBLEQUOTE_\x22, \x22!\x22: \x22_BANG_\x22, \x22*\x22: \x22_STAR_\x22, \x22%\x22: \x22_PERCENT_\x22, \x22|\x22: \x22_BAR_\x22, \x22~\x22: \x22_TILDE_\x22, \x22/\x22: \x22_SLASH_\x22, \x22\\\\\x22: \x22_BSLASH_\x22, \x22-\x22: \x22_\x22, \x22?\x22: \x22_QMARK_\x22, \x22\x26\x22: \x22_AMPERSAND_\x22, \x22:\x22: \x22_COLON_\x22, \x22\x3c\x22: \x22_LT_\x22, \x22{\x22: \x22_LBRACE_\x22, \x22}\x22: \x22_RBRACE_\x22, \x22[\x22: \x22_LBRACK_\x22, \x22#\x22: \x22_SHARP_\x22, \x22^\x22: \x22_CARET_\x22, \x22+\x22: \x22_PLUS_\x22, \x22@\x22: \x22_CIRCA_\x22, \x22\x3e\x22: \x22_GT_\x22});\n/**\n * @enum {string}\n */\ncljs.core.DEMUNGE_MAP \x3d ({\x22_RBRACE_\x22: \x22}\x22, \x22_COLON_\x22: \x22:\x22, \x22_BANG_\x22: \x22!\x22, \x22_QMARK_\x22: \x22?\x22, \x22_BSLASH_\x22: \x22\\\\\\\\\x22, \x22_SLASH_\x22: \x22/\x22, \x22_PERCENT_\x22: \x22%\x22, \x22_PLUS_\x22: \x22+\x22, \x22_SHARP_\x22: \x22#\x22, \x22_LBRACE_\x22: \x22{\x22, \x22_BAR_\x22: \x22|\x22, \x22_LBRACK_\x22: \x22[\x22, \x22_EQ_\x22: \x22\x3d\x22, \x22_\x22: \x22-\x22, \x22_TILDE_\x22: \x22~\x22, \x22_RBRACK_\x22: \x22]\x22, \x22_GT_\x22: \x22\x3e\x22, \x22_SINGLEQUOTE_\x22: \x22\x27\x22, \x22_CIRCA_\x22: \x22@\x22, \x22_AMPERSAND_\x22: \x22\x26\x22, \x22_DOUBLEQUOTE_\x22: \x22\\\\\\\x22\x22, \x22_CARET_\x22: \x22^\x22, \x22_LT_\x22: \x22\x3c\x22, \x22_STAR_\x22: \x22*\x22});\ncljs.core.DEMUNGE_PATTERN \x3d null;\n/**\n * Returns highest resolution time offered by host in milliseconds.\n */\ncljs.core.system_time \x3d (function cljs$core$system_time(){\nif((((typeof performance !\x3d\x3d \x27undefined\x27)) \x26\x26 ((!((performance.now \x3d\x3d null)))))){\nreturn performance.now();\n} else {\nif((((typeof process !\x3d\x3d \x27undefined\x27)) \x26\x26 ((!((process.hrtime \x3d\x3d null)))))){\nvar t \x3d process.hrtime();\nreturn ((((t[(0)]) * 1.0E9) + (t[(1)])) / 1000000.0);\n} else {\nreturn (new Date()).getTime();\n\n}\n}\n});\n/**\n * Construct a JavaScript array of the specified dimensions. Accepts ignored\n *   type argument for compatibility with Clojure. Note that there is no efficient\n *   way to allocate multi-dimensional arrays in JavaScript; as such, this function\n *   will run in polynomial time when called with 3 or more arguments.\n */\ncljs.core.make_array \x3d (function cljs$core$make_array(var_args){\nvar G__9711 \x3d arguments.length;\nswitch (G__9711) {\ncase 1:\nreturn cljs.core.make_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.make_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___11260 \x3d arguments.length;\nvar i__5770__auto___11261 \x3d (0);\nwhile(true){\nif((i__5770__auto___11261 \x3c len__5769__auto___11260)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___11261]));\n\nvar G__11264 \x3d (i__5770__auto___11261 + (1));\ni__5770__auto___11261 \x3d G__11264;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.make_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (size){\nreturn (new Array(size));\n}));\n\n(cljs.core.make_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (type,size){\nreturn (new Array(size));\n}));\n\n(cljs.core.make_array.cljs$core$IFn$_invoke$arity$variadic \x3d (function (type,size,more_sizes){\nvar dims \x3d more_sizes;\nvar dimarray \x3d (new Array(size));\nvar n__5636__auto___11273 \x3d dimarray.length;\nvar i_11274 \x3d (0);\nwhile(true){\nif((i_11274 \x3c n__5636__auto___11273)){\n(dimarray[i_11274] \x3d (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.make_array,null,dims) : cljs.core.apply.call(null,cljs.core.make_array,null,dims)));\n\nvar G__11275 \x3d (i_11274 + (1));\ni_11274 \x3d G__11275;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn dimarray;\n}));\n\n/** @this {Function} */\n(cljs.core.make_array.cljs$lang$applyTo \x3d (function (seq9708){\nvar G__9709 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9708) : cljs.core.first.call(null,seq9708));\nvar seq9708__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9708) : cljs.core.next.call(null,seq9708));\nvar G__9710 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9708__$1) : cljs.core.first.call(null,seq9708__$1));\nvar seq9708__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9708__$1) : cljs.core.next.call(null,seq9708__$1));\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9709,G__9710,seq9708__$2);\n}));\n\n(cljs.core.make_array.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns a javascript array, cloned from the passed in array\n */\ncljs.core.aclone \x3d (function cljs$core$aclone(arr){\nvar len \x3d arr.length;\nvar new_arr \x3d (new Array(len));\nvar n__5636__auto___11279 \x3d len;\nvar i_11280 \x3d (0);\nwhile(true){\nif((i_11280 \x3c n__5636__auto___11279)){\n(new_arr[i_11280] \x3d (arr[i_11280]));\n\nvar G__11283 \x3d (i_11280 + (1));\ni_11280 \x3d G__11283;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn new_arr;\n});\n/**\n * Creates a new javascript array.\n * @param {...*} var_args\n */\ncljs.core.array \x3d (function cljs$core$array(var_args){\nvar a \x3d (new Array(arguments.length));\nvar i \x3d (0);\nwhile(true){\nif((i \x3c a.length)){\n(a[i] \x3d (arguments[i]));\n\nvar G__11284 \x3d (i + (1));\ni \x3d G__11284;\ncontinue;\n} else {\nreturn a;\n}\nbreak;\n}\n});\ncljs.core.maybe_warn \x3d (function cljs$core$maybe_warn(e){\nif(cljs.core.truth_(cljs.core._STAR_print_err_fn_STAR_)){\nreturn cljs.core._STAR_print_err_fn_STAR_.call(null,e);\n} else {\nreturn null;\n}\n});\ncljs.core.checked_aget \x3d (function cljs$core$checked_aget(var_args){\nvar G__9716 \x3d arguments.length;\nswitch (G__9716) {\ncase 2:\nreturn cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___11294 \x3d arguments.length;\nvar i__5770__auto___11295 \x3d (0);\nwhile(true){\nif((i__5770__auto___11295 \x3c len__5769__auto___11294)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___11295]));\n\nvar G__11297 \x3d (i__5770__auto___11295 + (1));\ni__5770__auto___11295 \x3d G__11297;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2 \x3d (function (array,idx){\ntry{if(cljs.core.truth_((function (){var or__5045__auto__ \x3d cljs.core.array_QMARK_(array);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn goog.isArrayLike(array);\n}\n})())){\n} else {\nthrow (new Error(\x22Assert failed: (or (array? array) (goog/isArrayLike array))\x22));\n}\n\nif(typeof idx \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? idx)\x22));\n}\n\nif((!((idx \x3c (0))))){\n} else {\nthrow (new Error(\x22Assert failed: (not (neg? idx))\x22));\n}\n\nif((idx \x3c array.length)){\n} else {\nthrow (new Error(\x22Assert failed: (\x3c idx (alength array))\x22));\n}\n}catch (e9717){var e_11307 \x3d e9717;\ncljs.core.maybe_warn(e_11307);\n}\nreturn (array[idx]);\n}));\n\n(cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idxs){\nvar G__9718 \x3d cljs.core.checked_aget;\nvar G__9719 \x3d cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array,idx);\nvar G__9720 \x3d idxs;\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__9718,G__9719,G__9720) : cljs.core.apply.call(null,G__9718,G__9719,G__9720));\n}));\n\n/** @this {Function} */\n(cljs.core.checked_aget.cljs$lang$applyTo \x3d (function (seq9713){\nvar G__9714 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9713) : cljs.core.first.call(null,seq9713));\nvar seq9713__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9713) : cljs.core.next.call(null,seq9713));\nvar G__9715 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9713__$1) : cljs.core.first.call(null,seq9713__$1));\nvar seq9713__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9713__$1) : cljs.core.next.call(null,seq9713__$1));\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9714,G__9715,seq9713__$2);\n}));\n\n(cljs.core.checked_aget.cljs$lang$maxFixedArity \x3d (2));\n\ncljs.core.checked_aset \x3d (function cljs$core$checked_aset(var_args){\nvar G__9726 \x3d arguments.length;\nswitch (G__9726) {\ncase 3:\nreturn cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___11320 \x3d arguments.length;\nvar i__5770__auto___11321 \x3d (0);\nwhile(true){\nif((i__5770__auto___11321 \x3c len__5769__auto___11320)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___11321]));\n\nvar G__11327 \x3d (i__5770__auto___11321 + (1));\ni__5770__auto___11321 \x3d G__11327;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$3 \x3d (function (array,idx,val){\ntry{if(cljs.core.truth_((function (){var or__5045__auto__ \x3d cljs.core.array_QMARK_(array);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn goog.isArrayLike(array);\n}\n})())){\n} else {\nthrow (new Error(\x22Assert failed: (or (array? array) (goog/isArrayLike array))\x22));\n}\n\nif(typeof idx \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? idx)\x22));\n}\n\nif((!((idx \x3c (0))))){\n} else {\nthrow (new Error(\x22Assert failed: (not (neg? idx))\x22));\n}\n\nif((idx \x3c array.length)){\n} else {\nthrow (new Error(\x22Assert failed: (\x3c idx (alength array))\x22));\n}\n}catch (e9727){var e_11335 \x3d e9727;\ncljs.core.maybe_warn(e_11335);\n}\nreturn (array[idx] \x3d val);\n}));\n\n(cljs.core.checked_aset.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idx2,idxv){\nvar G__9728 \x3d cljs.core.checked_aset;\nvar G__9729 \x3d cljs.core.checked_aget.cljs$core$IFn$_invoke$arity$2(array,idx);\nvar G__9730 \x3d idx2;\nvar G__9731 \x3d idxv;\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__9728,G__9729,G__9730,G__9731) : cljs.core.apply.call(null,G__9728,G__9729,G__9730,G__9731));\n}));\n\n/** @this {Function} */\n(cljs.core.checked_aset.cljs$lang$applyTo \x3d (function (seq9722){\nvar G__9723 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9722) : cljs.core.first.call(null,seq9722));\nvar seq9722__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9722) : cljs.core.next.call(null,seq9722));\nvar G__9724 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9722__$1) : cljs.core.first.call(null,seq9722__$1));\nvar seq9722__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9722__$1) : cljs.core.next.call(null,seq9722__$1));\nvar G__9725 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9722__$2) : cljs.core.first.call(null,seq9722__$2));\nvar seq9722__$3 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9722__$2) : cljs.core.next.call(null,seq9722__$2));\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9723,G__9724,G__9725,seq9722__$3);\n}));\n\n(cljs.core.checked_aset.cljs$lang$maxFixedArity \x3d (3));\n\ncljs.core.checked_aget_SINGLEQUOTE_ \x3d (function cljs$core$checked_aget_SINGLEQUOTE_(var_args){\nvar G__9736 \x3d arguments.length;\nswitch (G__9736) {\ncase 2:\nreturn cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___11351 \x3d arguments.length;\nvar i__5770__auto___11353 \x3d (0);\nwhile(true){\nif((i__5770__auto___11353 \x3c len__5769__auto___11351)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___11353]));\n\nvar G__11354 \x3d (i__5770__auto___11353 + (1));\ni__5770__auto___11353 \x3d G__11354;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 \x3d (function (array,idx){\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d cljs.core.array_QMARK_(array);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn goog.isArrayLike(array);\n}\n})())){\n} else {\nthrow (new Error(\x22Assert failed: (or (array? array) (goog/isArrayLike array))\x22));\n}\n\nif(typeof idx \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? idx)\x22));\n}\n\nif((!((idx \x3c (0))))){\n} else {\nthrow (new Error(\x22Assert failed: (not (neg? idx))\x22));\n}\n\nif((idx \x3c array.length)){\n} else {\nthrow (new Error(\x22Assert failed: (\x3c idx (alength array))\x22));\n}\n\nreturn (array[idx]);\n}));\n\n(cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idxs){\nvar G__9737 \x3d cljs.core.checked_aget_SINGLEQUOTE_;\nvar G__9738 \x3d cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array,idx);\nvar G__9739 \x3d idxs;\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__9737,G__9738,G__9739) : cljs.core.apply.call(null,G__9737,G__9738,G__9739));\n}));\n\n/** @this {Function} */\n(cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$applyTo \x3d (function (seq9733){\nvar G__9734 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9733) : cljs.core.first.call(null,seq9733));\nvar seq9733__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9733) : cljs.core.next.call(null,seq9733));\nvar G__9735 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9733__$1) : cljs.core.first.call(null,seq9733__$1));\nvar seq9733__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9733__$1) : cljs.core.next.call(null,seq9733__$1));\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9734,G__9735,seq9733__$2);\n}));\n\n(cljs.core.checked_aget_SINGLEQUOTE_.cljs$lang$maxFixedArity \x3d (2));\n\ncljs.core.checked_aset_SINGLEQUOTE_ \x3d (function cljs$core$checked_aset_SINGLEQUOTE_(var_args){\nvar G__9745 \x3d arguments.length;\nswitch (G__9745) {\ncase 3:\nreturn cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___11376 \x3d arguments.length;\nvar i__5770__auto___11378 \x3d (0);\nwhile(true){\nif((i__5770__auto___11378 \x3c len__5769__auto___11376)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___11378]));\n\nvar G__11380 \x3d (i__5770__auto___11378 + (1));\ni__5770__auto___11378 \x3d G__11380;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$3 \x3d (function (array,idx,val){\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d cljs.core.array_QMARK_(array);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn goog.isArrayLike(array);\n}\n})())){\n} else {\nthrow (new Error(\x22Assert failed: (or (array? array) (goog/isArrayLike array))\x22));\n}\n\nif(typeof idx \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? idx)\x22));\n}\n\nif((!((idx \x3c (0))))){\n} else {\nthrow (new Error(\x22Assert failed: (not (neg? idx))\x22));\n}\n\nif((idx \x3c array.length)){\n} else {\nthrow (new Error(\x22Assert failed: (\x3c idx (alength array))\x22));\n}\n\nreturn (array[idx] \x3d val);\n}));\n\n(cljs.core.checked_aset_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idx2,idxv){\nvar G__9746 \x3d cljs.core.checked_aset_SINGLEQUOTE_;\nvar G__9747 \x3d cljs.core.checked_aget_SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(array,idx);\nvar G__9748 \x3d idx2;\nvar G__9749 \x3d idxv;\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__9746,G__9747,G__9748,G__9749) : cljs.core.apply.call(null,G__9746,G__9747,G__9748,G__9749));\n}));\n\n/** @this {Function} */\n(cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$applyTo \x3d (function (seq9741){\nvar G__9742 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9741) : cljs.core.first.call(null,seq9741));\nvar seq9741__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9741) : cljs.core.next.call(null,seq9741));\nvar G__9743 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9741__$1) : cljs.core.first.call(null,seq9741__$1));\nvar seq9741__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9741__$1) : cljs.core.next.call(null,seq9741__$1));\nvar G__9744 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9741__$2) : cljs.core.first.call(null,seq9741__$2));\nvar seq9741__$3 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9741__$2) : cljs.core.next.call(null,seq9741__$2));\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9742,G__9743,G__9744,seq9741__$3);\n}));\n\n(cljs.core.checked_aset_SINGLEQUOTE_.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * Returns the value at the index/indices. Works on JavaScript arrays.\n */\ncljs.core.aget \x3d (function cljs$core$aget(var_args){\nvar G__9754 \x3d arguments.length;\nswitch (G__9754) {\ncase 2:\nreturn cljs.core.aget.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___11412 \x3d arguments.length;\nvar i__5770__auto___11413 \x3d (0);\nwhile(true){\nif((i__5770__auto___11413 \x3c len__5769__auto___11412)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___11413]));\n\nvar G__11417 \x3d (i__5770__auto___11413 + (1));\ni__5770__auto___11413 \x3d G__11417;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.aget.cljs$core$IFn$_invoke$arity$2 \x3d (function (array,idx){\nreturn (array[idx]);\n}));\n\n(cljs.core.aget.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idxs){\nvar G__9755 \x3d cljs.core.aget;\nvar G__9756 \x3d (array[idx]);\nvar G__9757 \x3d idxs;\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__9755,G__9756,G__9757) : cljs.core.apply.call(null,G__9755,G__9756,G__9757));\n}));\n\n/** @this {Function} */\n(cljs.core.aget.cljs$lang$applyTo \x3d (function (seq9751){\nvar G__9752 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9751) : cljs.core.first.call(null,seq9751));\nvar seq9751__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9751) : cljs.core.next.call(null,seq9751));\nvar G__9753 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9751__$1) : cljs.core.first.call(null,seq9751__$1));\nvar seq9751__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9751__$1) : cljs.core.next.call(null,seq9751__$1));\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9752,G__9753,seq9751__$2);\n}));\n\n(cljs.core.aget.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Sets the value at the index/indices. Works on JavaScript arrays.\n *   Returns val.\n */\ncljs.core.aset \x3d (function cljs$core$aset(var_args){\nvar G__9763 \x3d arguments.length;\nswitch (G__9763) {\ncase 3:\nreturn cljs.core.aset.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___11431 \x3d arguments.length;\nvar i__5770__auto___11432 \x3d (0);\nwhile(true){\nif((i__5770__auto___11432 \x3c len__5769__auto___11431)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___11432]));\n\nvar G__11433 \x3d (i__5770__auto___11432 + (1));\ni__5770__auto___11432 \x3d G__11433;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.aset.cljs$core$IFn$_invoke$arity$3 \x3d (function (array,idx,val){\nreturn (array[idx] \x3d val);\n}));\n\n(cljs.core.aset.cljs$core$IFn$_invoke$arity$variadic \x3d (function (array,idx,idx2,idxv){\nvar G__9764 \x3d cljs.core.aset;\nvar G__9765 \x3d (array[idx]);\nvar G__9766 \x3d idx2;\nvar G__9767 \x3d idxv;\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__9764,G__9765,G__9766,G__9767) : cljs.core.apply.call(null,G__9764,G__9765,G__9766,G__9767));\n}));\n\n/** @this {Function} */\n(cljs.core.aset.cljs$lang$applyTo \x3d (function (seq9759){\nvar G__9760 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9759) : cljs.core.first.call(null,seq9759));\nvar seq9759__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9759) : cljs.core.next.call(null,seq9759));\nvar G__9761 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9759__$1) : cljs.core.first.call(null,seq9759__$1));\nvar seq9759__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9759__$1) : cljs.core.next.call(null,seq9759__$1));\nvar G__9762 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9759__$2) : cljs.core.first.call(null,seq9759__$2));\nvar seq9759__$3 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9759__$2) : cljs.core.next.call(null,seq9759__$2));\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9760,G__9761,G__9762,seq9759__$3);\n}));\n\n(cljs.core.aset.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * Returns the length of the array. Works on arrays of all types.\n */\ncljs.core.alength \x3d (function cljs$core$alength(array){\nreturn array.length;\n});\n/**\n * Returns an array with components set to the values in aseq. Optional type\n *   argument accepted for compatibility with Clojure.\n */\ncljs.core.into_array \x3d (function cljs$core$into_array(var_args){\nvar G__9769 \x3d arguments.length;\nswitch (G__9769) {\ncase 1:\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (aseq){\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);\n}));\n\n(cljs.core.into_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (type,aseq){\nvar G__9770 \x3d (function (a,x){\na.push(x);\n\nreturn a;\n});\nvar G__9771 \x3d [];\nvar G__9772 \x3d aseq;\nreturn (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__9770,G__9771,G__9772) : cljs.core.reduce.call(null,G__9770,G__9771,G__9772));\n}));\n\n(cljs.core.into_array.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Invoke JavaScript object method via string. Needed when the\n *   string is not a valid unquoted property name.\n */\ncljs.core.js_invoke \x3d (function cljs$core$js_invoke(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___11454 \x3d arguments.length;\nvar i__5770__auto___11455 \x3d (0);\nwhile(true){\nif((i__5770__auto___11455 \x3c len__5769__auto___11454)){\nargs__5775__auto__.push((arguments[i__5770__auto___11455]));\n\nvar G__11458 \x3d (i__5770__auto___11455 + (1));\ni__5770__auto___11455 \x3d G__11458;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(cljs.core.js_invoke.cljs$core$IFn$_invoke$arity$variadic \x3d (function (obj,s,args){\nreturn (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));\n}));\n\n(cljs.core.js_invoke.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(cljs.core.js_invoke.cljs$lang$applyTo \x3d (function (seq9773){\nvar G__9774 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9773) : cljs.core.first.call(null,seq9773));\nvar seq9773__$1 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9773) : cljs.core.next.call(null,seq9773));\nvar G__9775 \x3d (cljs.core.first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.first.cljs$core$IFn$_invoke$arity$1(seq9773__$1) : cljs.core.first.call(null,seq9773__$1));\nvar seq9773__$2 \x3d (cljs.core.next.cljs$core$IFn$_invoke$arity$1 ? cljs.core.next.cljs$core$IFn$_invoke$arity$1(seq9773__$1) : cljs.core.next.call(null,seq9773__$1));\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9774,G__9775,seq9773__$2);\n}));\n\n/**\n * Returns true if x is an instance of Symbol\n */\ncljs.core.js_symbol_QMARK_ \x3d (function cljs$core$js_symbol_QMARK_(x){\nreturn (((goog.typeOf(x) \x3d\x3d\x3d \x22symbol\x22)) || ((((typeof Symbol !\x3d\x3d \x27undefined\x27)) \x26\x26 ((x instanceof Symbol)))));\n});\n\n/**\n * Marker protocol\n * @interface\n */\ncljs.core.Fn \x3d function(){};\n\n\n/**\n * Protocol for adding the ability to invoke an object as a function.\n *   For example, a vector can also be used to look up a value:\n *   ([1 2 3 4] 1) \x3d\x3e 2\n * @interface\n */\ncljs.core.IFn \x3d function(){};\n\nvar cljs$core$IFn$_invoke$dyn_11459 \x3d (function() {\nvar G__11460 \x3d null;\nvar G__11460__1 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__2 \x3d (function (this$,a){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,a) : m__5394__auto__.call(null,this$,a));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,a) : m__5392__auto__.call(null,this$,a));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__3 \x3d (function (this$,a,b){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(this$,a,b) : m__5394__auto__.call(null,this$,a,b));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(this$,a,b) : m__5392__auto__.call(null,this$,a,b));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__4 \x3d (function (this$,a,b,c){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$4(this$,a,b,c) : m__5394__auto__.call(null,this$,a,b,c));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$4(this$,a,b,c) : m__5392__auto__.call(null,this$,a,b,c));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__5 \x3d (function (this$,a,b,c,d){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d) : m__5394__auto__.call(null,this$,a,b,c,d));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d) : m__5392__auto__.call(null,this$,a,b,c,d));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__6 \x3d (function (this$,a,b,c,d,e){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$6 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e) : m__5394__auto__.call(null,this$,a,b,c,d,e));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$6 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e) : m__5392__auto__.call(null,this$,a,b,c,d,e));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__7 \x3d (function (this$,a,b,c,d,e,f){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$7 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f) : m__5394__auto__.call(null,this$,a,b,c,d,e,f));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$7 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f) : m__5392__auto__.call(null,this$,a,b,c,d,e,f));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__8 \x3d (function (this$,a,b,c,d,e,f,g){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$8 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$8 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__9 \x3d (function (this$,a,b,c,d,e,f,g,h){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$9 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$9 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__10 \x3d (function (this$,a,b,c,d,e,f,g,h,i){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$10 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$10 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__11 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$11 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$11 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__12 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$12 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$12 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__13 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$13 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$13 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__14 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$14 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$14 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__15 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$15 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$15 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__16 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$16 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$16 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__17 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$17 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$17 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__18 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$18 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$18 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__19 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$19 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$19 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__20 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$20 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$20 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__21 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$21 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$21 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nvar G__11460__22 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._invoke[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$22 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest) : m__5394__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._invoke[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$22 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest) : m__5392__auto__.call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest));\n} else {\nthrow cljs.core.missing_protocol(\x22IFn.-invoke\x22,this$);\n}\n}\n});\nG__11460 \x3d function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\nswitch(arguments.length){\ncase 1:\nreturn G__11460__1.call(this,this$);\ncase 2:\nreturn G__11460__2.call(this,this$,a);\ncase 3:\nreturn G__11460__3.call(this,this$,a,b);\ncase 4:\nreturn G__11460__4.call(this,this$,a,b,c);\ncase 5:\nreturn G__11460__5.call(this,this$,a,b,c,d);\ncase 6:\nreturn G__11460__6.call(this,this$,a,b,c,d,e);\ncase 7:\nreturn G__11460__7.call(this,this$,a,b,c,d,e,f);\ncase 8:\nreturn G__11460__8.call(this,this$,a,b,c,d,e,f,g);\ncase 9:\nreturn G__11460__9.call(this,this$,a,b,c,d,e,f,g,h);\ncase 10:\nreturn G__11460__10.call(this,this$,a,b,c,d,e,f,g,h,i);\ncase 11:\nreturn G__11460__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);\ncase 12:\nreturn G__11460__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);\ncase 13:\nreturn G__11460__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);\ncase 14:\nreturn G__11460__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);\ncase 15:\nreturn G__11460__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);\ncase 16:\nreturn G__11460__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);\ncase 17:\nreturn G__11460__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);\ncase 18:\nreturn G__11460__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);\ncase 19:\nreturn G__11460__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);\ncase 20:\nreturn G__11460__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);\ncase 21:\nreturn G__11460__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);\ncase 22:\nreturn G__11460__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__11460.cljs$core$IFn$_invoke$arity$1 \x3d G__11460__1;\nG__11460.cljs$core$IFn$_invoke$arity$2 \x3d G__11460__2;\nG__11460.cljs$core$IFn$_invoke$arity$3 \x3d G__11460__3;\nG__11460.cljs$core$IFn$_invoke$arity$4 \x3d G__11460__4;\nG__11460.cljs$core$IFn$_invoke$arity$5 \x3d G__11460__5;\nG__11460.cljs$core$IFn$_invoke$arity$6 \x3d G__11460__6;\nG__11460.cljs$core$IFn$_invoke$arity$7 \x3d G__11460__7;\nG__11460.cljs$core$IFn$_invoke$arity$8 \x3d G__11460__8;\nG__11460.cljs$core$IFn$_invoke$arity$9 \x3d G__11460__9;\nG__11460.cljs$core$IFn$_invoke$arity$10 \x3d G__11460__10;\nG__11460.cljs$core$IFn$_invoke$arity$11 \x3d G__11460__11;\nG__11460.cljs$core$IFn$_invoke$arity$12 \x3d G__11460__12;\nG__11460.cljs$core$IFn$_invoke$arity$13 \x3d G__11460__13;\nG__11460.cljs$core$IFn$_invoke$arity$14 \x3d G__11460__14;\nG__11460.cljs$core$IFn$_invoke$arity$15 \x3d G__11460__15;\nG__11460.cljs$core$IFn$_invoke$arity$16 \x3d G__11460__16;\nG__11460.cljs$core$IFn$_invoke$arity$17 \x3d G__11460__17;\nG__11460.cljs$core$IFn$_invoke$arity$18 \x3d G__11460__18;\nG__11460.cljs$core$IFn$_invoke$arity$19 \x3d G__11460__19;\nG__11460.cljs$core$IFn$_invoke$arity$20 \x3d G__11460__20;\nG__11460.cljs$core$IFn$_invoke$arity$21 \x3d G__11460__21;\nG__11460.cljs$core$IFn$_invoke$arity$22 \x3d G__11460__22;\nreturn G__11460;\n})()\n;\ncljs.core._invoke \x3d (function cljs$core$_invoke(var_args){\nvar G__9777 \x3d arguments.length;\nswitch (G__9777) {\ncase 1:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase 6:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ncase 7:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$7((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\n\nbreak;\ncase 8:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$8((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\n\nbreak;\ncase 9:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$9((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\n\nbreak;\ncase 10:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$10((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\n\nbreak;\ncase 11:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$11((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\n\nbreak;\ncase 12:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$12((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\n\nbreak;\ncase 13:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$13((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));\n\nbreak;\ncase 14:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$14((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\n\nbreak;\ncase 15:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$15((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));\n\nbreak;\ncase 16:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$16((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\n\nbreak;\ncase 17:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$17((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));\n\nbreak;\ncase 18:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$18((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\n\nbreak;\ncase 19:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$19((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));\n\nbreak;\ncase 20:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$20((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\n\nbreak;\ncase 21:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$21((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));\n\nbreak;\ncase 22:\nreturn cljs.core._invoke.cljs$core$IFn$_invoke$arity$22((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$1 \x3d (function (this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$1 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$1(this$);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$2 \x3d (function (this$,a){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$2 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$2(this$,a);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$3 \x3d (function (this$,a,b){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$3 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$4 \x3d (function (this$,a,b,c){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$4 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$5 \x3d (function (this$,a,b,c,d){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$5 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$6 \x3d (function (this$,a,b,c,d,e){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$6 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$7 \x3d (function (this$,a,b,c,d,e,f){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$7 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$8 \x3d (function (this$,a,b,c,d,e,f,g){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$8 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$9 \x3d (function (this$,a,b,c,d,e,f,g,h){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$9 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$10 \x3d (function (this$,a,b,c,d,e,f,g,h,i){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$10 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$11 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$11 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$12 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$12 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$13 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$13 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k,l);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$14 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$14 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$15 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$15 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$16 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$16 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$17 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$17 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$18 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$18 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$19 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$19 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$20 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$20 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$21 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$21 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);\n}\n}));\n\n(cljs.core._invoke.cljs$core$IFn$_invoke$arity$22 \x3d (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IFn$_invoke$arity$22 \x3d\x3d null)))))){\nreturn this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);\n} else {\nreturn cljs$core$IFn$_invoke$dyn_11459(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);\n}\n}));\n\n(cljs.core._invoke.cljs$lang$maxFixedArity \x3d 22);\n\n\n\n/**\n * Protocol for cloning a value.\n * @interface\n */\ncljs.core.ICloneable \x3d function(){};\n\nvar cljs$core$ICloneable$_clone$dyn_11807 \x3d (function (value){\nvar x__5393__auto__ \x3d (((value \x3d\x3d null))?null:value);\nvar m__5394__auto__ \x3d (cljs.core._clone[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5394__auto__.call(null,value));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._clone[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5392__auto__.call(null,value));\n} else {\nthrow cljs.core.missing_protocol(\x22ICloneable.-clone\x22,value);\n}\n}\n});\n/**\n * Creates a clone of value.\n */\ncljs.core._clone \x3d (function cljs$core$_clone(value){\nif((((!((value \x3d\x3d null)))) \x26\x26 ((!((value.cljs$core$ICloneable$_clone$arity$1 \x3d\x3d null)))))){\nreturn value.cljs$core$ICloneable$_clone$arity$1(value);\n} else {\nreturn cljs$core$ICloneable$_clone$dyn_11807(value);\n}\n});\n\n\n/**\n * Protocol for adding the ability to count a collection in constant time.\n * @interface\n */\ncljs.core.ICounted \x3d function(){};\n\nvar cljs$core$ICounted$_count$dyn_11818 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._count[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._count[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22ICounted.-count\x22,coll);\n}\n}\n});\n/**\n * Calculates the count of coll in constant time. Used by cljs.core/count.\n */\ncljs.core._count \x3d (function cljs$core$_count(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ICounted$_count$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$ICounted$_count$arity$1(coll);\n} else {\nreturn cljs$core$ICounted$_count$dyn_11818(coll);\n}\n});\n\n\n/**\n * Protocol for creating an empty collection.\n * @interface\n */\ncljs.core.IEmptyableCollection \x3d function(){};\n\nvar cljs$core$IEmptyableCollection$_empty$dyn_11827 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._empty[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._empty[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IEmptyableCollection.-empty\x22,coll);\n}\n}\n});\n/**\n * Returns an empty collection of the same category as coll. Used\n *   by cljs.core/empty.\n */\ncljs.core._empty \x3d (function cljs$core$_empty(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);\n} else {\nreturn cljs$core$IEmptyableCollection$_empty$dyn_11827(coll);\n}\n});\n\n\n/**\n * Protocol for adding to a collection.\n * @interface\n */\ncljs.core.ICollection \x3d function(){};\n\nvar cljs$core$ICollection$_conj$dyn_11835 \x3d (function (coll,o){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._conj[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(coll,o) : m__5394__auto__.call(null,coll,o));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._conj[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(coll,o) : m__5392__auto__.call(null,coll,o));\n} else {\nthrow cljs.core.missing_protocol(\x22ICollection.-conj\x22,coll);\n}\n}\n});\n/**\n * Returns a new collection of coll with o added to it. The new item\n *   should be added to the most efficient place, e.g.\n *   (conj [1 2 3 4] 5) \x3d\x3e [1 2 3 4 5]\n *   (conj \x27(2 3 4 5) 1) \x3d\x3e \x27(1 2 3 4 5)\n */\ncljs.core._conj \x3d (function cljs$core$_conj(coll,o){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ICollection$_conj$arity$2 \x3d\x3d null)))))){\nreturn coll.cljs$core$ICollection$_conj$arity$2(coll,o);\n} else {\nreturn cljs$core$ICollection$_conj$dyn_11835(coll,o);\n}\n});\n\n\n/**\n * Protocol for collections to provide indexed-based access to their items.\n * @interface\n */\ncljs.core.IIndexed \x3d function(){};\n\nvar cljs$core$IIndexed$_nth$dyn_11844 \x3d (function() {\nvar G__11845 \x3d null;\nvar G__11845__2 \x3d (function (coll,n){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._nth[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(coll,n) : m__5394__auto__.call(null,coll,n));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._nth[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(coll,n) : m__5392__auto__.call(null,coll,n));\n} else {\nthrow cljs.core.missing_protocol(\x22IIndexed.-nth\x22,coll);\n}\n}\n});\nvar G__11845__3 \x3d (function (coll,n,not_found){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._nth[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,not_found) : m__5394__auto__.call(null,coll,n,not_found));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._nth[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,not_found) : m__5392__auto__.call(null,coll,n,not_found));\n} else {\nthrow cljs.core.missing_protocol(\x22IIndexed.-nth\x22,coll);\n}\n}\n});\nG__11845 \x3d function(coll,n,not_found){\nswitch(arguments.length){\ncase 2:\nreturn G__11845__2.call(this,coll,n);\ncase 3:\nreturn G__11845__3.call(this,coll,n,not_found);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__11845.cljs$core$IFn$_invoke$arity$2 \x3d G__11845__2;\nG__11845.cljs$core$IFn$_invoke$arity$3 \x3d G__11845__3;\nreturn G__11845;\n})()\n;\n/**\n * Returns the value at the index n in the collection coll.\n *   Returns not-found if index n is out of bounds and not-found is supplied.\n */\ncljs.core._nth \x3d (function cljs$core$_nth(var_args){\nvar G__9779 \x3d arguments.length;\nswitch (G__9779) {\ncase 2:\nreturn cljs.core._nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core._nth.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core._nth.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,n){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IIndexed$_nth$arity$2 \x3d\x3d null)))))){\nreturn coll.cljs$core$IIndexed$_nth$arity$2(coll,n);\n} else {\nreturn cljs$core$IIndexed$_nth$dyn_11844(coll,n);\n}\n}));\n\n(cljs.core._nth.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,n,not_found){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IIndexed$_nth$arity$3 \x3d\x3d null)))))){\nreturn coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);\n} else {\nreturn cljs$core$IIndexed$_nth$dyn_11844(coll,n,not_found);\n}\n}));\n\n(cljs.core._nth.cljs$lang$maxFixedArity \x3d 3);\n\n\n\n/**\n * Marker protocol indicating an array sequence.\n * @interface\n */\ncljs.core.ASeq \x3d function(){};\n\n\n/**\n * Protocol for collections to provide access to their items as sequences.\n * @interface\n */\ncljs.core.ISeq \x3d function(){};\n\nvar cljs$core$ISeq$_first$dyn_11873 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._first[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._first[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22ISeq.-first\x22,coll);\n}\n}\n});\n/**\n * Returns the first item in the collection coll. Used by cljs.core/first.\n */\ncljs.core._first \x3d (function cljs$core$_first(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISeq$_first$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$ISeq$_first$arity$1(coll);\n} else {\nreturn cljs$core$ISeq$_first$dyn_11873(coll);\n}\n});\n\nvar cljs$core$ISeq$_rest$dyn_11888 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._rest[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._rest[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22ISeq.-rest\x22,coll);\n}\n}\n});\n/**\n * Returns a new collection of coll without the first item. It should\n *   always return a seq, e.g.\n *   (rest []) \x3d\x3e ()\n *   (rest nil) \x3d\x3e ()\n */\ncljs.core._rest \x3d (function cljs$core$_rest(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISeq$_rest$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$ISeq$_rest$arity$1(coll);\n} else {\nreturn cljs$core$ISeq$_rest$dyn_11888(coll);\n}\n});\n\n\n/**\n * Protocol for accessing the next items of a collection.\n * @interface\n */\ncljs.core.INext \x3d function(){};\n\nvar cljs$core$INext$_next$dyn_11900 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._next[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._next[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22INext.-next\x22,coll);\n}\n}\n});\n/**\n * Returns a new collection of coll without the first item. In contrast to\n *   rest, it should return nil if there are no more items, e.g.\n *   (next []) \x3d\x3e nil\n *   (next nil) \x3d\x3e nil\n */\ncljs.core._next \x3d (function cljs$core$_next(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$INext$_next$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$INext$_next$arity$1(coll);\n} else {\nreturn cljs$core$INext$_next$dyn_11900(coll);\n}\n});\n\n\n/**\n * Protocol for looking up a value in a data structure.\n * @interface\n */\ncljs.core.ILookup \x3d function(){};\n\nvar cljs$core$ILookup$_lookup$dyn_11904 \x3d (function() {\nvar G__11906 \x3d null;\nvar G__11906__2 \x3d (function (o,k){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._lookup[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(o,k) : m__5394__auto__.call(null,o,k));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._lookup[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(o,k) : m__5392__auto__.call(null,o,k));\n} else {\nthrow cljs.core.missing_protocol(\x22ILookup.-lookup\x22,o);\n}\n}\n});\nvar G__11906__3 \x3d (function (o,k,not_found){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._lookup[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(o,k,not_found) : m__5394__auto__.call(null,o,k,not_found));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._lookup[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(o,k,not_found) : m__5392__auto__.call(null,o,k,not_found));\n} else {\nthrow cljs.core.missing_protocol(\x22ILookup.-lookup\x22,o);\n}\n}\n});\nG__11906 \x3d function(o,k,not_found){\nswitch(arguments.length){\ncase 2:\nreturn G__11906__2.call(this,o,k);\ncase 3:\nreturn G__11906__3.call(this,o,k,not_found);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__11906.cljs$core$IFn$_invoke$arity$2 \x3d G__11906__2;\nG__11906.cljs$core$IFn$_invoke$arity$3 \x3d G__11906__3;\nreturn G__11906;\n})()\n;\n/**\n * Use k to look up a value in o. If not-found is supplied and k is not\n *   a valid value that can be used for look up, not-found is returned.\n */\ncljs.core._lookup \x3d (function cljs$core$_lookup(var_args){\nvar G__9781 \x3d arguments.length;\nswitch (G__9781) {\ncase 2:\nreturn cljs.core._lookup.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core._lookup.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core._lookup.cljs$core$IFn$_invoke$arity$2 \x3d (function (o,k){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ILookup$_lookup$arity$2 \x3d\x3d null)))))){\nreturn o.cljs$core$ILookup$_lookup$arity$2(o,k);\n} else {\nreturn cljs$core$ILookup$_lookup$dyn_11904(o,k);\n}\n}));\n\n(cljs.core._lookup.cljs$core$IFn$_invoke$arity$3 \x3d (function (o,k,not_found){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ILookup$_lookup$arity$3 \x3d\x3d null)))))){\nreturn o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);\n} else {\nreturn cljs$core$ILookup$_lookup$dyn_11904(o,k,not_found);\n}\n}));\n\n(cljs.core._lookup.cljs$lang$maxFixedArity \x3d 3);\n\n\n\n/**\n * Protocol for adding associativity to collections.\n * @interface\n */\ncljs.core.IAssociative \x3d function(){};\n\nvar cljs$core$IAssociative$_contains_key_QMARK_$dyn_11928 \x3d (function (coll,k){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._contains_key_QMARK_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__5394__auto__.call(null,coll,k));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._contains_key_QMARK_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__5392__auto__.call(null,coll,k));\n} else {\nthrow cljs.core.missing_protocol(\x22IAssociative.-contains-key?\x22,coll);\n}\n}\n});\n/**\n * Returns true if k is a key in coll.\n */\ncljs.core._contains_key_QMARK_ \x3d (function cljs$core$_contains_key_QMARK_(coll,k){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d\x3d null)))))){\nreturn coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);\n} else {\nreturn cljs$core$IAssociative$_contains_key_QMARK_$dyn_11928(coll,k);\n}\n});\n\nvar cljs$core$IAssociative$_assoc$dyn_11938 \x3d (function (coll,k,v){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._assoc[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,v) : m__5394__auto__.call(null,coll,k,v));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._assoc[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,v) : m__5392__auto__.call(null,coll,k,v));\n} else {\nthrow cljs.core.missing_protocol(\x22IAssociative.-assoc\x22,coll);\n}\n}\n});\n/**\n * Returns a new collection of coll with a mapping from key k to\n *   value v added to it.\n */\ncljs.core._assoc \x3d (function cljs$core$_assoc(coll,k,v){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IAssociative$_assoc$arity$3 \x3d\x3d null)))))){\nreturn coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);\n} else {\nreturn cljs$core$IAssociative$_assoc$dyn_11938(coll,k,v);\n}\n});\n\n\n/**\n * Protocol for implementing entry finding in collections.\n * @interface\n */\ncljs.core.IFind \x3d function(){};\n\nvar cljs$core$IFind$_find$dyn_11948 \x3d (function (coll,k){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._find[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__5394__auto__.call(null,coll,k));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._find[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__5392__auto__.call(null,coll,k));\n} else {\nthrow cljs.core.missing_protocol(\x22IFind.-find\x22,coll);\n}\n}\n});\n/**\n * Returns the map entry for key, or nil if key not present.\n */\ncljs.core._find \x3d (function cljs$core$_find(coll,k){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IFind$_find$arity$2 \x3d\x3d null)))))){\nreturn coll.cljs$core$IFind$_find$arity$2(coll,k);\n} else {\nreturn cljs$core$IFind$_find$dyn_11948(coll,k);\n}\n});\n\n\n/**\n * Protocol for adding mapping functionality to collections.\n * @interface\n */\ncljs.core.IMap \x3d function(){};\n\nvar cljs$core$IMap$_dissoc$dyn_11970 \x3d (function (coll,k){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._dissoc[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__5394__auto__.call(null,coll,k));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._dissoc[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(coll,k) : m__5392__auto__.call(null,coll,k));\n} else {\nthrow cljs.core.missing_protocol(\x22IMap.-dissoc\x22,coll);\n}\n}\n});\n/**\n * Returns a new collection of coll without the mapping for key k.\n */\ncljs.core._dissoc \x3d (function cljs$core$_dissoc(coll,k){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IMap$_dissoc$arity$2 \x3d\x3d null)))))){\nreturn coll.cljs$core$IMap$_dissoc$arity$2(coll,k);\n} else {\nreturn cljs$core$IMap$_dissoc$dyn_11970(coll,k);\n}\n});\n\n\n/**\n * Protocol for examining a map entry.\n * @interface\n */\ncljs.core.IMapEntry \x3d function(){};\n\nvar cljs$core$IMapEntry$_key$dyn_11985 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._key[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._key[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IMapEntry.-key\x22,coll);\n}\n}\n});\n/**\n * Returns the key of the map entry.\n */\ncljs.core._key \x3d (function cljs$core$_key(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IMapEntry$_key$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IMapEntry$_key$arity$1(coll);\n} else {\nreturn cljs$core$IMapEntry$_key$dyn_11985(coll);\n}\n});\n\nvar cljs$core$IMapEntry$_val$dyn_11996 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._val[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._val[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IMapEntry.-val\x22,coll);\n}\n}\n});\n/**\n * Returns the value of the map entry.\n */\ncljs.core._val \x3d (function cljs$core$_val(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IMapEntry$_val$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IMapEntry$_val$arity$1(coll);\n} else {\nreturn cljs$core$IMapEntry$_val$dyn_11996(coll);\n}\n});\n\n\n/**\n * Protocol for adding set functionality to a collection.\n * @interface\n */\ncljs.core.ISet \x3d function(){};\n\nvar cljs$core$ISet$_disjoin$dyn_12007 \x3d (function (coll,v){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._disjoin[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(coll,v) : m__5394__auto__.call(null,coll,v));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._disjoin[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(coll,v) : m__5392__auto__.call(null,coll,v));\n} else {\nthrow cljs.core.missing_protocol(\x22ISet.-disjoin\x22,coll);\n}\n}\n});\n/**\n * Returns a new collection of coll that does not contain v.\n */\ncljs.core._disjoin \x3d (function cljs$core$_disjoin(coll,v){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISet$_disjoin$arity$2 \x3d\x3d null)))))){\nreturn coll.cljs$core$ISet$_disjoin$arity$2(coll,v);\n} else {\nreturn cljs$core$ISet$_disjoin$dyn_12007(coll,v);\n}\n});\n\n\n/**\n * Protocol for collections to provide access to their items as stacks. The top\n *   of the stack should be accessed in the most efficient way for the different\n *   data structures.\n * @interface\n */\ncljs.core.IStack \x3d function(){};\n\nvar cljs$core$IStack$_peek$dyn_12018 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._peek[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._peek[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IStack.-peek\x22,coll);\n}\n}\n});\n/**\n * Returns the item from the top of the stack. Is used by cljs.core/peek.\n */\ncljs.core._peek \x3d (function cljs$core$_peek(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IStack$_peek$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IStack$_peek$arity$1(coll);\n} else {\nreturn cljs$core$IStack$_peek$dyn_12018(coll);\n}\n});\n\nvar cljs$core$IStack$_pop$dyn_12025 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._pop[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._pop[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IStack.-pop\x22,coll);\n}\n}\n});\n/**\n * Returns a new stack without the item on top of the stack. Is used\n *   by cljs.core/pop.\n */\ncljs.core._pop \x3d (function cljs$core$_pop(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IStack$_pop$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IStack$_pop$arity$1(coll);\n} else {\nreturn cljs$core$IStack$_pop$dyn_12025(coll);\n}\n});\n\n\n/**\n * Protocol for adding vector functionality to collections.\n * @interface\n */\ncljs.core.IVector \x3d function(){};\n\nvar cljs$core$IVector$_assoc_n$dyn_12038 \x3d (function (coll,n,val){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._assoc_n[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,val) : m__5394__auto__.call(null,coll,n,val));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._assoc_n[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(coll,n,val) : m__5392__auto__.call(null,coll,n,val));\n} else {\nthrow cljs.core.missing_protocol(\x22IVector.-assoc-n\x22,coll);\n}\n}\n});\n/**\n * Returns a new vector with value val added at position n.\n */\ncljs.core._assoc_n \x3d (function cljs$core$_assoc_n(coll,n,val){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IVector$_assoc_n$arity$3 \x3d\x3d null)))))){\nreturn coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);\n} else {\nreturn cljs$core$IVector$_assoc_n$dyn_12038(coll,n,val);\n}\n});\n\n\n/**\n * Protocol for adding dereference functionality to a reference.\n * @interface\n */\ncljs.core.IDeref \x3d function(){};\n\nvar cljs$core$IDeref$_deref$dyn_12052 \x3d (function (o){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._deref[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5394__auto__.call(null,o));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._deref[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5392__auto__.call(null,o));\n} else {\nthrow cljs.core.missing_protocol(\x22IDeref.-deref\x22,o);\n}\n}\n});\n/**\n * Returns the value of the reference o.\n */\ncljs.core._deref \x3d (function cljs$core$_deref(o){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IDeref$_deref$arity$1 \x3d\x3d null)))))){\nreturn o.cljs$core$IDeref$_deref$arity$1(o);\n} else {\nreturn cljs$core$IDeref$_deref$dyn_12052(o);\n}\n});\n\n\n/**\n * @interface\n */\ncljs.core.IDerefWithTimeout \x3d function(){};\n\nvar cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_12067 \x3d (function (o,msec,timeout_val){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._deref_with_timeout[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(o,msec,timeout_val) : m__5394__auto__.call(null,o,msec,timeout_val));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._deref_with_timeout[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(o,msec,timeout_val) : m__5392__auto__.call(null,o,msec,timeout_val));\n} else {\nthrow cljs.core.missing_protocol(\x22IDerefWithTimeout.-deref-with-timeout\x22,o);\n}\n}\n});\ncljs.core._deref_with_timeout \x3d (function cljs$core$_deref_with_timeout(o,msec,timeout_val){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3 \x3d\x3d null)))))){\nreturn o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);\n} else {\nreturn cljs$core$IDerefWithTimeout$_deref_with_timeout$dyn_12067(o,msec,timeout_val);\n}\n});\n\n\n/**\n * Protocol for accessing the metadata of an object.\n * @interface\n */\ncljs.core.IMeta \x3d function(){};\n\nvar cljs$core$IMeta$_meta$dyn_12100 \x3d (function (o){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._meta[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5394__auto__.call(null,o));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._meta[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5392__auto__.call(null,o));\n} else {\nthrow cljs.core.missing_protocol(\x22IMeta.-meta\x22,o);\n}\n}\n});\n/**\n * Returns the metadata of object o.\n */\ncljs.core._meta \x3d (function cljs$core$_meta(o){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IMeta$_meta$arity$1 \x3d\x3d null)))))){\nreturn o.cljs$core$IMeta$_meta$arity$1(o);\n} else {\nreturn cljs$core$IMeta$_meta$dyn_12100(o);\n}\n});\n\n\n/**\n * Protocol for adding metadata to an object.\n * @interface\n */\ncljs.core.IWithMeta \x3d function(){};\n\nvar cljs$core$IWithMeta$_with_meta$dyn_12113 \x3d (function (o,meta){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._with_meta[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(o,meta) : m__5394__auto__.call(null,o,meta));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._with_meta[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(o,meta) : m__5392__auto__.call(null,o,meta));\n} else {\nthrow cljs.core.missing_protocol(\x22IWithMeta.-with-meta\x22,o);\n}\n}\n});\n/**\n * Returns a new object with value of o and metadata meta added to it.\n */\ncljs.core._with_meta \x3d (function cljs$core$_with_meta(o,meta){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IWithMeta$_with_meta$arity$2 \x3d\x3d null)))))){\nreturn o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);\n} else {\nreturn cljs$core$IWithMeta$_with_meta$dyn_12113(o,meta);\n}\n});\n\n\n/**\n * Protocol for seq types that can reduce themselves.\n *   Called by cljs.core/reduce.\n * @interface\n */\ncljs.core.IReduce \x3d function(){};\n\nvar cljs$core$IReduce$_reduce$dyn_12132 \x3d (function() {\nvar G__12134 \x3d null;\nvar G__12134__2 \x3d (function (coll,f){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._reduce[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(coll,f) : m__5394__auto__.call(null,coll,f));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._reduce[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(coll,f) : m__5392__auto__.call(null,coll,f));\n} else {\nthrow cljs.core.missing_protocol(\x22IReduce.-reduce\x22,coll);\n}\n}\n});\nvar G__12134__3 \x3d (function (coll,f,start){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._reduce[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,start) : m__5394__auto__.call(null,coll,f,start));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._reduce[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,start) : m__5392__auto__.call(null,coll,f,start));\n} else {\nthrow cljs.core.missing_protocol(\x22IReduce.-reduce\x22,coll);\n}\n}\n});\nG__12134 \x3d function(coll,f,start){\nswitch(arguments.length){\ncase 2:\nreturn G__12134__2.call(this,coll,f);\ncase 3:\nreturn G__12134__3.call(this,coll,f,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12134.cljs$core$IFn$_invoke$arity$2 \x3d G__12134__2;\nG__12134.cljs$core$IFn$_invoke$arity$3 \x3d G__12134__3;\nreturn G__12134;\n})()\n;\n/**\n * f should be a function of 2 arguments. If start is not supplied,\n *   returns the result of applying f to the first 2 items in coll, then\n *   applying f to that result and the 3rd item, etc.\n */\ncljs.core._reduce \x3d (function cljs$core$_reduce(var_args){\nvar G__9783 \x3d arguments.length;\nswitch (G__9783) {\ncase 2:\nreturn cljs.core._reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core._reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core._reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,f){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IReduce$_reduce$arity$2 \x3d\x3d null)))))){\nreturn coll.cljs$core$IReduce$_reduce$arity$2(coll,f);\n} else {\nreturn cljs$core$IReduce$_reduce$dyn_12132(coll,f);\n}\n}));\n\n(cljs.core._reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,f,start){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IReduce$_reduce$arity$3 \x3d\x3d null)))))){\nreturn coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);\n} else {\nreturn cljs$core$IReduce$_reduce$dyn_12132(coll,f,start);\n}\n}));\n\n(cljs.core._reduce.cljs$lang$maxFixedArity \x3d 3);\n\n\n\n/**\n * Protocol for associative types that can reduce themselves\n *   via a function of key and val. Called by cljs.core/reduce-kv.\n * @interface\n */\ncljs.core.IKVReduce \x3d function(){};\n\nvar cljs$core$IKVReduce$_kv_reduce$dyn_12176 \x3d (function (coll,f,init){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._kv_reduce[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,init) : m__5394__auto__.call(null,coll,f,init));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._kv_reduce[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(coll,f,init) : m__5392__auto__.call(null,coll,f,init));\n} else {\nthrow cljs.core.missing_protocol(\x22IKVReduce.-kv-reduce\x22,coll);\n}\n}\n});\n/**\n * Reduces an associative collection and returns the result. f should be\n *   a function that takes three arguments.\n */\ncljs.core._kv_reduce \x3d (function cljs$core$_kv_reduce(coll,f,init){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d\x3d null)))))){\nreturn coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);\n} else {\nreturn cljs$core$IKVReduce$_kv_reduce$dyn_12176(coll,f,init);\n}\n});\n\n\n/**\n * Protocol for adding value comparison functionality to a type.\n * @interface\n */\ncljs.core.IEquiv \x3d function(){};\n\nvar cljs$core$IEquiv$_equiv$dyn_12188 \x3d (function (o,other){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._equiv[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(o,other) : m__5394__auto__.call(null,o,other));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._equiv[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(o,other) : m__5392__auto__.call(null,o,other));\n} else {\nthrow cljs.core.missing_protocol(\x22IEquiv.-equiv\x22,o);\n}\n}\n});\n/**\n * Returns true if o and other are equal, false otherwise.\n */\ncljs.core._equiv \x3d (function cljs$core$_equiv(o,other){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IEquiv$_equiv$arity$2 \x3d\x3d null)))))){\nreturn o.cljs$core$IEquiv$_equiv$arity$2(o,other);\n} else {\nreturn cljs$core$IEquiv$_equiv$dyn_12188(o,other);\n}\n});\n\n\n/**\n * Protocol for adding hashing functionality to a type.\n * @interface\n */\ncljs.core.IHash \x3d function(){};\n\nvar cljs$core$IHash$_hash$dyn_12204 \x3d (function (o){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._hash[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5394__auto__.call(null,o));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._hash[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5392__auto__.call(null,o));\n} else {\nthrow cljs.core.missing_protocol(\x22IHash.-hash\x22,o);\n}\n}\n});\n/**\n * Returns the hash code of o.\n */\ncljs.core._hash \x3d (function cljs$core$_hash(o){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IHash$_hash$arity$1 \x3d\x3d null)))))){\nreturn o.cljs$core$IHash$_hash$arity$1(o);\n} else {\nreturn cljs$core$IHash$_hash$dyn_12204(o);\n}\n});\n\n\n/**\n * Protocol for adding the ability to a type to be transformed into a sequence.\n * @interface\n */\ncljs.core.ISeqable \x3d function(){};\n\nvar cljs$core$ISeqable$_seq$dyn_12218 \x3d (function (o){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._seq[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5394__auto__.call(null,o));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._seq[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(o) : m__5392__auto__.call(null,o));\n} else {\nthrow cljs.core.missing_protocol(\x22ISeqable.-seq\x22,o);\n}\n}\n});\n/**\n * Returns a seq of o, or nil if o is empty.\n */\ncljs.core._seq \x3d (function cljs$core$_seq(o){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ISeqable$_seq$arity$1 \x3d\x3d null)))))){\nreturn o.cljs$core$ISeqable$_seq$arity$1(o);\n} else {\nreturn cljs$core$ISeqable$_seq$dyn_12218(o);\n}\n});\n\n\n/**\n * Marker interface indicating a persistent collection of sequential items\n * @interface\n */\ncljs.core.ISequential \x3d function(){};\n\n\n/**\n * Marker interface indicating a persistent list\n * @interface\n */\ncljs.core.IList \x3d function(){};\n\n\n/**\n * Marker interface indicating a record object\n * @interface\n */\ncljs.core.IRecord \x3d function(){};\n\n\n/**\n * Protocol for reversing a seq.\n * @interface\n */\ncljs.core.IReversible \x3d function(){};\n\nvar cljs$core$IReversible$_rseq$dyn_12230 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._rseq[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._rseq[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IReversible.-rseq\x22,coll);\n}\n}\n});\n/**\n * Returns a seq of the items in coll in reversed order.\n */\ncljs.core._rseq \x3d (function cljs$core$_rseq(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IReversible$_rseq$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IReversible$_rseq$arity$1(coll);\n} else {\nreturn cljs$core$IReversible$_rseq$dyn_12230(coll);\n}\n});\n\n\n/**\n * Protocol for a collection which can represent their items\n *   in a sorted manner. \n * @interface\n */\ncljs.core.ISorted \x3d function(){};\n\nvar cljs$core$ISorted$_sorted_seq$dyn_12241 \x3d (function (coll,ascending_QMARK_){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._sorted_seq[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(coll,ascending_QMARK_) : m__5394__auto__.call(null,coll,ascending_QMARK_));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._sorted_seq[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(coll,ascending_QMARK_) : m__5392__auto__.call(null,coll,ascending_QMARK_));\n} else {\nthrow cljs.core.missing_protocol(\x22ISorted.-sorted-seq\x22,coll);\n}\n}\n});\n/**\n * Returns a sorted seq from coll in either ascending or descending order.\n */\ncljs.core._sorted_seq \x3d (function cljs$core$_sorted_seq(coll,ascending_QMARK_){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISorted$_sorted_seq$arity$2 \x3d\x3d null)))))){\nreturn coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);\n} else {\nreturn cljs$core$ISorted$_sorted_seq$dyn_12241(coll,ascending_QMARK_);\n}\n});\n\nvar cljs$core$ISorted$_sorted_seq_from$dyn_12250 \x3d (function (coll,k,ascending_QMARK_){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._sorted_seq_from[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,ascending_QMARK_) : m__5394__auto__.call(null,coll,k,ascending_QMARK_));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._sorted_seq_from[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(coll,k,ascending_QMARK_) : m__5392__auto__.call(null,coll,k,ascending_QMARK_));\n} else {\nthrow cljs.core.missing_protocol(\x22ISorted.-sorted-seq-from\x22,coll);\n}\n}\n});\n/**\n * Returns a sorted seq from coll in either ascending or descending order.\n *   If ascending is true, the result should contain all items which are \x3e or \x3e\x3d\n *   than k. If ascending is false, the result should contain all items which\n *   are \x3c or \x3c\x3d than k, e.g.\n *   (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) \x3d\x3e (3 4 5)\n *   (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) \x3d\x3e (3 2 1)\n */\ncljs.core._sorted_seq_from \x3d (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISorted$_sorted_seq_from$arity$3 \x3d\x3d null)))))){\nreturn coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);\n} else {\nreturn cljs$core$ISorted$_sorted_seq_from$dyn_12250(coll,k,ascending_QMARK_);\n}\n});\n\nvar cljs$core$ISorted$_entry_key$dyn_12255 \x3d (function (coll,entry){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._entry_key[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(coll,entry) : m__5394__auto__.call(null,coll,entry));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._entry_key[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(coll,entry) : m__5392__auto__.call(null,coll,entry));\n} else {\nthrow cljs.core.missing_protocol(\x22ISorted.-entry-key\x22,coll);\n}\n}\n});\n/**\n * Returns the key for entry.\n */\ncljs.core._entry_key \x3d (function cljs$core$_entry_key(coll,entry){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISorted$_entry_key$arity$2 \x3d\x3d null)))))){\nreturn coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);\n} else {\nreturn cljs$core$ISorted$_entry_key$dyn_12255(coll,entry);\n}\n});\n\nvar cljs$core$ISorted$_comparator$dyn_12264 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._comparator[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._comparator[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22ISorted.-comparator\x22,coll);\n}\n}\n});\n/**\n * Returns the comparator for coll.\n */\ncljs.core._comparator \x3d (function cljs$core$_comparator(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$ISorted$_comparator$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$ISorted$_comparator$arity$1(coll);\n} else {\nreturn cljs$core$ISorted$_comparator$dyn_12264(coll);\n}\n});\n\n\n/**\n * Protocol for writing. Currently only implemented by StringBufferWriter.\n * @interface\n */\ncljs.core.IWriter \x3d function(){};\n\nvar cljs$core$IWriter$_write$dyn_12266 \x3d (function (writer,s){\nvar x__5393__auto__ \x3d (((writer \x3d\x3d null))?null:writer);\nvar m__5394__auto__ \x3d (cljs.core._write[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(writer,s) : m__5394__auto__.call(null,writer,s));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._write[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(writer,s) : m__5392__auto__.call(null,writer,s));\n} else {\nthrow cljs.core.missing_protocol(\x22IWriter.-write\x22,writer);\n}\n}\n});\n/**\n * Writes s with writer and returns the result.\n */\ncljs.core._write \x3d (function cljs$core$_write(writer,s){\nif((((!((writer \x3d\x3d null)))) \x26\x26 ((!((writer.cljs$core$IWriter$_write$arity$2 \x3d\x3d null)))))){\nreturn writer.cljs$core$IWriter$_write$arity$2(writer,s);\n} else {\nreturn cljs$core$IWriter$_write$dyn_12266(writer,s);\n}\n});\n\nvar cljs$core$IWriter$_flush$dyn_12267 \x3d (function (writer){\nvar x__5393__auto__ \x3d (((writer \x3d\x3d null))?null:writer);\nvar m__5394__auto__ \x3d (cljs.core._flush[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__5394__auto__.call(null,writer));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._flush[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(writer) : m__5392__auto__.call(null,writer));\n} else {\nthrow cljs.core.missing_protocol(\x22IWriter.-flush\x22,writer);\n}\n}\n});\n/**\n * Flush writer.\n */\ncljs.core._flush \x3d (function cljs$core$_flush(writer){\nif((((!((writer \x3d\x3d null)))) \x26\x26 ((!((writer.cljs$core$IWriter$_flush$arity$1 \x3d\x3d null)))))){\nreturn writer.cljs$core$IWriter$_flush$arity$1(writer);\n} else {\nreturn cljs$core$IWriter$_flush$dyn_12267(writer);\n}\n});\n\n\n/**\n * The old IPrintable protocol\x27s implementation consisted of building a giant\n * list of strings to concatenate.  This involved lots of concat calls,\n * intermediate vectors, and lazy-seqs, and was very slow in some older JS\n * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it\n * be implemented efficiently in terms of e.g. a StringBuffer append.\n * @interface\n */\ncljs.core.IPrintWithWriter \x3d function(){};\n\nvar cljs$core$IPrintWithWriter$_pr_writer$dyn_12268 \x3d (function (o,writer,opts){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._pr_writer[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(o,writer,opts) : m__5394__auto__.call(null,o,writer,opts));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._pr_writer[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(o,writer,opts) : m__5392__auto__.call(null,o,writer,opts));\n} else {\nthrow cljs.core.missing_protocol(\x22IPrintWithWriter.-pr-writer\x22,o);\n}\n}\n});\ncljs.core._pr_writer \x3d (function cljs$core$_pr_writer(o,writer,opts){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d\x3d null)))))){\nreturn o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);\n} else {\nreturn cljs$core$IPrintWithWriter$_pr_writer$dyn_12268(o,writer,opts);\n}\n});\n\n\n/**\n * Protocol for types which can have a deferred realization. Currently only\n *   implemented by Delay and LazySeq.\n * @interface\n */\ncljs.core.IPending \x3d function(){};\n\nvar cljs$core$IPending$_realized_QMARK_$dyn_12269 \x3d (function (x){\nvar x__5393__auto__ \x3d (((x \x3d\x3d null))?null:x);\nvar m__5394__auto__ \x3d (cljs.core._realized_QMARK_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5394__auto__.call(null,x));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._realized_QMARK_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5392__auto__.call(null,x));\n} else {\nthrow cljs.core.missing_protocol(\x22IPending.-realized?\x22,x);\n}\n}\n});\n/**\n * Returns true if a value for x has been produced, false otherwise.\n */\ncljs.core._realized_QMARK_ \x3d (function cljs$core$_realized_QMARK_(x){\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d\x3d null)))))){\nreturn x.cljs$core$IPending$_realized_QMARK_$arity$1(x);\n} else {\nreturn cljs$core$IPending$_realized_QMARK_$dyn_12269(x);\n}\n});\n\n\n/**\n * Protocol for types that can be watched. Currently only implemented by Atom.\n * @interface\n */\ncljs.core.IWatchable \x3d function(){};\n\nvar cljs$core$IWatchable$_notify_watches$dyn_12273 \x3d (function (this$,oldval,newval){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._notify_watches[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(this$,oldval,newval) : m__5394__auto__.call(null,this$,oldval,newval));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._notify_watches[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(this$,oldval,newval) : m__5392__auto__.call(null,this$,oldval,newval));\n} else {\nthrow cljs.core.missing_protocol(\x22IWatchable.-notify-watches\x22,this$);\n}\n}\n});\n/**\n * Calls all watchers with this, oldval and newval.\n */\ncljs.core._notify_watches \x3d (function cljs$core$_notify_watches(this$,oldval,newval){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IWatchable$_notify_watches$arity$3 \x3d\x3d null)))))){\nreturn this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);\n} else {\nreturn cljs$core$IWatchable$_notify_watches$dyn_12273(this$,oldval,newval);\n}\n});\n\nvar cljs$core$IWatchable$_add_watch$dyn_12277 \x3d (function (this$,key,f){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._add_watch[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(this$,key,f) : m__5394__auto__.call(null,this$,key,f));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._add_watch[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(this$,key,f) : m__5392__auto__.call(null,this$,key,f));\n} else {\nthrow cljs.core.missing_protocol(\x22IWatchable.-add-watch\x22,this$);\n}\n}\n});\n/**\n * Adds a watcher function f to this. Keys must be unique per reference,\n *   and can be used to remove the watch with -remove-watch.\n */\ncljs.core._add_watch \x3d (function cljs$core$_add_watch(this$,key,f){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IWatchable$_add_watch$arity$3 \x3d\x3d null)))))){\nreturn this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);\n} else {\nreturn cljs$core$IWatchable$_add_watch$dyn_12277(this$,key,f);\n}\n});\n\nvar cljs$core$IWatchable$_remove_watch$dyn_12280 \x3d (function (this$,key){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (cljs.core._remove_watch[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,key) : m__5394__auto__.call(null,this$,key));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._remove_watch[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,key) : m__5392__auto__.call(null,this$,key));\n} else {\nthrow cljs.core.missing_protocol(\x22IWatchable.-remove-watch\x22,this$);\n}\n}\n});\n/**\n * Removes watcher that corresponds to key from this.\n */\ncljs.core._remove_watch \x3d (function cljs$core$_remove_watch(this$,key){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.cljs$core$IWatchable$_remove_watch$arity$2 \x3d\x3d null)))))){\nreturn this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);\n} else {\nreturn cljs$core$IWatchable$_remove_watch$dyn_12280(this$,key);\n}\n});\n\n\n/**\n * Protocol for collections which can transformed to transients.\n * @interface\n */\ncljs.core.IEditableCollection \x3d function(){};\n\nvar cljs$core$IEditableCollection$_as_transient$dyn_12288 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._as_transient[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._as_transient[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IEditableCollection.-as-transient\x22,coll);\n}\n}\n});\n/**\n * Returns a new, transient version of the collection, in constant time.\n */\ncljs.core._as_transient \x3d (function cljs$core$_as_transient(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);\n} else {\nreturn cljs$core$IEditableCollection$_as_transient$dyn_12288(coll);\n}\n});\n\n\n/**\n * Protocol for adding basic functionality to transient collections.\n * @interface\n */\ncljs.core.ITransientCollection \x3d function(){};\n\nvar cljs$core$ITransientCollection$_conj_BANG_$dyn_12297 \x3d (function (tcoll,val){\nvar x__5393__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\nvar m__5394__auto__ \x3d (cljs.core._conj_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,val) : m__5394__auto__.call(null,tcoll,val));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._conj_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,val) : m__5392__auto__.call(null,tcoll,val));\n} else {\nthrow cljs.core.missing_protocol(\x22ITransientCollection.-conj!\x22,tcoll);\n}\n}\n});\n/**\n * Adds value val to tcoll and returns tcoll.\n */\ncljs.core._conj_BANG_ \x3d (function cljs$core$_conj_BANG_(tcoll,val){\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2 \x3d\x3d null)))))){\nreturn tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);\n} else {\nreturn cljs$core$ITransientCollection$_conj_BANG_$dyn_12297(tcoll,val);\n}\n});\n\nvar cljs$core$ITransientCollection$_persistent_BANG_$dyn_12304 \x3d (function (tcoll){\nvar x__5393__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\nvar m__5394__auto__ \x3d (cljs.core._persistent_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5394__auto__.call(null,tcoll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._persistent_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5392__auto__.call(null,tcoll));\n} else {\nthrow cljs.core.missing_protocol(\x22ITransientCollection.-persistent!\x22,tcoll);\n}\n}\n});\n/**\n * Creates a persistent data structure from tcoll and returns it.\n */\ncljs.core._persistent_BANG_ \x3d (function cljs$core$_persistent_BANG_(tcoll){\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 \x3d\x3d null)))))){\nreturn tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);\n} else {\nreturn cljs$core$ITransientCollection$_persistent_BANG_$dyn_12304(tcoll);\n}\n});\n\n\n/**\n * Protocol for adding associativity to transient collections.\n * @interface\n */\ncljs.core.ITransientAssociative \x3d function(){};\n\nvar cljs$core$ITransientAssociative$_assoc_BANG_$dyn_12309 \x3d (function (tcoll,key,val){\nvar x__5393__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\nvar m__5394__auto__ \x3d (cljs.core._assoc_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,key,val) : m__5394__auto__.call(null,tcoll,key,val));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._assoc_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,key,val) : m__5392__auto__.call(null,tcoll,key,val));\n} else {\nthrow cljs.core.missing_protocol(\x22ITransientAssociative.-assoc!\x22,tcoll);\n}\n}\n});\n/**\n * Returns a new transient collection of tcoll with a mapping from key to\n *   val added to it.\n */\ncljs.core._assoc_BANG_ \x3d (function cljs$core$_assoc_BANG_(tcoll,key,val){\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 \x3d\x3d null)))))){\nreturn tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);\n} else {\nreturn cljs$core$ITransientAssociative$_assoc_BANG_$dyn_12309(tcoll,key,val);\n}\n});\n\n\n/**\n * Protocol for adding mapping functionality to transient collections.\n * @interface\n */\ncljs.core.ITransientMap \x3d function(){};\n\nvar cljs$core$ITransientMap$_dissoc_BANG_$dyn_12322 \x3d (function (tcoll,key){\nvar x__5393__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\nvar m__5394__auto__ \x3d (cljs.core._dissoc_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,key) : m__5394__auto__.call(null,tcoll,key));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._dissoc_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,key) : m__5392__auto__.call(null,tcoll,key));\n} else {\nthrow cljs.core.missing_protocol(\x22ITransientMap.-dissoc!\x22,tcoll);\n}\n}\n});\n/**\n * Returns a new transient collection of tcoll without the mapping for key.\n */\ncljs.core._dissoc_BANG_ \x3d (function cljs$core$_dissoc_BANG_(tcoll,key){\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 \x3d\x3d null)))))){\nreturn tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);\n} else {\nreturn cljs$core$ITransientMap$_dissoc_BANG_$dyn_12322(tcoll,key);\n}\n});\n\n\n/**\n * Protocol for adding vector functionality to transient collections.\n * @interface\n */\ncljs.core.ITransientVector \x3d function(){};\n\nvar cljs$core$ITransientVector$_assoc_n_BANG_$dyn_12326 \x3d (function (tcoll,n,val){\nvar x__5393__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\nvar m__5394__auto__ \x3d (cljs.core._assoc_n_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,n,val) : m__5394__auto__.call(null,tcoll,n,val));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._assoc_n_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(tcoll,n,val) : m__5392__auto__.call(null,tcoll,n,val));\n} else {\nthrow cljs.core.missing_protocol(\x22ITransientVector.-assoc-n!\x22,tcoll);\n}\n}\n});\n/**\n * Returns tcoll with value val added at position n.\n */\ncljs.core._assoc_n_BANG_ \x3d (function cljs$core$_assoc_n_BANG_(tcoll,n,val){\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 \x3d\x3d null)))))){\nreturn tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);\n} else {\nreturn cljs$core$ITransientVector$_assoc_n_BANG_$dyn_12326(tcoll,n,val);\n}\n});\n\nvar cljs$core$ITransientVector$_pop_BANG_$dyn_12332 \x3d (function (tcoll){\nvar x__5393__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\nvar m__5394__auto__ \x3d (cljs.core._pop_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5394__auto__.call(null,tcoll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._pop_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(tcoll) : m__5392__auto__.call(null,tcoll));\n} else {\nthrow cljs.core.missing_protocol(\x22ITransientVector.-pop!\x22,tcoll);\n}\n}\n});\n/**\n * Returns tcoll with the last item removed from it.\n */\ncljs.core._pop_BANG_ \x3d (function cljs$core$_pop_BANG_(tcoll){\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1 \x3d\x3d null)))))){\nreturn tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);\n} else {\nreturn cljs$core$ITransientVector$_pop_BANG_$dyn_12332(tcoll);\n}\n});\n\n\n/**\n * Protocol for adding set functionality to a transient collection.\n * @interface\n */\ncljs.core.ITransientSet \x3d function(){};\n\nvar cljs$core$ITransientSet$_disjoin_BANG_$dyn_12337 \x3d (function (tcoll,v){\nvar x__5393__auto__ \x3d (((tcoll \x3d\x3d null))?null:tcoll);\nvar m__5394__auto__ \x3d (cljs.core._disjoin_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,v) : m__5394__auto__.call(null,tcoll,v));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._disjoin_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(tcoll,v) : m__5392__auto__.call(null,tcoll,v));\n} else {\nthrow cljs.core.missing_protocol(\x22ITransientSet.-disjoin!\x22,tcoll);\n}\n}\n});\n/**\n * Returns tcoll without v.\n */\ncljs.core._disjoin_BANG_ \x3d (function cljs$core$_disjoin_BANG_(tcoll,v){\nif((((!((tcoll \x3d\x3d null)))) \x26\x26 ((!((tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 \x3d\x3d null)))))){\nreturn tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);\n} else {\nreturn cljs$core$ITransientSet$_disjoin_BANG_$dyn_12337(tcoll,v);\n}\n});\n\n\n/**\n * Protocol for values that can be compared.\n * @interface\n */\ncljs.core.IComparable \x3d function(){};\n\nvar cljs$core$IComparable$_compare$dyn_12346 \x3d (function (x,y){\nvar x__5393__auto__ \x3d (((x \x3d\x3d null))?null:x);\nvar m__5394__auto__ \x3d (cljs.core._compare[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(x,y) : m__5394__auto__.call(null,x,y));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._compare[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(x,y) : m__5392__auto__.call(null,x,y));\n} else {\nthrow cljs.core.missing_protocol(\x22IComparable.-compare\x22,x);\n}\n}\n});\n/**\n * Returns a negative number, zero, or a positive number when x is logically\n *   \x27less than\x27, \x27equal to\x27, or \x27greater than\x27 y.\n */\ncljs.core._compare \x3d (function cljs$core$_compare(x,y){\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$IComparable$_compare$arity$2 \x3d\x3d null)))))){\nreturn x.cljs$core$IComparable$_compare$arity$2(x,y);\n} else {\nreturn cljs$core$IComparable$_compare$dyn_12346(x,y);\n}\n});\n\n\n/**\n * Protocol for accessing the items of a chunk.\n * @interface\n */\ncljs.core.IChunk \x3d function(){};\n\nvar cljs$core$IChunk$_drop_first$dyn_12350 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._drop_first[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._drop_first[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IChunk.-drop-first\x22,coll);\n}\n}\n});\n/**\n * Return a new chunk of coll with the first item removed.\n */\ncljs.core._drop_first \x3d (function cljs$core$_drop_first(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IChunk$_drop_first$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IChunk$_drop_first$arity$1(coll);\n} else {\nreturn cljs$core$IChunk$_drop_first$dyn_12350(coll);\n}\n});\n\n\n/**\n * Protocol for accessing a collection as sequential chunks.\n * @interface\n */\ncljs.core.IChunkedSeq \x3d function(){};\n\nvar cljs$core$IChunkedSeq$_chunked_first$dyn_12351 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._chunked_first[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._chunked_first[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IChunkedSeq.-chunked-first\x22,coll);\n}\n}\n});\n/**\n * Returns the first chunk in coll.\n */\ncljs.core._chunked_first \x3d (function cljs$core$_chunked_first(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IChunkedSeq$_chunked_first$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);\n} else {\nreturn cljs$core$IChunkedSeq$_chunked_first$dyn_12351(coll);\n}\n});\n\nvar cljs$core$IChunkedSeq$_chunked_rest$dyn_12353 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._chunked_rest[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._chunked_rest[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IChunkedSeq.-chunked-rest\x22,coll);\n}\n}\n});\n/**\n * Return a new collection of coll with the first chunk removed.\n */\ncljs.core._chunked_rest \x3d (function cljs$core$_chunked_rest(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);\n} else {\nreturn cljs$core$IChunkedSeq$_chunked_rest$dyn_12353(coll);\n}\n});\n\n\n/**\n * Protocol for accessing the chunks of a collection.\n * @interface\n */\ncljs.core.IChunkedNext \x3d function(){};\n\nvar cljs$core$IChunkedNext$_chunked_next$dyn_12355 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._chunked_next[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._chunked_next[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IChunkedNext.-chunked-next\x22,coll);\n}\n}\n});\n/**\n * Returns a new collection of coll without the first chunk.\n */\ncljs.core._chunked_next \x3d (function cljs$core$_chunked_next(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IChunkedNext$_chunked_next$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);\n} else {\nreturn cljs$core$IChunkedNext$_chunked_next$dyn_12355(coll);\n}\n});\n\n\n/**\n * Protocol for adding a name.\n * @interface\n */\ncljs.core.INamed \x3d function(){};\n\nvar cljs$core$INamed$_name$dyn_12360 \x3d (function (x){\nvar x__5393__auto__ \x3d (((x \x3d\x3d null))?null:x);\nvar m__5394__auto__ \x3d (cljs.core._name[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5394__auto__.call(null,x));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._name[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5392__auto__.call(null,x));\n} else {\nthrow cljs.core.missing_protocol(\x22INamed.-name\x22,x);\n}\n}\n});\n/**\n * Returns the name String of x.\n */\ncljs.core._name \x3d (function cljs$core$_name(x){\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$INamed$_name$arity$1 \x3d\x3d null)))))){\nreturn x.cljs$core$INamed$_name$arity$1(x);\n} else {\nreturn cljs$core$INamed$_name$dyn_12360(x);\n}\n});\n\nvar cljs$core$INamed$_namespace$dyn_12365 \x3d (function (x){\nvar x__5393__auto__ \x3d (((x \x3d\x3d null))?null:x);\nvar m__5394__auto__ \x3d (cljs.core._namespace[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5394__auto__.call(null,x));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._namespace[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5392__auto__.call(null,x));\n} else {\nthrow cljs.core.missing_protocol(\x22INamed.-namespace\x22,x);\n}\n}\n});\n/**\n * Returns the namespace String of x.\n */\ncljs.core._namespace \x3d (function cljs$core$_namespace(x){\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$INamed$_namespace$arity$1 \x3d\x3d null)))))){\nreturn x.cljs$core$INamed$_namespace$arity$1(x);\n} else {\nreturn cljs$core$INamed$_namespace$dyn_12365(x);\n}\n});\n\n\n/**\n * Marker protocol indicating an atom.\n * @interface\n */\ncljs.core.IAtom \x3d function(){};\n\n\n/**\n * Protocol for adding resetting functionality.\n * @interface\n */\ncljs.core.IReset \x3d function(){};\n\nvar cljs$core$IReset$_reset_BANG_$dyn_12373 \x3d (function (o,new_value){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._reset_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value) : m__5394__auto__.call(null,o,new_value));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._reset_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value) : m__5392__auto__.call(null,o,new_value));\n} else {\nthrow cljs.core.missing_protocol(\x22IReset.-reset!\x22,o);\n}\n}\n});\n/**\n * Sets the value of o to new-value.\n */\ncljs.core._reset_BANG_ \x3d (function cljs$core$_reset_BANG_(o,new_value){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IReset$_reset_BANG_$arity$2 \x3d\x3d null)))))){\nreturn o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);\n} else {\nreturn cljs$core$IReset$_reset_BANG_$dyn_12373(o,new_value);\n}\n});\n\n\n/**\n * Protocol for adding swapping functionality.\n * @interface\n */\ncljs.core.ISwap \x3d function(){};\n\nvar cljs$core$ISwap$_swap_BANG_$dyn_12384 \x3d (function() {\nvar G__12386 \x3d null;\nvar G__12386__2 \x3d (function (o,f){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._swap_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(o,f) : m__5394__auto__.call(null,o,f));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._swap_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(o,f) : m__5392__auto__.call(null,o,f));\n} else {\nthrow cljs.core.missing_protocol(\x22ISwap.-swap!\x22,o);\n}\n}\n});\nvar G__12386__3 \x3d (function (o,f,a){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._swap_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(o,f,a) : m__5394__auto__.call(null,o,f,a));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._swap_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(o,f,a) : m__5392__auto__.call(null,o,f,a));\n} else {\nthrow cljs.core.missing_protocol(\x22ISwap.-swap!\x22,o);\n}\n}\n});\nvar G__12386__4 \x3d (function (o,f,a,b){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._swap_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$4(o,f,a,b) : m__5394__auto__.call(null,o,f,a,b));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._swap_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$4 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$4(o,f,a,b) : m__5392__auto__.call(null,o,f,a,b));\n} else {\nthrow cljs.core.missing_protocol(\x22ISwap.-swap!\x22,o);\n}\n}\n});\nvar G__12386__5 \x3d (function (o,f,a,b,xs){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._swap_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$5(o,f,a,b,xs) : m__5394__auto__.call(null,o,f,a,b,xs));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._swap_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$5(o,f,a,b,xs) : m__5392__auto__.call(null,o,f,a,b,xs));\n} else {\nthrow cljs.core.missing_protocol(\x22ISwap.-swap!\x22,o);\n}\n}\n});\nG__12386 \x3d function(o,f,a,b,xs){\nswitch(arguments.length){\ncase 2:\nreturn G__12386__2.call(this,o,f);\ncase 3:\nreturn G__12386__3.call(this,o,f,a);\ncase 4:\nreturn G__12386__4.call(this,o,f,a,b);\ncase 5:\nreturn G__12386__5.call(this,o,f,a,b,xs);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12386.cljs$core$IFn$_invoke$arity$2 \x3d G__12386__2;\nG__12386.cljs$core$IFn$_invoke$arity$3 \x3d G__12386__3;\nG__12386.cljs$core$IFn$_invoke$arity$4 \x3d G__12386__4;\nG__12386.cljs$core$IFn$_invoke$arity$5 \x3d G__12386__5;\nreturn G__12386;\n})()\n;\n/**\n * Swaps the value of o to be (apply f current-value-of-atom args).\n */\ncljs.core._swap_BANG_ \x3d (function cljs$core$_swap_BANG_(var_args){\nvar G__9785 \x3d arguments.length;\nswitch (G__9785) {\ncase 2:\nreturn cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (o,f){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ISwap$_swap_BANG_$arity$2 \x3d\x3d null)))))){\nreturn o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);\n} else {\nreturn cljs$core$ISwap$_swap_BANG_$dyn_12384(o,f);\n}\n}));\n\n(cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3 \x3d (function (o,f,a){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ISwap$_swap_BANG_$arity$3 \x3d\x3d null)))))){\nreturn o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);\n} else {\nreturn cljs$core$ISwap$_swap_BANG_$dyn_12384(o,f,a);\n}\n}));\n\n(cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4 \x3d (function (o,f,a,b){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ISwap$_swap_BANG_$arity$4 \x3d\x3d null)))))){\nreturn o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);\n} else {\nreturn cljs$core$ISwap$_swap_BANG_$dyn_12384(o,f,a,b);\n}\n}));\n\n(cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5 \x3d (function (o,f,a,b,xs){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$ISwap$_swap_BANG_$arity$5 \x3d\x3d null)))))){\nreturn o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);\n} else {\nreturn cljs$core$ISwap$_swap_BANG_$dyn_12384(o,f,a,b,xs);\n}\n}));\n\n(cljs.core._swap_BANG_.cljs$lang$maxFixedArity \x3d 5);\n\n\n\n/**\n * Protocol for adding volatile functionality.\n * @interface\n */\ncljs.core.IVolatile \x3d function(){};\n\nvar cljs$core$IVolatile$_vreset_BANG_$dyn_12449 \x3d (function (o,new_value){\nvar x__5393__auto__ \x3d (((o \x3d\x3d null))?null:o);\nvar m__5394__auto__ \x3d (cljs.core._vreset_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value) : m__5394__auto__.call(null,o,new_value));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._vreset_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(o,new_value) : m__5392__auto__.call(null,o,new_value));\n} else {\nthrow cljs.core.missing_protocol(\x22IVolatile.-vreset!\x22,o);\n}\n}\n});\n/**\n * Sets the value of volatile o to new-value without regard for the\n *   current value. Returns new-value.\n */\ncljs.core._vreset_BANG_ \x3d (function cljs$core$_vreset_BANG_(o,new_value){\nif((((!((o \x3d\x3d null)))) \x26\x26 ((!((o.cljs$core$IVolatile$_vreset_BANG_$arity$2 \x3d\x3d null)))))){\nreturn o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);\n} else {\nreturn cljs$core$IVolatile$_vreset_BANG_$dyn_12449(o,new_value);\n}\n});\n\n\n/**\n * Protocol for iterating over a collection.\n * @interface\n */\ncljs.core.IIterable \x3d function(){};\n\nvar cljs$core$IIterable$_iterator$dyn_12467 \x3d (function (coll){\nvar x__5393__auto__ \x3d (((coll \x3d\x3d null))?null:coll);\nvar m__5394__auto__ \x3d (cljs.core._iterator[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5394__auto__.call(null,coll));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._iterator[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(coll) : m__5392__auto__.call(null,coll));\n} else {\nthrow cljs.core.missing_protocol(\x22IIterable.-iterator\x22,coll);\n}\n}\n});\n/**\n * Returns an iterator for coll.\n */\ncljs.core._iterator \x3d (function cljs$core$_iterator(coll){\nif((((!((coll \x3d\x3d null)))) \x26\x26 ((!((coll.cljs$core$IIterable$_iterator$arity$1 \x3d\x3d null)))))){\nreturn coll.cljs$core$IIterable$_iterator$arity$1(coll);\n} else {\nreturn cljs$core$IIterable$_iterator$dyn_12467(coll);\n}\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n*/\ncljs.core.StringBufferWriter \x3d (function (sb){\nthis.sb \x3d sb;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1073741824;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (_,s){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.sb.append(s);\n}));\n\n(cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.StringBufferWriter.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22sb\x22,\x22sb\x22,-1249746442,null)], null);\n}));\n\n(cljs.core.StringBufferWriter.cljs$lang$type \x3d true);\n\n(cljs.core.StringBufferWriter.cljs$lang$ctorStr \x3d \x22cljs.core/StringBufferWriter\x22);\n\n(cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/StringBufferWriter\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/StringBufferWriter.\n */\ncljs.core.__GT_StringBufferWriter \x3d (function cljs$core$__GT_StringBufferWriter(sb){\nreturn (new cljs.core.StringBufferWriter(sb));\n});\n\n/**\n * Support so that collections can implement toString without\n * loading all the printing machinery.\n */\ncljs.core.pr_str_STAR_ \x3d (function cljs$core$pr_str_STAR_(obj){\nvar sb \x3d (new goog.string.StringBuffer());\nvar writer \x3d (new cljs.core.StringBufferWriter(sb));\nobj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());\n\nwriter.cljs$core$IWriter$_flush$arity$1(null);\n\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\n});\ncljs.core.int_rotate_left \x3d (function cljs$core$int_rotate_left(x,n){\nreturn ((x \x3c\x3c n) | (x \x3e\x3e\x3e (- n)));\n});\nif((((typeof Math !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof Math.imul !\x3d\x3d \x27undefined\x27)) \x26\x26 ((!((Math.imul((4294967295),(5)) \x3d\x3d\x3d (0))))))){\ncljs.core.imul \x3d (function cljs$core$imul(a,b){\nreturn Math.imul(a,b);\n});\n} else {\ncljs.core.imul \x3d (function cljs$core$imul(a,b){\nvar ah \x3d ((a \x3e\x3e\x3e (16)) \x26 (65535));\nvar al \x3d (a \x26 (65535));\nvar bh \x3d ((b \x3e\x3e\x3e (16)) \x26 (65535));\nvar bl \x3d (b \x26 (65535));\nreturn (((al * bl) + ((((ah * bl) + (al * bh)) \x3c\x3c (16)) \x3e\x3e\x3e (0))) | (0));\n});\n}\ncljs.core.m3_seed \x3d (0);\ncljs.core.m3_C1 \x3d ((3432918353) | (0));\ncljs.core.m3_C2 \x3d ((461845907) | (0));\ncljs.core.m3_mix_K1 \x3d (function cljs$core$m3_mix_K1(k1){\nreturn cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);\n});\ncljs.core.m3_mix_H1 \x3d (function cljs$core$m3_mix_H1(h1,k1){\nreturn ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));\n});\ncljs.core.m3_fmix \x3d (function cljs$core$m3_fmix(h1,len){\nvar h1__$1 \x3d (h1 | (0));\nvar h1__$2 \x3d (h1__$1 ^ len);\nvar h1__$3 \x3d (h1__$2 ^ (h1__$2 \x3e\x3e\x3e (16)));\nvar h1__$4 \x3d cljs.core.imul(h1__$3,((2246822507) | (0)));\nvar h1__$5 \x3d (h1__$4 ^ (h1__$4 \x3e\x3e\x3e (13)));\nvar h1__$6 \x3d cljs.core.imul(h1__$5,((3266489909) | (0)));\nreturn (h1__$6 ^ (h1__$6 \x3e\x3e\x3e (16)));\n});\ncljs.core.m3_hash_int \x3d (function cljs$core$m3_hash_int(in$){\nif((in$ \x3d\x3d\x3d (0))){\nreturn in$;\n} else {\nvar k1 \x3d cljs.core.m3_mix_K1(in$);\nvar h1 \x3d cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);\nreturn cljs.core.m3_fmix(h1,(4));\n}\n});\ncljs.core.m3_hash_unencoded_chars \x3d (function cljs$core$m3_hash_unencoded_chars(in$){\nvar h1 \x3d (function (){var i \x3d (1);\nvar h1 \x3d cljs.core.m3_seed;\nwhile(true){\nif((i \x3c in$.length)){\nvar G__12490 \x3d (i + (2));\nvar G__12491 \x3d cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) \x3c\x3c (16)))));\ni \x3d G__12490;\nh1 \x3d G__12491;\ncontinue;\n} else {\nreturn h1;\n}\nbreak;\n}\n})();\nvar h1__$1 \x3d ((((in$.length \x26 (1)) \x3d\x3d\x3d (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);\nreturn cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));\n});\n\n\n\ncljs.core.string_hash_cache \x3d ({});\ncljs.core.string_hash_cache_count \x3d (0);\ncljs.core.hash_string_STAR_ \x3d (function cljs$core$hash_string_STAR_(s){\nif((!((s \x3d\x3d null)))){\nvar len \x3d s.length;\nif((len \x3e (0))){\nvar i \x3d (0);\nvar hash \x3d (0);\nwhile(true){\nif((i \x3c len)){\nvar G__12495 \x3d (i + (1));\nvar G__12496 \x3d (cljs.core.imul((31),hash) + s.charCodeAt(i));\ni \x3d G__12495;\nhash \x3d G__12496;\ncontinue;\n} else {\nreturn hash;\n}\nbreak;\n}\n} else {\nreturn (0);\n}\n} else {\nreturn (0);\n}\n});\ncljs.core.add_to_string_hash_cache \x3d (function cljs$core$add_to_string_hash_cache(k){\nvar h \x3d cljs.core.hash_string_STAR_(k);\ncljs.core.goog$module$goog$object.set(cljs.core.string_hash_cache,k,h);\n\n(cljs.core.string_hash_cache_count \x3d (cljs.core.string_hash_cache_count + (1)));\n\nreturn h;\n});\ncljs.core.hash_string \x3d (function cljs$core$hash_string(k){\nif((cljs.core.string_hash_cache_count \x3e (255))){\n(cljs.core.string_hash_cache \x3d ({}));\n\n(cljs.core.string_hash_cache_count \x3d (0));\n} else {\n}\n\nif((k \x3d\x3d null)){\nreturn (0);\n} else {\nvar h \x3d (cljs.core.string_hash_cache[k]);\nif(typeof h \x3d\x3d\x3d \x27number\x27){\nreturn h;\n} else {\nreturn cljs.core.add_to_string_hash_cache(k);\n}\n}\n});\n/**\n * Returns the hash code of its argument. Note this is the hash code\n * consistent with \x3d.\n */\ncljs.core.hash \x3d (function cljs$core$hash(o){\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (4194304))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IHash$))))?true:false):false)){\nreturn (o.cljs$core$IHash$_hash$arity$1(null) ^ (0));\n} else {\nif(typeof o \x3d\x3d\x3d \x27number\x27){\nif(isFinite(o)){\nreturn (Math.floor(o) % (2147483647));\n} else {\nvar G__9791 \x3d o;\nswitch (G__9791) {\ncase Infinity:\nreturn (2146435072);\n\nbreak;\ncase -Infinity:\nreturn (-1048576);\n\nbreak;\ndefault:\nreturn (2146959360);\n\n}\n}\n} else {\nif(o \x3d\x3d\x3d true){\nreturn (1231);\n} else {\nif(o \x3d\x3d\x3d false){\nreturn (1237);\n} else {\nif(typeof o \x3d\x3d\x3d \x27string\x27){\nreturn cljs.core.m3_hash_int(cljs.core.hash_string(o));\n} else {\nif((o instanceof Date)){\nreturn (o.valueOf() ^ (0));\n} else {\nif((o \x3d\x3d null)){\nreturn (0);\n} else {\nreturn (cljs.core._hash(o) ^ (0));\n\n}\n}\n}\n}\n}\n}\n}\n});\ncljs.core.hash_combine \x3d (function cljs$core$hash_combine(seed,hash){\nreturn (seed ^ (((hash + (2654435769)) + (seed \x3c\x3c (6))) + (seed \x3e\x3e (2))));\n});\n/**\n * Evaluates x and tests if it is an instance of the type\n *   c. Returns true or false\n */\ncljs.core.instance_QMARK_ \x3d (function cljs$core$instance_QMARK_(c,x){\nreturn (x instanceof c);\n});\n/**\n * Return true if x is a Symbol\n */\ncljs.core.symbol_QMARK_ \x3d (function cljs$core$symbol_QMARK_(x){\nreturn (x instanceof cljs.core.Symbol);\n});\ncljs.core.hash_symbol \x3d (function cljs$core$hash_symbol(sym){\nreturn cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));\n});\ncljs.core.compare_symbols \x3d (function cljs$core$compare_symbols(a,b){\nif((a.str \x3d\x3d\x3d b.str)){\nreturn (0);\n} else {\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d cljs.core.not(a.ns);\nif(and__5043__auto__){\nreturn b.ns;\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn (-1);\n} else {\nif(cljs.core.truth_(a.ns)){\nif(cljs.core.not(b.ns)){\nreturn (1);\n} else {\nvar nsc \x3d cljs.core.goog$module$goog$array.defaultCompare(a.ns,b.ns);\nif(((0) \x3d\x3d\x3d nsc)){\nreturn cljs.core.goog$module$goog$array.defaultCompare(a.name,b.name);\n} else {\nreturn nsc;\n}\n}\n} else {\nreturn cljs.core.goog$module$goog$array.defaultCompare(a.name,b.name);\n\n}\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.INamed}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.core.Symbol \x3d (function (ns,name,str,_hash,_meta){\nthis.ns \x3d ns;\nthis.name \x3d name;\nthis.str \x3d str;\nthis._hash \x3d _hash;\nthis._meta \x3d _meta;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2154168321;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 4096;\n});\n(cljs.core.Symbol.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn self__.str;\n}));\n\n(cljs.core.Symbol.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nif((other instanceof cljs.core.Symbol)){\nreturn (self__.str \x3d\x3d\x3d other.str);\n} else {\nreturn false;\n}\n}));\n\n(cljs.core.Symbol.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__9793 \x3d (arguments.length - (1));\nswitch (G__9793) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.Symbol.prototype.apply \x3d (function (self__,args9792){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9792)));\n}));\n\n(cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar sym \x3d this;\nreturn (cljs.core.get.cljs$core$IFn$_invoke$arity$2 ? cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,sym) : cljs.core.get.call(null,coll,sym));\n}));\n\n(cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,not_found){\nvar self__ \x3d this;\nvar sym \x3d this;\nreturn (cljs.core.get.cljs$core$IFn$_invoke$arity$3 ? cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found) : cljs.core.get.call(null,coll,sym,not_found));\n}));\n\n(cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__._meta;\n}));\n\n(cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_,new_meta){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));\n}));\n\n(cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (sym){\nvar self__ \x3d this;\nvar sym__$1 \x3d this;\nvar h__5154__auto__ \x3d self__._hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_symbol(sym__$1);\n(self__._hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.name;\n}));\n\n(cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.ns;\n}));\n\n(cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (o,writer,_){\nvar self__ \x3d this;\nvar o__$1 \x3d this;\nreturn cljs.core._write(writer,self__.str);\n}));\n\n(cljs.core.Symbol.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22ns\x22,\x22ns\x22,2082130287,null),new cljs.core.Symbol(null,\x22name\x22,\x22name\x22,-810760592,null),new cljs.core.Symbol(null,\x22str\x22,\x22str\x22,-1564826950,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_hash\x22,\x22_hash\x22,-2130838312,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22_meta\x22,\x22_meta\x22,-1716892533,null)], null);\n}));\n\n(cljs.core.Symbol.cljs$lang$type \x3d true);\n\n(cljs.core.Symbol.cljs$lang$ctorStr \x3d \x22cljs.core/Symbol\x22);\n\n(cljs.core.Symbol.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Symbol\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Symbol.\n */\ncljs.core.__GT_Symbol \x3d (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){\nreturn (new cljs.core.Symbol(ns,name,str,_hash,_meta));\n});\n\n/**\n * Returns true if v is of type cljs.core.Var\n */\ncljs.core.var_QMARK_ \x3d (function cljs$core$var_QMARK_(v){\nreturn (v instanceof cljs.core.Var);\n});\n/**\n * Returns a Symbol with the given namespace and name. Arity-1 works\n *   on strings, keywords, and vars.\n */\ncljs.core.symbol \x3d (function cljs$core$symbol(var_args){\nvar G__9795 \x3d arguments.length;\nswitch (G__9795) {\ncase 1:\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.symbol.cljs$core$IFn$_invoke$arity$1 \x3d (function (name){\nwhile(true){\nif((name instanceof cljs.core.Symbol)){\nreturn name;\n} else {\nif(typeof name \x3d\x3d\x3d \x27string\x27){\nvar idx \x3d name.indexOf(\x22/\x22);\nif((idx \x3c (1))){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null,name);\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(name.substring((0),idx),name.substring((idx + (1)),name.length));\n}\n} else {\nif(cljs.core.var_QMARK_(name)){\nreturn name.sym;\n} else {\nif((name instanceof cljs.core.Keyword)){\nvar G__12526 \x3d name.fqn;\nname \x3d G__12526;\ncontinue;\n} else {\nthrow (new Error(\x22no conversion to symbol\x22));\n\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2 \x3d (function (ns,name){\nvar sym_str \x3d (((!((ns \x3d\x3d null))))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\x22/\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(\x27\x27):name);\nreturn (new cljs.core.Symbol(ns,name,sym_str,null,null));\n}));\n\n(cljs.core.symbol.cljs$lang$maxFixedArity \x3d 2);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.Fn}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.core.Var \x3d (function (val,sym,_meta){\nthis.val \x3d val;\nthis.sym \x3d sym;\nthis._meta \x3d _meta;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 6717441;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.Var.prototype.isMacro \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null)).cljs$lang$macro;\n}));\n\n(cljs.core.Var.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn [\x22#\x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.sym)].join(\x27\x27);\n}));\n\n(cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__._meta;\n}));\n\n(cljs.core.Var.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_,new_meta){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.Var(self__.val,self__.sym,new_meta));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this$,other){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nif((other instanceof cljs.core.Var)){\nvar G__9797 \x3d this$__$1.sym;\nvar G__9798 \x3d other.sym;\nreturn (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 ? cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(G__9797,G__9798) : cljs.core._EQ_.call(null,G__9797,G__9798));\n} else {\nreturn false;\n}\n}));\n\n(cljs.core.Var.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.hash_symbol(self__.sym);\n}));\n\n(cljs.core.Var.prototype.cljs$core$Fn$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Var.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__9799 \x3d (arguments.length - (1));\nswitch (G__9799) {\ncase (0):\nreturn self__.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase (3):\nreturn self__.cljs$core$IFn$_invoke$arity$3((arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase (4):\nreturn self__.cljs$core$IFn$_invoke$arity$4((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase (5):\nreturn self__.cljs$core$IFn$_invoke$arity$5((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ncase (6):\nreturn self__.cljs$core$IFn$_invoke$arity$6((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\n\nbreak;\ncase (7):\nreturn self__.cljs$core$IFn$_invoke$arity$7((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\n\nbreak;\ncase (8):\nreturn self__.cljs$core$IFn$_invoke$arity$8((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\n\nbreak;\ncase (9):\nreturn self__.cljs$core$IFn$_invoke$arity$9((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\n\nbreak;\ncase (10):\nreturn self__.cljs$core$IFn$_invoke$arity$10((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\n\nbreak;\ncase (11):\nreturn self__.cljs$core$IFn$_invoke$arity$11((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\n\nbreak;\ncase (12):\nreturn self__.cljs$core$IFn$_invoke$arity$12((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));\n\nbreak;\ncase (13):\nreturn self__.cljs$core$IFn$_invoke$arity$13((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\n\nbreak;\ncase (14):\nreturn self__.cljs$core$IFn$_invoke$arity$14((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));\n\nbreak;\ncase (15):\nreturn self__.cljs$core$IFn$_invoke$arity$15((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\n\nbreak;\ncase (16):\nreturn self__.cljs$core$IFn$_invoke$arity$16((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));\n\nbreak;\ncase (17):\nreturn self__.cljs$core$IFn$_invoke$arity$17((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\n\nbreak;\ncase (18):\nreturn self__.cljs$core$IFn$_invoke$arity$18((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));\n\nbreak;\ncase (19):\nreturn self__.cljs$core$IFn$_invoke$arity$19((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\n\nbreak;\ncase (20):\nreturn self__.cljs$core$IFn$_invoke$arity$20((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));\n\nbreak;\ncase (21):\nreturn self__.cljs$core$IFn$_invoke$arity$21((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.Var.prototype.apply \x3d (function (self__,args9796){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9796)));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9800 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9800.cljs$core$IFn$_invoke$arity$0 ? fexpr__9800.cljs$core$IFn$_invoke$arity$0() : fexpr__9800.call(null));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (a){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9801 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9801.cljs$core$IFn$_invoke$arity$1 ? fexpr__9801.cljs$core$IFn$_invoke$arity$1(a) : fexpr__9801.call(null,a));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9802 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9802.cljs$core$IFn$_invoke$arity$2 ? fexpr__9802.cljs$core$IFn$_invoke$arity$2(a,b) : fexpr__9802.call(null,a,b));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,c){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9803 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9803.cljs$core$IFn$_invoke$arity$3 ? fexpr__9803.cljs$core$IFn$_invoke$arity$3(a,b,c) : fexpr__9803.call(null,a,b,c));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,b,c,d){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9804 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9804.cljs$core$IFn$_invoke$arity$4 ? fexpr__9804.cljs$core$IFn$_invoke$arity$4(a,b,c,d) : fexpr__9804.call(null,a,b,c,d));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 \x3d (function (a,b,c,d,e){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9805 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9805.cljs$core$IFn$_invoke$arity$5 ? fexpr__9805.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e) : fexpr__9805.call(null,a,b,c,d,e));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 \x3d (function (a,b,c,d,e,f){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9806 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9806.cljs$core$IFn$_invoke$arity$6 ? fexpr__9806.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f) : fexpr__9806.call(null,a,b,c,d,e,f));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 \x3d (function (a,b,c,d,e,f,g){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9807 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9807.cljs$core$IFn$_invoke$arity$7 ? fexpr__9807.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g) : fexpr__9807.call(null,a,b,c,d,e,f,g));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 \x3d (function (a,b,c,d,e,f,g,h){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9808 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9808.cljs$core$IFn$_invoke$arity$8 ? fexpr__9808.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h) : fexpr__9808.call(null,a,b,c,d,e,f,g,h));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 \x3d (function (a,b,c,d,e,f,g,h,i){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9809 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9809.cljs$core$IFn$_invoke$arity$9 ? fexpr__9809.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i) : fexpr__9809.call(null,a,b,c,d,e,f,g,h,i));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 \x3d (function (a,b,c,d,e,f,g,h,i,j){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9810 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9810.cljs$core$IFn$_invoke$arity$10 ? fexpr__9810.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j) : fexpr__9810.call(null,a,b,c,d,e,f,g,h,i,j));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 \x3d (function (a,b,c,d,e,f,g,h,i,j,k){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9811 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9811.cljs$core$IFn$_invoke$arity$11 ? fexpr__9811.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k) : fexpr__9811.call(null,a,b,c,d,e,f,g,h,i,j,k));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9812 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9812.cljs$core$IFn$_invoke$arity$12 ? fexpr__9812.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l) : fexpr__9812.call(null,a,b,c,d,e,f,g,h,i,j,k,l));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9813 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9813.cljs$core$IFn$_invoke$arity$13 ? fexpr__9813.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m) : fexpr__9813.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9814 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9814.cljs$core$IFn$_invoke$arity$14 ? fexpr__9814.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n) : fexpr__9814.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9815 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9815.cljs$core$IFn$_invoke$arity$15 ? fexpr__9815.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : fexpr__9815.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9816 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9816.cljs$core$IFn$_invoke$arity$16 ? fexpr__9816.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : fexpr__9816.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9817 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9817.cljs$core$IFn$_invoke$arity$17 ? fexpr__9817.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : fexpr__9817.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9818 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9818.cljs$core$IFn$_invoke$arity$18 ? fexpr__9818.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : fexpr__9818.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9819 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9819.cljs$core$IFn$_invoke$arity$19 ? fexpr__9819.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : fexpr__9819.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar fexpr__9820 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nreturn (fexpr__9820.cljs$core$IFn$_invoke$arity$20 ? fexpr__9820.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : fexpr__9820.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\n}));\n\n(cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar G__9821 \x3d (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));\nvar G__9822 \x3d a;\nvar G__9823 \x3d b;\nvar G__9824 \x3d c;\nvar G__9825 \x3d d;\nvar G__9826 \x3d e;\nvar G__9827 \x3d f;\nvar G__9828 \x3d g;\nvar G__9829 \x3d h;\nvar G__9830 \x3d i;\nvar G__9831 \x3d j;\nvar G__9832 \x3d k;\nvar G__9833 \x3d l;\nvar G__9834 \x3d m;\nvar G__9835 \x3d n;\nvar G__9836 \x3d o;\nvar G__9837 \x3d p;\nvar G__9838 \x3d q;\nvar G__9839 \x3d r;\nvar G__9840 \x3d s;\nvar G__9841 \x3d t;\nvar G__9842 \x3d rest;\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__9821,G__9822,G__9823,G__9824,G__9825,G__9826,G__9827,G__9828,G__9829,G__9830,G__9831,G__9832,G__9833,G__9834,G__9835,G__9836,G__9837,G__9838,G__9839,G__9840,G__9841,G__9842) : cljs.core.apply.call(null,G__9821,G__9822,G__9823,G__9824,G__9825,G__9826,G__9827,G__9828,G__9829,G__9830,G__9831,G__9832,G__9833,G__9834,G__9835,G__9836,G__9837,G__9838,G__9839,G__9840,G__9841,G__9842));\n}));\n\n(cljs.core.Var.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),new cljs.core.Symbol(null,\x22sym\x22,\x22sym\x22,195671222,null),new cljs.core.Symbol(null,\x22_meta\x22,\x22_meta\x22,-1716892533,null)], null);\n}));\n\n(cljs.core.Var.cljs$lang$type \x3d true);\n\n(cljs.core.Var.cljs$lang$ctorStr \x3d \x22cljs.core/Var\x22);\n\n(cljs.core.Var.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Var\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Var.\n */\ncljs.core.__GT_Var \x3d (function cljs$core$__GT_Var(val,sym,_meta){\nreturn (new cljs.core.Var(val,sym,_meta));\n});\n\n\n\n/**\n * Return true if x implements IIterable protocol.\n */\ncljs.core.iterable_QMARK_ \x3d (function cljs$core$iterable_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition1$ \x26 (131072))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IIterable$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition1$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,x);\n}\n});\n/**\n * Return true if x has a JavaScript iterator property\n */\ncljs.core.js_iterable_QMARK_ \x3d (function cljs$core$js_iterable_QMARK_(x){\nreturn (((!((x \x3d\x3d null)))) \x26\x26 ((!((x[cljs.core.ITER_SYMBOL] \x3d\x3d null)))));\n});\n/**\n * Clone the supplied value which must implement ICloneable.\n */\ncljs.core.clone \x3d (function cljs$core$clone(value){\nreturn cljs.core._clone(value);\n});\n/**\n * Return true if x implements ICloneable protocol.\n */\ncljs.core.cloneable_QMARK_ \x3d (function cljs$core$cloneable_QMARK_(value){\nif((!((value \x3d\x3d null)))){\nif((((value.cljs$lang$protocol_mask$partition1$ \x26 (8192))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.cljs$core$ICloneable$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition1$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,value);\n}\n});\n/**\n * Returns a seq on the collection. If the collection is\n *   empty, returns nil.  (seq nil) returns nil. seq also works on\n *   Strings.\n */\ncljs.core.seq \x3d (function cljs$core$seq(coll){\nif((coll \x3d\x3d null)){\nreturn null;\n} else {\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (8388608))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeqable$))))?true:false):false)){\nreturn coll.cljs$core$ISeqable$_seq$arity$1(null);\n} else {\nif(cljs.core.array_QMARK_(coll)){\nif((coll.length \x3d\x3d\x3d (0))){\nreturn null;\n} else {\nreturn (new cljs.core.IndexedSeq(coll,(0),null));\n}\n} else {\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\nif((coll.length \x3d\x3d\x3d (0))){\nreturn null;\n} else {\nreturn (new cljs.core.IndexedSeq(coll,(0),null));\n}\n} else {\nif(cljs.core.js_iterable_QMARK_(coll)){\nvar G__9846 \x3d cljs.core.goog$module$goog$object.get(coll,cljs.core.ITER_SYMBOL).call(coll);\nreturn (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__9846) : cljs.core.es6_iterator_seq.call(null,G__9846));\n} else {\nif(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){\nreturn cljs.core._seq(coll);\n} else {\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll),\x22 is not ISeqable\x22].join(\x27\x27)));\n\n}\n}\n}\n}\n}\n}\n});\n/**\n * Returns the first item in the collection. Calls seq on its\n *   argument. If coll is nil, returns nil.\n */\ncljs.core.first \x3d (function cljs$core$first(coll){\nif((coll \x3d\x3d null)){\nreturn null;\n} else {\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeq$))))?true:false):false)){\nreturn coll.cljs$core$ISeq$_first$arity$1(null);\n} else {\nvar s \x3d cljs.core.seq(coll);\nif((s \x3d\x3d null)){\nreturn null;\n} else {\nreturn cljs.core._first(s);\n}\n}\n}\n});\n/**\n * Returns a possibly empty seq of the items after the first. Calls seq on its\n *   argument.\n */\ncljs.core.rest \x3d (function cljs$core$rest(coll){\nif((!((coll \x3d\x3d null)))){\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeq$))))?true:false):false)){\nreturn coll.cljs$core$ISeq$_rest$arity$1(null);\n} else {\nvar s \x3d cljs.core.seq(coll);\nif(s){\nreturn s.cljs$core$ISeq$_rest$arity$1(null);\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}\n} else {\nreturn cljs.core.List.EMPTY;\n}\n});\n/**\n * Returns a seq of the items after the first. Calls seq on its\n *   argument.  If there are no more items, returns nil\n */\ncljs.core.next \x3d (function cljs$core$next(coll){\nif((coll \x3d\x3d null)){\nreturn null;\n} else {\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$INext$))))?true:false):false)){\nreturn coll.cljs$core$INext$_next$arity$1(null);\n} else {\nreturn cljs.core.seq(cljs.core.rest(coll));\n}\n}\n});\n/**\n * Equality. Returns true if x equals y, false if not. Compares\n *   numbers and collections in a type-independent manner.  Clojure\x27s immutable data\n *   structures define -equiv (and thus \x3d) as a value, not an identity,\n *   comparison.\n */\ncljs.core._EQ_ \x3d (function cljs$core$_EQ_(var_args){\nvar G__9854 \x3d arguments.length;\nswitch (G__9854) {\ncase 1:\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12590 \x3d arguments.length;\nvar i__5770__auto___12591 \x3d (0);\nwhile(true){\nif((i__5770__auto___12591 \x3c len__5769__auto___12590)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12591]));\n\nvar G__12593 \x3d (i__5770__auto___12591 + (1));\ni__5770__auto___12591 \x3d G__12593;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn true;\n}));\n\n(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nif((x \x3d\x3d null)){\nreturn (y \x3d\x3d null);\n} else {\nreturn (((x \x3d\x3d\x3d y)) || (cljs.core._equiv(x,y)));\n}\n}));\n\n(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nwhile(true){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){\nif(cljs.core.next(more)){\nvar G__12595 \x3d y;\nvar G__12596 \x3d cljs.core.first(more);\nvar G__12597 \x3d cljs.core.next(more);\nx \x3d G__12595;\ny \x3d G__12596;\nmore \x3d G__12597;\ncontinue;\n} else {\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));\n}\n} else {\nreturn false;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core._EQ_.cljs$lang$applyTo \x3d (function (seq9851){\nvar G__9852 \x3d cljs.core.first(seq9851);\nvar seq9851__$1 \x3d cljs.core.next(seq9851);\nvar G__9853 \x3d cljs.core.first(seq9851__$1);\nvar seq9851__$2 \x3d cljs.core.next(seq9851__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9852,G__9853,seq9851__$2);\n}));\n\n(cljs.core._EQ_.cljs$lang$maxFixedArity \x3d (2));\n\n\n/**\n* @constructor\n*/\ncljs.core.ES6Iterator \x3d (function (s){\nthis.s \x3d s;\n});\n(cljs.core.ES6Iterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nif((!((self__.s \x3d\x3d null)))){\nvar x \x3d cljs.core.first(self__.s);\n(self__.s \x3d cljs.core.next(self__.s));\n\nreturn ({\x22value\x22: x, \x22done\x22: false});\n} else {\nreturn ({\x22value\x22: null, \x22done\x22: true});\n}\n}));\n\n(cljs.core.ES6Iterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ES6Iterator.cljs$lang$type \x3d true);\n\n(cljs.core.ES6Iterator.cljs$lang$ctorStr \x3d \x22cljs.core/ES6Iterator\x22);\n\n(cljs.core.ES6Iterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ES6Iterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ES6Iterator.\n */\ncljs.core.__GT_ES6Iterator \x3d (function cljs$core$__GT_ES6Iterator(s){\nreturn (new cljs.core.ES6Iterator(s));\n});\n\n/**\n * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.\n */\ncljs.core.es6_iterator \x3d (function cljs$core$es6_iterator(coll){\nreturn (new cljs.core.ES6Iterator(cljs.core.seq(coll)));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.ISeqable}\n*/\ncljs.core.ES6IteratorSeq \x3d (function (value,iter,_rest){\nthis.value \x3d value;\nthis.iter \x3d iter;\nthis._rest \x3d _rest;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 8388672;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn this$__$1;\n}));\n\n(cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.value;\n}));\n\n(cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nif((self__._rest \x3d\x3d null)){\n(self__._rest \x3d (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(self__.iter) : cljs.core.es6_iterator_seq.call(null,self__.iter)));\n} else {\n}\n\nreturn self__._rest;\n}));\n\n(cljs.core.ES6IteratorSeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22value\x22,\x22value\x22,1946509744,null),new cljs.core.Symbol(null,\x22iter\x22,\x22iter\x22,-1346195486,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_rest\x22,\x22_rest\x22,-2100466189,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ES6IteratorSeq.cljs$lang$type \x3d true);\n\n(cljs.core.ES6IteratorSeq.cljs$lang$ctorStr \x3d \x22cljs.core/ES6IteratorSeq\x22);\n\n(cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ES6IteratorSeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ES6IteratorSeq.\n */\ncljs.core.__GT_ES6IteratorSeq \x3d (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){\nreturn (new cljs.core.ES6IteratorSeq(value,iter,_rest));\n});\n\n/**\n * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.\n */\ncljs.core.es6_iterator_seq \x3d (function cljs$core$es6_iterator_seq(iter){\nvar v \x3d iter.next();\nif(cljs.core.truth_(v.done)){\nreturn null;\n} else {\nreturn (new cljs.core.ES6IteratorSeq(v.value,iter,null));\n}\n});\n/**\n * Mix final collection hash for ordered or unordered collections.\n * hash-basis is the combined collection hash, count is the number\n * of elements included in the basis. Note this is the hash code\n * consistent with \x3d, different from .hashCode.\n * See http://clojure.org/data_structures#hash for full algorithms.\n */\ncljs.core.mix_collection_hash \x3d (function cljs$core$mix_collection_hash(hash_basis,count){\nvar h1 \x3d cljs.core.m3_seed;\nvar k1 \x3d cljs.core.m3_mix_K1(hash_basis);\nvar h1__$1 \x3d cljs.core.m3_mix_H1(h1,k1);\nreturn cljs.core.m3_fmix(h1__$1,count);\n});\n/**\n * Returns the hash code, consistent with \x3d, for an external ordered\n * collection implementing Iterable.\n * See http://clojure.org/data_structures#hash for full algorithms.\n */\ncljs.core.hash_ordered_coll \x3d (function cljs$core$hash_ordered_coll(coll){\nvar n \x3d (0);\nvar hash_code \x3d (1);\nvar coll__$1 \x3d cljs.core.seq(coll);\nwhile(true){\nif((!((coll__$1 \x3d\x3d null)))){\nvar G__12600 \x3d (n + (1));\nvar G__12601 \x3d ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));\nvar G__12602 \x3d cljs.core.next(coll__$1);\nn \x3d G__12600;\nhash_code \x3d G__12601;\ncoll__$1 \x3d G__12602;\ncontinue;\n} else {\nreturn cljs.core.mix_collection_hash(hash_code,n);\n}\nbreak;\n}\n});\ncljs.core.empty_ordered_hash \x3d cljs.core.mix_collection_hash((1),(0));\n/**\n * Returns the hash code, consistent with \x3d, for an external unordered\n * collection implementing Iterable. For maps, the iterator should\n * return map entries whose hash is computed as\n *   (hash-ordered-coll [k v]).\n * See http://clojure.org/data_structures#hash for full algorithms.\n */\ncljs.core.hash_unordered_coll \x3d (function cljs$core$hash_unordered_coll(coll){\nvar n \x3d (0);\nvar hash_code \x3d (0);\nvar coll__$1 \x3d cljs.core.seq(coll);\nwhile(true){\nif((!((coll__$1 \x3d\x3d null)))){\nvar G__12609 \x3d (n + (1));\nvar G__12611 \x3d ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));\nvar G__12612 \x3d cljs.core.next(coll__$1);\nn \x3d G__12609;\nhash_code \x3d G__12611;\ncoll__$1 \x3d G__12612;\ncontinue;\n} else {\nreturn cljs.core.mix_collection_hash(hash_code,n);\n}\nbreak;\n}\n});\ncljs.core.empty_unordered_hash \x3d cljs.core.mix_collection_hash((0),(0));\n\n\n(cljs.core.ICounted[\x22null\x22] \x3d true);\n\n(cljs.core._count[\x22null\x22] \x3d (function (_){\nreturn (0);\n}));\n(Date.prototype.cljs$core$IEquiv$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(Date.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (o,other){\nvar o__$1 \x3d this;\nreturn (((other instanceof Date)) \x26\x26 ((o__$1.valueOf() \x3d\x3d\x3d other.valueOf())));\n}));\n\n(Date.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(Date.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (this$,other){\nvar this$__$1 \x3d this;\nif((other instanceof Date)){\nreturn cljs.core.goog$module$goog$array.defaultCompare(this$__$1.valueOf(),other.valueOf());\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(\x27\x27)));\n}\n}));\n\n/**\n * @interface\n */\ncljs.core.Inst \x3d function(){};\n\nvar cljs$core$Inst$inst_ms_STAR_$dyn_12620 \x3d (function (inst){\nvar x__5393__auto__ \x3d (((inst \x3d\x3d null))?null:inst);\nvar m__5394__auto__ \x3d (cljs.core.inst_ms_STAR_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__5394__auto__.call(null,inst));\n} else {\nvar m__5392__auto__ \x3d (cljs.core.inst_ms_STAR_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(inst) : m__5392__auto__.call(null,inst));\n} else {\nthrow cljs.core.missing_protocol(\x22Inst.inst-ms*\x22,inst);\n}\n}\n});\ncljs.core.inst_ms_STAR_ \x3d (function cljs$core$inst_ms_STAR_(inst){\nif((((!((inst \x3d\x3d null)))) \x26\x26 ((!((inst.cljs$core$Inst$inst_ms_STAR_$arity$1 \x3d\x3d null)))))){\nreturn inst.cljs$core$Inst$inst_ms_STAR_$arity$1(inst);\n} else {\nreturn cljs$core$Inst$inst_ms_STAR_$dyn_12620(inst);\n}\n});\n\n(Date.prototype.cljs$core$Inst$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(Date.prototype.cljs$core$Inst$inst_ms_STAR_$arity$1 \x3d (function (inst){\nvar inst__$1 \x3d this;\nreturn inst__$1.getTime();\n}));\n/**\n * Return the number of milliseconds since January 1, 1970, 00:00:00 GMT\n */\ncljs.core.inst_ms \x3d (function cljs$core$inst_ms(inst){\nreturn cljs.core.inst_ms_STAR_(inst);\n});\n/**\n * Return true if x satisfies Inst\n */\ncljs.core.inst_QMARK_ \x3d (function cljs$core$inst_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$Inst$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.Inst,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.Inst,x);\n}\n});\n(cljs.core.IEquiv[\x22number\x22] \x3d true);\n\n(cljs.core._equiv[\x22number\x22] \x3d (function (x,o){\nreturn (x \x3d\x3d\x3d o);\n}));\n(cljs.core.Fn[\x22function\x22] \x3d true);\n\n(cljs.core.IMeta[\x22function\x22] \x3d true);\n\n(cljs.core._meta[\x22function\x22] \x3d (function (_){\nreturn null;\n}));\n(cljs.core.IHash[\x22_\x22] \x3d true);\n\n(cljs.core._hash[\x22_\x22] \x3d (function (o){\nreturn goog.getUid(o);\n}));\n/**\n * Returns a number one greater than num.\n */\ncljs.core.inc \x3d (function cljs$core$inc(x){\nreturn (x + (1));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IDeref}\n*/\ncljs.core.Reduced \x3d (function (val){\nthis.val \x3d val;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32768;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (o){\nvar self__ \x3d this;\nvar o__$1 \x3d this;\nreturn self__.val;\n}));\n\n(cljs.core.Reduced.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null)], null);\n}));\n\n(cljs.core.Reduced.cljs$lang$type \x3d true);\n\n(cljs.core.Reduced.cljs$lang$ctorStr \x3d \x22cljs.core/Reduced\x22);\n\n(cljs.core.Reduced.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Reduced\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Reduced.\n */\ncljs.core.__GT_Reduced \x3d (function cljs$core$__GT_Reduced(val){\nreturn (new cljs.core.Reduced(val));\n});\n\n/**\n * Wraps x in a way such that a reduce will terminate with the value x\n */\ncljs.core.reduced \x3d (function cljs$core$reduced(x){\nreturn (new cljs.core.Reduced(x));\n});\n/**\n * Returns true if x is the result of a call to reduced\n */\ncljs.core.reduced_QMARK_ \x3d (function cljs$core$reduced_QMARK_(r){\nreturn (r instanceof cljs.core.Reduced);\n});\n/**\n * If x is already reduced?, returns it, else returns (reduced x)\n */\ncljs.core.ensure_reduced \x3d (function cljs$core$ensure_reduced(x){\nif(cljs.core.reduced_QMARK_(x)){\nreturn x;\n} else {\nreturn cljs.core.reduced(x);\n}\n});\n/**\n * If x is reduced?, returns (deref x), else returns x\n */\ncljs.core.unreduced \x3d (function cljs$core$unreduced(x){\nif(cljs.core.reduced_QMARK_(x)){\nreturn (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(x) : cljs.core.deref.call(null,x));\n} else {\nreturn x;\n}\n});\n/**\n * Also reader macro: @var/@atom/@delay. Returns the\n * most-recently-committed value of ref. When applied to a var\n * or atom, returns its current state. When applied to a delay, forces\n * it if not already forced. See also - realized?.\n */\ncljs.core.deref \x3d (function cljs$core$deref(o){\nreturn cljs.core._deref(o);\n});\n/**\n * Accepts any collection which satisfies the ICount and IIndexed protocols and\n * reduces them without incurring seq initialization\n */\ncljs.core.ci_reduce \x3d (function cljs$core$ci_reduce(var_args){\nvar G__9857 \x3d arguments.length;\nswitch (G__9857) {\ncase 2:\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (cicoll,f){\nvar cnt \x3d cicoll.cljs$core$ICounted$_count$arity$1(null);\nif((cnt \x3d\x3d\x3d (0))){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar val \x3d cicoll.cljs$core$IIndexed$_nth$arity$2(null,(0));\nvar n \x3d (1);\nwhile(true){\nif((n \x3c cnt)){\nvar nval \x3d (function (){var G__9858 \x3d val;\nvar G__9859 \x3d cicoll.cljs$core$IIndexed$_nth$arity$2(null,n);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9858,G__9859) : f.call(null,G__9858,G__9859));\n})();\nif(cljs.core.reduced_QMARK_(nval)){\nreturn cljs.core.deref(nval);\n} else {\nvar G__12631 \x3d nval;\nvar G__12632 \x3d (n + (1));\nval \x3d G__12631;\nn \x3d G__12632;\ncontinue;\n}\n} else {\nreturn val;\n}\nbreak;\n}\n}\n}));\n\n(cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (cicoll,f,val){\nvar cnt \x3d cicoll.cljs$core$ICounted$_count$arity$1(null);\nvar val__$1 \x3d val;\nvar n \x3d (0);\nwhile(true){\nif((n \x3c cnt)){\nvar nval \x3d (function (){var G__9860 \x3d val__$1;\nvar G__9861 \x3d cicoll.cljs$core$IIndexed$_nth$arity$2(null,n);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9860,G__9861) : f.call(null,G__9860,G__9861));\n})();\nif(cljs.core.reduced_QMARK_(nval)){\nreturn cljs.core.deref(nval);\n} else {\nvar G__12638 \x3d nval;\nvar G__12639 \x3d (n + (1));\nval__$1 \x3d G__12638;\nn \x3d G__12639;\ncontinue;\n}\n} else {\nreturn val__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.ci_reduce.cljs$lang$maxFixedArity \x3d 3);\n\ncljs.core.array_reduce \x3d (function cljs$core$array_reduce(var_args){\nvar G__9863 \x3d arguments.length;\nswitch (G__9863) {\ncase 2:\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (arr,f){\nvar cnt \x3d arr.length;\nif((arr.length \x3d\x3d\x3d (0))){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar val \x3d (arr[(0)]);\nvar n \x3d (1);\nwhile(true){\nif((n \x3c cnt)){\nvar nval \x3d (function (){var G__9864 \x3d val;\nvar G__9865 \x3d (arr[n]);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9864,G__9865) : f.call(null,G__9864,G__9865));\n})();\nif(cljs.core.reduced_QMARK_(nval)){\nreturn cljs.core.deref(nval);\n} else {\nvar G__12642 \x3d nval;\nvar G__12643 \x3d (n + (1));\nval \x3d G__12642;\nn \x3d G__12643;\ncontinue;\n}\n} else {\nreturn val;\n}\nbreak;\n}\n}\n}));\n\n(cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (arr,f,val){\nvar cnt \x3d arr.length;\nvar val__$1 \x3d val;\nvar n \x3d (0);\nwhile(true){\nif((n \x3c cnt)){\nvar nval \x3d (function (){var G__9866 \x3d val__$1;\nvar G__9867 \x3d (arr[n]);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9866,G__9867) : f.call(null,G__9866,G__9867));\n})();\nif(cljs.core.reduced_QMARK_(nval)){\nreturn cljs.core.deref(nval);\n} else {\nvar G__12645 \x3d nval;\nvar G__12646 \x3d (n + (1));\nval__$1 \x3d G__12645;\nn \x3d G__12646;\ncontinue;\n}\n} else {\nreturn val__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4 \x3d (function (arr,f,val,idx){\nvar cnt \x3d arr.length;\nvar val__$1 \x3d val;\nvar n \x3d idx;\nwhile(true){\nif((n \x3c cnt)){\nvar nval \x3d (function (){var G__9868 \x3d val__$1;\nvar G__9869 \x3d (arr[n]);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9868,G__9869) : f.call(null,G__9868,G__9869));\n})();\nif(cljs.core.reduced_QMARK_(nval)){\nreturn cljs.core.deref(nval);\n} else {\nvar G__12647 \x3d nval;\nvar G__12648 \x3d (n + (1));\nval__$1 \x3d G__12647;\nn \x3d G__12648;\ncontinue;\n}\n} else {\nreturn val__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.array_reduce.cljs$lang$maxFixedArity \x3d 4);\n\n\n\n\n\n\n\n/**\n * Returns true if coll implements count in constant time\n */\ncljs.core.counted_QMARK_ \x3d (function cljs$core$counted_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (2))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ICounted$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,x);\n}\n});\n/**\n * Returns true if coll implements nth in constant time\n */\ncljs.core.indexed_QMARK_ \x3d (function cljs$core$indexed_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (16))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IIndexed$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,x);\n}\n});\ncljs.core._indexOf \x3d (function cljs$core$_indexOf(var_args){\nvar G__9873 \x3d arguments.length;\nswitch (G__9873) {\ncase 2:\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core._indexOf.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,x){\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n}));\n\n(cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,x,start){\nvar len \x3d (cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null,coll));\nif((start \x3e\x3d len)){\nreturn (-1);\n} else {\nvar idx \x3d (((start \x3e (0)))?start:(((start \x3c (0)))?(function (){var x__5130__auto__ \x3d (0);\nvar y__5131__auto__ \x3d (start + len);\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})():start\n));\nwhile(true){\nif((idx \x3c len)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,idx) : cljs.core.nth.call(null,coll,idx)),x)){\nreturn idx;\n} else {\nvar G__12657 \x3d (idx + (1));\nidx \x3d G__12657;\ncontinue;\n}\n} else {\nreturn (-1);\n}\nbreak;\n}\n}\n}));\n\n(cljs.core._indexOf.cljs$lang$maxFixedArity \x3d 3);\n\ncljs.core._lastIndexOf \x3d (function cljs$core$_lastIndexOf(var_args){\nvar G__9875 \x3d arguments.length;\nswitch (G__9875) {\ncase 2:\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,x){\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null,coll)));\n}));\n\n(cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,x,start){\nvar len \x3d (cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null,coll));\nif((len \x3d\x3d\x3d (0))){\nreturn (-1);\n} else {\nvar idx \x3d (((start \x3e (0)))?(function (){var x__5133__auto__ \x3d (len - (1));\nvar y__5134__auto__ \x3d start;\nreturn ((x__5133__auto__ \x3c y__5134__auto__) ? x__5133__auto__ : y__5134__auto__);\n})():(((start \x3c (0)))?(len + start):start\n));\nwhile(true){\nif((idx \x3e\x3d (0))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((cljs.core.nth.cljs$core$IFn$_invoke$arity$2 ? cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,idx) : cljs.core.nth.call(null,coll,idx)),x)){\nreturn idx;\n} else {\nvar G__12659 \x3d (idx - (1));\nidx \x3d G__12659;\ncontinue;\n}\n} else {\nreturn (-1);\n}\nbreak;\n}\n}\n}));\n\n(cljs.core._lastIndexOf.cljs$lang$maxFixedArity \x3d 3);\n\n\n/**\n* @constructor\n*/\ncljs.core.IndexedSeqIterator \x3d (function (arr,i){\nthis.arr \x3d arr;\nthis.i \x3d i;\n});\n(cljs.core.IndexedSeqIterator.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.i \x3c self__.arr.length);\n}));\n\n(cljs.core.IndexedSeqIterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar ret \x3d (self__.arr[self__.i]);\n(self__.i \x3d (self__.i + (1)));\n\nreturn ret;\n}));\n\n(cljs.core.IndexedSeqIterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.IndexedSeqIterator.cljs$lang$type \x3d true);\n\n(cljs.core.IndexedSeqIterator.cljs$lang$ctorStr \x3d \x22cljs.core/IndexedSeqIterator\x22);\n\n(cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/IndexedSeqIterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/IndexedSeqIterator.\n */\ncljs.core.__GT_IndexedSeqIterator \x3d (function cljs$core$__GT_IndexedSeqIterator(arr,i){\nreturn (new cljs.core.IndexedSeqIterator(arr,i));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n * @implements {cljs.core.IReversible}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ASeq}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.IndexedSeq \x3d (function (arr,i,meta){\nthis.arr \x3d arr;\nthis.i \x3d i;\nthis.meta \x3d meta;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 166592766;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(cljs.core.IndexedSeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.IndexedSeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.IndexedSeq.prototype.indexOf \x3d (function() {\nvar G__12664 \x3d null;\nvar G__12664__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__12664__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__12664 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__12664__1.call(this,x);\ncase 2:\nreturn G__12664__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12664.cljs$core$IFn$_invoke$arity$1 \x3d G__12664__1;\nG__12664.cljs$core$IFn$_invoke$arity$2 \x3d G__12664__2;\nreturn G__12664;\n})()\n);\n\n(cljs.core.IndexedSeq.prototype.lastIndexOf \x3d (function() {\nvar G__12666 \x3d null;\nvar G__12666__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null,coll)));\n});\nvar G__12666__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__12666 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__12666__1.call(this,x);\ncase 2:\nreturn G__12666__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12666.cljs$core$IFn$_invoke$arity$1 \x3d G__12666__1;\nG__12666.cljs$core$IFn$_invoke$arity$2 \x3d G__12666__2;\nreturn G__12666;\n})()\n);\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,n){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar i__$1 \x3d (n + self__.i);\nif(((((0) \x3c\x3d i__$1)) \x26\x26 ((i__$1 \x3c self__.arr.length)))){\nreturn (self__.arr[i__$1]);\n} else {\nthrow (new Error(\x22Index out of bounds\x22));\n}\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,n,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar i__$1 \x3d (n + self__.i);\nif(((((0) \x3c\x3d i__$1)) \x26\x26 ((i__$1 \x3c self__.arr.length)))){\nreturn (self__.arr[i__$1]);\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.IndexedSeq(self__.arr,self__.i,self__.meta));\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nif(((self__.i + (1)) \x3c self__.arr.length)){\nreturn (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1)),null));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nvar x__5130__auto__ \x3d (0);\nvar y__5131__auto__ \x3d (self__.arr.length - self__.i);\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar c \x3d coll__$1.cljs$core$ICounted$_count$arity$1(null);\nif((c \x3e (0))){\nreturn (new cljs.core.RSeq(coll__$1,(c - (1)),null));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.hash_ordered_coll(coll__$1);\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1,other) : cljs.core.equiv_sequential.call(null,coll__$1,other));\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (self__.arr[self__.i]);\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nif(((self__.i + (1)) \x3c self__.arr.length)){\nreturn (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1)),null));\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nif((self__.i \x3c self__.arr.length)){\nreturn this$__$1;\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.IndexedSeq(self__.arr,self__.i,new_meta));\n}\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o,coll__$1) : cljs.core.cons.call(null,o,coll__$1));\n}));\n\n(cljs.core.IndexedSeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null)], null);\n}));\n\n(cljs.core.IndexedSeq.cljs$lang$type \x3d true);\n\n(cljs.core.IndexedSeq.cljs$lang$ctorStr \x3d \x22cljs.core/IndexedSeq\x22);\n\n(cljs.core.IndexedSeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/IndexedSeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/IndexedSeq.\n */\ncljs.core.__GT_IndexedSeq \x3d (function cljs$core$__GT_IndexedSeq(arr,i,meta){\nreturn (new cljs.core.IndexedSeq(arr,i,meta));\n});\n\n(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n/**\n * Create seq from a primitive JavaScript Array-like.\n */\ncljs.core.prim_seq \x3d (function cljs$core$prim_seq(var_args){\nvar G__9877 \x3d arguments.length;\nswitch (G__9877) {\ncase 1:\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$1 \x3d (function (prim){\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));\n}));\n\n(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2 \x3d (function (prim,i){\nif((i \x3c prim.length)){\nreturn (new cljs.core.IndexedSeq(prim,i,null));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.prim_seq.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Create a seq from a JavaScript array.\n */\ncljs.core.array_seq \x3d (function cljs$core$array_seq(var_args){\nvar G__9879 \x3d arguments.length;\nswitch (G__9879) {\ncase 1:\nreturn cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.array_seq.cljs$core$IFn$_invoke$arity$1 \x3d (function (array){\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));\n}));\n\n(cljs.core.array_seq.cljs$core$IFn$_invoke$arity$2 \x3d (function (array,i){\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);\n}));\n\n(cljs.core.array_seq.cljs$lang$maxFixedArity \x3d 2);\n\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.RSeq \x3d (function (ci,i,meta){\nthis.ci \x3d ci;\nthis.i \x3d i;\nthis.meta \x3d meta;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374990;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\n});\n(cljs.core.RSeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.RSeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.RSeq.prototype.indexOf \x3d (function() {\nvar G__12679 \x3d null;\nvar G__12679__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__12679__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__12679 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__12679__1.call(this,x);\ncase 2:\nreturn G__12679__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12679.cljs$core$IFn$_invoke$arity$1 \x3d G__12679__1;\nG__12679.cljs$core$IFn$_invoke$arity$2 \x3d G__12679__2;\nreturn G__12679;\n})()\n);\n\n(cljs.core.RSeq.prototype.lastIndexOf \x3d (function() {\nvar G__12680 \x3d null;\nvar G__12680__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(cljs.core.count.cljs$core$IFn$_invoke$arity$1 ? cljs.core.count.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.count.call(null,coll)));\n});\nvar G__12680__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__12680 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__12680__1.call(this,x);\ncase 2:\nreturn G__12680__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12680.cljs$core$IFn$_invoke$arity$1 \x3d G__12680__1;\nG__12680.cljs$core$IFn$_invoke$arity$2 \x3d G__12680__2;\nreturn G__12680;\n})()\n);\n\n(cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.i \x3e (0))){\nreturn (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (self__.i + (1));\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.hash_ordered_coll(coll__$1);\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(coll__$1,other) : cljs.core.equiv_sequential.call(null,coll__$1,other));\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (col,f){\nvar self__ \x3d this;\nvar col__$1 \x3d this;\nreturn (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,col__$1) : cljs.core.seq_reduce.call(null,f,col__$1));\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (col,f,start){\nvar self__ \x3d this;\nvar col__$1 \x3d this;\nreturn (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,col__$1) : cljs.core.seq_reduce.call(null,f,start,col__$1));\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._nth(self__.ci,self__.i);\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.i \x3e (0))){\nreturn (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.RSeq(self__.ci,self__.i,new_meta));\n}\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(o,coll__$1) : cljs.core.cons.call(null,o,coll__$1));\n}));\n\n(cljs.core.RSeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22ci\x22,\x22ci\x22,2049808339,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null)], null);\n}));\n\n(cljs.core.RSeq.cljs$lang$type \x3d true);\n\n(cljs.core.RSeq.cljs$lang$ctorStr \x3d \x22cljs.core/RSeq\x22);\n\n(cljs.core.RSeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/RSeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/RSeq.\n */\ncljs.core.__GT_RSeq \x3d (function cljs$core$__GT_RSeq(ci,i,meta){\nreturn (new cljs.core.RSeq(ci,i,meta));\n});\n\n(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n/**\n * Same as (first (next x))\n */\ncljs.core.second \x3d (function cljs$core$second(coll){\nreturn cljs.core.first(cljs.core.next(coll));\n});\n/**\n * Same as (first (first x))\n */\ncljs.core.ffirst \x3d (function cljs$core$ffirst(coll){\nreturn cljs.core.first(cljs.core.first(coll));\n});\n/**\n * Same as (next (first x))\n */\ncljs.core.nfirst \x3d (function cljs$core$nfirst(coll){\nreturn cljs.core.next(cljs.core.first(coll));\n});\n/**\n * Same as (first (next x))\n */\ncljs.core.fnext \x3d (function cljs$core$fnext(coll){\nreturn cljs.core.first(cljs.core.next(coll));\n});\n/**\n * Same as (next (next x))\n */\ncljs.core.nnext \x3d (function cljs$core$nnext(coll){\nreturn cljs.core.next(cljs.core.next(coll));\n});\n/**\n * Return the last item in coll, in linear time\n */\ncljs.core.last \x3d (function cljs$core$last(s){\nwhile(true){\nvar sn \x3d cljs.core.next(s);\nif((!((sn \x3d\x3d null)))){\nvar G__12691 \x3d sn;\ns \x3d G__12691;\ncontinue;\n} else {\nreturn cljs.core.first(s);\n}\nbreak;\n}\n});\n(cljs.core.IEquiv[\x22_\x22] \x3d true);\n\n(cljs.core._equiv[\x22_\x22] \x3d (function (x,o){\nreturn (x \x3d\x3d\x3d o);\n}));\n/**\n * conj[oin]. Returns a new collection with the xs\n *   \x27added\x27. (conj nil item) returns (item).\n *   (conj coll) returns coll. (conj) returns [].\n *   The \x27addition\x27 may happen at different \x27places\x27 depending\n *   on the concrete type.\n */\ncljs.core.conj \x3d (function cljs$core$conj(var_args){\nvar G__9884 \x3d arguments.length;\nswitch (G__9884) {\ncase 0:\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12693 \x3d arguments.length;\nvar i__5770__auto___12694 \x3d (0);\nwhile(true){\nif((i__5770__auto___12694 \x3c len__5769__auto___12693)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12694]));\n\nvar G__12695 \x3d (i__5770__auto___12694 + (1));\ni__5770__auto___12694 \x3d G__12695;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.conj.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(cljs.core.conj.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nreturn coll;\n}));\n\n(cljs.core.conj.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,x){\nif((!((coll \x3d\x3d null)))){\nreturn cljs.core._conj(coll,x);\n} else {\nreturn (new cljs.core.List(null,x,null,(1),null));\n}\n}));\n\n(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic \x3d (function (coll,x,xs){\nwhile(true){\nif(cljs.core.truth_(xs)){\nvar G__12697 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll,x);\nvar G__12698 \x3d cljs.core.first(xs);\nvar G__12699 \x3d cljs.core.next(xs);\ncoll \x3d G__12697;\nx \x3d G__12698;\nxs \x3d G__12699;\ncontinue;\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(coll,x);\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.conj.cljs$lang$applyTo \x3d (function (seq9881){\nvar G__9882 \x3d cljs.core.first(seq9881);\nvar seq9881__$1 \x3d cljs.core.next(seq9881);\nvar G__9883 \x3d cljs.core.first(seq9881__$1);\nvar seq9881__$2 \x3d cljs.core.next(seq9881__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9882,G__9883,seq9881__$2);\n}));\n\n(cljs.core.conj.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns an empty collection of the same category as coll, or nil\n */\ncljs.core.empty \x3d (function cljs$core$empty(coll){\nif((coll \x3d\x3d null)){\nreturn null;\n} else {\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (4))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IEmptyableCollection$))))?true:false):false)){\nreturn coll.cljs$core$IEmptyableCollection$_empty$arity$1(null);\n} else {\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (4))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IEmptyableCollection$))))?true:(((!coll.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection,coll):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IEmptyableCollection,coll))){\nreturn cljs.core._empty(coll);\n} else {\nreturn null;\n\n}\n}\n}\n});\ncljs.core.accumulating_seq_count \x3d (function cljs$core$accumulating_seq_count(coll){\nvar s \x3d cljs.core.seq(coll);\nvar acc \x3d (0);\nwhile(true){\nif(cljs.core.counted_QMARK_(s)){\nreturn (acc + cljs.core._count(s));\n} else {\nvar G__12700 \x3d cljs.core.next(s);\nvar G__12701 \x3d (acc + (1));\ns \x3d G__12700;\nacc \x3d G__12701;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Returns the number of items in the collection. (count nil) returns\n *   0.  Also works on strings, arrays, and Maps\n */\ncljs.core.count \x3d (function cljs$core$count(coll){\nif((!((coll \x3d\x3d null)))){\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (2))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ICounted$))))?true:false):false)){\nreturn coll.cljs$core$ICounted$_count$arity$1(null);\n} else {\nif(cljs.core.array_QMARK_(coll)){\nreturn coll.length;\n} else {\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\nreturn coll.length;\n} else {\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (8388608))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeqable$))))?true:false):false)){\nreturn cljs.core.accumulating_seq_count(coll);\n} else {\nreturn cljs.core._count(coll);\n\n}\n}\n}\n}\n} else {\nreturn (0);\n}\n});\ncljs.core.linear_traversal_nth \x3d (function cljs$core$linear_traversal_nth(var_args){\nvar G__9890 \x3d arguments.length;\nswitch (G__9890) {\ncase 2:\nreturn cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,n){\nwhile(true){\nif((coll \x3d\x3d null)){\nthrow (new Error(\x22Index out of bounds\x22));\n} else {\nif((n \x3d\x3d\x3d (0))){\nif(cljs.core.seq(coll)){\nreturn cljs.core.first(coll);\n} else {\nthrow (new Error(\x22Index out of bounds\x22));\n}\n} else {\nif(cljs.core.indexed_QMARK_(coll)){\nreturn cljs.core._nth(coll,n);\n} else {\nif(cljs.core.seq(coll)){\nvar G__12703 \x3d cljs.core.next(coll);\nvar G__12704 \x3d (n - (1));\ncoll \x3d G__12703;\nn \x3d G__12704;\ncontinue;\n} else {\nthrow (new Error(\x22Index out of bounds\x22));\n\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,n,not_found){\nwhile(true){\nif((coll \x3d\x3d null)){\nreturn not_found;\n} else {\nif((n \x3d\x3d\x3d (0))){\nif(cljs.core.seq(coll)){\nreturn cljs.core.first(coll);\n} else {\nreturn not_found;\n}\n} else {\nif(cljs.core.indexed_QMARK_(coll)){\nreturn cljs.core._nth(coll,n,not_found);\n} else {\nif(cljs.core.seq(coll)){\nvar G__12705 \x3d cljs.core.next(coll);\nvar G__12706 \x3d (n - (1));\nvar G__12707 \x3d not_found;\ncoll \x3d G__12705;\nn \x3d G__12706;\nnot_found \x3d G__12707;\ncontinue;\n} else {\nreturn not_found;\n\n}\n}\n}\n}\nbreak;\n}\n}));\n\n(cljs.core.linear_traversal_nth.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Returns the value at the index. get returns nil if index out of\n *   bounds, nth throws an exception unless not-found is supplied.  nth\n *   also works for strings, arrays, regex Matchers and Lists, and,\n *   in O(n) time, for sequences.\n */\ncljs.core.nth \x3d (function cljs$core$nth(var_args){\nvar G__9892 \x3d arguments.length;\nswitch (G__9892) {\ncase 2:\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.nth.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,n){\nif((!(typeof n \x3d\x3d\x3d \x27number\x27))){\nthrow (new Error(\x22Index argument to nth must be a number\x22));\n} else {\nif((coll \x3d\x3d null)){\nreturn coll;\n} else {\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (16))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IIndexed$))))?true:false):false)){\nreturn coll.cljs$core$IIndexed$_nth$arity$2(null,n);\n} else {\nif(cljs.core.array_QMARK_(coll)){\nif(((((-1) \x3c n)) \x26\x26 ((n \x3c coll.length)))){\nreturn (coll[(n | (0))]);\n} else {\nthrow (new Error(\x22Index out of bounds\x22));\n}\n} else {\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\nif(((((-1) \x3c n)) \x26\x26 ((n \x3c coll.length)))){\nreturn coll.charAt((n | (0)));\n} else {\nthrow (new Error(\x22Index out of bounds\x22));\n}\n} else {\nif((function (){var or__5045__auto__ \x3d (((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeq$))))?true:false):false);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nif((!((coll \x3d\x3d null)))){\nif((((coll.cljs$lang$protocol_mask$partition0$ \x26 (16777216))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISequential$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n}\n})()){\nif((n \x3c (0))){\nthrow (new Error(\x22Index out of bounds\x22));\n} else {\nreturn cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);\n}\n} else {\nif(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){\nreturn cljs.core._nth(coll,n);\n} else {\nthrow (new Error([\x22nth not supported on this type \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(\x27\x27)));\n\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(cljs.core.nth.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,n,not_found){\nif((!(typeof n \x3d\x3d\x3d \x27number\x27))){\nthrow (new Error(\x22Index argument to nth must be a number.\x22));\n} else {\nif((coll \x3d\x3d null)){\nreturn not_found;\n} else {\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (16))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IIndexed$))))?true:false):false)){\nreturn coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);\n} else {\nif(cljs.core.array_QMARK_(coll)){\nif(((((-1) \x3c n)) \x26\x26 ((n \x3c coll.length)))){\nreturn (coll[(n | (0))]);\n} else {\nreturn not_found;\n}\n} else {\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\nif(((((-1) \x3c n)) \x26\x26 ((n \x3c coll.length)))){\nreturn coll.charAt((n | (0)));\n} else {\nreturn not_found;\n}\n} else {\nif((function (){var or__5045__auto__ \x3d (((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeq$))))?true:false):false);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nif((!((coll \x3d\x3d null)))){\nif((((coll.cljs$lang$protocol_mask$partition0$ \x26 (16777216))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISequential$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n}\n})()){\nif((n \x3c (0))){\nreturn not_found;\n} else {\nreturn cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);\n}\n} else {\nif(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){\nreturn cljs.core._nth(coll,n,not_found);\n} else {\nthrow (new Error([\x22nth not supported on this type \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type__GT_str(cljs.core.type(coll)))].join(\x27\x27)));\n\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(cljs.core.nth.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Returns the nth rest of coll, coll when n is 0.\n */\ncljs.core.nthrest \x3d (function cljs$core$nthrest(coll,n){\nvar n__$1 \x3d n;\nvar xs \x3d coll;\nwhile(true){\nvar temp__5802__auto__ \x3d (((n__$1 \x3e (0))) \x26\x26 (cljs.core.seq(xs)));\nif(temp__5802__auto__){\nvar xs__$1 \x3d temp__5802__auto__;\nvar G__12716 \x3d (n__$1 - (1));\nvar G__12717 \x3d cljs.core.rest(xs__$1);\nn__$1 \x3d G__12716;\nxs \x3d G__12717;\ncontinue;\n} else {\nreturn xs;\n}\nbreak;\n}\n});\n/**\n * Returns the value mapped to key, not-found or nil if key not present\n *   in associative collection, set, string, array, or ILookup instance.\n */\ncljs.core.get \x3d (function cljs$core$get(var_args){\nvar G__9900 \x3d arguments.length;\nswitch (G__9900) {\ncase 2:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.get.cljs$core$IFn$_invoke$arity$2 \x3d (function (o,k){\nif((o \x3d\x3d null)){\nreturn null;\n} else {\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (256))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$ILookup$))))?true:false):false)){\nreturn o.cljs$core$ILookup$_lookup$arity$2(null,k);\n} else {\nif(cljs.core.array_QMARK_(o)){\nif((((!((k \x3d\x3d null)))) \x26\x26 ((k \x3c o.length)))){\nreturn (o[(k | (0))]);\n} else {\nreturn null;\n}\n} else {\nif(typeof o \x3d\x3d\x3d \x27string\x27){\nif((((!((k \x3d\x3d null)))) \x26\x26 (((((-1) \x3c k)) \x26\x26 ((k \x3c o.length)))))){\nreturn o.charAt((k | (0)));\n} else {\nreturn null;\n}\n} else {\nif(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){\nreturn cljs.core._lookup(o,k);\n} else {\nreturn null;\n\n}\n}\n}\n}\n}\n}));\n\n(cljs.core.get.cljs$core$IFn$_invoke$arity$3 \x3d (function (o,k,not_found){\nif((!((o \x3d\x3d null)))){\nif((((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition0$ \x26 (256))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$ILookup$))))?true:false):false)){\nreturn o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n} else {\nif(cljs.core.array_QMARK_(o)){\nif((((!((k \x3d\x3d null)))) \x26\x26 (((((-1) \x3c k)) \x26\x26 ((k \x3c o.length)))))){\nreturn (o[(k | (0))]);\n} else {\nreturn not_found;\n}\n} else {\nif(typeof o \x3d\x3d\x3d \x27string\x27){\nif((((!((k \x3d\x3d null)))) \x26\x26 (((((-1) \x3c k)) \x26\x26 ((k \x3c o.length)))))){\nreturn o.charAt((k | (0)));\n} else {\nreturn not_found;\n}\n} else {\nif(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){\nreturn cljs.core._lookup(o,k,not_found);\n} else {\nreturn not_found;\n\n}\n}\n}\n}\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.get.cljs$lang$maxFixedArity \x3d 3);\n\n\n\n/**\n * assoc[iate]. When applied to a map, returns a new map of the\n * same (hashed/sorted) type, that contains the mapping of key(s) to\n * val(s). When applied to a vector, returns a new vector that\n * contains val at index. Note - index must be \x3c\x3d (count vector).\n */\ncljs.core.assoc \x3d (function cljs$core$assoc(var_args){\nvar G__9908 \x3d arguments.length;\nswitch (G__9908) {\ncase 3:\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12723 \x3d arguments.length;\nvar i__5770__auto___12724 \x3d (0);\nwhile(true){\nif((i__5770__auto___12724 \x3c len__5769__auto___12723)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12724]));\n\nvar G__12725 \x3d (i__5770__auto___12724 + (1));\ni__5770__auto___12724 \x3d G__12725;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,k,v){\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (512))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IAssociative$))))?true:false):false)){\nreturn coll.cljs$core$IAssociative$_assoc$arity$3(null,k,v);\n} else {\nif((!((coll \x3d\x3d null)))){\nreturn cljs.core._assoc(coll,k,v);\n} else {\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc([k,v]);\n}\n}\n}));\n\n(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic \x3d (function (coll,k,v,kvs){\nwhile(true){\nvar ret \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);\nif(cljs.core.truth_(kvs)){\nvar G__12728 \x3d ret;\nvar G__12729 \x3d cljs.core.first(kvs);\nvar G__12730 \x3d cljs.core.second(kvs);\nvar G__12731 \x3d cljs.core.nnext(kvs);\ncoll \x3d G__12728;\nk \x3d G__12729;\nv \x3d G__12730;\nkvs \x3d G__12731;\ncontinue;\n} else {\nreturn ret;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.assoc.cljs$lang$applyTo \x3d (function (seq9904){\nvar G__9905 \x3d cljs.core.first(seq9904);\nvar seq9904__$1 \x3d cljs.core.next(seq9904);\nvar G__9906 \x3d cljs.core.first(seq9904__$1);\nvar seq9904__$2 \x3d cljs.core.next(seq9904__$1);\nvar G__9907 \x3d cljs.core.first(seq9904__$2);\nvar seq9904__$3 \x3d cljs.core.next(seq9904__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9905,G__9906,G__9907,seq9904__$3);\n}));\n\n(cljs.core.assoc.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,\n *   that does not contain a mapping for key(s).\n */\ncljs.core.dissoc \x3d (function cljs$core$dissoc(var_args){\nvar G__9914 \x3d arguments.length;\nswitch (G__9914) {\ncase 1:\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12739 \x3d arguments.length;\nvar i__5770__auto___12740 \x3d (0);\nwhile(true){\nif((i__5770__auto___12740 \x3c len__5769__auto___12739)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12740]));\n\nvar G__12741 \x3d (i__5770__auto___12740 + (1));\ni__5770__auto___12740 \x3d G__12741;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nreturn coll;\n}));\n\n(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,k){\nif((coll \x3d\x3d null)){\nreturn null;\n} else {\nreturn cljs.core._dissoc(coll,k);\n}\n}));\n\n(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic \x3d (function (coll,k,ks){\nwhile(true){\nif((coll \x3d\x3d null)){\nreturn null;\n} else {\nvar ret \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);\nif(cljs.core.truth_(ks)){\nvar G__12743 \x3d ret;\nvar G__12744 \x3d cljs.core.first(ks);\nvar G__12745 \x3d cljs.core.next(ks);\ncoll \x3d G__12743;\nk \x3d G__12744;\nks \x3d G__12745;\ncontinue;\n} else {\nreturn ret;\n}\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.dissoc.cljs$lang$applyTo \x3d (function (seq9911){\nvar G__9912 \x3d cljs.core.first(seq9911);\nvar seq9911__$1 \x3d cljs.core.next(seq9911);\nvar G__9913 \x3d cljs.core.first(seq9911__$1);\nvar seq9911__$2 \x3d cljs.core.next(seq9911__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9912,G__9913,seq9911__$2);\n}));\n\n(cljs.core.dissoc.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Return true if f is a JavaScript function or satisfies the Fn protocol.\n */\ncljs.core.fn_QMARK_ \x3d (function cljs$core$fn_QMARK_(f){\nvar or__5045__auto__ \x3d typeof f \x3d\x3d\x3d \x27function\x27;\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nif((!((f \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d f.cljs$core$Fn$)))){\nreturn true;\n} else {\nif((!f.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.Fn,f);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.Fn,f);\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.Fn}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.core.MetaFn \x3d (function (afn,meta){\nthis.afn \x3d afn;\nthis.meta \x3d meta;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 393217;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_,new_meta){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.MetaFn(self__.afn,new_meta));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$Fn$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.MetaFn.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__9917 \x3d (arguments.length - (1));\nswitch (G__9917) {\ncase (0):\nreturn self__.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase (3):\nreturn self__.cljs$core$IFn$_invoke$arity$3((arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase (4):\nreturn self__.cljs$core$IFn$_invoke$arity$4((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase (5):\nreturn self__.cljs$core$IFn$_invoke$arity$5((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ncase (6):\nreturn self__.cljs$core$IFn$_invoke$arity$6((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\n\nbreak;\ncase (7):\nreturn self__.cljs$core$IFn$_invoke$arity$7((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\n\nbreak;\ncase (8):\nreturn self__.cljs$core$IFn$_invoke$arity$8((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\n\nbreak;\ncase (9):\nreturn self__.cljs$core$IFn$_invoke$arity$9((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\n\nbreak;\ncase (10):\nreturn self__.cljs$core$IFn$_invoke$arity$10((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\n\nbreak;\ncase (11):\nreturn self__.cljs$core$IFn$_invoke$arity$11((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\n\nbreak;\ncase (12):\nreturn self__.cljs$core$IFn$_invoke$arity$12((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));\n\nbreak;\ncase (13):\nreturn self__.cljs$core$IFn$_invoke$arity$13((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\n\nbreak;\ncase (14):\nreturn self__.cljs$core$IFn$_invoke$arity$14((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));\n\nbreak;\ncase (15):\nreturn self__.cljs$core$IFn$_invoke$arity$15((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\n\nbreak;\ncase (16):\nreturn self__.cljs$core$IFn$_invoke$arity$16((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));\n\nbreak;\ncase (17):\nreturn self__.cljs$core$IFn$_invoke$arity$17((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\n\nbreak;\ncase (18):\nreturn self__.cljs$core$IFn$_invoke$arity$18((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));\n\nbreak;\ncase (19):\nreturn self__.cljs$core$IFn$_invoke$arity$19((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\n\nbreak;\ncase (20):\nreturn self__.cljs$core$IFn$_invoke$arity$20((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));\n\nbreak;\ncase (21):\nreturn self__.cljs$core$IFn$_invoke$arity$21((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.MetaFn.prototype.apply \x3d (function (self__,args9916){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args9916)));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (a){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(a) : self__.afn.call(null,a));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(a,b) : self__.afn.call(null,a,b));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,c){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(a,b,c) : self__.afn.call(null,a,b,c));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,b,c,d){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(a,b,c,d) : self__.afn.call(null,a,b,c,d));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 \x3d (function (a,b,c,d,e){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e) : self__.afn.call(null,a,b,c,d,e));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 \x3d (function (a,b,c,d,e,f){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f) : self__.afn.call(null,a,b,c,d,e,f));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 \x3d (function (a,b,c,d,e,f,g){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g) : self__.afn.call(null,a,b,c,d,e,f,g));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 \x3d (function (a,b,c,d,e,f,g,h){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h) : self__.afn.call(null,a,b,c,d,e,f,g,h));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 \x3d (function (a,b,c,d,e,f,g,h,i){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i) : self__.afn.call(null,a,b,c,d,e,f,g,h,i));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 \x3d (function (a,b,c,d,e,f,g,h,i,j){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 \x3d (function (a,b,c,d,e,f,g,h,i,j,k){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : self__.afn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\n}));\n\n(cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(self__.afn,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest) : cljs.core.apply.call(null,self__.afn,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest));\n}));\n\n(cljs.core.MetaFn.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22afn\x22,\x22afn\x22,216963467,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null)], null);\n}));\n\n(cljs.core.MetaFn.cljs$lang$type \x3d true);\n\n(cljs.core.MetaFn.cljs$lang$ctorStr \x3d \x22cljs.core/MetaFn\x22);\n\n(cljs.core.MetaFn.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/MetaFn\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/MetaFn.\n */\ncljs.core.__GT_MetaFn \x3d (function cljs$core$__GT_MetaFn(afn,meta){\nreturn (new cljs.core.MetaFn(afn,meta));\n});\n\n/**\n * Returns an object of the same type and value as obj, with\n *   map m as its metadata.\n */\ncljs.core.with_meta \x3d (function cljs$core$with_meta(o,meta){\nif(typeof o \x3d\x3d\x3d \x27function\x27){\nreturn (new cljs.core.MetaFn(o,meta));\n} else {\nif((o \x3d\x3d null)){\nreturn null;\n} else {\nreturn cljs.core._with_meta(o,meta);\n}\n}\n});\n/**\n * Returns the metadata of obj, returns nil if there is no metadata.\n */\ncljs.core.meta \x3d (function cljs$core$meta(o){\nif((function (){var and__5043__auto__ \x3d (!((o \x3d\x3d null)));\nif(and__5043__auto__){\nif((!((o \x3d\x3d null)))){\nif((((o.cljs$lang$protocol_mask$partition0$ \x26 (131072))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IMeta$)))){\nreturn true;\n} else {\nif((!o.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,o);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,o);\n}\n} else {\nreturn and__5043__auto__;\n}\n})()){\nreturn cljs.core._meta(o);\n} else {\nreturn null;\n}\n});\n/**\n * For a list or queue, same as first, for a vector, same as, but much\n *   more efficient than, last. If the collection is empty, returns nil.\n */\ncljs.core.peek \x3d (function cljs$core$peek(coll){\nif((coll \x3d\x3d null)){\nreturn null;\n} else {\nreturn cljs.core._peek(coll);\n}\n});\n/**\n * For a list or queue, returns a new list/queue without the first\n *   item, for a vector, returns a new vector without the last item.\n *   Note - not the same as next/butlast.\n */\ncljs.core.pop \x3d (function cljs$core$pop(coll){\nif((coll \x3d\x3d null)){\nreturn null;\n} else {\nreturn cljs.core._pop(coll);\n}\n});\n/**\n * disj[oin]. Returns a new set of the same (hashed/sorted) type, that\n *   does not contain key(s).\n */\ncljs.core.disj \x3d (function cljs$core$disj(var_args){\nvar G__9923 \x3d arguments.length;\nswitch (G__9923) {\ncase 1:\nreturn cljs.core.disj.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.disj.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12770 \x3d arguments.length;\nvar i__5770__auto___12771 \x3d (0);\nwhile(true){\nif((i__5770__auto___12771 \x3c len__5769__auto___12770)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12771]));\n\nvar G__12772 \x3d (i__5770__auto___12771 + (1));\ni__5770__auto___12771 \x3d G__12772;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.disj.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nreturn coll;\n}));\n\n(cljs.core.disj.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,k){\nif((coll \x3d\x3d null)){\nreturn null;\n} else {\nreturn cljs.core._disjoin(coll,k);\n}\n}));\n\n(cljs.core.disj.cljs$core$IFn$_invoke$arity$variadic \x3d (function (coll,k,ks){\nwhile(true){\nif((coll \x3d\x3d null)){\nreturn null;\n} else {\nvar ret \x3d cljs.core.disj.cljs$core$IFn$_invoke$arity$2(coll,k);\nif(cljs.core.truth_(ks)){\nvar G__12773 \x3d ret;\nvar G__12774 \x3d cljs.core.first(ks);\nvar G__12775 \x3d cljs.core.next(ks);\ncoll \x3d G__12773;\nk \x3d G__12774;\nks \x3d G__12775;\ncontinue;\n} else {\nreturn ret;\n}\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.disj.cljs$lang$applyTo \x3d (function (seq9920){\nvar G__9921 \x3d cljs.core.first(seq9920);\nvar seq9920__$1 \x3d cljs.core.next(seq9920);\nvar G__9922 \x3d cljs.core.first(seq9920__$1);\nvar seq9920__$2 \x3d cljs.core.next(seq9920__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9921,G__9922,seq9920__$2);\n}));\n\n(cljs.core.disj.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns true if coll has no items - same as (not (seq coll)).\n *   Please use the idiom (seq x) rather than (not (empty? x))\n */\ncljs.core.empty_QMARK_ \x3d (function cljs$core$empty_QMARK_(coll){\nreturn (((coll \x3d\x3d null)) || (cljs.core.not(cljs.core.seq(coll))));\n});\n/**\n * Returns true if x satisfies ICollection\n */\ncljs.core.coll_QMARK_ \x3d (function cljs$core$coll_QMARK_(x){\nif((x \x3d\x3d null)){\nreturn false;\n} else {\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (8))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ICollection$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,x);\n}\n}\n});\n/**\n * Returns true if x satisfies ISet\n */\ncljs.core.set_QMARK_ \x3d (function cljs$core$set_QMARK_(x){\nif((x \x3d\x3d null)){\nreturn false;\n} else {\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (4096))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ISet$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISet,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISet,x);\n}\n}\n});\n/**\n * Returns true if coll implements IAssociative\n */\ncljs.core.associative_QMARK_ \x3d (function cljs$core$associative_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (512))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IAssociative$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,x);\n}\n});\n/**\n * Returns true if coll implements IFind\n */\ncljs.core.ifind_QMARK_ \x3d (function cljs$core$ifind_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IFind$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IFind,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IFind,x);\n}\n});\n/**\n * Returns true if coll satisfies ISequential\n */\ncljs.core.sequential_QMARK_ \x3d (function cljs$core$sequential_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (16777216))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ISequential$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,x);\n}\n});\n/**\n * Returns true if coll satisfies ISorted\n */\ncljs.core.sorted_QMARK_ \x3d (function cljs$core$sorted_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (268435456))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ISorted$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,x);\n}\n});\n/**\n * Returns true if coll satisfies IReduce\n */\ncljs.core.reduceable_QMARK_ \x3d (function cljs$core$reduceable_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (524288))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IReduce$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,x);\n}\n});\n/**\n * Return true if x satisfies IMap\n */\ncljs.core.map_QMARK_ \x3d (function cljs$core$map_QMARK_(x){\nif((x \x3d\x3d null)){\nreturn false;\n} else {\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (1024))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IMap$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IMap,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IMap,x);\n}\n}\n});\n/**\n * Return true if x satisfies IRecord\n */\ncljs.core.record_QMARK_ \x3d (function cljs$core$record_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (67108864))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IRecord$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IRecord,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IRecord,x);\n}\n});\n/**\n * Return true if x satisfies IVector\n */\ncljs.core.vector_QMARK_ \x3d (function cljs$core$vector_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (16384))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IVector$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IVector,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IVector,x);\n}\n});\n\n/**\n * Return true if x satisfies IChunkedSeq.\n */\ncljs.core.chunked_seq_QMARK_ \x3d (function cljs$core$chunked_seq_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition1$ \x26 (512))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IChunkedSeq$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\n/**\n * Create JavaSript object from an even number arguments representing\n *   interleaved keys and values.\n */\ncljs.core.js_obj \x3d (function cljs$core$js_obj(var_args){\nvar G__9937 \x3d arguments.length;\nswitch (G__9937) {\ncase 0:\nreturn cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12784 \x3d arguments.length;\nvar i__5770__auto___12785 \x3d (0);\nwhile(true){\nif((i__5770__auto___12785 \x3c len__5769__auto___12784)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12785]));\n\nvar G__12786 \x3d (i__5770__auto___12785 + (1));\ni__5770__auto___12785 \x3d G__12786;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((0)),(0),null));\nreturn cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic(argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.js_obj.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn ({});\n}));\n\n(cljs.core.js_obj.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keyvals){\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.goog$module$goog$object.create,keyvals) : cljs.core.apply.call(null,cljs.core.goog$module$goog$object.create,keyvals));\n}));\n\n/** @this {Function} */\n(cljs.core.js_obj.cljs$lang$applyTo \x3d (function (seq9936){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq9936));\n}));\n\n(cljs.core.js_obj.cljs$lang$maxFixedArity \x3d (0));\n\n/**\n * Return the JavaScript keys for an object.\n */\ncljs.core.js_keys \x3d (function cljs$core$js_keys(obj){\nreturn cljs.core.goog$module$goog$object.getKeys(obj);\n});\n/**\n * Delete a property from a JavaScript object.\n *   Returns true upon success, false otherwise.\n */\ncljs.core.js_delete \x3d (function cljs$core$js_delete(obj,key){\nreturn delete obj[key];\n});\ncljs.core.array_copy \x3d (function cljs$core$array_copy(from,i,to,j,len){\nvar i__$1 \x3d i;\nvar j__$1 \x3d j;\nvar len__$1 \x3d len;\nwhile(true){\nif((len__$1 \x3d\x3d\x3d (0))){\nreturn to;\n} else {\n(to[j__$1] \x3d (from[i__$1]));\n\nvar G__12787 \x3d (i__$1 + (1));\nvar G__12788 \x3d (j__$1 + (1));\nvar G__12789 \x3d (len__$1 - (1));\ni__$1 \x3d G__12787;\nj__$1 \x3d G__12788;\nlen__$1 \x3d G__12789;\ncontinue;\n}\nbreak;\n}\n});\ncljs.core.array_copy_downward \x3d (function cljs$core$array_copy_downward(from,i,to,j,len){\nvar i__$1 \x3d (i + (len - (1)));\nvar j__$1 \x3d (j + (len - (1)));\nvar len__$1 \x3d len;\nwhile(true){\nif((len__$1 \x3d\x3d\x3d (0))){\nreturn to;\n} else {\n(to[j__$1] \x3d (from[i__$1]));\n\nvar G__12794 \x3d (i__$1 - (1));\nvar G__12795 \x3d (j__$1 - (1));\nvar G__12796 \x3d (len__$1 - (1));\ni__$1 \x3d G__12794;\nj__$1 \x3d G__12795;\nlen__$1 \x3d G__12796;\ncontinue;\n}\nbreak;\n}\n});\ncljs.core.lookup_sentinel \x3d ({});\n/**\n * Returns true if x is the value false, false otherwise.\n */\ncljs.core.false_QMARK_ \x3d (function cljs$core$false_QMARK_(x){\nreturn x \x3d\x3d\x3d false;\n});\n/**\n * Returns true if x is the value true, false otherwise.\n */\ncljs.core.true_QMARK_ \x3d (function cljs$core$true_QMARK_(x){\nreturn x \x3d\x3d\x3d true;\n});\n/**\n * Return true if x is a Boolean\n */\ncljs.core.boolean_QMARK_ \x3d (function cljs$core$boolean_QMARK_(x){\nreturn ((x \x3d\x3d\x3d true) || (x \x3d\x3d\x3d false));\n});\n/**\n * Returns true if x identical to the JavaScript undefined value.\n */\ncljs.core.undefined_QMARK_ \x3d (function cljs$core$undefined_QMARK_(x){\nreturn (void 0 \x3d\x3d\x3d x);\n});\n/**\n * Return true if s satisfies ISeq\n */\ncljs.core.seq_QMARK_ \x3d (function cljs$core$seq_QMARK_(s){\nif((s \x3d\x3d null)){\nreturn false;\n} else {\nif((!((s \x3d\x3d null)))){\nif((((s.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d s.cljs$core$ISeq$)))){\nreturn true;\n} else {\nif((!s.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,s);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,s);\n}\n}\n});\n/**\n * Return true if the seq function is supported for s\n */\ncljs.core.seqable_QMARK_ \x3d (function cljs$core$seqable_QMARK_(s){\nvar or__5045__auto__ \x3d (s \x3d\x3d null);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (((!((s \x3d\x3d null))))?(((((s.cljs$lang$protocol_mask$partition0$ \x26 (8388608))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d s.cljs$core$ISeqable$))))?true:(((!s.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,s):false)):cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,s));\nif(or__5045__auto____$1){\nreturn or__5045__auto____$1;\n} else {\nreturn ((cljs.core.array_QMARK_(s)) || (typeof s \x3d\x3d\x3d \x27string\x27));\n}\n}\n});\n/**\n * Coerce to boolean\n */\ncljs.core.boolean$ \x3d (function cljs$core$boolean(x){\nif((x \x3d\x3d null)){\nreturn false;\n} else {\nif(x \x3d\x3d\x3d false){\nreturn false;\n} else {\nreturn true;\n\n}\n}\n});\n/**\n * Returns true if f returns true for fn? or satisfies IFn.\n */\ncljs.core.ifn_QMARK_ \x3d (function cljs$core$ifn_QMARK_(f){\nvar or__5045__auto__ \x3d cljs.core.fn_QMARK_(f);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nif((!((f \x3d\x3d null)))){\nif((((f.cljs$lang$protocol_mask$partition0$ \x26 (1))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d f.cljs$core$IFn$)))){\nreturn true;\n} else {\nif((!f.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IFn,f);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IFn,f);\n}\n}\n});\n/**\n * Returns true if n is a JavaScript number with no decimal part.\n */\ncljs.core.integer_QMARK_ \x3d (function cljs$core$integer_QMARK_(n){\nreturn ((typeof n \x3d\x3d\x3d \x27number\x27) \x26\x26 ((((!(isNaN(n)))) \x26\x26 ((((!((n \x3d\x3d\x3d Infinity)))) \x26\x26 ((parseFloat(n) \x3d\x3d\x3d parseInt(n,(10)))))))));\n});\n/**\n * INTERNAL: do not use\n */\ncljs.core.LongImpl \x3d cljs.core.goog$module$goog$math$Long;\n/**\n * Return true if x satisfies integer? or is an instance of goog.math.Integer\n * or goog.math.Long.\n */\ncljs.core.int_QMARK_ \x3d (function cljs$core$int_QMARK_(x){\nreturn ((cljs.core.integer_QMARK_(x)) || ((((x instanceof goog.math.Integer)) || ((x instanceof cljs.core.goog$module$goog$math$Long)))));\n});\n/**\n * Return true if x satisfies int? and is positive.\n */\ncljs.core.pos_int_QMARK_ \x3d (function cljs$core$pos_int_QMARK_(x){\nif(cljs.core.integer_QMARK_(x)){\nreturn (x \x3e (0));\n} else {\nif((x instanceof goog.math.Integer)){\nreturn ((cljs.core.not(x.isNegative())) \x26\x26 (cljs.core.not(x.isZero())));\n} else {\nif((x instanceof cljs.core.goog$module$goog$math$Long)){\nreturn ((cljs.core.not(x.isNegative())) \x26\x26 (cljs.core.not(x.isZero())));\n} else {\nreturn false;\n\n}\n}\n}\n});\n/**\n * Return true if x satisfies int? and is negative.\n */\ncljs.core.neg_int_QMARK_ \x3d (function cljs$core$neg_int_QMARK_(x){\nif(cljs.core.integer_QMARK_(x)){\nreturn (x \x3c (0));\n} else {\nif((x instanceof goog.math.Integer)){\nreturn x.isNegative();\n} else {\nif((x instanceof cljs.core.goog$module$goog$math$Long)){\nreturn x.isNegative();\n} else {\nreturn false;\n\n}\n}\n}\n});\n/**\n * Return true if x satisfies int? and is a natural integer value.\n */\ncljs.core.nat_int_QMARK_ \x3d (function cljs$core$nat_int_QMARK_(x){\nif(cljs.core.integer_QMARK_(x)){\nreturn (!((x \x3c (0))));\n} else {\nif((x instanceof goog.math.Integer)){\nreturn cljs.core.not(x.isNegative());\n} else {\nif((x instanceof cljs.core.goog$module$goog$math$Long)){\nreturn cljs.core.not(x.isNegative());\n} else {\nreturn false;\n\n}\n}\n}\n});\n/**\n * Returns true for JavaScript numbers, false otherwise.\n */\ncljs.core.float_QMARK_ \x3d (function cljs$core$float_QMARK_(x){\nreturn typeof x \x3d\x3d\x3d \x27number\x27;\n});\n/**\n * Returns true for JavaScript numbers, false otherwise.\n */\ncljs.core.double_QMARK_ \x3d (function cljs$core$double_QMARK_(x){\nreturn typeof x \x3d\x3d\x3d \x27number\x27;\n});\n/**\n * Returns true for Infinity and -Infinity values.\n */\ncljs.core.infinite_QMARK_ \x3d (function cljs$core$infinite_QMARK_(x){\nreturn (((x \x3d\x3d\x3d Number.POSITIVE_INFINITY)) || ((x \x3d\x3d\x3d Number.NEGATIVE_INFINITY)));\n});\n/**\n * Returns true if key is present in the given collection, otherwise\n *   returns false.  Note that for numerically indexed collections like\n *   vectors and arrays, this tests if the numeric key is within the\n *   range of indexes. \x27contains?\x27 operates constant or logarithmic time;\n *   it will not perform a linear search for a value.  See also \x27some\x27.\n */\ncljs.core.contains_QMARK_ \x3d (function cljs$core$contains_QMARK_(coll,v){\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (512))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IAssociative$))))?true:false):false)){\nreturn coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(null,v);\n} else {\nif(cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,coll)){\nreturn cljs.core._contains_key_QMARK_(coll,v);\n} else {\nif((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) \x3d\x3d\x3d cljs.core.lookup_sentinel)){\nreturn false;\n} else {\nreturn true;\n\n}\n}\n}\n});\n/**\n * Returns the map entry for key, or nil if key not present.\n */\ncljs.core.find \x3d (function cljs$core$find(coll,k){\nif(cljs.core.ifind_QMARK_(coll)){\nreturn cljs.core._find(coll,k);\n} else {\nif((((!((coll \x3d\x3d null)))) \x26\x26 (((cljs.core.associative_QMARK_(coll)) \x26\x26 (cljs.core.contains_QMARK_(coll,k)))))){\nreturn (new cljs.core.MapEntry(k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k),null));\n} else {\nreturn null;\n}\n}\n});\n/**\n * Returns true if no two of the arguments are \x3d\n */\ncljs.core.distinct_QMARK_ \x3d (function cljs$core$distinct_QMARK_(var_args){\nvar G__9950 \x3d arguments.length;\nswitch (G__9950) {\ncase 1:\nreturn cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12798 \x3d arguments.length;\nvar i__5770__auto___12799 \x3d (0);\nwhile(true){\nif((i__5770__auto___12799 \x3c len__5769__auto___12798)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12799]));\n\nvar G__12800 \x3d (i__5770__auto___12799 + (1));\ni__5770__auto___12799 \x3d G__12800;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn true;\n}));\n\n(cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)));\n}));\n\n(cljs.core.distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)))){\nvar s \x3d cljs.core.PersistentHashSet.createAsIfByAssoc([x,y]);\nvar xs \x3d more;\nwhile(true){\nvar x__$1 \x3d cljs.core.first(xs);\nvar etc \x3d cljs.core.next(xs);\nif(cljs.core.truth_(xs)){\nif(cljs.core.contains_QMARK_(s,x__$1)){\nreturn false;\n} else {\nvar G__12801 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);\nvar G__12802 \x3d etc;\ns \x3d G__12801;\nxs \x3d G__12802;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n} else {\nreturn false;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.distinct_QMARK_.cljs$lang$applyTo \x3d (function (seq9947){\nvar G__9948 \x3d cljs.core.first(seq9947);\nvar seq9947__$1 \x3d cljs.core.next(seq9947);\nvar G__9949 \x3d cljs.core.first(seq9947__$1);\nvar seq9947__$2 \x3d cljs.core.next(seq9947__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9948,G__9949,seq9947__$2);\n}));\n\n(cljs.core.distinct_QMARK_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Comparator. Returns a negative number, zero, or a positive number\n *   when x is logically \x27less than\x27, \x27equal to\x27, or \x27greater than\x27\n *   y. Uses IComparable if available and google.array.defaultCompare for objects\n *  of the same type and special-cases nil to be less than any other object.\n */\ncljs.core.compare \x3d (function cljs$core$compare(x,y){\nif((x \x3d\x3d\x3d y)){\nreturn (0);\n} else {\nif((x \x3d\x3d null)){\nreturn (-1);\n} else {\nif((y \x3d\x3d null)){\nreturn (1);\n} else {\nif(typeof x \x3d\x3d\x3d \x27number\x27){\nif(typeof y \x3d\x3d\x3d \x27number\x27){\nreturn cljs.core.goog$module$goog$array.defaultCompare(x,y);\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\n}\n} else {\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition1$ \x26 (2048))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IComparable$))))?true:(((!x.cljs$lang$protocol_mask$partition1$))?cljs.core.native_satisfies_QMARK_(cljs.core.IComparable,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IComparable,x))){\nreturn cljs.core._compare(x,y);\n} else {\nif(((((typeof x \x3d\x3d\x3d \x27string\x27) || (((cljs.core.array_QMARK_(x)) || (((x \x3d\x3d\x3d true) || (x \x3d\x3d\x3d false))))))) \x26\x26 ((cljs.core.type(x) \x3d\x3d\x3d cljs.core.type(y))))){\nreturn cljs.core.goog$module$goog$array.defaultCompare(x,y);\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\n}\n\n}\n}\n}\n}\n}\n});\n/**\n * Compare indexed collection.\n */\ncljs.core.compare_indexed \x3d (function cljs$core$compare_indexed(var_args){\nvar G__9953 \x3d arguments.length;\nswitch (G__9953) {\ncase 2:\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 4:\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2 \x3d (function (xs,ys){\nvar xl \x3d cljs.core.count(xs);\nvar yl \x3d cljs.core.count(ys);\nif((xl \x3c yl)){\nreturn (-1);\n} else {\nif((xl \x3e yl)){\nreturn (1);\n} else {\nif((xl \x3d\x3d\x3d (0))){\nreturn (0);\n} else {\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));\n\n}\n}\n}\n}));\n\n(cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$4 \x3d (function (xs,ys,len,n){\nwhile(true){\nvar d \x3d cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));\nif((((d \x3d\x3d\x3d (0))) \x26\x26 (((n + (1)) \x3c len)))){\nvar G__12804 \x3d xs;\nvar G__12805 \x3d ys;\nvar G__12806 \x3d len;\nvar G__12807 \x3d (n + (1));\nxs \x3d G__12804;\nys \x3d G__12805;\nlen \x3d G__12806;\nn \x3d G__12807;\ncontinue;\n} else {\nreturn d;\n}\nbreak;\n}\n}));\n\n(cljs.core.compare_indexed.cljs$lang$maxFixedArity \x3d 4);\n\n/**\n * Given a fn that might be boolean valued or a comparator,\n * return a fn that is a comparator.\n */\ncljs.core.fn__GT_comparator \x3d (function cljs$core$fn__GT_comparator(f){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){\nreturn cljs.core.compare;\n} else {\nreturn (function (x,y){\nvar r \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y));\nif(typeof r \x3d\x3d\x3d \x27number\x27){\nreturn r;\n} else {\nif(cljs.core.truth_(r)){\nreturn (-1);\n} else {\nif(cljs.core.truth_((f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(y,x) : f.call(null,y,x)))){\nreturn (1);\n} else {\nreturn (0);\n}\n}\n}\n});\n}\n});\n/**\n * Returns a sorted sequence of the items in coll. Comp can be\n * boolean-valued comparison function, or a -/0/+ valued comparator.\n * Comp defaults to compare.\n */\ncljs.core.sort \x3d (function cljs$core$sort(var_args){\nvar G__9955 \x3d arguments.length;\nswitch (G__9955) {\ncase 1:\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.sort.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);\n}));\n\n(cljs.core.sort.cljs$core$IFn$_invoke$arity$2 \x3d (function (comp,coll){\nif(cljs.core.seq(coll)){\nvar a \x3d (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null,coll));\ncljs.core.goog$module$goog$array.stableSort(a,cljs.core.fn__GT_comparator(comp));\n\nreturn cljs.core.with_meta(cljs.core.seq(a),cljs.core.meta(coll));\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.sort.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a sorted sequence of the items in coll, where the sort\n * order is determined by comparing (keyfn item).  Comp can be\n * boolean-valued comparison function, or a -/0/+ valued comparator.\n * Comp defaults to compare.\n */\ncljs.core.sort_by \x3d (function cljs$core$sort_by(var_args){\nvar G__9957 \x3d arguments.length;\nswitch (G__9957) {\ncase 2:\nreturn cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.sort_by.cljs$core$IFn$_invoke$arity$2 \x3d (function (keyfn,coll){\nreturn cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);\n}));\n\n(cljs.core.sort_by.cljs$core$IFn$_invoke$arity$3 \x3d (function (keyfn,comp,coll){\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){\nvar G__9959 \x3d (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(x) : keyfn.call(null,x));\nvar G__9960 \x3d (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(y) : keyfn.call(null,y));\nvar fexpr__9958 \x3d cljs.core.fn__GT_comparator(comp);\nreturn (fexpr__9958.cljs$core$IFn$_invoke$arity$2 ? fexpr__9958.cljs$core$IFn$_invoke$arity$2(G__9959,G__9960) : fexpr__9958.call(null,G__9959,G__9960));\n}),coll);\n}));\n\n(cljs.core.sort_by.cljs$lang$maxFixedArity \x3d 3);\n\ncljs.core.seq_reduce \x3d (function cljs$core$seq_reduce(var_args){\nvar G__9962 \x3d arguments.length;\nswitch (G__9962) {\ncase 2:\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\nvar temp__5802__auto__ \x3d cljs.core.seq(coll);\nif(temp__5802__auto__){\nvar s \x3d temp__5802__auto__;\nvar G__9963 \x3d f;\nvar G__9964 \x3d cljs.core.first(s);\nvar G__9965 \x3d cljs.core.next(s);\nreturn (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__9963,G__9964,G__9965) : cljs.core.reduce.call(null,G__9963,G__9964,G__9965));\n} else {\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n}));\n\n(cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,val,coll){\nvar val__$1 \x3d val;\nvar coll__$1 \x3d cljs.core.seq(coll);\nwhile(true){\nif(coll__$1){\nvar nval \x3d (function (){var G__9966 \x3d val__$1;\nvar G__9967 \x3d cljs.core.first(coll__$1);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9966,G__9967) : f.call(null,G__9966,G__9967));\n})();\nif(cljs.core.reduced_QMARK_(nval)){\nreturn cljs.core.deref(nval);\n} else {\nvar G__12812 \x3d nval;\nvar G__12813 \x3d cljs.core.next(coll__$1);\nval__$1 \x3d G__12812;\ncoll__$1 \x3d G__12813;\ncontinue;\n}\n} else {\nreturn val__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.seq_reduce.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Return a random permutation of coll\n */\ncljs.core.shuffle \x3d (function cljs$core$shuffle(coll){\nvar a \x3d (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.to_array.call(null,coll));\ncljs.core.goog$module$goog$array.shuffle(a);\n\nreturn (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(a) : cljs.core.vec.call(null,a));\n});\ncljs.core.iter_reduce \x3d (function cljs$core$iter_reduce(var_args){\nvar G__9969 \x3d arguments.length;\nswitch (G__9969) {\ncase 2:\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,f){\nvar iter \x3d cljs.core._iterator(coll);\nif(cljs.core.truth_(iter.hasNext())){\nvar init \x3d iter.next();\nvar acc \x3d init;\nwhile(true){\nif(iter.hasNext()){\nvar nacc \x3d (function (){var G__9970 \x3d acc;\nvar G__9971 \x3d iter.next();\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9970,G__9971) : f.call(null,G__9970,G__9971));\n})();\nif(cljs.core.reduced_QMARK_(nacc)){\nreturn cljs.core.deref(nacc);\n} else {\nvar G__12815 \x3d nacc;\nacc \x3d G__12815;\ncontinue;\n}\n} else {\nreturn acc;\n}\nbreak;\n}\n} else {\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n}));\n\n(cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (coll,f,init){\nvar iter \x3d cljs.core._iterator(coll);\nvar acc \x3d init;\nwhile(true){\nif(iter.hasNext()){\nvar nacc \x3d (function (){var G__9972 \x3d acc;\nvar G__9973 \x3d iter.next();\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__9972,G__9973) : f.call(null,G__9972,G__9973));\n})();\nif(cljs.core.reduced_QMARK_(nacc)){\nreturn cljs.core.deref(nacc);\n} else {\nvar G__12816 \x3d nacc;\nacc \x3d G__12816;\ncontinue;\n}\n} else {\nreturn acc;\n}\nbreak;\n}\n}));\n\n(cljs.core.iter_reduce.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * f should be a function of 2 arguments. If val is not supplied,\n *   returns the result of applying f to the first 2 items in coll, then\n *   applying f to that result and the 3rd item, etc. If coll contains no\n *   items, f must accept no arguments as well, and reduce returns the\n *   result of calling f with no arguments.  If coll has only 1 item, it\n *   is returned and f is not called.  If val is supplied, returns the\n *   result of applying f to val and the first item in coll, then\n *   applying f to that result and the 2nd item, etc. If coll contains no\n *   items, returns val and f is not called.\n */\ncljs.core.reduce \x3d (function cljs$core$reduce(var_args){\nvar G__9975 \x3d arguments.length;\nswitch (G__9975) {\ncase 2:\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.reduce.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (524288))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IReduce$))))?true:false):false)){\nreturn coll.cljs$core$IReduce$_reduce$arity$2(null,f);\n} else {\nif(cljs.core.array_QMARK_(coll)){\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);\n} else {\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);\n} else {\nif(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){\nreturn cljs.core._reduce(coll,f);\n} else {\nif(cljs.core.iterable_QMARK_(coll)){\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);\n} else {\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);\n\n}\n}\n}\n}\n}\n}));\n\n(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,val,coll){\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (524288))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IReduce$))))?true:false):false)){\nreturn coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);\n} else {\nif(cljs.core.array_QMARK_(coll)){\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);\n} else {\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);\n} else {\nif(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){\nreturn cljs.core._reduce(coll,f,val);\n} else {\nif(cljs.core.iterable_QMARK_(coll)){\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);\n} else {\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);\n\n}\n}\n}\n}\n}\n}));\n\n(cljs.core.reduce.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Reduces an associative collection. f should be a function of 3\n *   arguments. Returns the result of applying f to init, the first key\n *   and the first value in coll, then applying f to that result and the\n *   2nd key and value, etc. If coll contains no entries, returns init\n *   and f is not called. Note that reduce-kv is supported on vectors,\n *   where the keys will be the ordinals.\n */\ncljs.core.reduce_kv \x3d (function cljs$core$reduce_kv(f,init,coll){\nif((!((coll \x3d\x3d null)))){\nreturn cljs.core._kv_reduce(coll,f,init);\n} else {\nreturn init;\n}\n});\n/**\n * Returns its argument.\n */\ncljs.core.identity \x3d (function cljs$core$identity(x){\nreturn x;\n});\n/**\n * Takes a reducing function f of 2 args and returns a fn suitable for\n *   transduce by adding an arity-1 signature that calls cf (default -\n *   identity) on the result argument.\n */\ncljs.core.completing \x3d (function cljs$core$completing(var_args){\nvar G__9979 \x3d arguments.length;\nswitch (G__9979) {\ncase 1:\nreturn cljs.core.completing.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.completing.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.completing.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn cljs.core.completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);\n}));\n\n(cljs.core.completing.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,cf){\nreturn (function() {\nvar G__12820 \x3d null;\nvar G__12820__0 \x3d (function (){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n});\nvar G__12820__1 \x3d (function (x){\nreturn (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(x) : cf.call(null,x));\n});\nvar G__12820__2 \x3d (function (x,y){\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y));\n});\nG__12820 \x3d function(x,y){\nswitch(arguments.length){\ncase 0:\nreturn G__12820__0.call(this);\ncase 1:\nreturn G__12820__1.call(this,x);\ncase 2:\nreturn G__12820__2.call(this,x,y);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12820.cljs$core$IFn$_invoke$arity$0 \x3d G__12820__0;\nG__12820.cljs$core$IFn$_invoke$arity$1 \x3d G__12820__1;\nG__12820.cljs$core$IFn$_invoke$arity$2 \x3d G__12820__2;\nreturn G__12820;\n})()\n}));\n\n(cljs.core.completing.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * reduce with a transformation of f (xf). If init is not\n *   supplied, (f) will be called to produce it. f should be a reducing\n *   step function that accepts both 1 and 2 arguments, if it accepts\n *   only 2 you can add the arity-1 with \x27completing\x27. Returns the result\n *   of applying (the transformed) xf to init and the first item in coll,\n *   then applying xf to that result and the 2nd item, etc. If coll\n *   contains no items, returns init and f is not called. Note that\n *   certain transforms may inject or skip items.\n */\ncljs.core.transduce \x3d (function cljs$core$transduce(var_args){\nvar G__9981 \x3d arguments.length;\nswitch (G__9981) {\ncase 3:\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.transduce.cljs$core$IFn$_invoke$arity$3 \x3d (function (xform,f,coll){\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)),coll);\n}));\n\n(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4 \x3d (function (xform,f,init,coll){\nvar f__$1 \x3d (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(f) : xform.call(null,f));\nvar ret \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(ret) : f__$1.call(null,ret));\n}));\n\n(cljs.core.transduce.cljs$lang$maxFixedArity \x3d 4);\n\n/**\n * Returns the sum of nums. (+) returns 0.\n */\ncljs.core._PLUS_ \x3d (function cljs$core$_PLUS_(var_args){\nvar G__9986 \x3d arguments.length;\nswitch (G__9986) {\ncase 0:\nreturn cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12824 \x3d arguments.length;\nvar i__5770__auto___12825 \x3d (0);\nwhile(true){\nif((i__5770__auto___12825 \x3c len__5769__auto___12824)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12825]));\n\nvar G__12826 \x3d (i__5770__auto___12825 + (1));\ni__5770__auto___12825 \x3d G__12826;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn (0);\n}));\n\n(cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn x;\n}));\n\n(cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x + y);\n}));\n\n(cljs.core._PLUS_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._PLUS_,(x + y),more);\n}));\n\n/** @this {Function} */\n(cljs.core._PLUS_.cljs$lang$applyTo \x3d (function (seq9983){\nvar G__9984 \x3d cljs.core.first(seq9983);\nvar seq9983__$1 \x3d cljs.core.next(seq9983);\nvar G__9985 \x3d cljs.core.first(seq9983__$1);\nvar seq9983__$2 \x3d cljs.core.next(seq9983__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9984,G__9985,seq9983__$2);\n}));\n\n(cljs.core._PLUS_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * If no ys are supplied, returns the negation of x, else subtracts\n *   the ys from x and returns the result.\n */\ncljs.core._ \x3d (function cljs$core$_(var_args){\nvar G__9991 \x3d arguments.length;\nswitch (G__9991) {\ncase 1:\nreturn cljs.core._.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12828 \x3d arguments.length;\nvar i__5770__auto___12829 \x3d (0);\nwhile(true){\nif((i__5770__auto___12829 \x3c len__5769__auto___12828)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12829]));\n\nvar G__12830 \x3d (i__5770__auto___12829 + (1));\ni__5770__auto___12829 \x3d G__12830;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core._.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core._.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn (- x);\n}));\n\n(cljs.core._.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x - y);\n}));\n\n(cljs.core._.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._,(x - y),more);\n}));\n\n/** @this {Function} */\n(cljs.core._.cljs$lang$applyTo \x3d (function (seq9988){\nvar G__9989 \x3d cljs.core.first(seq9988);\nvar seq9988__$1 \x3d cljs.core.next(seq9988);\nvar G__9990 \x3d cljs.core.first(seq9988__$1);\nvar seq9988__$2 \x3d cljs.core.next(seq9988__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9989,G__9990,seq9988__$2);\n}));\n\n(cljs.core._.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns the product of nums. (*) returns 1.\n */\ncljs.core._STAR_ \x3d (function cljs$core$_STAR_(var_args){\nvar G__9996 \x3d arguments.length;\nswitch (G__9996) {\ncase 0:\nreturn cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12832 \x3d arguments.length;\nvar i__5770__auto___12833 \x3d (0);\nwhile(true){\nif((i__5770__auto___12833 \x3c len__5769__auto___12832)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12833]));\n\nvar G__12834 \x3d (i__5770__auto___12833 + (1));\ni__5770__auto___12833 \x3d G__12834;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core._STAR_.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn (1);\n}));\n\n(cljs.core._STAR_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn x;\n}));\n\n(cljs.core._STAR_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x * y);\n}));\n\n(cljs.core._STAR_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._STAR_,(x * y),more);\n}));\n\n/** @this {Function} */\n(cljs.core._STAR_.cljs$lang$applyTo \x3d (function (seq9993){\nvar G__9994 \x3d cljs.core.first(seq9993);\nvar seq9993__$1 \x3d cljs.core.next(seq9993);\nvar G__9995 \x3d cljs.core.first(seq9993__$1);\nvar seq9993__$2 \x3d cljs.core.next(seq9993__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9994,G__9995,seq9993__$2);\n}));\n\n(cljs.core._STAR_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * If no denominators are supplied, returns 1/numerator,\n *   else returns numerator divided by all of the denominators.\n */\ncljs.core._SLASH_ \x3d (function cljs$core$_SLASH_(var_args){\nvar G__10001 \x3d arguments.length;\nswitch (G__10001) {\ncase 1:\nreturn cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12837 \x3d arguments.length;\nvar i__5770__auto___12838 \x3d (0);\nwhile(true){\nif((i__5770__auto___12838 \x3c len__5769__auto___12837)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12838]));\n\nvar G__12839 \x3d (i__5770__auto___12838 + (1));\ni__5770__auto___12838 \x3d G__12839;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn ((1) / x);\n}));\n\n(cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x / y);\n}));\n\n(cljs.core._SLASH_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_,(x / y),more);\n}));\n\n/** @this {Function} */\n(cljs.core._SLASH_.cljs$lang$applyTo \x3d (function (seq9998){\nvar G__9999 \x3d cljs.core.first(seq9998);\nvar seq9998__$1 \x3d cljs.core.next(seq9998);\nvar G__10000 \x3d cljs.core.first(seq9998__$1);\nvar seq9998__$2 \x3d cljs.core.next(seq9998__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__9999,G__10000,seq9998__$2);\n}));\n\n(cljs.core._SLASH_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns non-nil if nums are in monotonically increasing order,\n *   otherwise false.\n */\ncljs.core._LT_ \x3d (function cljs$core$_LT_(var_args){\nvar G__10006 \x3d arguments.length;\nswitch (G__10006) {\ncase 1:\nreturn cljs.core._LT_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._LT_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12841 \x3d arguments.length;\nvar i__5770__auto___12842 \x3d (0);\nwhile(true){\nif((i__5770__auto___12842 \x3c len__5769__auto___12841)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12842]));\n\nvar G__12843 \x3d (i__5770__auto___12842 + (1));\ni__5770__auto___12842 \x3d G__12843;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core._LT_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn true;\n}));\n\n(cljs.core._LT_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x \x3c y);\n}));\n\n(cljs.core._LT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nwhile(true){\nif((x \x3c y)){\nif(cljs.core.next(more)){\nvar G__12847 \x3d y;\nvar G__12848 \x3d cljs.core.first(more);\nvar G__12849 \x3d cljs.core.next(more);\nx \x3d G__12847;\ny \x3d G__12848;\nmore \x3d G__12849;\ncontinue;\n} else {\nreturn (y \x3c cljs.core.first(more));\n}\n} else {\nreturn false;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core._LT_.cljs$lang$applyTo \x3d (function (seq10003){\nvar G__10004 \x3d cljs.core.first(seq10003);\nvar seq10003__$1 \x3d cljs.core.next(seq10003);\nvar G__10005 \x3d cljs.core.first(seq10003__$1);\nvar seq10003__$2 \x3d cljs.core.next(seq10003__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10004,G__10005,seq10003__$2);\n}));\n\n(cljs.core._LT_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns non-nil if nums are in monotonically non-decreasing order,\n *   otherwise false.\n */\ncljs.core._LT__EQ_ \x3d (function cljs$core$_LT__EQ_(var_args){\nvar G__10011 \x3d arguments.length;\nswitch (G__10011) {\ncase 1:\nreturn cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12854 \x3d arguments.length;\nvar i__5770__auto___12855 \x3d (0);\nwhile(true){\nif((i__5770__auto___12855 \x3c len__5769__auto___12854)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12855]));\n\nvar G__12856 \x3d (i__5770__auto___12855 + (1));\ni__5770__auto___12855 \x3d G__12856;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn true;\n}));\n\n(cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x \x3c\x3d y);\n}));\n\n(cljs.core._LT__EQ_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nwhile(true){\nif((x \x3c\x3d y)){\nif(cljs.core.next(more)){\nvar G__12857 \x3d y;\nvar G__12858 \x3d cljs.core.first(more);\nvar G__12859 \x3d cljs.core.next(more);\nx \x3d G__12857;\ny \x3d G__12858;\nmore \x3d G__12859;\ncontinue;\n} else {\nreturn (y \x3c\x3d cljs.core.first(more));\n}\n} else {\nreturn false;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core._LT__EQ_.cljs$lang$applyTo \x3d (function (seq10008){\nvar G__10009 \x3d cljs.core.first(seq10008);\nvar seq10008__$1 \x3d cljs.core.next(seq10008);\nvar G__10010 \x3d cljs.core.first(seq10008__$1);\nvar seq10008__$2 \x3d cljs.core.next(seq10008__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10009,G__10010,seq10008__$2);\n}));\n\n(cljs.core._LT__EQ_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns non-nil if nums are in monotonically decreasing order,\n *   otherwise false.\n */\ncljs.core._GT_ \x3d (function cljs$core$_GT_(var_args){\nvar G__10016 \x3d arguments.length;\nswitch (G__10016) {\ncase 1:\nreturn cljs.core._GT_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._GT_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12861 \x3d arguments.length;\nvar i__5770__auto___12862 \x3d (0);\nwhile(true){\nif((i__5770__auto___12862 \x3c len__5769__auto___12861)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12862]));\n\nvar G__12863 \x3d (i__5770__auto___12862 + (1));\ni__5770__auto___12862 \x3d G__12863;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core._GT_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn true;\n}));\n\n(cljs.core._GT_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x \x3e y);\n}));\n\n(cljs.core._GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nwhile(true){\nif((x \x3e y)){\nif(cljs.core.next(more)){\nvar G__12864 \x3d y;\nvar G__12865 \x3d cljs.core.first(more);\nvar G__12866 \x3d cljs.core.next(more);\nx \x3d G__12864;\ny \x3d G__12865;\nmore \x3d G__12866;\ncontinue;\n} else {\nreturn (y \x3e cljs.core.first(more));\n}\n} else {\nreturn false;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core._GT_.cljs$lang$applyTo \x3d (function (seq10013){\nvar G__10014 \x3d cljs.core.first(seq10013);\nvar seq10013__$1 \x3d cljs.core.next(seq10013);\nvar G__10015 \x3d cljs.core.first(seq10013__$1);\nvar seq10013__$2 \x3d cljs.core.next(seq10013__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10014,G__10015,seq10013__$2);\n}));\n\n(cljs.core._GT_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns non-nil if nums are in monotonically non-increasing order,\n *   otherwise false.\n */\ncljs.core._GT__EQ_ \x3d (function cljs$core$_GT__EQ_(var_args){\nvar G__10021 \x3d arguments.length;\nswitch (G__10021) {\ncase 1:\nreturn cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12868 \x3d arguments.length;\nvar i__5770__auto___12869 \x3d (0);\nwhile(true){\nif((i__5770__auto___12869 \x3c len__5769__auto___12868)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12869]));\n\nvar G__12870 \x3d (i__5770__auto___12869 + (1));\ni__5770__auto___12869 \x3d G__12870;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn true;\n}));\n\n(cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x \x3e\x3d y);\n}));\n\n(cljs.core._GT__EQ_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nwhile(true){\nif((x \x3e\x3d y)){\nif(cljs.core.next(more)){\nvar G__12871 \x3d y;\nvar G__12872 \x3d cljs.core.first(more);\nvar G__12873 \x3d cljs.core.next(more);\nx \x3d G__12871;\ny \x3d G__12872;\nmore \x3d G__12873;\ncontinue;\n} else {\nreturn (y \x3e\x3d cljs.core.first(more));\n}\n} else {\nreturn false;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core._GT__EQ_.cljs$lang$applyTo \x3d (function (seq10018){\nvar G__10019 \x3d cljs.core.first(seq10018);\nvar seq10018__$1 \x3d cljs.core.next(seq10018);\nvar G__10020 \x3d cljs.core.first(seq10018__$1);\nvar seq10018__$2 \x3d cljs.core.next(seq10018__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10019,G__10020,seq10018__$2);\n}));\n\n(cljs.core._GT__EQ_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns a number one less than num.\n */\ncljs.core.dec \x3d (function cljs$core$dec(x){\nreturn (x - (1));\n});\n/**\n * Returns the absolute value of a.\n */\ncljs.core.abs \x3d (function cljs$core$abs(a){\nreturn Math.abs(a);\n});\n/**\n * Returns the greatest of the nums.\n */\ncljs.core.max \x3d (function cljs$core$max(var_args){\nvar G__10026 \x3d arguments.length;\nswitch (G__10026) {\ncase 1:\nreturn cljs.core.max.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.max.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12875 \x3d arguments.length;\nvar i__5770__auto___12876 \x3d (0);\nwhile(true){\nif((i__5770__auto___12876 \x3c len__5769__auto___12875)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12876]));\n\nvar G__12877 \x3d (i__5770__auto___12876 + (1));\ni__5770__auto___12876 \x3d G__12877;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.max.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.max.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn x;\n}));\n\n(cljs.core.max.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nvar x__5130__auto__ \x3d x;\nvar y__5131__auto__ \x3d y;\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n}));\n\n(cljs.core.max.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.max,(function (){var x__5130__auto__ \x3d x;\nvar y__5131__auto__ \x3d y;\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})(),more);\n}));\n\n/** @this {Function} */\n(cljs.core.max.cljs$lang$applyTo \x3d (function (seq10023){\nvar G__10024 \x3d cljs.core.first(seq10023);\nvar seq10023__$1 \x3d cljs.core.next(seq10023);\nvar G__10025 \x3d cljs.core.first(seq10023__$1);\nvar seq10023__$2 \x3d cljs.core.next(seq10023__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10024,G__10025,seq10023__$2);\n}));\n\n(cljs.core.max.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns the least of the nums.\n */\ncljs.core.min \x3d (function cljs$core$min(var_args){\nvar G__10031 \x3d arguments.length;\nswitch (G__10031) {\ncase 1:\nreturn cljs.core.min.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.min.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12879 \x3d arguments.length;\nvar i__5770__auto___12880 \x3d (0);\nwhile(true){\nif((i__5770__auto___12880 \x3c len__5769__auto___12879)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12880]));\n\nvar G__12881 \x3d (i__5770__auto___12880 + (1));\ni__5770__auto___12880 \x3d G__12881;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.min.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.min.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn x;\n}));\n\n(cljs.core.min.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nvar x__5133__auto__ \x3d x;\nvar y__5134__auto__ \x3d y;\nreturn ((x__5133__auto__ \x3c y__5134__auto__) ? x__5133__auto__ : y__5134__auto__);\n}));\n\n(cljs.core.min.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.min,(function (){var x__5133__auto__ \x3d x;\nvar y__5134__auto__ \x3d y;\nreturn ((x__5133__auto__ \x3c y__5134__auto__) ? x__5133__auto__ : y__5134__auto__);\n})(),more);\n}));\n\n/** @this {Function} */\n(cljs.core.min.cljs$lang$applyTo \x3d (function (seq10028){\nvar G__10029 \x3d cljs.core.first(seq10028);\nvar seq10028__$1 \x3d cljs.core.next(seq10028);\nvar G__10030 \x3d cljs.core.first(seq10028__$1);\nvar seq10028__$2 \x3d cljs.core.next(seq10028__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10029,G__10030,seq10028__$2);\n}));\n\n(cljs.core.min.cljs$lang$maxFixedArity \x3d (2));\n\ncljs.core.byte$ \x3d (function cljs$core$byte(x){\nreturn x;\n});\n/**\n * Coerce to char\n */\ncljs.core.char$ \x3d (function cljs$core$char(x){\nif(typeof x \x3d\x3d\x3d \x27number\x27){\nreturn String.fromCharCode(x);\n} else {\nif(((typeof x \x3d\x3d\x3d \x27string\x27) \x26\x26 ((x.length \x3d\x3d\x3d (1))))){\nreturn x;\n} else {\nthrow (new Error(\x22Argument to char must be a character or number\x22));\n\n}\n}\n});\ncljs.core.short$ \x3d (function cljs$core$short(x){\nreturn x;\n});\ncljs.core.float$ \x3d (function cljs$core$float(x){\nreturn x;\n});\ncljs.core.double$ \x3d (function cljs$core$double(x){\nreturn x;\n});\ncljs.core.unchecked_byte \x3d (function cljs$core$unchecked_byte(x){\nreturn x;\n});\ncljs.core.unchecked_char \x3d (function cljs$core$unchecked_char(x){\nreturn x;\n});\ncljs.core.unchecked_short \x3d (function cljs$core$unchecked_short(x){\nreturn x;\n});\ncljs.core.unchecked_float \x3d (function cljs$core$unchecked_float(x){\nreturn x;\n});\ncljs.core.unchecked_double \x3d (function cljs$core$unchecked_double(x){\nreturn x;\n});\n/**\n * Returns the sum of nums. (+) returns 0.\n */\ncljs.core.unchecked_add \x3d (function cljs$core$unchecked_add(var_args){\nvar G__10036 \x3d arguments.length;\nswitch (G__10036) {\ncase 0:\nreturn cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12887 \x3d arguments.length;\nvar i__5770__auto___12888 \x3d (0);\nwhile(true){\nif((i__5770__auto___12888 \x3c len__5769__auto___12887)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12888]));\n\nvar G__12889 \x3d (i__5770__auto___12888 + (1));\ni__5770__auto___12888 \x3d G__12889;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn (0);\n}));\n\n(cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn x;\n}));\n\n(cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x + y);\n}));\n\n(cljs.core.unchecked_add.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add,(x + y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.unchecked_add.cljs$lang$applyTo \x3d (function (seq10033){\nvar G__10034 \x3d cljs.core.first(seq10033);\nvar seq10033__$1 \x3d cljs.core.next(seq10033);\nvar G__10035 \x3d cljs.core.first(seq10033__$1);\nvar seq10033__$2 \x3d cljs.core.next(seq10033__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10034,G__10035,seq10033__$2);\n}));\n\n(cljs.core.unchecked_add.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns the sum of nums. (+) returns 0.\n */\ncljs.core.unchecked_add_int \x3d (function cljs$core$unchecked_add_int(var_args){\nvar G__10041 \x3d arguments.length;\nswitch (G__10041) {\ncase 0:\nreturn cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12891 \x3d arguments.length;\nvar i__5770__auto___12892 \x3d (0);\nwhile(true){\nif((i__5770__auto___12892 \x3c len__5769__auto___12891)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12892]));\n\nvar G__12893 \x3d (i__5770__auto___12892 + (1));\ni__5770__auto___12892 \x3d G__12893;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn (0);\n}));\n\n(cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn x;\n}));\n\n(cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x + y);\n}));\n\n(cljs.core.unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_add_int,(x + y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.unchecked_add_int.cljs$lang$applyTo \x3d (function (seq10038){\nvar G__10039 \x3d cljs.core.first(seq10038);\nvar seq10038__$1 \x3d cljs.core.next(seq10038);\nvar G__10040 \x3d cljs.core.first(seq10038__$1);\nvar seq10038__$2 \x3d cljs.core.next(seq10038__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10039,G__10040,seq10038__$2);\n}));\n\n(cljs.core.unchecked_add_int.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns a number one less than x, an int.\n */\ncljs.core.unchecked_dec \x3d (function cljs$core$unchecked_dec(x){\nreturn (x - (1));\n});\n/**\n * Returns a number one less than x, an int.\n */\ncljs.core.unchecked_dec_int \x3d (function cljs$core$unchecked_dec_int(x){\nreturn (x - (1));\n});\n/**\n * If no denominators are supplied, returns 1/numerator,\n *   else returns numerator divided by all of the denominators.\n */\ncljs.core.unchecked_divide_int \x3d (function cljs$core$unchecked_divide_int(var_args){\nvar G__10046 \x3d arguments.length;\nswitch (G__10046) {\ncase 1:\nreturn cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12895 \x3d arguments.length;\nvar i__5770__auto___12896 \x3d (0);\nwhile(true){\nif((i__5770__auto___12896 \x3c len__5769__auto___12895)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12896]));\n\nvar G__12897 \x3d (i__5770__auto___12896 + (1));\ni__5770__auto___12896 \x3d G__12897;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn ((1) / x);\n}));\n\n(cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x / y);\n}));\n\n(cljs.core.unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_divide_int,(x / y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.unchecked_divide_int.cljs$lang$applyTo \x3d (function (seq10043){\nvar G__10044 \x3d cljs.core.first(seq10043);\nvar seq10043__$1 \x3d cljs.core.next(seq10043);\nvar G__10045 \x3d cljs.core.first(seq10043__$1);\nvar seq10043__$2 \x3d cljs.core.next(seq10043__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10044,G__10045,seq10043__$2);\n}));\n\n(cljs.core.unchecked_divide_int.cljs$lang$maxFixedArity \x3d (2));\n\ncljs.core.unchecked_inc \x3d (function cljs$core$unchecked_inc(x){\nreturn (x + (1));\n});\ncljs.core.unchecked_inc_int \x3d (function cljs$core$unchecked_inc_int(x){\nreturn (x + (1));\n});\n/**\n * Returns the product of nums. (*) returns 1.\n */\ncljs.core.unchecked_multiply \x3d (function cljs$core$unchecked_multiply(var_args){\nvar G__10051 \x3d arguments.length;\nswitch (G__10051) {\ncase 0:\nreturn cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12899 \x3d arguments.length;\nvar i__5770__auto___12900 \x3d (0);\nwhile(true){\nif((i__5770__auto___12900 \x3c len__5769__auto___12899)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12900]));\n\nvar G__12901 \x3d (i__5770__auto___12900 + (1));\ni__5770__auto___12900 \x3d G__12901;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn (1);\n}));\n\n(cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn x;\n}));\n\n(cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x * y);\n}));\n\n(cljs.core.unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply,(x * y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.unchecked_multiply.cljs$lang$applyTo \x3d (function (seq10048){\nvar G__10049 \x3d cljs.core.first(seq10048);\nvar seq10048__$1 \x3d cljs.core.next(seq10048);\nvar G__10050 \x3d cljs.core.first(seq10048__$1);\nvar seq10048__$2 \x3d cljs.core.next(seq10048__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10049,G__10050,seq10048__$2);\n}));\n\n(cljs.core.unchecked_multiply.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns the product of nums. (*) returns 1.\n */\ncljs.core.unchecked_multiply_int \x3d (function cljs$core$unchecked_multiply_int(var_args){\nvar G__10056 \x3d arguments.length;\nswitch (G__10056) {\ncase 0:\nreturn cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12906 \x3d arguments.length;\nvar i__5770__auto___12907 \x3d (0);\nwhile(true){\nif((i__5770__auto___12907 \x3c len__5769__auto___12906)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12907]));\n\nvar G__12908 \x3d (i__5770__auto___12907 + (1));\ni__5770__auto___12907 \x3d G__12908;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn (1);\n}));\n\n(cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn x;\n}));\n\n(cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x * y);\n}));\n\n(cljs.core.unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_multiply_int,(x * y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.unchecked_multiply_int.cljs$lang$applyTo \x3d (function (seq10053){\nvar G__10054 \x3d cljs.core.first(seq10053);\nvar seq10053__$1 \x3d cljs.core.next(seq10053);\nvar G__10055 \x3d cljs.core.first(seq10053__$1);\nvar seq10053__$2 \x3d cljs.core.next(seq10053__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10054,G__10055,seq10053__$2);\n}));\n\n(cljs.core.unchecked_multiply_int.cljs$lang$maxFixedArity \x3d (2));\n\ncljs.core.unchecked_negate \x3d (function cljs$core$unchecked_negate(x){\nreturn (- x);\n});\ncljs.core.unchecked_negate_int \x3d (function cljs$core$unchecked_negate_int(x){\nreturn (- x);\n});\ncljs.core.unchecked_remainder_int \x3d (function cljs$core$unchecked_remainder_int(x,n){\nreturn (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(x,n) : cljs.core.mod.call(null,x,n));\n});\n/**\n * If no ys are supplied, returns the negation of x, else subtracts\n *   the ys from x and returns the result.\n */\ncljs.core.unchecked_subtract \x3d (function cljs$core$unchecked_subtract(var_args){\nvar G__10061 \x3d arguments.length;\nswitch (G__10061) {\ncase 1:\nreturn cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12910 \x3d arguments.length;\nvar i__5770__auto___12911 \x3d (0);\nwhile(true){\nif((i__5770__auto___12911 \x3c len__5769__auto___12910)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12911]));\n\nvar G__12912 \x3d (i__5770__auto___12911 + (1));\ni__5770__auto___12911 \x3d G__12912;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn (- x);\n}));\n\n(cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x - y);\n}));\n\n(cljs.core.unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract,(x - y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.unchecked_subtract.cljs$lang$applyTo \x3d (function (seq10058){\nvar G__10059 \x3d cljs.core.first(seq10058);\nvar seq10058__$1 \x3d cljs.core.next(seq10058);\nvar G__10060 \x3d cljs.core.first(seq10058__$1);\nvar seq10058__$2 \x3d cljs.core.next(seq10058__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10059,G__10060,seq10058__$2);\n}));\n\n(cljs.core.unchecked_subtract.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * If no ys are supplied, returns the negation of x, else subtracts\n *   the ys from x and returns the result.\n */\ncljs.core.unchecked_subtract_int \x3d (function cljs$core$unchecked_subtract_int(var_args){\nvar G__10066 \x3d arguments.length;\nswitch (G__10066) {\ncase 1:\nreturn cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12917 \x3d arguments.length;\nvar i__5770__auto___12918 \x3d (0);\nwhile(true){\nif((i__5770__auto___12918 \x3c len__5769__auto___12917)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12918]));\n\nvar G__12919 \x3d (i__5770__auto___12918 + (1));\ni__5770__auto___12918 \x3d G__12919;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn (- x);\n}));\n\n(cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x - y);\n}));\n\n(cljs.core.unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.unchecked_subtract_int,(x - y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.unchecked_subtract_int.cljs$lang$applyTo \x3d (function (seq10063){\nvar G__10064 \x3d cljs.core.first(seq10063);\nvar seq10063__$1 \x3d cljs.core.next(seq10063);\nvar G__10065 \x3d cljs.core.first(seq10063__$1);\nvar seq10063__$2 \x3d cljs.core.next(seq10063__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10064,G__10065,seq10063__$2);\n}));\n\n(cljs.core.unchecked_subtract_int.cljs$lang$maxFixedArity \x3d (2));\n\ncljs.core.fix \x3d (function cljs$core$fix(q){\nif((q \x3e\x3d (0))){\nreturn Math.floor(q);\n} else {\nreturn Math.ceil(q);\n}\n});\n/**\n * Coerce to int by stripping decimal places.\n */\ncljs.core.int$ \x3d (function cljs$core$int(x){\nreturn (x | (0));\n});\n/**\n * Coerce to int by stripping decimal places.\n */\ncljs.core.unchecked_int \x3d (function cljs$core$unchecked_int(x){\nreturn cljs.core.fix(x);\n});\n/**\n * Coerce to long by stripping decimal places. Identical to `int\x27.\n */\ncljs.core.long$ \x3d (function cljs$core$long(x){\nreturn cljs.core.fix(x);\n});\n/**\n * Coerce to long by stripping decimal places. Identical to `int\x27.\n */\ncljs.core.unchecked_long \x3d (function cljs$core$unchecked_long(x){\nreturn cljs.core.fix(x);\n});\ncljs.core.booleans \x3d (function cljs$core$booleans(x){\nreturn x;\n});\ncljs.core.bytes \x3d (function cljs$core$bytes(x){\nreturn x;\n});\ncljs.core.chars \x3d (function cljs$core$chars(x){\nreturn x;\n});\ncljs.core.shorts \x3d (function cljs$core$shorts(x){\nreturn x;\n});\ncljs.core.ints \x3d (function cljs$core$ints(x){\nreturn x;\n});\ncljs.core.floats \x3d (function cljs$core$floats(x){\nreturn x;\n});\ncljs.core.doubles \x3d (function cljs$core$doubles(x){\nreturn x;\n});\ncljs.core.longs \x3d (function cljs$core$longs(x){\nreturn x;\n});\n/**\n * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers\n */\ncljs.core.js_mod \x3d (function cljs$core$js_mod(n,d){\nreturn (n % d);\n});\n/**\n * Modulus of num and div. Truncates toward negative infinity.\n */\ncljs.core.mod \x3d (function cljs$core$mod(n,d){\nreturn (((n % d) + d) % d);\n});\n/**\n * quot[ient] of dividing numerator by denominator.\n */\ncljs.core.quot \x3d (function cljs$core$quot(n,d){\nvar rem \x3d (n % d);\nreturn cljs.core.fix(((n - rem) / d));\n});\n/**\n * remainder of dividing numerator by denominator.\n */\ncljs.core.rem \x3d (function cljs$core$rem(n,d){\nvar q \x3d cljs.core.quot(n,d);\nreturn (n - (d * q));\n});\n/**\n * Bitwise exclusive or\n */\ncljs.core.bit_xor \x3d (function cljs$core$bit_xor(var_args){\nvar G__10071 \x3d arguments.length;\nswitch (G__10071) {\ncase 2:\nreturn cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12921 \x3d arguments.length;\nvar i__5770__auto___12922 \x3d (0);\nwhile(true){\nif((i__5770__auto___12922 \x3c len__5769__auto___12921)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12922]));\n\nvar G__12923 \x3d (i__5770__auto___12922 + (1));\ni__5770__auto___12922 \x3d G__12923;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x ^ y);\n}));\n\n(cljs.core.bit_xor.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_xor,(x ^ y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.bit_xor.cljs$lang$applyTo \x3d (function (seq10068){\nvar G__10069 \x3d cljs.core.first(seq10068);\nvar seq10068__$1 \x3d cljs.core.next(seq10068);\nvar G__10070 \x3d cljs.core.first(seq10068__$1);\nvar seq10068__$2 \x3d cljs.core.next(seq10068__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10069,G__10070,seq10068__$2);\n}));\n\n(cljs.core.bit_xor.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Bitwise and\n */\ncljs.core.bit_and \x3d (function cljs$core$bit_and(var_args){\nvar G__10076 \x3d arguments.length;\nswitch (G__10076) {\ncase 2:\nreturn cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12925 \x3d arguments.length;\nvar i__5770__auto___12926 \x3d (0);\nwhile(true){\nif((i__5770__auto___12926 \x3c len__5769__auto___12925)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12926]));\n\nvar G__12927 \x3d (i__5770__auto___12926 + (1));\ni__5770__auto___12926 \x3d G__12927;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.bit_and.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x \x26 y);\n}));\n\n(cljs.core.bit_and.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and,(x \x26 y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.bit_and.cljs$lang$applyTo \x3d (function (seq10073){\nvar G__10074 \x3d cljs.core.first(seq10073);\nvar seq10073__$1 \x3d cljs.core.next(seq10073);\nvar G__10075 \x3d cljs.core.first(seq10073__$1);\nvar seq10073__$2 \x3d cljs.core.next(seq10073__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10074,G__10075,seq10073__$2);\n}));\n\n(cljs.core.bit_and.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Bitwise or\n */\ncljs.core.bit_or \x3d (function cljs$core$bit_or(var_args){\nvar G__10081 \x3d arguments.length;\nswitch (G__10081) {\ncase 2:\nreturn cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12929 \x3d arguments.length;\nvar i__5770__auto___12930 \x3d (0);\nwhile(true){\nif((i__5770__auto___12930 \x3c len__5769__auto___12929)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12930]));\n\nvar G__12931 \x3d (i__5770__auto___12930 + (1));\ni__5770__auto___12930 \x3d G__12931;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.bit_or.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x | y);\n}));\n\n(cljs.core.bit_or.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_or,(x | y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.bit_or.cljs$lang$applyTo \x3d (function (seq10078){\nvar G__10079 \x3d cljs.core.first(seq10078);\nvar seq10078__$1 \x3d cljs.core.next(seq10078);\nvar G__10080 \x3d cljs.core.first(seq10078__$1);\nvar seq10078__$2 \x3d cljs.core.next(seq10078__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10079,G__10080,seq10078__$2);\n}));\n\n(cljs.core.bit_or.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Bitwise and with complement\n */\ncljs.core.bit_and_not \x3d (function cljs$core$bit_and_not(var_args){\nvar G__10086 \x3d arguments.length;\nswitch (G__10086) {\ncase 2:\nreturn cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12933 \x3d arguments.length;\nvar i__5770__auto___12934 \x3d (0);\nwhile(true){\nif((i__5770__auto___12934 \x3c len__5769__auto___12933)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12934]));\n\nvar G__12935 \x3d (i__5770__auto___12934 + (1));\ni__5770__auto___12934 \x3d G__12935;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (x \x26 ~y);\n}));\n\n(cljs.core.bit_and_not.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.bit_and_not,(x \x26 ~y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.bit_and_not.cljs$lang$applyTo \x3d (function (seq10083){\nvar G__10084 \x3d cljs.core.first(seq10083);\nvar seq10083__$1 \x3d cljs.core.next(seq10083);\nvar G__10085 \x3d cljs.core.first(seq10083__$1);\nvar seq10083__$2 \x3d cljs.core.next(seq10083__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10084,G__10085,seq10083__$2);\n}));\n\n(cljs.core.bit_and_not.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Clear bit at index n\n */\ncljs.core.bit_clear \x3d (function cljs$core$bit_clear(x,n){\nreturn (x \x26 ~(1 \x3c\x3c n));\n});\n/**\n * Flip bit at index n\n */\ncljs.core.bit_flip \x3d (function cljs$core$bit_flip(x,n){\nreturn (x ^ (1 \x3c\x3c n));\n});\n/**\n * Bitwise complement\n */\ncljs.core.bit_not \x3d (function cljs$core$bit_not(x){\nreturn (~ x);\n});\n/**\n * Set bit at index n\n */\ncljs.core.bit_set \x3d (function cljs$core$bit_set(x,n){\nreturn (x | (1 \x3c\x3c n));\n});\n/**\n * Test bit at index n\n */\ncljs.core.bit_test \x3d (function cljs$core$bit_test(x,n){\nreturn ((x \x26 (1 \x3c\x3c n)) !\x3d 0);\n});\n/**\n * Bitwise shift left\n */\ncljs.core.bit_shift_left \x3d (function cljs$core$bit_shift_left(x,n){\nreturn (x \x3c\x3c n);\n});\n/**\n * Bitwise shift right\n */\ncljs.core.bit_shift_right \x3d (function cljs$core$bit_shift_right(x,n){\nreturn (x \x3e\x3e n);\n});\n/**\n * DEPRECATED: Bitwise shift right with zero fill\n */\ncljs.core.bit_shift_right_zero_fill \x3d (function cljs$core$bit_shift_right_zero_fill(x,n){\nreturn (x \x3e\x3e\x3e n);\n});\n/**\n * Bitwise shift right with zero fill\n */\ncljs.core.unsigned_bit_shift_right \x3d (function cljs$core$unsigned_bit_shift_right(x,n){\nreturn (x \x3e\x3e\x3e n);\n});\n/**\n * Counts the number of bits set in n\n */\ncljs.core.bit_count \x3d (function cljs$core$bit_count(v){\nvar v__$1 \x3d (v - ((v \x3e\x3e (1)) \x26 (1431655765)));\nvar v__$2 \x3d ((v__$1 \x26 (858993459)) + ((v__$1 \x3e\x3e (2)) \x26 (858993459)));\nreturn ((((v__$2 + (v__$2 \x3e\x3e (4))) \x26 (252645135)) * (16843009)) \x3e\x3e (24));\n});\n/**\n * Returns non-nil if nums all have the equivalent\n *   value, otherwise false. Behavior on non nums is\n *   undefined.\n */\ncljs.core._EQ__EQ_ \x3d (function cljs$core$_EQ__EQ_(var_args){\nvar G__10091 \x3d arguments.length;\nswitch (G__10091) {\ncase 1:\nreturn cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12937 \x3d arguments.length;\nvar i__5770__auto___12938 \x3d (0);\nwhile(true){\nif((i__5770__auto___12938 \x3c len__5769__auto___12937)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12938]));\n\nvar G__12939 \x3d (i__5770__auto___12938 + (1));\ni__5770__auto___12938 \x3d G__12939;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn true;\n}));\n\n(cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn cljs.core._equiv(x,y);\n}));\n\n(cljs.core._EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nwhile(true){\nif((x \x3d\x3d\x3d y)){\nif(cljs.core.next(more)){\nvar G__12940 \x3d y;\nvar G__12941 \x3d cljs.core.first(more);\nvar G__12942 \x3d cljs.core.next(more);\nx \x3d G__12940;\ny \x3d G__12941;\nmore \x3d G__12942;\ncontinue;\n} else {\nreturn (y \x3d\x3d\x3d cljs.core.first(more));\n}\n} else {\nreturn false;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core._EQ__EQ_.cljs$lang$applyTo \x3d (function (seq10088){\nvar G__10089 \x3d cljs.core.first(seq10088);\nvar seq10088__$1 \x3d cljs.core.next(seq10088);\nvar G__10090 \x3d cljs.core.first(seq10088__$1);\nvar seq10088__$2 \x3d cljs.core.next(seq10088__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10089,G__10090,seq10088__$2);\n}));\n\n(cljs.core._EQ__EQ_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns true if num is greater than zero, else false\n */\ncljs.core.pos_QMARK_ \x3d (function cljs$core$pos_QMARK_(x){\nreturn (x \x3e (0));\n});\n/**\n * Returns true if num is zero, else false\n */\ncljs.core.zero_QMARK_ \x3d (function cljs$core$zero_QMARK_(x){\nreturn (x \x3d\x3d\x3d (0));\n});\n/**\n * Returns true if num is less than zero, else false\n */\ncljs.core.neg_QMARK_ \x3d (function cljs$core$neg_QMARK_(x){\nreturn (x \x3c (0));\n});\n/**\n * Returns the nth next of coll, (seq coll) when n is 0.\n */\ncljs.core.nthnext \x3d (function cljs$core$nthnext(coll,n){\nvar n__$1 \x3d n;\nvar xs \x3d cljs.core.seq(coll);\nwhile(true){\nif(((xs) \x26\x26 ((n__$1 \x3e (0))))){\nvar G__12943 \x3d (n__$1 - (1));\nvar G__12944 \x3d cljs.core.next(xs);\nn__$1 \x3d G__12943;\nxs \x3d G__12944;\ncontinue;\n} else {\nreturn xs;\n}\nbreak;\n}\n});\n/**\n * With no args, returns the empty string. With one arg x, returns\n *   x.toString().  (str nil) returns the empty string. With more than\n *   one arg, returns the concatenation of the str values of the args.\n */\ncljs.core.str \x3d (function cljs$core$str(var_args){\nvar G__10095 \x3d arguments.length;\nswitch (G__10095) {\ncase 0:\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___12946 \x3d arguments.length;\nvar i__5770__auto___12947 \x3d (0);\nwhile(true){\nif((i__5770__auto___12947 \x3c len__5769__auto___12946)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___12947]));\n\nvar G__12948 \x3d (i__5770__auto___12947 + (1));\ni__5770__auto___12947 \x3d G__12948;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((1)),(0),null));\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.str.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn \x22\x22;\n}));\n\n(cljs.core.str.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nif((x \x3d\x3d null)){\nreturn \x22\x22;\n} else {\nreturn [x].join(\x22\x22);\n}\n}));\n\n(cljs.core.str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,ys){\nvar sb \x3d (new goog.string.StringBuffer(cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)));\nvar more \x3d ys;\nwhile(true){\nif(cljs.core.truth_(more)){\nvar G__12949 \x3d sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));\nvar G__12950 \x3d cljs.core.next(more);\nsb \x3d G__12949;\nmore \x3d G__12950;\ncontinue;\n} else {\nreturn sb.toString();\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.str.cljs$lang$applyTo \x3d (function (seq10093){\nvar G__10094 \x3d cljs.core.first(seq10093);\nvar seq10093__$1 \x3d cljs.core.next(seq10093);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10094,seq10093__$1);\n}));\n\n(cljs.core.str.cljs$lang$maxFixedArity \x3d (1));\n\n/**\n * Returns the substring of s beginning at start inclusive, and ending\n *   at end (defaults to length of string), exclusive.\n */\ncljs.core.subs \x3d (function cljs$core$subs(var_args){\nvar G__10097 \x3d arguments.length;\nswitch (G__10097) {\ncase 2:\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.subs.cljs$core$IFn$_invoke$arity$2 \x3d (function (s,start){\nreturn s.substring(start);\n}));\n\n(cljs.core.subs.cljs$core$IFn$_invoke$arity$3 \x3d (function (s,start,end){\nreturn s.substring(start,end);\n}));\n\n(cljs.core.subs.cljs$lang$maxFixedArity \x3d 3);\n\n\n/**\n * Assumes x is sequential. Returns true if x equals y, otherwise\n *   returns false.\n */\ncljs.core.equiv_sequential \x3d (function cljs$core$equiv_sequential(x,y){\nreturn cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?((((cljs.core.counted_QMARK_(x)) \x26\x26 (((cljs.core.counted_QMARK_(y)) \x26\x26 ((!((cljs.core.count(x) \x3d\x3d\x3d cljs.core.count(y)))))))))?false:(function (){var xs \x3d cljs.core.seq(x);\nvar ys \x3d cljs.core.seq(y);\nwhile(true){\nif((xs \x3d\x3d null)){\nreturn (ys \x3d\x3d null);\n} else {\nif((ys \x3d\x3d null)){\nreturn false;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){\nvar G__12955 \x3d cljs.core.next(xs);\nvar G__12956 \x3d cljs.core.next(ys);\nxs \x3d G__12955;\nys \x3d G__12956;\ncontinue;\n} else {\nreturn false;\n\n}\n}\n}\nbreak;\n}\n})()):null));\n});\ncljs.core.hash_coll \x3d (function cljs$core$hash_coll(coll){\nif(cljs.core.seq(coll)){\nvar res \x3d cljs.core.hash(cljs.core.first(coll));\nvar s \x3d cljs.core.next(coll);\nwhile(true){\nif((s \x3d\x3d null)){\nreturn res;\n} else {\nvar G__12957 \x3d cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));\nvar G__12958 \x3d cljs.core.next(s);\nres \x3d G__12957;\ns \x3d G__12958;\ncontinue;\n}\nbreak;\n}\n} else {\nreturn (0);\n}\n});\n\ncljs.core.hash_imap \x3d (function cljs$core$hash_imap(m){\nvar h \x3d (0);\nvar s \x3d cljs.core.seq(m);\nwhile(true){\nif(s){\nvar e \x3d cljs.core.first(s);\nvar G__12959 \x3d ((h + (cljs.core.hash((cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null,e))) ^ cljs.core.hash((cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null,e))))) % (4503599627370496));\nvar G__12960 \x3d cljs.core.next(s);\nh \x3d G__12959;\ns \x3d G__12960;\ncontinue;\n} else {\nreturn h;\n}\nbreak;\n}\n});\ncljs.core.hash_iset \x3d (function cljs$core$hash_iset(s){\nvar h \x3d (0);\nvar s__$1 \x3d cljs.core.seq(s);\nwhile(true){\nif(s__$1){\nvar e \x3d cljs.core.first(s__$1);\nvar G__12961 \x3d ((h + cljs.core.hash(e)) % (4503599627370496));\nvar G__12962 \x3d cljs.core.next(s__$1);\nh \x3d G__12961;\ns__$1 \x3d G__12962;\ncontinue;\n} else {\nreturn h;\n}\nbreak;\n}\n});\n\n\n/**\n * Takes a JavaScript object and a map of names to functions and\n *   attaches said functions as methods on the object.  Any references to\n *   JavaScript\x27s implicit this (via the this-as macro) will resolve to the\n *   object that the function is attached.\n */\ncljs.core.extend_object_BANG_ \x3d (function cljs$core$extend_object_BANG_(obj,fn_map){\nvar seq__10098_12963 \x3d cljs.core.seq(fn_map);\nvar chunk__10099_12964 \x3d null;\nvar count__10100_12965 \x3d (0);\nvar i__10101_12966 \x3d (0);\nwhile(true){\nif((i__10101_12966 \x3c count__10100_12965)){\nvar vec__10108_12967 \x3d chunk__10099_12964.cljs$core$IIndexed$_nth$arity$2(null,i__10101_12966);\nvar key_name_12968 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10108_12967,(0),null);\nvar f_12969 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10108_12967,(1),null);\nvar str_name_12971 \x3d (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_12968) : cljs.core.name.call(null,key_name_12968));\ncljs.core.goog$module$goog$object.set(obj,str_name_12971,f_12969);\n\n\nvar G__12972 \x3d seq__10098_12963;\nvar G__12973 \x3d chunk__10099_12964;\nvar G__12974 \x3d count__10100_12965;\nvar G__12975 \x3d (i__10101_12966 + (1));\nseq__10098_12963 \x3d G__12972;\nchunk__10099_12964 \x3d G__12973;\ncount__10100_12965 \x3d G__12974;\ni__10101_12966 \x3d G__12975;\ncontinue;\n} else {\nvar temp__5804__auto___12976 \x3d cljs.core.seq(seq__10098_12963);\nif(temp__5804__auto___12976){\nvar seq__10098_12977__$1 \x3d temp__5804__auto___12976;\nif(cljs.core.chunked_seq_QMARK_(seq__10098_12977__$1)){\nvar c__5568__auto___12978 \x3d (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(seq__10098_12977__$1) : cljs.core.chunk_first.call(null,seq__10098_12977__$1));\nvar G__12979 \x3d (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(seq__10098_12977__$1) : cljs.core.chunk_rest.call(null,seq__10098_12977__$1));\nvar G__12980 \x3d c__5568__auto___12978;\nvar G__12981 \x3d cljs.core.count(c__5568__auto___12978);\nvar G__12982 \x3d (0);\nseq__10098_12963 \x3d G__12979;\nchunk__10099_12964 \x3d G__12980;\ncount__10100_12965 \x3d G__12981;\ni__10101_12966 \x3d G__12982;\ncontinue;\n} else {\nvar vec__10111_12983 \x3d cljs.core.first(seq__10098_12977__$1);\nvar key_name_12984 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10111_12983,(0),null);\nvar f_12985 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10111_12983,(1),null);\nvar str_name_12986 \x3d (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(key_name_12984) : cljs.core.name.call(null,key_name_12984));\ncljs.core.goog$module$goog$object.set(obj,str_name_12986,f_12985);\n\n\nvar G__12987 \x3d cljs.core.next(seq__10098_12977__$1);\nvar G__12988 \x3d null;\nvar G__12989 \x3d (0);\nvar G__12990 \x3d (0);\nseq__10098_12963 \x3d G__12987;\nchunk__10099_12964 \x3d G__12988;\ncount__10100_12965 \x3d G__12989;\ni__10101_12966 \x3d G__12990;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn obj;\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IList}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ASeq}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IStack}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.List \x3d (function (meta,first,rest,count,__hash){\nthis.meta \x3d meta;\nthis.first \x3d first;\nthis.rest \x3d rest;\nthis.count \x3d count;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 65937646;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\n});\n(cljs.core.List.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.List.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.List.prototype.indexOf \x3d (function() {\nvar G__12992 \x3d null;\nvar G__12992__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__12992__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__12992 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__12992__1.call(this,x);\ncase 2:\nreturn G__12992__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12992.cljs$core$IFn$_invoke$arity$1 \x3d G__12992__1;\nG__12992.cljs$core$IFn$_invoke$arity$2 \x3d G__12992__2;\nreturn G__12992;\n})()\n);\n\n(cljs.core.List.prototype.lastIndexOf \x3d (function() {\nvar G__12993 \x3d null;\nvar G__12993__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,self__.count);\n});\nvar G__12993__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__12993 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__12993__1.call(this,x);\ncase 2:\nreturn G__12993__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12993.cljs$core$IFn$_invoke$arity$1 \x3d G__12993__1;\nG__12993.cljs$core$IFn$_invoke$arity$2 \x3d G__12993__2;\nreturn G__12993;\n})()\n);\n\n(cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));\n}));\n\n(cljs.core.List.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.count \x3d\x3d\x3d (1))){\nreturn null;\n} else {\nreturn self__.rest;\n}\n}));\n\n(cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.count;\n}));\n\n(cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.first;\n}));\n\n(cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ISeq$_rest$arity$1(null);\n}));\n\n(cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);\n}));\n\n(cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\n}));\n\n(cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\n}));\n\n(cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.first;\n}));\n\n(cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.count \x3d\x3d\x3d (1))){\nreturn cljs.core.List.EMPTY;\n} else {\nreturn self__.rest;\n}\n}));\n\n(cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.List(new_meta,self__.first,self__.rest,self__.count,self__.__hash));\n}\n}));\n\n(cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));\n}));\n\n(cljs.core.List.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22first\x22,\x22first\x22,996428481,null),new cljs.core.Symbol(null,\x22rest\x22,\x22rest\x22,398835108,null),new cljs.core.Symbol(null,\x22count\x22,\x22count\x22,-514511684,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.List.cljs$lang$type \x3d true);\n\n(cljs.core.List.cljs$lang$ctorStr \x3d \x22cljs.core/List\x22);\n\n(cljs.core.List.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/List\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/List.\n */\ncljs.core.__GT_List \x3d (function cljs$core$__GT_List(meta,first,rest,count,__hash){\nreturn (new cljs.core.List(meta,first,rest,count,__hash));\n});\n\n/**\n * Returns true if x implements IList\n */\ncljs.core.list_QMARK_ \x3d (function cljs$core$list_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (33554432))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IList$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IList,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IList,x);\n}\n});\n(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n\n/**\n* @constructor\n * @implements {cljs.core.IList}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IStack}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.EmptyList \x3d (function (meta){\nthis.meta \x3d meta;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 65937614;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\n});\n(cljs.core.EmptyList.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.EmptyList.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.EmptyList.prototype.indexOf \x3d (function() {\nvar G__12996 \x3d null;\nvar G__12996__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__12996__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__12996 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__12996__1.call(this,x);\ncase 2:\nreturn G__12996__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12996.cljs$core$IFn$_invoke$arity$1 \x3d G__12996__1;\nG__12996.cljs$core$IFn$_invoke$arity$2 \x3d G__12996__2;\nreturn G__12996;\n})()\n);\n\n(cljs.core.EmptyList.prototype.lastIndexOf \x3d (function() {\nvar G__12997 \x3d null;\nvar G__12997__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__12997__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__12997 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__12997__1.call(this,x);\ncase 2:\nreturn G__12997__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__12997.cljs$core$IFn$_invoke$arity$1 \x3d G__12997__1;\nG__12997.cljs$core$IFn$_invoke$arity$2 \x3d G__12997__2;\nreturn G__12997;\n})()\n);\n\n(cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.EmptyList(self__.meta));\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (0);\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nthrow (new Error(\x22Can\x27t pop empty list\x22));\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.empty_ordered_hash;\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((cljs.core.list_QMARK_(other)) || (cljs.core.sequential_QMARK_(other)))){\nreturn (cljs.core.seq(other) \x3d\x3d null);\n} else {\nreturn false;\n}\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.EmptyList(new_meta));\n}\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.List(self__.meta,o,null,(1),null));\n}));\n\n(cljs.core.EmptyList.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null)], null);\n}));\n\n(cljs.core.EmptyList.cljs$lang$type \x3d true);\n\n(cljs.core.EmptyList.cljs$lang$ctorStr \x3d \x22cljs.core/EmptyList\x22);\n\n(cljs.core.EmptyList.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/EmptyList\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/EmptyList.\n */\ncljs.core.__GT_EmptyList \x3d (function cljs$core$__GT_EmptyList(meta){\nreturn (new cljs.core.EmptyList(meta));\n});\n\n(cljs.core.List.EMPTY \x3d (new cljs.core.EmptyList(null)));\n(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n/**\n * Returns true if coll satisfies? IReversible.\n */\ncljs.core.reversible_QMARK_ \x3d (function cljs$core$reversible_QMARK_(coll){\nif((!((coll \x3d\x3d null)))){\nif((((coll.cljs$lang$protocol_mask$partition0$ \x26 (134217728))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$IReversible$)))){\nreturn true;\n} else {\nif((!coll.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,coll);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,coll);\n}\n});\n/**\n * Returns, in constant time, a seq of the items in rev (which\n *   can be a vector or sorted-map), in reverse order. If rev is empty returns nil\n */\ncljs.core.rseq \x3d (function cljs$core$rseq(rev){\nreturn cljs.core._rseq(rev);\n});\n/**\n * Returns a seq of the items in coll in reverse order. Not lazy.\n */\ncljs.core.reverse \x3d (function cljs$core$reverse(coll){\nif(cljs.core.reversible_QMARK_(coll)){\nvar or__5045__auto__ \x3d cljs.core.rseq(coll);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.List.EMPTY;\n}\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);\n}\n});\n/**\n * Creates a new list containing the items.\n */\ncljs.core.list \x3d (function cljs$core$list(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___13026 \x3d arguments.length;\nvar i__5770__auto___13027 \x3d (0);\nwhile(true){\nif((i__5770__auto___13027 \x3c len__5769__auto___13026)){\nargs__5775__auto__.push((arguments[i__5770__auto___13027]));\n\nvar G__13028 \x3d (i__5770__auto___13027 + (1));\ni__5770__auto___13027 \x3d G__13028;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.list.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.list.cljs$core$IFn$_invoke$arity$variadic \x3d (function (xs){\nvar arr \x3d (((((xs instanceof cljs.core.IndexedSeq)) \x26\x26 ((xs.i \x3d\x3d\x3d (0)))))?xs.arr:(function (){var arr \x3d [];\nvar xs__$1 \x3d xs;\nwhile(true){\nif((!((xs__$1 \x3d\x3d null)))){\narr.push(cljs.core._first(xs__$1));\n\nvar G__13029 \x3d cljs.core._next(xs__$1);\nxs__$1 \x3d G__13029;\ncontinue;\n} else {\nreturn arr;\n}\nbreak;\n}\n})());\nvar i \x3d arr.length;\nvar r \x3d cljs.core.List.EMPTY;\nwhile(true){\nif((i \x3e (0))){\nvar G__13030 \x3d (i - (1));\nvar G__13031 \x3d cljs.core._conj(r,(arr[(i - (1))]));\ni \x3d G__13030;\nr \x3d G__13031;\ncontinue;\n} else {\nreturn r;\n}\nbreak;\n}\n}));\n\n(cljs.core.list.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.list.cljs$lang$applyTo \x3d (function (seq10116){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10116));\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IList}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ASeq}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.Cons \x3d (function (meta,first,rest,__hash){\nthis.meta \x3d meta;\nthis.first \x3d first;\nthis.rest \x3d rest;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 65929452;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\n});\n(cljs.core.Cons.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.Cons.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.Cons.prototype.indexOf \x3d (function() {\nvar G__13034 \x3d null;\nvar G__13034__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13034__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13034 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13034__1.call(this,x);\ncase 2:\nreturn G__13034__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13034.cljs$core$IFn$_invoke$arity$1 \x3d G__13034__1;\nG__13034.cljs$core$IFn$_invoke$arity$2 \x3d G__13034__2;\nreturn G__13034;\n})()\n);\n\n(cljs.core.Cons.prototype.lastIndexOf \x3d (function() {\nvar G__13035 \x3d null;\nvar G__13035__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__13035__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13035 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13035__1.call(this,x);\ncase 2:\nreturn G__13035__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13035.cljs$core$IFn$_invoke$arity$1 \x3d G__13035__1;\nG__13035.cljs$core$IFn$_invoke$arity$2 \x3d G__13035__2;\nreturn G__13035;\n})()\n);\n\n(cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));\n}));\n\n(cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.rest \x3d\x3d null)){\nreturn null;\n} else {\nreturn cljs.core.seq(self__.rest);\n}\n}));\n\n(cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\n}));\n\n(cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\n}));\n\n(cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.first;\n}));\n\n(cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.rest \x3d\x3d null)){\nreturn cljs.core.List.EMPTY;\n} else {\nreturn self__.rest;\n}\n}));\n\n(cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.Cons(new_meta,self__.first,self__.rest,self__.__hash));\n}\n}));\n\n(cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.Cons(null,o,coll__$1,null));\n}));\n\n(cljs.core.Cons.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22first\x22,\x22first\x22,996428481,null),new cljs.core.Symbol(null,\x22rest\x22,\x22rest\x22,398835108,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Cons.cljs$lang$type \x3d true);\n\n(cljs.core.Cons.cljs$lang$ctorStr \x3d \x22cljs.core/Cons\x22);\n\n(cljs.core.Cons.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Cons\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Cons.\n */\ncljs.core.__GT_Cons \x3d (function cljs$core$__GT_Cons(meta,first,rest,__hash){\nreturn (new cljs.core.Cons(meta,first,rest,__hash));\n});\n\n(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n/**\n * Returns a new seq where x is the first element and coll is the rest.\n */\ncljs.core.cons \x3d (function cljs$core$cons(x,coll){\nif((coll \x3d\x3d null)){\nreturn (new cljs.core.List(null,x,null,(1),null));\n} else {\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$ISeq$))))?true:false):false)){\nreturn (new cljs.core.Cons(null,x,coll,null));\n} else {\nreturn (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));\n\n}\n}\n});\ncljs.core.hash_keyword \x3d (function cljs$core$hash_keyword(k){\nreturn ((cljs.core.hash_symbol(k) + (2654435769)) | (0));\n});\ncljs.core.compare_keywords \x3d (function cljs$core$compare_keywords(a,b){\nif((a.fqn \x3d\x3d\x3d b.fqn)){\nreturn (0);\n} else {\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d cljs.core.not(a.ns);\nif(and__5043__auto__){\nreturn b.ns;\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn (-1);\n} else {\nif(cljs.core.truth_(a.ns)){\nif(cljs.core.not(b.ns)){\nreturn (1);\n} else {\nvar nsc \x3d cljs.core.goog$module$goog$array.defaultCompare(a.ns,b.ns);\nif(((0) \x3d\x3d\x3d nsc)){\nreturn cljs.core.goog$module$goog$array.defaultCompare(a.name,b.name);\n} else {\nreturn nsc;\n}\n}\n} else {\nreturn cljs.core.goog$module$goog$array.defaultCompare(a.name,b.name);\n\n}\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.INamed}\n * @implements {cljs.core.IPrintWithWriter}\n*/\ncljs.core.Keyword \x3d (function (ns,name,fqn,_hash){\nthis.ns \x3d ns;\nthis.name \x3d name;\nthis.fqn \x3d fqn;\nthis._hash \x3d _hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153775105;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 4096;\n});\n(cljs.core.Keyword.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn [\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(\x27\x27);\n}));\n\n(cljs.core.Keyword.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nif((other instanceof cljs.core.Keyword)){\nreturn (self__.fqn \x3d\x3d\x3d other.fqn);\n} else {\nreturn false;\n}\n}));\n\n(cljs.core.Keyword.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10119 \x3d (arguments.length - (1));\nswitch (G__10119) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.Keyword.prototype.apply \x3d (function (self__,args10118){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10118)));\n}));\n\n(cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar kw \x3d this;\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);\n}));\n\n(cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (coll,not_found){\nvar self__ \x3d this;\nvar kw \x3d this;\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);\n}));\n\n(cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar h__5154__auto__ \x3d self__._hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_keyword(this$__$1);\n(self__._hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.name;\n}));\n\n(cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.ns;\n}));\n\n(cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (o,writer,_){\nvar self__ \x3d this;\nvar o__$1 \x3d this;\nreturn cljs.core._write(writer,[\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fqn)].join(\x27\x27));\n}));\n\n(cljs.core.Keyword.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22ns\x22,\x22ns\x22,2082130287,null),new cljs.core.Symbol(null,\x22name\x22,\x22name\x22,-810760592,null),new cljs.core.Symbol(null,\x22fqn\x22,\x22fqn\x22,-1749334463,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_hash\x22,\x22_hash\x22,-2130838312,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Keyword.cljs$lang$type \x3d true);\n\n(cljs.core.Keyword.cljs$lang$ctorStr \x3d \x22cljs.core/Keyword\x22);\n\n(cljs.core.Keyword.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Keyword\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Keyword.\n */\ncljs.core.__GT_Keyword \x3d (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){\nreturn (new cljs.core.Keyword(ns,name,fqn,_hash));\n});\n\n/**\n * Return true if x is a Keyword\n */\ncljs.core.keyword_QMARK_ \x3d (function cljs$core$keyword_QMARK_(x){\nreturn (x instanceof cljs.core.Keyword);\n});\n/**\n * Efficient test to determine that two keywords are identical.\n */\ncljs.core.keyword_identical_QMARK_ \x3d (function cljs$core$keyword_identical_QMARK_(x,y){\nif((x \x3d\x3d\x3d y)){\nreturn true;\n} else {\nif((((x instanceof cljs.core.Keyword)) \x26\x26 ((y instanceof cljs.core.Keyword)))){\nreturn (x.fqn \x3d\x3d\x3d y.fqn);\n} else {\nreturn false;\n}\n}\n});\n/**\n * Efficient test to determine that two symbols are identical.\n */\ncljs.core.symbol_identical_QMARK_ \x3d (function cljs$core$symbol_identical_QMARK_(x,y){\nif((x \x3d\x3d\x3d y)){\nreturn true;\n} else {\nif((((x instanceof cljs.core.Symbol)) \x26\x26 ((y instanceof cljs.core.Symbol)))){\nreturn (x.str \x3d\x3d\x3d y.str);\n} else {\nreturn false;\n}\n}\n});\n/**\n * Returns the namespace String of a symbol or keyword, or nil if not present.\n */\ncljs.core.namespace \x3d (function cljs$core$namespace(x){\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition1$ \x26 (4096))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$INamed$))))?true:false):false)){\nreturn x.cljs$core$INamed$_namespace$arity$1(null);\n} else {\nthrow (new Error([\x22Doesn\x27t support namespace: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(\x27\x27)));\n}\n});\n/**\n * Return true if x is a symbol or keyword\n */\ncljs.core.ident_QMARK_ \x3d (function cljs$core$ident_QMARK_(x){\nreturn (((x instanceof cljs.core.Keyword)) || ((x instanceof cljs.core.Symbol)));\n});\n/**\n * Return true if x is a symbol or keyword without a namespace\n */\ncljs.core.simple_ident_QMARK_ \x3d (function cljs$core$simple_ident_QMARK_(x){\nreturn ((cljs.core.ident_QMARK_(x)) \x26\x26 ((cljs.core.namespace(x) \x3d\x3d null)));\n});\n/**\n * Return true if x is a symbol or keyword with a namespace\n */\ncljs.core.qualified_ident_QMARK_ \x3d (function cljs$core$qualified_ident_QMARK_(x){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d cljs.core.ident_QMARK_(x);\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d cljs.core.namespace(x);\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn true;\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\n/**\n * Return true if x is a symbol without a namespace\n */\ncljs.core.simple_symbol_QMARK_ \x3d (function cljs$core$simple_symbol_QMARK_(x){\nreturn (((x instanceof cljs.core.Symbol)) \x26\x26 ((cljs.core.namespace(x) \x3d\x3d null)));\n});\n/**\n * Return true if x is a symbol with a namespace\n */\ncljs.core.qualified_symbol_QMARK_ \x3d (function cljs$core$qualified_symbol_QMARK_(x){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d (x instanceof cljs.core.Symbol);\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d cljs.core.namespace(x);\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn true;\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\n/**\n * Return true if x is a keyword without a namespace\n */\ncljs.core.simple_keyword_QMARK_ \x3d (function cljs$core$simple_keyword_QMARK_(x){\nreturn (((x instanceof cljs.core.Keyword)) \x26\x26 ((cljs.core.namespace(x) \x3d\x3d null)));\n});\n/**\n * Return true if x is a keyword with a namespace\n */\ncljs.core.qualified_keyword_QMARK_ \x3d (function cljs$core$qualified_keyword_QMARK_(x){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d (x instanceof cljs.core.Keyword);\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d cljs.core.namespace(x);\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn true;\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\n/**\n * Returns a Keyword with the given namespace and name.  Do not use :\n *   in the keyword strings, it will be added automatically.\n */\ncljs.core.keyword \x3d (function cljs$core$keyword(var_args){\nvar G__10122 \x3d arguments.length;\nswitch (G__10122) {\ncase 1:\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.keyword.cljs$core$IFn$_invoke$arity$1 \x3d (function (name){\nif((name instanceof cljs.core.Keyword)){\nreturn name;\n} else {\nif((name instanceof cljs.core.Symbol)){\nreturn (new cljs.core.Keyword(cljs.core.namespace(name),(cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null,name)),name.str,null));\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22/\x22,name)){\nreturn (new cljs.core.Keyword(null,name,name,null));\n} else {\nif(typeof name \x3d\x3d\x3d \x27string\x27){\nvar parts \x3d name.split(\x22/\x22);\nif((parts.length \x3d\x3d\x3d (2))){\nreturn (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));\n} else {\nreturn (new cljs.core.Keyword(null,(parts[(0)]),name,null));\n}\n} else {\nreturn null;\n}\n}\n}\n}\n}));\n\n(cljs.core.keyword.cljs$core$IFn$_invoke$arity$2 \x3d (function (ns,name){\nvar ns__$1 \x3d (((ns instanceof cljs.core.Keyword))?(cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(ns) : cljs.core.name.call(null,ns)):(((ns instanceof cljs.core.Symbol))?(cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(ns) : cljs.core.name.call(null,ns)):ns\n));\nvar name__$1 \x3d (((name instanceof cljs.core.Keyword))?(cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null,name)):(((name instanceof cljs.core.Symbol))?(cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(name) : cljs.core.name.call(null,name)):name\n));\nreturn (new cljs.core.Keyword(ns__$1,name__$1,[(cljs.core.truth_(ns__$1)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns__$1),\x22/\x22].join(\x27\x27):null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name__$1)].join(\x27\x27),null));\n}));\n\n(cljs.core.keyword.cljs$lang$maxFixedArity \x3d 2);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IPending}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.LazySeq \x3d (function (meta,fn,s,__hash){\nthis.meta \x3d meta;\nthis.fn \x3d fn;\nthis.s \x3d s;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1;\n});\n(cljs.core.LazySeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.LazySeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.LazySeq.prototype.sval \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nif((self__.fn \x3d\x3d null)){\nreturn self__.s;\n} else {\n(self__.s \x3d (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null)));\n\n(self__.fn \x3d null);\n\nreturn self__.s;\n}\n}));\n\n(cljs.core.LazySeq.prototype.indexOf \x3d (function() {\nvar G__13052 \x3d null;\nvar G__13052__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13052__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13052 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13052__1.call(this,x);\ncase 2:\nreturn G__13052__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13052.cljs$core$IFn$_invoke$arity$1 \x3d G__13052__1;\nG__13052.cljs$core$IFn$_invoke$arity$2 \x3d G__13052__2;\nreturn G__13052;\n})()\n);\n\n(cljs.core.LazySeq.prototype.lastIndexOf \x3d (function() {\nvar G__13053 \x3d null;\nvar G__13053__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__13053__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13053 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13053__1.call(this,x);\ncase 2:\nreturn G__13053__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13053.cljs$core$IFn$_invoke$arity$1 \x3d G__13053__1;\nG__13053.cljs$core$IFn$_invoke$arity$2 \x3d G__13053__2;\nreturn G__13053;\n})()\n);\n\n(cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\ncoll__$1.cljs$core$ISeqable$_seq$arity$1(null);\n\nif((self__.s \x3d\x3d null)){\nreturn null;\n} else {\nreturn cljs.core.next(self__.s);\n}\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.not(self__.fn);\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\ncoll__$1.cljs$core$ISeqable$_seq$arity$1(null);\n\nif((self__.s \x3d\x3d null)){\nreturn null;\n} else {\nreturn cljs.core.first(self__.s);\n}\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\ncoll__$1.cljs$core$ISeqable$_seq$arity$1(null);\n\nif((!((self__.s \x3d\x3d null)))){\nreturn cljs.core.rest(self__.s);\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\ncoll__$1.sval();\n\nif((self__.s \x3d\x3d null)){\nreturn null;\n} else {\nvar ls \x3d self__.s;\nwhile(true){\nif((ls instanceof cljs.core.LazySeq)){\nvar G__13059 \x3d ls.sval();\nls \x3d G__13059;\ncontinue;\n} else {\n(self__.s \x3d ls);\n\nreturn cljs.core.seq(self__.s);\n}\nbreak;\n}\n}\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.LazySeq(new_meta,(function (){\nreturn coll__$1.cljs$core$ISeqable$_seq$arity$1(null);\n}),null,self__.__hash));\n}\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.LazySeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.LazySeq.cljs$lang$type \x3d true);\n\n(cljs.core.LazySeq.cljs$lang$ctorStr \x3d \x22cljs.core/LazySeq\x22);\n\n(cljs.core.LazySeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/LazySeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/LazySeq.\n */\ncljs.core.__GT_LazySeq \x3d (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){\nreturn (new cljs.core.LazySeq(meta,fn,s,__hash));\n});\n\n(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n\n/**\n* @constructor\n * @implements {cljs.core.ICounted}\n*/\ncljs.core.ChunkBuffer \x3d (function (buf,end){\nthis.buf \x3d buf;\nthis.end \x3d end;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.ChunkBuffer.prototype.add \x3d (function (o){\nvar self__ \x3d this;\nvar _ \x3d this;\n(self__.buf[self__.end] \x3d o);\n\nreturn (self__.end \x3d (self__.end + (1)));\n}));\n\n(cljs.core.ChunkBuffer.prototype.chunk \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar ret \x3d (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));\n(self__.buf \x3d null);\n\nreturn ret;\n}));\n\n(cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.end;\n}));\n\n(cljs.core.ChunkBuffer.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22buf\x22,\x22buf\x22,1426618187,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ChunkBuffer.cljs$lang$type \x3d true);\n\n(cljs.core.ChunkBuffer.cljs$lang$ctorStr \x3d \x22cljs.core/ChunkBuffer\x22);\n\n(cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ChunkBuffer\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ChunkBuffer.\n */\ncljs.core.__GT_ChunkBuffer \x3d (function cljs$core$__GT_ChunkBuffer(buf,end){\nreturn (new cljs.core.ChunkBuffer(buf,end));\n});\n\ncljs.core.chunk_buffer \x3d (function cljs$core$chunk_buffer(capacity){\nreturn (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.IChunk}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.ArrayChunk \x3d (function (arr,off,end){\nthis.arr \x3d arr;\nthis.off \x3d off;\nthis.end \x3d end;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 524306;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (self__.end - self__.off);\n}));\n\n(cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,i){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (self__.arr[(self__.off + i)]);\n}));\n\n(cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,i,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((((i \x3e\x3d (0))) \x26\x26 ((i \x3c (self__.end - self__.off))))){\nreturn (self__.arr[(self__.off + i)]);\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.off \x3d\x3d\x3d self__.end)){\nthrow (new Error(\x22-drop-first of empty chunk\x22));\n} else {\nreturn (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));\n}\n}));\n\n(cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));\n}));\n\n(cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);\n}));\n\n(cljs.core.ArrayChunk.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.Symbol(null,\x22off\x22,\x22off\x22,-2047994980,null),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null)], null);\n}));\n\n(cljs.core.ArrayChunk.cljs$lang$type \x3d true);\n\n(cljs.core.ArrayChunk.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayChunk\x22);\n\n(cljs.core.ArrayChunk.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ArrayChunk\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ArrayChunk.\n */\ncljs.core.__GT_ArrayChunk \x3d (function cljs$core$__GT_ArrayChunk(arr,off,end){\nreturn (new cljs.core.ArrayChunk(arr,off,end));\n});\n\ncljs.core.array_chunk \x3d (function cljs$core$array_chunk(var_args){\nvar G__10124 \x3d arguments.length;\nswitch (G__10124) {\ncase 1:\nreturn cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$1 \x3d (function (arr){\nreturn (new cljs.core.ArrayChunk(arr,(0),arr.length));\n}));\n\n(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2 \x3d (function (arr,off){\nreturn (new cljs.core.ArrayChunk(arr,off,arr.length));\n}));\n\n(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3 \x3d (function (arr,off,end){\nreturn (new cljs.core.ArrayChunk(arr,off,end));\n}));\n\n(cljs.core.array_chunk.cljs$lang$maxFixedArity \x3d 3);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ASeq}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IChunkedNext}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IChunkedSeq}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.core.ChunkedCons \x3d (function (chunk,more,meta,__hash){\nthis.chunk \x3d chunk;\nthis.more \x3d more;\nthis.meta \x3d meta;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 31850732;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1536;\n});\n(cljs.core.ChunkedCons.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.ChunkedCons.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.ChunkedCons.prototype.indexOf \x3d (function() {\nvar G__13061 \x3d null;\nvar G__13061__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13061__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13061 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13061__1.call(this,x);\ncase 2:\nreturn G__13061__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13061.cljs$core$IFn$_invoke$arity$1 \x3d G__13061__1;\nG__13061.cljs$core$IFn$_invoke$arity$2 \x3d G__13061__2;\nreturn G__13061;\n})()\n);\n\n(cljs.core.ChunkedCons.prototype.lastIndexOf \x3d (function() {\nvar G__13062 \x3d null;\nvar G__13062__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__13062__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13062 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13062__1.call(this,x);\ncase 2:\nreturn G__13062__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13062.cljs$core$IFn$_invoke$arity$1 \x3d G__13062__1;\nG__13062.cljs$core$IFn$_invoke$arity$2 \x3d G__13062__2;\nreturn G__13062;\n})()\n);\n\n(cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((cljs.core._count(self__.chunk) \x3e (1))){\nreturn (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,null,null));\n} else {\nif((self__.more \x3d\x3d null)){\nreturn null;\n} else {\nreturn cljs.core._seq(self__.more);\n}\n}\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._nth(self__.chunk,(0));\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((cljs.core._count(self__.chunk) \x3e (1))){\nreturn (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,null,null));\n} else {\nif((self__.more \x3d\x3d null)){\nreturn cljs.core.List.EMPTY;\n} else {\nreturn self__.more;\n}\n}\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.chunk;\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.more \x3d\x3d null)){\nreturn cljs.core.List.EMPTY;\n} else {\nreturn self__.more;\n}\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.ChunkedCons(self__.chunk,self__.more,new_meta,self__.__hash));\n}\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this$,o){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn cljs.core.cons(o,this$__$1);\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.more \x3d\x3d null)){\nreturn null;\n} else {\nreturn self__.more;\n}\n}));\n\n(cljs.core.ChunkedCons.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22chunk\x22,\x22chunk\x22,449371907,null),new cljs.core.Symbol(null,\x22more\x22,\x22more\x22,-418290273,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ChunkedCons.cljs$lang$type \x3d true);\n\n(cljs.core.ChunkedCons.cljs$lang$ctorStr \x3d \x22cljs.core/ChunkedCons\x22);\n\n(cljs.core.ChunkedCons.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ChunkedCons\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ChunkedCons.\n */\ncljs.core.__GT_ChunkedCons \x3d (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){\nreturn (new cljs.core.ChunkedCons(chunk,more,meta,__hash));\n});\n\n(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\ncljs.core.chunk_cons \x3d (function cljs$core$chunk_cons(chunk,rest){\nif((cljs.core._count(chunk) \x3d\x3d\x3d (0))){\nreturn rest;\n} else {\nreturn (new cljs.core.ChunkedCons(chunk,rest,null,null));\n}\n});\ncljs.core.chunk_append \x3d (function cljs$core$chunk_append(b,x){\nreturn b.add(x);\n});\ncljs.core.chunk \x3d (function cljs$core$chunk(b){\nreturn b.chunk();\n});\ncljs.core.chunk_first \x3d (function cljs$core$chunk_first(s){\nreturn cljs.core._chunked_first(s);\n});\ncljs.core.chunk_rest \x3d (function cljs$core$chunk_rest(s){\nreturn cljs.core._chunked_rest(s);\n});\ncljs.core.chunk_next \x3d (function cljs$core$chunk_next(s){\nif((((!((s \x3d\x3d null))))?(((((s.cljs$lang$protocol_mask$partition1$ \x26 (1024))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d s.cljs$core$IChunkedNext$))))?true:false):false)){\nreturn s.cljs$core$IChunkedNext$_chunked_next$arity$1(null);\n} else {\nreturn cljs.core.seq(cljs.core._chunked_rest(s));\n}\n});\n/**\n * Returns an array containing the contents of coll.\n */\ncljs.core.to_array \x3d (function cljs$core$to_array(coll){\nvar ary \x3d [];\nvar s \x3d cljs.core.seq(coll);\nwhile(true){\nif((!((s \x3d\x3d null)))){\nary.push(cljs.core.first(s));\n\nvar G__13067 \x3d cljs.core.next(s);\ns \x3d G__13067;\ncontinue;\n} else {\nreturn ary;\n}\nbreak;\n}\n});\n/**\n * Returns a (potentially-ragged) 2-dimensional array\n *   containing the contents of coll.\n */\ncljs.core.to_array_2d \x3d (function cljs$core$to_array_2d(coll){\nvar ret \x3d (new Array(cljs.core.count(coll)));\nvar i_13068 \x3d (0);\nvar xs_13069 \x3d cljs.core.seq(coll);\nwhile(true){\nif((xs_13069 \x3d\x3d null)){\n} else {\n(ret[i_13068] \x3d cljs.core.to_array(cljs.core.first(xs_13069)));\n\nvar G__13070 \x3d (i_13068 + (1));\nvar G__13071 \x3d cljs.core.next(xs_13069);\ni_13068 \x3d G__13070;\nxs_13069 \x3d G__13071;\ncontinue;\n}\nbreak;\n}\n\nreturn ret;\n});\n/**\n * Creates an array of ints. Does not coerce array, provided for compatibility\n *   with Clojure.\n */\ncljs.core.int_array \x3d (function cljs$core$int_array(var_args){\nvar G__10127 \x3d arguments.length;\nswitch (G__10127) {\ncase 1:\nreturn cljs.core.int_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.int_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.int_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (size_or_seq){\nif(typeof size_or_seq \x3d\x3d\x3d \x27number\x27){\nreturn cljs.core.int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);\n} else {\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);\n}\n}));\n\n(cljs.core.int_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (size,init_val_or_seq){\nvar a \x3d (new Array(size));\nif(cljs.core.seq_QMARK_(init_val_or_seq)){\nvar s \x3d cljs.core.seq(init_val_or_seq);\nvar i \x3d (0);\nvar s__$1 \x3d s;\nwhile(true){\nif(((s__$1) \x26\x26 ((i \x3c size)))){\n(a[i] \x3d cljs.core.first(s__$1));\n\nvar G__13074 \x3d (i + (1));\nvar G__13075 \x3d cljs.core.next(s__$1);\ni \x3d G__13074;\ns__$1 \x3d G__13075;\ncontinue;\n} else {\nreturn a;\n}\nbreak;\n}\n} else {\nvar n__5636__auto___13076 \x3d size;\nvar i_13077 \x3d (0);\nwhile(true){\nif((i_13077 \x3c n__5636__auto___13076)){\n(a[i_13077] \x3d init_val_or_seq);\n\nvar G__13078 \x3d (i_13077 + (1));\ni_13077 \x3d G__13078;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn a;\n}\n}));\n\n(cljs.core.int_array.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Creates an array of longs. Does not coerce array, provided for compatibility\n *   with Clojure.\n */\ncljs.core.long_array \x3d (function cljs$core$long_array(var_args){\nvar G__10129 \x3d arguments.length;\nswitch (G__10129) {\ncase 1:\nreturn cljs.core.long_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.long_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.long_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (size_or_seq){\nif(typeof size_or_seq \x3d\x3d\x3d \x27number\x27){\nreturn cljs.core.long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);\n} else {\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);\n}\n}));\n\n(cljs.core.long_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (size,init_val_or_seq){\nvar a \x3d (new Array(size));\nif(cljs.core.seq_QMARK_(init_val_or_seq)){\nvar s \x3d cljs.core.seq(init_val_or_seq);\nvar i \x3d (0);\nvar s__$1 \x3d s;\nwhile(true){\nif(((s__$1) \x26\x26 ((i \x3c size)))){\n(a[i] \x3d cljs.core.first(s__$1));\n\nvar G__13080 \x3d (i + (1));\nvar G__13081 \x3d cljs.core.next(s__$1);\ni \x3d G__13080;\ns__$1 \x3d G__13081;\ncontinue;\n} else {\nreturn a;\n}\nbreak;\n}\n} else {\nvar n__5636__auto___13082 \x3d size;\nvar i_13083 \x3d (0);\nwhile(true){\nif((i_13083 \x3c n__5636__auto___13082)){\n(a[i_13083] \x3d init_val_or_seq);\n\nvar G__13084 \x3d (i_13083 + (1));\ni_13083 \x3d G__13084;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn a;\n}\n}));\n\n(cljs.core.long_array.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Creates an array of doubles. Does not coerce array, provided for compatibility\n *   with Clojure.\n */\ncljs.core.double_array \x3d (function cljs$core$double_array(var_args){\nvar G__10131 \x3d arguments.length;\nswitch (G__10131) {\ncase 1:\nreturn cljs.core.double_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.double_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.double_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (size_or_seq){\nif(typeof size_or_seq \x3d\x3d\x3d \x27number\x27){\nreturn cljs.core.double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);\n} else {\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);\n}\n}));\n\n(cljs.core.double_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (size,init_val_or_seq){\nvar a \x3d (new Array(size));\nif(cljs.core.seq_QMARK_(init_val_or_seq)){\nvar s \x3d cljs.core.seq(init_val_or_seq);\nvar i \x3d (0);\nvar s__$1 \x3d s;\nwhile(true){\nif(((s__$1) \x26\x26 ((i \x3c size)))){\n(a[i] \x3d cljs.core.first(s__$1));\n\nvar G__13086 \x3d (i + (1));\nvar G__13087 \x3d cljs.core.next(s__$1);\ni \x3d G__13086;\ns__$1 \x3d G__13087;\ncontinue;\n} else {\nreturn a;\n}\nbreak;\n}\n} else {\nvar n__5636__auto___13088 \x3d size;\nvar i_13089 \x3d (0);\nwhile(true){\nif((i_13089 \x3c n__5636__auto___13088)){\n(a[i_13089] \x3d init_val_or_seq);\n\nvar G__13090 \x3d (i_13089 + (1));\ni_13089 \x3d G__13090;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn a;\n}\n}));\n\n(cljs.core.double_array.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Creates an array of objects. Does not coerce array, provided for compatibility\n *   with Clojure.\n */\ncljs.core.object_array \x3d (function cljs$core$object_array(var_args){\nvar G__10133 \x3d arguments.length;\nswitch (G__10133) {\ncase 1:\nreturn cljs.core.object_array.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.object_array.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.object_array.cljs$core$IFn$_invoke$arity$1 \x3d (function (size_or_seq){\nif(typeof size_or_seq \x3d\x3d\x3d \x27number\x27){\nreturn cljs.core.object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);\n} else {\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);\n}\n}));\n\n(cljs.core.object_array.cljs$core$IFn$_invoke$arity$2 \x3d (function (size,init_val_or_seq){\nvar a \x3d (new Array(size));\nif(cljs.core.seq_QMARK_(init_val_or_seq)){\nvar s \x3d cljs.core.seq(init_val_or_seq);\nvar i \x3d (0);\nvar s__$1 \x3d s;\nwhile(true){\nif(((s__$1) \x26\x26 ((i \x3c size)))){\n(a[i] \x3d cljs.core.first(s__$1));\n\nvar G__13095 \x3d (i + (1));\nvar G__13096 \x3d cljs.core.next(s__$1);\ni \x3d G__13095;\ns__$1 \x3d G__13096;\ncontinue;\n} else {\nreturn a;\n}\nbreak;\n}\n} else {\nvar n__5636__auto___13097 \x3d size;\nvar i_13098 \x3d (0);\nwhile(true){\nif((i_13098 \x3c n__5636__auto___13097)){\n(a[i_13098] \x3d init_val_or_seq);\n\nvar G__13099 \x3d (i_13098 + (1));\ni_13098 \x3d G__13099;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn a;\n}\n}));\n\n(cljs.core.object_array.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * If coll is counted? returns its count, else will count at most the first n\n * elements of coll using its seq\n */\ncljs.core.bounded_count \x3d (function cljs$core$bounded_count(n,coll){\nif(cljs.core.counted_QMARK_(coll)){\nreturn cljs.core.count(coll);\n} else {\nvar i \x3d (0);\nvar s \x3d cljs.core.seq(coll);\nwhile(true){\nif((((!((s \x3d\x3d null)))) \x26\x26 ((i \x3c n)))){\nvar G__13102 \x3d (i + (1));\nvar G__13103 \x3d cljs.core.next(s);\ni \x3d G__13102;\ns \x3d G__13103;\ncontinue;\n} else {\nreturn i;\n}\nbreak;\n}\n}\n});\ncljs.core.spread \x3d (function cljs$core$spread(arglist){\nif((arglist \x3d\x3d null)){\nreturn null;\n} else {\nvar n \x3d cljs.core.next(arglist);\nif((n \x3d\x3d null)){\nreturn cljs.core.seq(cljs.core.first(arglist));\n} else {\nreturn cljs.core.cons(cljs.core.first(arglist),(cljs.core.spread.cljs$core$IFn$_invoke$arity$1 ? cljs.core.spread.cljs$core$IFn$_invoke$arity$1(n) : cljs.core.spread.call(null,n)));\n}\n}\n});\n/**\n * Returns a lazy seq representing the concatenation of the elements in the supplied colls.\n */\ncljs.core.concat \x3d (function cljs$core$concat(var_args){\nvar G__10138 \x3d arguments.length;\nswitch (G__10138) {\ncase 0:\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13105 \x3d arguments.length;\nvar i__5770__auto___13106 \x3d (0);\nwhile(true){\nif((i__5770__auto___13106 \x3c len__5769__auto___13105)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13106]));\n\nvar G__13107 \x3d (i__5770__auto___13106 + (1));\ni__5770__auto___13106 \x3d G__13107;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.concat.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn null;\n}),null,null));\n}));\n\n(cljs.core.concat.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn x;\n}),null,null));\n}));\n\n(cljs.core.concat.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s \x3d cljs.core.seq(x);\nif(s){\nif(cljs.core.chunked_seq_QMARK_(s)){\nreturn cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));\n} else {\nreturn cljs.core.cons(cljs.core.first(s),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));\n}\n} else {\nreturn y;\n}\n}),null,null));\n}));\n\n(cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,zs){\nvar cat \x3d (function cljs$core$cat(xys,zs__$1){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar xys__$1 \x3d cljs.core.seq(xys);\nif(xys__$1){\nif(cljs.core.chunked_seq_QMARK_(xys__$1)){\nreturn cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$cat(cljs.core.chunk_rest(xys__$1),zs__$1));\n} else {\nreturn cljs.core.cons(cljs.core.first(xys__$1),cljs$core$cat(cljs.core.rest(xys__$1),zs__$1));\n}\n} else {\nif(cljs.core.truth_(zs__$1)){\nreturn cljs$core$cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));\n} else {\nreturn null;\n}\n}\n}),null,null));\n});\nreturn cat(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);\n}));\n\n/** @this {Function} */\n(cljs.core.concat.cljs$lang$applyTo \x3d (function (seq10135){\nvar G__10136 \x3d cljs.core.first(seq10135);\nvar seq10135__$1 \x3d cljs.core.next(seq10135);\nvar G__10137 \x3d cljs.core.first(seq10135__$1);\nvar seq10135__$2 \x3d cljs.core.next(seq10135__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10136,G__10137,seq10135__$2);\n}));\n\n(cljs.core.concat.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Creates a new list containing the items prepended to the rest, the\n *   last of which will be treated as a sequence.\n */\ncljs.core.list_STAR_ \x3d (function cljs$core$list_STAR_(var_args){\nvar G__10145 \x3d arguments.length;\nswitch (G__10145) {\ncase 1:\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13115 \x3d arguments.length;\nvar i__5770__auto___13116 \x3d (0);\nwhile(true){\nif((i__5770__auto___13116 \x3c len__5769__auto___13115)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13116]));\n\nvar G__13117 \x3d (i__5770__auto___13116 + (1));\ni__5770__auto___13116 \x3d G__13117;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((4)),(0),null));\nreturn cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$1 \x3d (function (args){\nreturn cljs.core.seq(args);\n}));\n\n(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,args){\nreturn cljs.core.cons(a,args);\n}));\n\n(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,args){\nreturn cljs.core.cons(a,cljs.core.cons(b,args));\n}));\n\n(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,b,c,args){\nreturn cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));\n}));\n\n(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (a,b,c,d,more){\nreturn cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));\n}));\n\n/** @this {Function} */\n(cljs.core.list_STAR_.cljs$lang$applyTo \x3d (function (seq10140){\nvar G__10141 \x3d cljs.core.first(seq10140);\nvar seq10140__$1 \x3d cljs.core.next(seq10140);\nvar G__10142 \x3d cljs.core.first(seq10140__$1);\nvar seq10140__$2 \x3d cljs.core.next(seq10140__$1);\nvar G__10143 \x3d cljs.core.first(seq10140__$2);\nvar seq10140__$3 \x3d cljs.core.next(seq10140__$2);\nvar G__10144 \x3d cljs.core.first(seq10140__$3);\nvar seq10140__$4 \x3d cljs.core.next(seq10140__$3);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10141,G__10142,G__10143,G__10144,seq10140__$4);\n}));\n\n(cljs.core.list_STAR_.cljs$lang$maxFixedArity \x3d (4));\n\n/**\n * Returns a new, transient version of the collection, in constant time.\n */\ncljs.core.transient$ \x3d (function cljs$core$transient(coll){\nreturn cljs.core._as_transient(coll);\n});\n/**\n * Returns a new, persistent version of the transient collection, in\n *   constant time. The transient collection cannot be used after this\n *   call, any such use will throw an exception.\n */\ncljs.core.persistent_BANG_ \x3d (function cljs$core$persistent_BANG_(tcoll){\nreturn cljs.core._persistent_BANG_(tcoll);\n});\n/**\n * Adds val to the transient collection, and return tcoll. The \x27addition\x27\n *   may happen at different \x27places\x27 depending on the concrete type.\n */\ncljs.core.conj_BANG_ \x3d (function cljs$core$conj_BANG_(var_args){\nvar G__10150 \x3d arguments.length;\nswitch (G__10150) {\ncase 0:\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13123 \x3d arguments.length;\nvar i__5770__auto___13124 \x3d (0);\nwhile(true){\nif((i__5770__auto___13124 \x3c len__5769__auto___13123)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13124]));\n\nvar G__13125 \x3d (i__5770__auto___13124 + (1));\ni__5770__auto___13124 \x3d G__13125;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.transient$(cljs.core.PersistentVector.EMPTY);\n}));\n\n(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$1 \x3d (function (tcoll){\nreturn tcoll;\n}));\n\n(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (tcoll,val){\nreturn cljs.core._conj_BANG_(tcoll,val);\n}));\n\n(cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (tcoll,val,vals){\nwhile(true){\nvar ntcoll \x3d cljs.core._conj_BANG_(tcoll,val);\nif(cljs.core.truth_(vals)){\nvar G__13126 \x3d ntcoll;\nvar G__13127 \x3d cljs.core.first(vals);\nvar G__13128 \x3d cljs.core.next(vals);\ntcoll \x3d G__13126;\nval \x3d G__13127;\nvals \x3d G__13128;\ncontinue;\n} else {\nreturn ntcoll;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.conj_BANG_.cljs$lang$applyTo \x3d (function (seq10147){\nvar G__10148 \x3d cljs.core.first(seq10147);\nvar seq10147__$1 \x3d cljs.core.next(seq10147);\nvar G__10149 \x3d cljs.core.first(seq10147__$1);\nvar seq10147__$2 \x3d cljs.core.next(seq10147__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10148,G__10149,seq10147__$2);\n}));\n\n(cljs.core.conj_BANG_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * When applied to a transient map, adds mapping of key(s) to\n *   val(s). When applied to a transient vector, sets the val at index.\n *   Note - index must be \x3c\x3d (count vector). Returns coll.\n */\ncljs.core.assoc_BANG_ \x3d (function cljs$core$assoc_BANG_(var_args){\nvar G__10156 \x3d arguments.length;\nswitch (G__10156) {\ncase 3:\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13130 \x3d arguments.length;\nvar i__5770__auto___13131 \x3d (0);\nwhile(true){\nif((i__5770__auto___13131 \x3c len__5769__auto___13130)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13131]));\n\nvar G__13132 \x3d (i__5770__auto___13131 + (1));\ni__5770__auto___13131 \x3d G__13132;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3 \x3d (function (tcoll,key,val){\nreturn cljs.core._assoc_BANG_(tcoll,key,val);\n}));\n\n(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (tcoll,key,val,kvs){\nwhile(true){\nvar ntcoll \x3d cljs.core._assoc_BANG_(tcoll,key,val);\nif(cljs.core.truth_(kvs)){\nvar G__13133 \x3d ntcoll;\nvar G__13134 \x3d cljs.core.first(kvs);\nvar G__13135 \x3d cljs.core.second(kvs);\nvar G__13136 \x3d cljs.core.nnext(kvs);\ntcoll \x3d G__13133;\nkey \x3d G__13134;\nval \x3d G__13135;\nkvs \x3d G__13136;\ncontinue;\n} else {\nreturn ntcoll;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.assoc_BANG_.cljs$lang$applyTo \x3d (function (seq10152){\nvar G__10153 \x3d cljs.core.first(seq10152);\nvar seq10152__$1 \x3d cljs.core.next(seq10152);\nvar G__10154 \x3d cljs.core.first(seq10152__$1);\nvar seq10152__$2 \x3d cljs.core.next(seq10152__$1);\nvar G__10155 \x3d cljs.core.first(seq10152__$2);\nvar seq10152__$3 \x3d cljs.core.next(seq10152__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10153,G__10154,G__10155,seq10152__$3);\n}));\n\n(cljs.core.assoc_BANG_.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * Returns a transient map that doesn\x27t contain a mapping for key(s).\n */\ncljs.core.dissoc_BANG_ \x3d (function cljs$core$dissoc_BANG_(var_args){\nvar G__10161 \x3d arguments.length;\nswitch (G__10161) {\ncase 2:\nreturn cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13138 \x3d arguments.length;\nvar i__5770__auto___13139 \x3d (0);\nwhile(true){\nif((i__5770__auto___13139 \x3c len__5769__auto___13138)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13139]));\n\nvar G__13141 \x3d (i__5770__auto___13139 + (1));\ni__5770__auto___13139 \x3d G__13141;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (tcoll,key){\nreturn cljs.core._dissoc_BANG_(tcoll,key);\n}));\n\n(cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (tcoll,key,ks){\nwhile(true){\nvar ntcoll \x3d cljs.core._dissoc_BANG_(tcoll,key);\nif(cljs.core.truth_(ks)){\nvar G__13145 \x3d ntcoll;\nvar G__13146 \x3d cljs.core.first(ks);\nvar G__13147 \x3d cljs.core.next(ks);\ntcoll \x3d G__13145;\nkey \x3d G__13146;\nks \x3d G__13147;\ncontinue;\n} else {\nreturn ntcoll;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.dissoc_BANG_.cljs$lang$applyTo \x3d (function (seq10158){\nvar G__10159 \x3d cljs.core.first(seq10158);\nvar seq10158__$1 \x3d cljs.core.next(seq10158);\nvar G__10160 \x3d cljs.core.first(seq10158__$1);\nvar seq10158__$2 \x3d cljs.core.next(seq10158__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10159,G__10160,seq10158__$2);\n}));\n\n(cljs.core.dissoc_BANG_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Removes the last item from a transient vector. If\n *   the collection is empty, throws an exception. Returns tcoll\n */\ncljs.core.pop_BANG_ \x3d (function cljs$core$pop_BANG_(tcoll){\nreturn cljs.core._pop_BANG_(tcoll);\n});\n/**\n * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that\n *   does not contain key(s).\n */\ncljs.core.disj_BANG_ \x3d (function cljs$core$disj_BANG_(var_args){\nvar G__10166 \x3d arguments.length;\nswitch (G__10166) {\ncase 2:\nreturn cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13149 \x3d arguments.length;\nvar i__5770__auto___13150 \x3d (0);\nwhile(true){\nif((i__5770__auto___13150 \x3c len__5769__auto___13149)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13150]));\n\nvar G__13151 \x3d (i__5770__auto___13150 + (1));\ni__5770__auto___13150 \x3d G__13151;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (tcoll,val){\nreturn cljs.core._disjoin_BANG_(tcoll,val);\n}));\n\n(cljs.core.disj_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (tcoll,val,vals){\nwhile(true){\nvar ntcoll \x3d cljs.core._disjoin_BANG_(tcoll,val);\nif(cljs.core.truth_(vals)){\nvar G__13152 \x3d ntcoll;\nvar G__13153 \x3d cljs.core.first(vals);\nvar G__13154 \x3d cljs.core.next(vals);\ntcoll \x3d G__13152;\nval \x3d G__13153;\nvals \x3d G__13154;\ncontinue;\n} else {\nreturn ntcoll;\n}\nbreak;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.disj_BANG_.cljs$lang$applyTo \x3d (function (seq10163){\nvar G__10164 \x3d cljs.core.first(seq10163);\nvar seq10163__$1 \x3d cljs.core.next(seq10163);\nvar G__10165 \x3d cljs.core.first(seq10163__$1);\nvar seq10163__$2 \x3d cljs.core.next(seq10163__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10164,G__10165,seq10163__$2);\n}));\n\n(cljs.core.disj_BANG_.cljs$lang$maxFixedArity \x3d (2));\n\n\ncljs.core.apply_to \x3d (function cljs$core$apply_to(f,argc,args){\nvar args__$1 \x3d cljs.core.seq(args);\nif((argc \x3d\x3d\x3d (0))){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar a1 \x3d cljs.core._first(args__$1);\nvar args__$2 \x3d cljs.core._rest(args__$1);\nif((argc \x3d\x3d\x3d (1))){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(a1) : f.call(null,a1));\n} else {\nvar b2 \x3d cljs.core._first(args__$2);\nvar args__$3 \x3d cljs.core._rest(args__$2);\nif((argc \x3d\x3d\x3d (2))){\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(a1,b2) : f.call(null,a1,b2));\n} else {\nvar c3 \x3d cljs.core._first(args__$3);\nvar args__$4 \x3d cljs.core._rest(args__$3);\nif((argc \x3d\x3d\x3d (3))){\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(a1,b2,c3) : f.call(null,a1,b2,c3));\n} else {\nvar d4 \x3d cljs.core._first(args__$4);\nvar args__$5 \x3d cljs.core._rest(args__$4);\nif((argc \x3d\x3d\x3d (4))){\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(a1,b2,c3,d4) : f.call(null,a1,b2,c3,d4));\n} else {\nvar e5 \x3d cljs.core._first(args__$5);\nvar args__$6 \x3d cljs.core._rest(args__$5);\nif((argc \x3d\x3d\x3d (5))){\nreturn (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(a1,b2,c3,d4,e5) : f.call(null,a1,b2,c3,d4,e5));\n} else {\nvar f6 \x3d cljs.core._first(args__$6);\nvar args__$7 \x3d cljs.core._rest(args__$6);\nif((argc \x3d\x3d\x3d (6))){\nreturn (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(a1,b2,c3,d4,e5,f6) : f.call(null,a1,b2,c3,d4,e5,f6));\n} else {\nvar g7 \x3d cljs.core._first(args__$7);\nvar args__$8 \x3d cljs.core._rest(args__$7);\nif((argc \x3d\x3d\x3d (7))){\nreturn (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(a1,b2,c3,d4,e5,f6,g7) : f.call(null,a1,b2,c3,d4,e5,f6,g7));\n} else {\nvar h8 \x3d cljs.core._first(args__$8);\nvar args__$9 \x3d cljs.core._rest(args__$8);\nif((argc \x3d\x3d\x3d (8))){\nreturn (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(a1,b2,c3,d4,e5,f6,g7,h8) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8));\n} else {\nvar i9 \x3d cljs.core._first(args__$9);\nvar args__$10 \x3d cljs.core._rest(args__$9);\nif((argc \x3d\x3d\x3d (9))){\nreturn (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(a1,b2,c3,d4,e5,f6,g7,h8,i9) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9));\n} else {\nvar j10 \x3d cljs.core._first(args__$10);\nvar args__$11 \x3d cljs.core._rest(args__$10);\nif((argc \x3d\x3d\x3d (10))){\nreturn (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10));\n} else {\nvar k11 \x3d cljs.core._first(args__$11);\nvar args__$12 \x3d cljs.core._rest(args__$11);\nif((argc \x3d\x3d\x3d (11))){\nreturn (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11));\n} else {\nvar l12 \x3d cljs.core._first(args__$12);\nvar args__$13 \x3d cljs.core._rest(args__$12);\nif((argc \x3d\x3d\x3d (12))){\nreturn (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12));\n} else {\nvar m13 \x3d cljs.core._first(args__$13);\nvar args__$14 \x3d cljs.core._rest(args__$13);\nif((argc \x3d\x3d\x3d (13))){\nreturn (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13));\n} else {\nvar n14 \x3d cljs.core._first(args__$14);\nvar args__$15 \x3d cljs.core._rest(args__$14);\nif((argc \x3d\x3d\x3d (14))){\nreturn (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14));\n} else {\nvar o15 \x3d cljs.core._first(args__$15);\nvar args__$16 \x3d cljs.core._rest(args__$15);\nif((argc \x3d\x3d\x3d (15))){\nreturn (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15));\n} else {\nvar p16 \x3d cljs.core._first(args__$16);\nvar args__$17 \x3d cljs.core._rest(args__$16);\nif((argc \x3d\x3d\x3d (16))){\nreturn (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16));\n} else {\nvar q17 \x3d cljs.core._first(args__$17);\nvar args__$18 \x3d cljs.core._rest(args__$17);\nif((argc \x3d\x3d\x3d (17))){\nreturn (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17));\n} else {\nvar r18 \x3d cljs.core._first(args__$18);\nvar args__$19 \x3d cljs.core._rest(args__$18);\nif((argc \x3d\x3d\x3d (18))){\nreturn (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18));\n} else {\nvar s19 \x3d cljs.core._first(args__$19);\nvar args__$20 \x3d cljs.core._rest(args__$19);\nif((argc \x3d\x3d\x3d (19))){\nreturn (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18,s19) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18,s19));\n} else {\nvar t20 \x3d cljs.core._first(args__$20);\nvar args__$21 \x3d cljs.core._rest(args__$20);\nif((argc \x3d\x3d\x3d (20))){\nreturn (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18,s19,t20) : f.call(null,a1,b2,c3,d4,e5,f6,g7,h8,i9,j10,k11,l12,m13,n14,o15,p16,q17,r18,s19,t20));\n} else {\nthrow (new Error(\x22Only up to 20 arguments supported on functions\x22));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\n\n/**\n * Internal. DO NOT USE! Next without the nil? check.\n */\ncljs.core.next_STAR_ \x3d (function cljs$core$next_STAR_(coll){\nif((((!((coll \x3d\x3d null))))?(((((coll.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d coll.cljs$core$INext$))))?true:false):false)){\nreturn coll.cljs$core$INext$_next$arity$1(null);\n} else {\nreturn cljs.core.seq(cljs.core.rest(coll));\n}\n});\n/**\n * Internal. DO NOT USE!\n *   Assumes args was already called with seq beforehand!\n */\ncljs.core.apply_to_simple \x3d (function cljs$core$apply_to_simple(var_args){\nvar G__10169 \x3d arguments.length;\nswitch (G__10169) {\ncase 2:\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase 6:\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,args){\nif((args \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$0){\nreturn f.cljs$core$IFn$_invoke$arity$0();\n} else {\nreturn f.call(f);\n}\n} else {\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f,cljs.core._first(args),cljs.core.next_STAR_(args));\n}\n}));\n\n(cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,a0,args){\nif((args \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$1){\nreturn f.cljs$core$IFn$_invoke$arity$1(a0);\n} else {\nreturn f.call(f,a0);\n}\n} else {\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f,a0,cljs.core._first(args),cljs.core.next_STAR_(args));\n}\n}));\n\n(cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,a0,a1,args){\nif((args \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$2){\nreturn f.cljs$core$IFn$_invoke$arity$2(a0,a1);\n} else {\nreturn f.call(f,a0,a1);\n}\n} else {\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f,a0,a1,cljs.core._first(args),cljs.core.next_STAR_(args));\n}\n}));\n\n(cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5 \x3d (function (f,a0,a1,a2,args){\nif((args \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$3){\nreturn f.cljs$core$IFn$_invoke$arity$3(a0,a1,a2);\n} else {\nreturn f.call(f,a0,a1,a2);\n}\n} else {\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f,a0,a1,a2,cljs.core._first(args),cljs.core.next_STAR_(args));\n}\n}));\n\n(cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6 \x3d (function (f,a0,a1,a2,a3,args){\nif((args \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$4){\nreturn f.cljs$core$IFn$_invoke$arity$4(a0,a1,a2,a3);\n} else {\nreturn f.call(f,a0,a1,a2,a3);\n}\n} else {\nvar a4 \x3d cljs.core._first(args);\nvar next_4 \x3d cljs.core.next(args);\nif((next_4 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$5){\nreturn f.cljs$core$IFn$_invoke$arity$5(a0,a1,a2,a3,a4);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4);\n}\n} else {\nvar a5 \x3d cljs.core._first(next_4);\nvar next_5 \x3d cljs.core.next(next_4);\nif((next_5 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$6){\nreturn f.cljs$core$IFn$_invoke$arity$6(a0,a1,a2,a3,a4,a5);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5);\n}\n} else {\nvar a6 \x3d cljs.core._first(next_5);\nvar next_6 \x3d cljs.core.next(next_5);\nif((next_6 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$7){\nreturn f.cljs$core$IFn$_invoke$arity$7(a0,a1,a2,a3,a4,a5,a6);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6);\n}\n} else {\nvar a7 \x3d cljs.core._first(next_6);\nvar next_7 \x3d cljs.core.next(next_6);\nif((next_7 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$8){\nreturn f.cljs$core$IFn$_invoke$arity$8(a0,a1,a2,a3,a4,a5,a6,a7);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7);\n}\n} else {\nvar a8 \x3d cljs.core._first(next_7);\nvar next_8 \x3d cljs.core.next(next_7);\nif((next_8 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$9){\nreturn f.cljs$core$IFn$_invoke$arity$9(a0,a1,a2,a3,a4,a5,a6,a7,a8);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8);\n}\n} else {\nvar a9 \x3d cljs.core._first(next_8);\nvar next_9 \x3d cljs.core.next(next_8);\nif((next_9 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$10){\nreturn f.cljs$core$IFn$_invoke$arity$10(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9);\n}\n} else {\nvar a10 \x3d cljs.core._first(next_9);\nvar next_10 \x3d cljs.core.next(next_9);\nif((next_10 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$11){\nreturn f.cljs$core$IFn$_invoke$arity$11(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10);\n}\n} else {\nvar a11 \x3d cljs.core._first(next_10);\nvar next_11 \x3d cljs.core.next(next_10);\nif((next_11 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$12){\nreturn f.cljs$core$IFn$_invoke$arity$12(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11);\n}\n} else {\nvar a12 \x3d cljs.core._first(next_11);\nvar next_12 \x3d cljs.core.next(next_11);\nif((next_12 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$13){\nreturn f.cljs$core$IFn$_invoke$arity$13(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12);\n}\n} else {\nvar a13 \x3d cljs.core._first(next_12);\nvar next_13 \x3d cljs.core.next(next_12);\nif((next_13 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$14){\nreturn f.cljs$core$IFn$_invoke$arity$14(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13);\n}\n} else {\nvar a14 \x3d cljs.core._first(next_13);\nvar next_14 \x3d cljs.core.next(next_13);\nif((next_14 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$15){\nreturn f.cljs$core$IFn$_invoke$arity$15(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14);\n}\n} else {\nvar a15 \x3d cljs.core._first(next_14);\nvar next_15 \x3d cljs.core.next(next_14);\nif((next_15 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$16){\nreturn f.cljs$core$IFn$_invoke$arity$16(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15);\n}\n} else {\nvar a16 \x3d cljs.core._first(next_15);\nvar next_16 \x3d cljs.core.next(next_15);\nif((next_16 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$17){\nreturn f.cljs$core$IFn$_invoke$arity$17(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16);\n}\n} else {\nvar a17 \x3d cljs.core._first(next_16);\nvar next_17 \x3d cljs.core.next(next_16);\nif((next_17 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$18){\nreturn f.cljs$core$IFn$_invoke$arity$18(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17);\n}\n} else {\nvar a18 \x3d cljs.core._first(next_17);\nvar next_18 \x3d cljs.core.next(next_17);\nif((next_18 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$19){\nreturn f.cljs$core$IFn$_invoke$arity$19(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18);\n}\n} else {\nvar a19 \x3d cljs.core._first(next_18);\nvar next_19 \x3d cljs.core.next(next_18);\nif((next_19 \x3d\x3d null)){\nif(f.cljs$core$IFn$_invoke$arity$20){\nreturn f.cljs$core$IFn$_invoke$arity$20(a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19);\n} else {\nreturn f.call(f,a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19);\n}\n} else {\nvar arr__5684__auto__ \x3d [a0,a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14,a15,a16,a17,a18,a19];\nvar s__5685__auto___13179 \x3d next_19;\nwhile(true){\nif(s__5685__auto___13179){\narr__5684__auto__.push(cljs.core._first(s__5685__auto___13179));\n\nvar G__13180 \x3d cljs.core.next(s__5685__auto___13179);\ns__5685__auto___13179 \x3d G__13180;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn f.apply(f,arr__5684__auto__);\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(cljs.core.apply_to_simple.cljs$lang$maxFixedArity \x3d 6);\n\n/**\n * Applies fn f to the argument list formed by prepending intervening arguments to args.\n */\ncljs.core.apply \x3d (function cljs$core$apply(var_args){\nvar G__10177 \x3d arguments.length;\nswitch (G__10177) {\ncase 2:\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13182 \x3d arguments.length;\nvar i__5770__auto___13183 \x3d (0);\nwhile(true){\nif((i__5770__auto___13183 \x3c len__5769__auto___13182)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13183]));\n\nvar G__13184 \x3d (i__5770__auto___13183 + (1));\ni__5770__auto___13183 \x3d G__13184;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((5)),(0),null));\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.apply.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,args){\nif(f.cljs$lang$applyTo){\nvar fixed_arity \x3d f.cljs$lang$maxFixedArity;\nvar bc \x3d cljs.core.bounded_count((fixed_arity + (1)),args);\nif((bc \x3c\x3d fixed_arity)){\nreturn cljs.core.apply_to(f,bc,args);\n} else {\nreturn f.cljs$lang$applyTo(args);\n}\n} else {\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(args));\n}\n}));\n\n(cljs.core.apply.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,x,args){\nif(f.cljs$lang$applyTo){\nvar arglist \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);\nvar fixed_arity \x3d f.cljs$lang$maxFixedArity;\nvar bc \x3d (cljs.core.bounded_count(fixed_arity,args) + (1));\nif((bc \x3c\x3d fixed_arity)){\nreturn cljs.core.apply_to(f,bc,arglist);\n} else {\nreturn f.cljs$lang$applyTo(arglist);\n}\n} else {\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$3(f,x,cljs.core.seq(args));\n}\n}));\n\n(cljs.core.apply.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,x,y,args){\nif(f.cljs$lang$applyTo){\nvar arglist \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);\nvar fixed_arity \x3d f.cljs$lang$maxFixedArity;\nvar bc \x3d ((2) + cljs.core.bounded_count((fixed_arity - (1)),args));\nif((bc \x3c\x3d fixed_arity)){\nreturn cljs.core.apply_to(f,bc,arglist);\n} else {\nreturn f.cljs$lang$applyTo(arglist);\n}\n} else {\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$4(f,x,y,cljs.core.seq(args));\n}\n}));\n\n(cljs.core.apply.cljs$core$IFn$_invoke$arity$5 \x3d (function (f,x,y,z,args){\nif(f.cljs$lang$applyTo){\nvar arglist \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);\nvar fixed_arity \x3d f.cljs$lang$maxFixedArity;\nvar bc \x3d ((3) + cljs.core.bounded_count((fixed_arity - (2)),args));\nif((bc \x3c\x3d fixed_arity)){\nreturn cljs.core.apply_to(f,bc,arglist);\n} else {\nreturn f.cljs$lang$applyTo(arglist);\n}\n} else {\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$5(f,x,y,z,cljs.core.seq(args));\n}\n}));\n\n(cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,a,b,c,d,args){\nif(f.cljs$lang$applyTo){\nvar spread_args \x3d cljs.core.spread(args);\nvar arglist \x3d cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,spread_args))));\nvar fixed_arity \x3d f.cljs$lang$maxFixedArity;\nvar bc \x3d ((4) + cljs.core.bounded_count((fixed_arity - (3)),spread_args));\nif((bc \x3c\x3d fixed_arity)){\nreturn cljs.core.apply_to(f,bc,arglist);\n} else {\nreturn f.cljs$lang$applyTo(arglist);\n}\n} else {\nreturn cljs.core.apply_to_simple.cljs$core$IFn$_invoke$arity$6(f,a,b,c,d,cljs.core.spread(args));\n}\n}));\n\n/** @this {Function} */\n(cljs.core.apply.cljs$lang$applyTo \x3d (function (seq10171){\nvar G__10172 \x3d cljs.core.first(seq10171);\nvar seq10171__$1 \x3d cljs.core.next(seq10171);\nvar G__10173 \x3d cljs.core.first(seq10171__$1);\nvar seq10171__$2 \x3d cljs.core.next(seq10171__$1);\nvar G__10174 \x3d cljs.core.first(seq10171__$2);\nvar seq10171__$3 \x3d cljs.core.next(seq10171__$2);\nvar G__10175 \x3d cljs.core.first(seq10171__$3);\nvar seq10171__$4 \x3d cljs.core.next(seq10171__$3);\nvar G__10176 \x3d cljs.core.first(seq10171__$4);\nvar seq10171__$5 \x3d cljs.core.next(seq10171__$4);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10172,G__10173,G__10174,G__10175,G__10176,seq10171__$5);\n}));\n\n(cljs.core.apply.cljs$lang$maxFixedArity \x3d (5));\n\ncljs.core.__destructure_map \x3d (function cljs$core$__destructure_map(gmap){\nif((((!((gmap \x3d\x3d null))))?(((((gmap.cljs$lang$protocol_mask$partition0$ \x26 (64))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d gmap.cljs$core$ISeq$))))?true:false):false)){\nif(cljs.core.next(gmap)){\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc(cljs.core.to_array(gmap));\n} else {\nif(cljs.core.seq(gmap)){\nreturn cljs.core.first(gmap);\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n}\n} else {\nreturn gmap;\n}\n});\n/**\n * Returns an object of the same type and value as obj, with\n *   (apply f (meta obj) args) as its metadata.\n */\ncljs.core.vary_meta \x3d (function cljs$core$vary_meta(var_args){\nvar G__10187 \x3d arguments.length;\nswitch (G__10187) {\ncase 2:\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase 6:\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13189 \x3d arguments.length;\nvar i__5770__auto___13190 \x3d (0);\nwhile(true){\nif((i__5770__auto___13190 \x3c len__5769__auto___13189)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13190]));\n\nvar G__13191 \x3d (i__5770__auto___13190 + (1));\ni__5770__auto___13190 \x3d G__13191;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((6)),(0),null));\nreturn cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$2 \x3d (function (obj,f){\nreturn cljs.core.with_meta(obj,(function (){var G__10188 \x3d cljs.core.meta(obj);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10188) : f.call(null,G__10188));\n})());\n}));\n\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$3 \x3d (function (obj,f,a){\nreturn cljs.core.with_meta(obj,(function (){var G__10189 \x3d cljs.core.meta(obj);\nvar G__10190 \x3d a;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10189,G__10190) : f.call(null,G__10189,G__10190));\n})());\n}));\n\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4 \x3d (function (obj,f,a,b){\nreturn cljs.core.with_meta(obj,(function (){var G__10191 \x3d cljs.core.meta(obj);\nvar G__10192 \x3d a;\nvar G__10193 \x3d b;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10191,G__10192,G__10193) : f.call(null,G__10191,G__10192,G__10193));\n})());\n}));\n\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$5 \x3d (function (obj,f,a,b,c){\nreturn cljs.core.with_meta(obj,(function (){var G__10194 \x3d cljs.core.meta(obj);\nvar G__10195 \x3d a;\nvar G__10196 \x3d b;\nvar G__10197 \x3d c;\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10194,G__10195,G__10196,G__10197) : f.call(null,G__10194,G__10195,G__10196,G__10197));\n})());\n}));\n\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$6 \x3d (function (obj,f,a,b,c,d){\nreturn cljs.core.with_meta(obj,(function (){var G__10198 \x3d cljs.core.meta(obj);\nvar G__10199 \x3d a;\nvar G__10200 \x3d b;\nvar G__10201 \x3d c;\nvar G__10202 \x3d d;\nreturn (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__10198,G__10199,G__10200,G__10201,G__10202) : f.call(null,G__10198,G__10199,G__10200,G__10201,G__10202));\n})());\n}));\n\n(cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$variadic \x3d (function (obj,f,a,b,c,d,args){\nreturn cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([d,args], 0)));\n}));\n\n/** @this {Function} */\n(cljs.core.vary_meta.cljs$lang$applyTo \x3d (function (seq10180){\nvar G__10181 \x3d cljs.core.first(seq10180);\nvar seq10180__$1 \x3d cljs.core.next(seq10180);\nvar G__10182 \x3d cljs.core.first(seq10180__$1);\nvar seq10180__$2 \x3d cljs.core.next(seq10180__$1);\nvar G__10183 \x3d cljs.core.first(seq10180__$2);\nvar seq10180__$3 \x3d cljs.core.next(seq10180__$2);\nvar G__10184 \x3d cljs.core.first(seq10180__$3);\nvar seq10180__$4 \x3d cljs.core.next(seq10180__$3);\nvar G__10185 \x3d cljs.core.first(seq10180__$4);\nvar seq10180__$5 \x3d cljs.core.next(seq10180__$4);\nvar G__10186 \x3d cljs.core.first(seq10180__$5);\nvar seq10180__$6 \x3d cljs.core.next(seq10180__$5);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10181,G__10182,G__10183,G__10184,G__10185,G__10186,seq10180__$6);\n}));\n\n(cljs.core.vary_meta.cljs$lang$maxFixedArity \x3d (6));\n\n/**\n * Same as (not (\x3d obj1 obj2))\n */\ncljs.core.not_EQ_ \x3d (function cljs$core$not_EQ_(var_args){\nvar G__10207 \x3d arguments.length;\nswitch (G__10207) {\ncase 1:\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13193 \x3d arguments.length;\nvar i__5770__auto___13194 \x3d (0);\nwhile(true){\nif((i__5770__auto___13194 \x3c len__5769__auto___13193)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13194]));\n\nvar G__13195 \x3d (i__5770__auto___13194 + (1));\ni__5770__auto___13194 \x3d G__13195;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn false;\n}));\n\n(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2 \x3d (function (x,y){\nreturn (!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)));\n}));\n\n(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,y,more){\nreturn cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));\n}));\n\n/** @this {Function} */\n(cljs.core.not_EQ_.cljs$lang$applyTo \x3d (function (seq10204){\nvar G__10205 \x3d cljs.core.first(seq10204);\nvar seq10204__$1 \x3d cljs.core.next(seq10204);\nvar G__10206 \x3d cljs.core.first(seq10204__$1);\nvar seq10204__$2 \x3d cljs.core.next(seq10204__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10205,G__10206,seq10204__$2);\n}));\n\n(cljs.core.not_EQ_.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * If coll is empty, returns nil, else coll\n */\ncljs.core.not_empty \x3d (function cljs$core$not_empty(coll){\nif(cljs.core.seq(coll)){\nreturn coll;\n} else {\nreturn null;\n}\n});\ncljs.core.nil_iter \x3d (function cljs$core$nil_iter(){\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core.t_cljs$core10208 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.core.t_cljs$core10208 \x3d (function (meta10209){\nthis.meta10209 \x3d meta10209;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 393216;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.t_cljs$core10208.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_10210,meta10209__$1){\nvar self__ \x3d this;\nvar _10210__$1 \x3d this;\nreturn (new cljs.core.t_cljs$core10208(meta10209__$1));\n}));\n\n(cljs.core.t_cljs$core10208.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_10210){\nvar self__ \x3d this;\nvar _10210__$1 \x3d this;\nreturn self__.meta10209;\n}));\n\n(cljs.core.t_cljs$core10208.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn false;\n}));\n\n(cljs.core.t_cljs$core10208.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22No such element\x22));\n}));\n\n(cljs.core.t_cljs$core10208.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.t_cljs$core10208.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta10209\x22,\x22meta10209\x22,-361953473,null)], null);\n}));\n\n(cljs.core.t_cljs$core10208.cljs$lang$type \x3d true);\n\n(cljs.core.t_cljs$core10208.cljs$lang$ctorStr \x3d \x22cljs.core/t_cljs$core10208\x22);\n\n(cljs.core.t_cljs$core10208.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/t_cljs$core10208\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/t_cljs$core10208.\n */\ncljs.core.__GT_t_cljs$core10208 \x3d (function cljs$core$nil_iter_$___GT_t_cljs$core10208(meta10209){\nreturn (new cljs.core.t_cljs$core10208(meta10209));\n});\n\n}\n\nreturn (new cljs.core.t_cljs$core10208(cljs.core.PersistentArrayMap.EMPTY));\n});\n\n/**\n* @constructor\n*/\ncljs.core.StringIter \x3d (function (s,i){\nthis.s \x3d s;\nthis.i \x3d i;\n});\n(cljs.core.StringIter.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.i \x3c self__.s.length);\n}));\n\n(cljs.core.StringIter.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar ret \x3d self__.s.charAt(self__.i);\n(self__.i \x3d (self__.i + (1)));\n\nreturn ret;\n}));\n\n(cljs.core.StringIter.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.StringIter.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.StringIter.cljs$lang$type \x3d true);\n\n(cljs.core.StringIter.cljs$lang$ctorStr \x3d \x22cljs.core/StringIter\x22);\n\n(cljs.core.StringIter.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/StringIter\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/StringIter.\n */\ncljs.core.__GT_StringIter \x3d (function cljs$core$__GT_StringIter(s,i){\nreturn (new cljs.core.StringIter(s,i));\n});\n\ncljs.core.string_iter \x3d (function cljs$core$string_iter(x){\nreturn (new cljs.core.StringIter(x,(0)));\n});\n\n/**\n* @constructor\n*/\ncljs.core.ArrayIter \x3d (function (arr,i){\nthis.arr \x3d arr;\nthis.i \x3d i;\n});\n(cljs.core.ArrayIter.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.i \x3c self__.arr.length);\n}));\n\n(cljs.core.ArrayIter.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar ret \x3d (self__.arr[self__.i]);\n(self__.i \x3d (self__.i + (1)));\n\nreturn ret;\n}));\n\n(cljs.core.ArrayIter.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.ArrayIter.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ArrayIter.cljs$lang$type \x3d true);\n\n(cljs.core.ArrayIter.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayIter\x22);\n\n(cljs.core.ArrayIter.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ArrayIter\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ArrayIter.\n */\ncljs.core.__GT_ArrayIter \x3d (function cljs$core$__GT_ArrayIter(arr,i){\nreturn (new cljs.core.ArrayIter(arr,i));\n});\n\ncljs.core.array_iter \x3d (function cljs$core$array_iter(x){\nreturn (new cljs.core.ArrayIter(x,(0)));\n});\ncljs.core.INIT \x3d ({});\ncljs.core.START \x3d ({});\n\n/**\n* @constructor\n*/\ncljs.core.SeqIter \x3d (function (_seq,_next){\nthis._seq \x3d _seq;\nthis._next \x3d _next;\n});\n(cljs.core.SeqIter.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nif((self__._seq \x3d\x3d\x3d cljs.core.INIT)){\n(self__._seq \x3d cljs.core.START);\n\n(self__._next \x3d cljs.core.seq(self__._next));\n} else {\nif((self__._seq \x3d\x3d\x3d self__._next)){\n(self__._next \x3d cljs.core.next(self__._seq));\n} else {\n}\n}\n\nreturn (!((self__._next \x3d\x3d null)));\n}));\n\n(cljs.core.SeqIter.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((!(this$.hasNext()))){\nthrow (new Error(\x22No such element\x22));\n} else {\n(self__._seq \x3d self__._next);\n\nreturn cljs.core.first(self__._next);\n}\n}));\n\n(cljs.core.SeqIter.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.SeqIter.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22_seq\x22,\x22_seq\x22,-449557847,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_next\x22,\x22_next\x22,101877036,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.SeqIter.cljs$lang$type \x3d true);\n\n(cljs.core.SeqIter.cljs$lang$ctorStr \x3d \x22cljs.core/SeqIter\x22);\n\n(cljs.core.SeqIter.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/SeqIter\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/SeqIter.\n */\ncljs.core.__GT_SeqIter \x3d (function cljs$core$__GT_SeqIter(_seq,_next){\nreturn (new cljs.core.SeqIter(_seq,_next));\n});\n\ncljs.core.seq_iter \x3d (function cljs$core$seq_iter(coll){\nreturn (new cljs.core.SeqIter(cljs.core.INIT,coll));\n});\ncljs.core.iter \x3d (function cljs$core$iter(coll){\nif(cljs.core.iterable_QMARK_(coll)){\nreturn cljs.core._iterator(coll);\n} else {\nif((coll \x3d\x3d null)){\nreturn cljs.core.nil_iter();\n} else {\nif(typeof coll \x3d\x3d\x3d \x27string\x27){\nreturn cljs.core.string_iter(coll);\n} else {\nif(cljs.core.array_QMARK_(coll)){\nreturn cljs.core.array_iter(coll);\n} else {\nif(cljs.core.seqable_QMARK_(coll)){\nreturn cljs.core.seq_iter(coll);\n} else {\nthrow (new Error([\x22Cannot create iterator from \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll)].join(\x27\x27)));\n\n}\n}\n}\n}\n}\n});\n\n/**\n* @constructor\n*/\ncljs.core.Many \x3d (function (vals){\nthis.vals \x3d vals;\n});\n(cljs.core.Many.prototype.add \x3d (function (o){\nvar self__ \x3d this;\nvar this$ \x3d this;\nself__.vals.push(o);\n\nreturn this$;\n}));\n\n(cljs.core.Many.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn self__.vals.shift();\n}));\n\n(cljs.core.Many.prototype.isEmpty \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn (self__.vals.length \x3d\x3d\x3d (0));\n}));\n\n(cljs.core.Many.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn [\x22Many: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.vals)].join(\x27\x27);\n}));\n\n(cljs.core.Many.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22vals\x22,\x22vals\x22,-1886377036,null)], null);\n}));\n\n(cljs.core.Many.cljs$lang$type \x3d true);\n\n(cljs.core.Many.cljs$lang$ctorStr \x3d \x22cljs.core/Many\x22);\n\n(cljs.core.Many.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Many\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Many.\n */\ncljs.core.__GT_Many \x3d (function cljs$core$__GT_Many(vals){\nreturn (new cljs.core.Many(vals));\n});\n\ncljs.core.NONE \x3d ({});\n\n/**\n* @constructor\n*/\ncljs.core.Single \x3d (function (val){\nthis.val \x3d val;\n});\n(cljs.core.Single.prototype.add \x3d (function (o){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((self__.val \x3d\x3d\x3d cljs.core.NONE)){\n(self__.val \x3d o);\n\nreturn this$;\n} else {\nreturn (new cljs.core.Many([self__.val,o]));\n}\n}));\n\n(cljs.core.Single.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((self__.val \x3d\x3d\x3d cljs.core.NONE)){\nthrow (new Error(\x22Removing object from empty buffer\x22));\n} else {\nvar ret \x3d self__.val;\n(self__.val \x3d cljs.core.NONE);\n\nreturn ret;\n}\n}));\n\n(cljs.core.Single.prototype.isEmpty \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn (self__.val \x3d\x3d\x3d cljs.core.NONE);\n}));\n\n(cljs.core.Single.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn [\x22Single: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.val)].join(\x27\x27);\n}));\n\n(cljs.core.Single.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Single.cljs$lang$type \x3d true);\n\n(cljs.core.Single.cljs$lang$ctorStr \x3d \x22cljs.core/Single\x22);\n\n(cljs.core.Single.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Single\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Single.\n */\ncljs.core.__GT_Single \x3d (function cljs$core$__GT_Single(val){\nreturn (new cljs.core.Single(val));\n});\n\n\n/**\n* @constructor\n*/\ncljs.core.Empty \x3d (function (){\n});\n(cljs.core.Empty.prototype.add \x3d (function (o){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn (new cljs.core.Single(o));\n}));\n\n(cljs.core.Empty.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nthrow (new Error(\x22Removing object from empty buffer\x22));\n}));\n\n(cljs.core.Empty.prototype.isEmpty \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn true;\n}));\n\n(cljs.core.Empty.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn \x22Empty\x22;\n}));\n\n(cljs.core.Empty.getBasis \x3d (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(cljs.core.Empty.cljs$lang$type \x3d true);\n\n(cljs.core.Empty.cljs$lang$ctorStr \x3d \x22cljs.core/Empty\x22);\n\n(cljs.core.Empty.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Empty\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Empty.\n */\ncljs.core.__GT_Empty \x3d (function cljs$core$__GT_Empty(){\nreturn (new cljs.core.Empty());\n});\n\ncljs.core.EMPTY \x3d (new cljs.core.Empty());\n\n/**\n* @constructor\n*/\ncljs.core.MultiIterator \x3d (function (iters){\nthis.iters \x3d iters;\n});\n(cljs.core.MultiIterator.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar iters__$1 \x3d cljs.core.seq(self__.iters);\nwhile(true){\nif((!((iters__$1 \x3d\x3d null)))){\nvar iter \x3d cljs.core.first(iters__$1);\nif((!(iter.hasNext()))){\nreturn false;\n} else {\nvar G__13202 \x3d cljs.core.next(iters__$1);\niters__$1 \x3d G__13202;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n}));\n\n(cljs.core.MultiIterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar nexts \x3d [];\nvar n__5636__auto___13203 \x3d self__.iters.length;\nvar i_13204 \x3d (0);\nwhile(true){\nif((i_13204 \x3c n__5636__auto___13203)){\n(nexts[i_13204] \x3d (self__.iters[i_13204]).next());\n\nvar G__13205 \x3d (i_13204 + (1));\ni_13204 \x3d G__13205;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(nexts,(0));\n}));\n\n(cljs.core.MultiIterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22iters\x22,\x22iters\x22,719353031,null)], null);\n}));\n\n(cljs.core.MultiIterator.cljs$lang$type \x3d true);\n\n(cljs.core.MultiIterator.cljs$lang$ctorStr \x3d \x22cljs.core/MultiIterator\x22);\n\n(cljs.core.MultiIterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/MultiIterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/MultiIterator.\n */\ncljs.core.__GT_MultiIterator \x3d (function cljs$core$__GT_MultiIterator(iters){\nreturn (new cljs.core.MultiIterator(iters));\n});\n\ncljs.core.chunkIteratorSeq \x3d (function cljs$core$chunkIteratorSeq(iter){\nreturn (new cljs.core.LazySeq(null,(function (){\nif(iter.hasNext()){\nvar arr \x3d [];\nvar n \x3d (0);\nwhile(true){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d iter.hasNext();\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (n \x3c (32));\n} else {\nreturn and__5043__auto__;\n}\n})())){\n(arr[n] \x3d iter.next());\n\nvar G__13206 \x3d (n + (1));\nn \x3d G__13206;\ncontinue;\n} else {\nreturn cljs.core.chunk_cons(cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr,(0),n),(cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunkIteratorSeq.cljs$core$IFn$_invoke$arity$1(iter) : cljs.core.chunkIteratorSeq.call(null,iter)));\n}\nbreak;\n}\n} else {\nreturn null;\n}\n}),null,null));\n});\n\n/**\n* @constructor\n*/\ncljs.core.TransformerIterator \x3d (function (buffer,_next,completed,xf,sourceIter,multi){\nthis.buffer \x3d buffer;\nthis._next \x3d _next;\nthis.completed \x3d completed;\nthis.xf \x3d xf;\nthis.sourceIter \x3d sourceIter;\nthis.multi \x3d multi;\n});\n(cljs.core.TransformerIterator.prototype.step \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((!((self__._next \x3d\x3d\x3d cljs.core.NONE)))){\nreturn true;\n} else {\nwhile(true){\nif((self__._next \x3d\x3d\x3d cljs.core.NONE)){\nif(self__.buffer.isEmpty()){\nif(self__.completed){\nreturn false;\n} else {\nif(self__.sourceIter.hasNext()){\nvar iter \x3d ((self__.multi)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xf,cljs.core.cons(null,self__.sourceIter.next())):(function (){var G__10211 \x3d null;\nvar G__10212 \x3d self__.sourceIter.next();\nreturn (self__.xf.cljs$core$IFn$_invoke$arity$2 ? self__.xf.cljs$core$IFn$_invoke$arity$2(G__10211,G__10212) : self__.xf.call(null,G__10211,G__10212));\n})());\nif(cljs.core.reduced_QMARK_(iter)){\n(self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null,null));\n\n(self__.completed \x3d true);\n} else {\n}\n\ncontinue;\n} else {\n(self__.xf.cljs$core$IFn$_invoke$arity$1 ? self__.xf.cljs$core$IFn$_invoke$arity$1(null) : self__.xf.call(null,null));\n\n(self__.completed \x3d true);\n\ncontinue;\n}\n}\n} else {\n(self__._next \x3d self__.buffer.remove());\n\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n}\n}));\n\n(cljs.core.TransformerIterator.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.step();\n}));\n\n(cljs.core.TransformerIterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif(this$.hasNext()){\nvar ret \x3d self__._next;\n(self__._next \x3d cljs.core.NONE);\n\nreturn ret;\n} else {\nthrow (new Error(\x22No such element\x22));\n}\n}));\n\n(cljs.core.TransformerIterator.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.TransformerIterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22buffer\x22,\x22buffer\x22,-2037140571,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_next\x22,\x22_next\x22,101877036,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22completed\x22,\x22completed\x22,1154475024,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22xf\x22,\x22xf\x22,2042434515,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22sourceIter\x22,\x22sourceIter\x22,1068220306,null),new cljs.core.Symbol(null,\x22multi\x22,\x22multi\x22,1450238522,null)], null);\n}));\n\n(cljs.core.TransformerIterator.cljs$lang$type \x3d true);\n\n(cljs.core.TransformerIterator.cljs$lang$ctorStr \x3d \x22cljs.core/TransformerIterator\x22);\n\n(cljs.core.TransformerIterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/TransformerIterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/TransformerIterator.\n */\ncljs.core.__GT_TransformerIterator \x3d (function cljs$core$__GT_TransformerIterator(buffer,_next,completed,xf,sourceIter,multi){\nreturn (new cljs.core.TransformerIterator(buffer,_next,completed,xf,sourceIter,multi));\n});\n\n(cljs.core.TransformerIterator.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\ncljs.core.transformer_iterator \x3d (function cljs$core$transformer_iterator(xform,sourceIter,multi){\nvar iterator \x3d (new cljs.core.TransformerIterator(cljs.core.EMPTY,cljs.core.NONE,false,null,sourceIter,multi));\n(iterator.xf \x3d (function (){var G__10213 \x3d (function() {\nvar G__13210 \x3d null;\nvar G__13210__0 \x3d (function (){\nreturn null;\n});\nvar G__13210__1 \x3d (function (acc){\nreturn acc;\n});\nvar G__13210__2 \x3d (function (acc,o){\n(iterator.buffer \x3d iterator.buffer.add(o));\n\nreturn acc;\n});\nG__13210 \x3d function(acc,o){\nswitch(arguments.length){\ncase 0:\nreturn G__13210__0.call(this);\ncase 1:\nreturn G__13210__1.call(this,acc);\ncase 2:\nreturn G__13210__2.call(this,acc,o);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13210.cljs$core$IFn$_invoke$arity$0 \x3d G__13210__0;\nG__13210.cljs$core$IFn$_invoke$arity$1 \x3d G__13210__1;\nG__13210.cljs$core$IFn$_invoke$arity$2 \x3d G__13210__2;\nreturn G__13210;\n})()\n;\nreturn (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__10213) : xform.call(null,G__10213));\n})());\n\nreturn iterator;\n});\n(cljs.core.TransformerIterator.create \x3d (function (xform,source){\nreturn cljs.core.transformer_iterator(xform,source,false);\n}));\n(cljs.core.TransformerIterator.createMulti \x3d (function (xform,sources){\nreturn cljs.core.transformer_iterator(xform,(new cljs.core.MultiIterator(cljs.core.to_array(sources))),true);\n}));\n/**\n * Coerces coll to a (possibly empty) sequence, if it is not already\n *   one. Will not force a lazy seq. (sequence nil) yields (), When a\n *   transducer is supplied, returns a lazy sequence of applications of\n *   the transform to the items in coll(s), i.e. to the set of first\n *   items of each coll, followed by the set of second\n *   items in each coll, until any one of the colls is exhausted.  Any\n *   remaining items in other colls are ignored. The transform should accept\n *   number-of-colls arguments\n */\ncljs.core.sequence \x3d (function cljs$core$sequence(var_args){\nvar G__10218 \x3d arguments.length;\nswitch (G__10218) {\ncase 1:\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13212 \x3d arguments.length;\nvar i__5770__auto___13213 \x3d (0);\nwhile(true){\nif((i__5770__auto___13213 \x3c len__5769__auto___13212)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13213]));\n\nvar G__13214 \x3d (i__5770__auto___13213 + (1));\ni__5770__auto___13213 \x3d G__13214;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nif(cljs.core.seq_QMARK_(coll)){\nreturn coll;\n} else {\nvar or__5045__auto__ \x3d cljs.core.seq(coll);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}\n}));\n\n(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2 \x3d (function (xform,coll){\nvar or__5045__auto__ \x3d cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.create(xform,cljs.core.iter(coll)));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.sequence.cljs$core$IFn$_invoke$arity$variadic \x3d (function (xform,coll,colls){\nvar or__5045__auto__ \x3d cljs.core.chunkIteratorSeq(cljs.core.TransformerIterator.createMulti(xform,(function (){var G__10219 \x3d cljs.core.iter;\nvar G__10220 \x3d cljs.core.cons(coll,colls);\nreturn (cljs.core.map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.map.cljs$core$IFn$_invoke$arity$2(G__10219,G__10220) : cljs.core.map.call(null,G__10219,G__10220));\n})()));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n/** @this {Function} */\n(cljs.core.sequence.cljs$lang$applyTo \x3d (function (seq10215){\nvar G__10216 \x3d cljs.core.first(seq10215);\nvar seq10215__$1 \x3d cljs.core.next(seq10215);\nvar G__10217 \x3d cljs.core.first(seq10215__$1);\nvar seq10215__$2 \x3d cljs.core.next(seq10215__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10216,G__10217,seq10215__$2);\n}));\n\n(cljs.core.sequence.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns true if (pred x) is logical true for every x in coll, else\n *   false.\n */\ncljs.core.every_QMARK_ \x3d (function cljs$core$every_QMARK_(pred,coll){\nwhile(true){\nif((cljs.core.seq(coll) \x3d\x3d null)){\nreturn true;\n} else {\nif(cljs.core.truth_((function (){var G__10221 \x3d cljs.core.first(coll);\nreturn (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10221) : pred.call(null,G__10221));\n})())){\nvar G__13228 \x3d pred;\nvar G__13229 \x3d cljs.core.next(coll);\npred \x3d G__13228;\ncoll \x3d G__13229;\ncontinue;\n} else {\nreturn false;\n\n}\n}\nbreak;\n}\n});\n/**\n * Returns false if (pred x) is logical true for every x in\n *   coll, else true.\n */\ncljs.core.not_every_QMARK_ \x3d (function cljs$core$not_every_QMARK_(pred,coll){\nreturn (!(cljs.core.every_QMARK_(pred,coll)));\n});\n/**\n * Returns the first logical true value of (pred x) for any x in coll,\n *   else nil.  One common idiom is to use a set as pred, for example\n *   this will return :fred if :fred is in the sequence, otherwise nil:\n *   (some #{:fred} coll)\n */\ncljs.core.some \x3d (function cljs$core$some(pred,coll){\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nvar or__5045__auto__ \x3d (function (){var G__10222 \x3d cljs.core.first(s);\nreturn (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10222) : pred.call(null,G__10222));\n})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar G__13230 \x3d pred;\nvar G__13231 \x3d cljs.core.next(s);\npred \x3d G__13230;\ncoll \x3d G__13231;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});\n/**\n * Returns false if (pred x) is logical true for any x in coll,\n *   else true.\n */\ncljs.core.not_any_QMARK_ \x3d (function cljs$core$not_any_QMARK_(pred,coll){\nreturn cljs.core.not(cljs.core.some(pred,coll));\n});\n/**\n * Returns true if n is even, throws an exception if n is not an integer\n */\ncljs.core.even_QMARK_ \x3d (function cljs$core$even_QMARK_(n){\nif(cljs.core.integer_QMARK_(n)){\nreturn ((n \x26 (1)) \x3d\x3d\x3d (0));\n} else {\nthrow (new Error([\x22Argument must be an integer: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(\x27\x27)));\n}\n});\n/**\n * Returns true if n is odd, throws an exception if n is not an integer\n */\ncljs.core.odd_QMARK_ \x3d (function cljs$core$odd_QMARK_(n){\nreturn (!(cljs.core.even_QMARK_(n)));\n});\n/**\n * Takes a fn f and returns a fn that takes the same arguments as f,\n *   has the same effects, if any, and returns the opposite truth value.\n */\ncljs.core.complement \x3d (function cljs$core$complement(f){\nreturn (function() {\nvar G__13232 \x3d null;\nvar G__13232__0 \x3d (function (){\nreturn cljs.core.not((f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)));\n});\nvar G__13232__1 \x3d (function (x){\nreturn cljs.core.not((f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x)));\n});\nvar G__13232__2 \x3d (function (x,y){\nreturn cljs.core.not((f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y)));\n});\nvar G__13232__3 \x3d (function() { \nvar G__13233__delegate \x3d function (x,y,zs){\nreturn cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));\n};\nvar G__13233 \x3d function (x,y,var_args){\nvar zs \x3d null;\nif (arguments.length \x3e 2) {\nvar G__13234__i \x3d 0, G__13234__a \x3d new Array(arguments.length -  2);\nwhile (G__13234__i \x3c G__13234__a.length) {G__13234__a[G__13234__i] \x3d arguments[G__13234__i + 2]; ++G__13234__i;}\n  zs \x3d new cljs.core.IndexedSeq(G__13234__a,0,null);\n} \nreturn G__13233__delegate.call(this,x,y,zs);};\nG__13233.cljs$lang$maxFixedArity \x3d 2;\nG__13233.cljs$lang$applyTo \x3d (function (arglist__13235){\nvar x \x3d cljs.core.first(arglist__13235);\narglist__13235 \x3d cljs.core.next(arglist__13235);\nvar y \x3d cljs.core.first(arglist__13235);\nvar zs \x3d cljs.core.rest(arglist__13235);\nreturn G__13233__delegate(x,y,zs);\n});\nG__13233.cljs$core$IFn$_invoke$arity$variadic \x3d G__13233__delegate;\nreturn G__13233;\n})()\n;\nG__13232 \x3d function(x,y,var_args){\nvar zs \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__13232__0.call(this);\ncase 1:\nreturn G__13232__1.call(this,x);\ncase 2:\nreturn G__13232__2.call(this,x,y);\ndefault:\nvar G__13236 \x3d null;\nif (arguments.length \x3e 2) {\nvar G__13237__i \x3d 0, G__13237__a \x3d new Array(arguments.length -  2);\nwhile (G__13237__i \x3c G__13237__a.length) {G__13237__a[G__13237__i] \x3d arguments[G__13237__i + 2]; ++G__13237__i;}\nG__13236 \x3d new cljs.core.IndexedSeq(G__13237__a,0,null);\n}\nreturn G__13232__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__13236);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13232.cljs$lang$maxFixedArity \x3d 2;\nG__13232.cljs$lang$applyTo \x3d G__13232__3.cljs$lang$applyTo;\nG__13232.cljs$core$IFn$_invoke$arity$0 \x3d G__13232__0;\nG__13232.cljs$core$IFn$_invoke$arity$1 \x3d G__13232__1;\nG__13232.cljs$core$IFn$_invoke$arity$2 \x3d G__13232__2;\nG__13232.cljs$core$IFn$_invoke$arity$variadic \x3d G__13232__3.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__13232;\n})()\n});\n/**\n * Returns a function that takes any number of arguments and returns x.\n */\ncljs.core.constantly \x3d (function cljs$core$constantly(x){\nreturn (function() { \nvar G__13244__delegate \x3d function (args){\nreturn x;\n};\nvar G__13244 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__13245__i \x3d 0, G__13245__a \x3d new Array(arguments.length -  0);\nwhile (G__13245__i \x3c G__13245__a.length) {G__13245__a[G__13245__i] \x3d arguments[G__13245__i + 0]; ++G__13245__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13245__a,0,null);\n} \nreturn G__13244__delegate.call(this,args);};\nG__13244.cljs$lang$maxFixedArity \x3d 0;\nG__13244.cljs$lang$applyTo \x3d (function (arglist__13246){\nvar args \x3d cljs.core.seq(arglist__13246);\nreturn G__13244__delegate(args);\n});\nG__13244.cljs$core$IFn$_invoke$arity$variadic \x3d G__13244__delegate;\nreturn G__13244;\n})()\n;\n});\n/**\n * Takes a set of functions and returns a fn that is the composition\n *   of those fns.  The returned fn takes a variable number of args,\n *   applies the rightmost of fns to the args, the next\n *   fn (right-to-left) to the result, etc.\n */\ncljs.core.comp \x3d (function cljs$core$comp(var_args){\nvar G__10228 \x3d arguments.length;\nswitch (G__10228) {\ncase 0:\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13248 \x3d arguments.length;\nvar i__5770__auto___13249 \x3d (0);\nwhile(true){\nif((i__5770__auto___13249 \x3c len__5769__auto___13248)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13249]));\n\nvar G__13250 \x3d (i__5770__auto___13249 + (1));\ni__5770__auto___13249 \x3d G__13250;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.comp.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.identity;\n}));\n\n(cljs.core.comp.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn f;\n}));\n\n(cljs.core.comp.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,g){\nreturn (function() {\nvar G__13251 \x3d null;\nvar G__13251__0 \x3d (function (){\nvar G__10229 \x3d (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10229) : f.call(null,G__10229));\n});\nvar G__13251__1 \x3d (function (x){\nvar G__10230 \x3d (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null,x));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10230) : f.call(null,G__10230));\n});\nvar G__13251__2 \x3d (function (x,y){\nvar G__10231 \x3d (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x,y) : g.call(null,x,y));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10231) : f.call(null,G__10231));\n});\nvar G__13251__3 \x3d (function (x,y,z){\nvar G__10232 \x3d (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x,y,z) : g.call(null,x,y,z));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10232) : f.call(null,G__10232));\n});\nvar G__13251__4 \x3d (function() { \nvar G__13252__delegate \x3d function (x,y,z,args){\nvar G__10233 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10233) : f.call(null,G__10233));\n};\nvar G__13252 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13253__i \x3d 0, G__13253__a \x3d new Array(arguments.length -  3);\nwhile (G__13253__i \x3c G__13253__a.length) {G__13253__a[G__13253__i] \x3d arguments[G__13253__i + 3]; ++G__13253__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13253__a,0,null);\n} \nreturn G__13252__delegate.call(this,x,y,z,args);};\nG__13252.cljs$lang$maxFixedArity \x3d 3;\nG__13252.cljs$lang$applyTo \x3d (function (arglist__13254){\nvar x \x3d cljs.core.first(arglist__13254);\narglist__13254 \x3d cljs.core.next(arglist__13254);\nvar y \x3d cljs.core.first(arglist__13254);\narglist__13254 \x3d cljs.core.next(arglist__13254);\nvar z \x3d cljs.core.first(arglist__13254);\nvar args \x3d cljs.core.rest(arglist__13254);\nreturn G__13252__delegate(x,y,z,args);\n});\nG__13252.cljs$core$IFn$_invoke$arity$variadic \x3d G__13252__delegate;\nreturn G__13252;\n})()\n;\nG__13251 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__13251__0.call(this);\ncase 1:\nreturn G__13251__1.call(this,x);\ncase 2:\nreturn G__13251__2.call(this,x,y);\ncase 3:\nreturn G__13251__3.call(this,x,y,z);\ndefault:\nvar G__13255 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13256__i \x3d 0, G__13256__a \x3d new Array(arguments.length -  3);\nwhile (G__13256__i \x3c G__13256__a.length) {G__13256__a[G__13256__i] \x3d arguments[G__13256__i + 3]; ++G__13256__i;}\nG__13255 \x3d new cljs.core.IndexedSeq(G__13256__a,0,null);\n}\nreturn G__13251__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13255);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13251.cljs$lang$maxFixedArity \x3d 3;\nG__13251.cljs$lang$applyTo \x3d G__13251__4.cljs$lang$applyTo;\nG__13251.cljs$core$IFn$_invoke$arity$0 \x3d G__13251__0;\nG__13251.cljs$core$IFn$_invoke$arity$1 \x3d G__13251__1;\nG__13251.cljs$core$IFn$_invoke$arity$2 \x3d G__13251__2;\nG__13251.cljs$core$IFn$_invoke$arity$3 \x3d G__13251__3;\nG__13251.cljs$core$IFn$_invoke$arity$variadic \x3d G__13251__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__13251;\n})()\n}));\n\n(cljs.core.comp.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,g,h){\nreturn (function() {\nvar G__13257 \x3d null;\nvar G__13257__0 \x3d (function (){\nvar G__10234 \x3d (function (){var G__10235 \x3d (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));\nreturn (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10235) : g.call(null,G__10235));\n})();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10234) : f.call(null,G__10234));\n});\nvar G__13257__1 \x3d (function (x){\nvar G__10236 \x3d (function (){var G__10237 \x3d (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null,x));\nreturn (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10237) : g.call(null,G__10237));\n})();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10236) : f.call(null,G__10236));\n});\nvar G__13257__2 \x3d (function (x,y){\nvar G__10238 \x3d (function (){var G__10239 \x3d (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x,y) : h.call(null,x,y));\nreturn (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10239) : g.call(null,G__10239));\n})();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10238) : f.call(null,G__10238));\n});\nvar G__13257__3 \x3d (function (x,y,z){\nvar G__10240 \x3d (function (){var G__10241 \x3d (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x,y,z) : h.call(null,x,y,z));\nreturn (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10241) : g.call(null,G__10241));\n})();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10240) : f.call(null,G__10240));\n});\nvar G__13257__4 \x3d (function() { \nvar G__13261__delegate \x3d function (x,y,z,args){\nvar G__10242 \x3d (function (){var G__10243 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);\nreturn (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__10243) : g.call(null,G__10243));\n})();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10242) : f.call(null,G__10242));\n};\nvar G__13261 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13262__i \x3d 0, G__13262__a \x3d new Array(arguments.length -  3);\nwhile (G__13262__i \x3c G__13262__a.length) {G__13262__a[G__13262__i] \x3d arguments[G__13262__i + 3]; ++G__13262__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13262__a,0,null);\n} \nreturn G__13261__delegate.call(this,x,y,z,args);};\nG__13261.cljs$lang$maxFixedArity \x3d 3;\nG__13261.cljs$lang$applyTo \x3d (function (arglist__13263){\nvar x \x3d cljs.core.first(arglist__13263);\narglist__13263 \x3d cljs.core.next(arglist__13263);\nvar y \x3d cljs.core.first(arglist__13263);\narglist__13263 \x3d cljs.core.next(arglist__13263);\nvar z \x3d cljs.core.first(arglist__13263);\nvar args \x3d cljs.core.rest(arglist__13263);\nreturn G__13261__delegate(x,y,z,args);\n});\nG__13261.cljs$core$IFn$_invoke$arity$variadic \x3d G__13261__delegate;\nreturn G__13261;\n})()\n;\nG__13257 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__13257__0.call(this);\ncase 1:\nreturn G__13257__1.call(this,x);\ncase 2:\nreturn G__13257__2.call(this,x,y);\ncase 3:\nreturn G__13257__3.call(this,x,y,z);\ndefault:\nvar G__13264 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13265__i \x3d 0, G__13265__a \x3d new Array(arguments.length -  3);\nwhile (G__13265__i \x3c G__13265__a.length) {G__13265__a[G__13265__i] \x3d arguments[G__13265__i + 3]; ++G__13265__i;}\nG__13264 \x3d new cljs.core.IndexedSeq(G__13265__a,0,null);\n}\nreturn G__13257__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13264);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13257.cljs$lang$maxFixedArity \x3d 3;\nG__13257.cljs$lang$applyTo \x3d G__13257__4.cljs$lang$applyTo;\nG__13257.cljs$core$IFn$_invoke$arity$0 \x3d G__13257__0;\nG__13257.cljs$core$IFn$_invoke$arity$1 \x3d G__13257__1;\nG__13257.cljs$core$IFn$_invoke$arity$2 \x3d G__13257__2;\nG__13257.cljs$core$IFn$_invoke$arity$3 \x3d G__13257__3;\nG__13257.cljs$core$IFn$_invoke$arity$variadic \x3d G__13257__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__13257;\n})()\n}));\n\n(cljs.core.comp.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f1,f2,f3,fs){\nvar fs__$1 \x3d cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));\nreturn (function() { \nvar G__13266__delegate \x3d function (args){\nvar ret \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);\nvar fs__$2 \x3d cljs.core.next(fs__$1);\nwhile(true){\nif(fs__$2){\nvar G__13267 \x3d (function (){var fexpr__10244 \x3d cljs.core.first(fs__$2);\nreturn (fexpr__10244.cljs$core$IFn$_invoke$arity$1 ? fexpr__10244.cljs$core$IFn$_invoke$arity$1(ret) : fexpr__10244.call(null,ret));\n})();\nvar G__13268 \x3d cljs.core.next(fs__$2);\nret \x3d G__13267;\nfs__$2 \x3d G__13268;\ncontinue;\n} else {\nreturn ret;\n}\nbreak;\n}\n};\nvar G__13266 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__13269__i \x3d 0, G__13269__a \x3d new Array(arguments.length -  0);\nwhile (G__13269__i \x3c G__13269__a.length) {G__13269__a[G__13269__i] \x3d arguments[G__13269__i + 0]; ++G__13269__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13269__a,0,null);\n} \nreturn G__13266__delegate.call(this,args);};\nG__13266.cljs$lang$maxFixedArity \x3d 0;\nG__13266.cljs$lang$applyTo \x3d (function (arglist__13270){\nvar args \x3d cljs.core.seq(arglist__13270);\nreturn G__13266__delegate(args);\n});\nG__13266.cljs$core$IFn$_invoke$arity$variadic \x3d G__13266__delegate;\nreturn G__13266;\n})()\n;\n}));\n\n/** @this {Function} */\n(cljs.core.comp.cljs$lang$applyTo \x3d (function (seq10224){\nvar G__10225 \x3d cljs.core.first(seq10224);\nvar seq10224__$1 \x3d cljs.core.next(seq10224);\nvar G__10226 \x3d cljs.core.first(seq10224__$1);\nvar seq10224__$2 \x3d cljs.core.next(seq10224__$1);\nvar G__10227 \x3d cljs.core.first(seq10224__$2);\nvar seq10224__$3 \x3d cljs.core.next(seq10224__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10225,G__10226,G__10227,seq10224__$3);\n}));\n\n(cljs.core.comp.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * Takes a function f and fewer than the normal arguments to f, and\n *   returns a fn that takes a variable number of additional args. When\n *   called, the returned function calls f with args + additional args.\n */\ncljs.core.partial \x3d (function cljs$core$partial(var_args){\nvar G__10251 \x3d arguments.length;\nswitch (G__10251) {\ncase 1:\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13272 \x3d arguments.length;\nvar i__5770__auto___13273 \x3d (0);\nwhile(true){\nif((i__5770__auto___13273 \x3c len__5769__auto___13272)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13273]));\n\nvar G__13274 \x3d (i__5770__auto___13273 + (1));\ni__5770__auto___13273 \x3d G__13274;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((4)),(0),null));\nreturn cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.partial.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn f;\n}));\n\n(cljs.core.partial.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,arg1){\nreturn (function() {\nvar G__13275 \x3d null;\nvar G__13275__0 \x3d (function (){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg1) : f.call(null,arg1));\n});\nvar G__13275__1 \x3d (function (x){\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1,x) : f.call(null,arg1,x));\n});\nvar G__13275__2 \x3d (function (x,y){\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1,x,y) : f.call(null,arg1,x,y));\n});\nvar G__13275__3 \x3d (function (x,y,z){\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1,x,y,z) : f.call(null,arg1,x,y,z));\n});\nvar G__13275__4 \x3d (function() { \nvar G__13276__delegate \x3d function (x,y,z,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));\n};\nvar G__13276 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13277__i \x3d 0, G__13277__a \x3d new Array(arguments.length -  3);\nwhile (G__13277__i \x3c G__13277__a.length) {G__13277__a[G__13277__i] \x3d arguments[G__13277__i + 3]; ++G__13277__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13277__a,0,null);\n} \nreturn G__13276__delegate.call(this,x,y,z,args);};\nG__13276.cljs$lang$maxFixedArity \x3d 3;\nG__13276.cljs$lang$applyTo \x3d (function (arglist__13278){\nvar x \x3d cljs.core.first(arglist__13278);\narglist__13278 \x3d cljs.core.next(arglist__13278);\nvar y \x3d cljs.core.first(arglist__13278);\narglist__13278 \x3d cljs.core.next(arglist__13278);\nvar z \x3d cljs.core.first(arglist__13278);\nvar args \x3d cljs.core.rest(arglist__13278);\nreturn G__13276__delegate(x,y,z,args);\n});\nG__13276.cljs$core$IFn$_invoke$arity$variadic \x3d G__13276__delegate;\nreturn G__13276;\n})()\n;\nG__13275 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__13275__0.call(this);\ncase 1:\nreturn G__13275__1.call(this,x);\ncase 2:\nreturn G__13275__2.call(this,x,y);\ncase 3:\nreturn G__13275__3.call(this,x,y,z);\ndefault:\nvar G__13279 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13280__i \x3d 0, G__13280__a \x3d new Array(arguments.length -  3);\nwhile (G__13280__i \x3c G__13280__a.length) {G__13280__a[G__13280__i] \x3d arguments[G__13280__i + 3]; ++G__13280__i;}\nG__13279 \x3d new cljs.core.IndexedSeq(G__13280__a,0,null);\n}\nreturn G__13275__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13279);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13275.cljs$lang$maxFixedArity \x3d 3;\nG__13275.cljs$lang$applyTo \x3d G__13275__4.cljs$lang$applyTo;\nG__13275.cljs$core$IFn$_invoke$arity$0 \x3d G__13275__0;\nG__13275.cljs$core$IFn$_invoke$arity$1 \x3d G__13275__1;\nG__13275.cljs$core$IFn$_invoke$arity$2 \x3d G__13275__2;\nG__13275.cljs$core$IFn$_invoke$arity$3 \x3d G__13275__3;\nG__13275.cljs$core$IFn$_invoke$arity$variadic \x3d G__13275__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__13275;\n})()\n}));\n\n(cljs.core.partial.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,arg1,arg2){\nreturn (function() {\nvar G__13284 \x3d null;\nvar G__13284__0 \x3d (function (){\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(arg1,arg2) : f.call(null,arg1,arg2));\n});\nvar G__13284__1 \x3d (function (x){\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1,arg2,x) : f.call(null,arg1,arg2,x));\n});\nvar G__13284__2 \x3d (function (x,y){\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1,arg2,x,y) : f.call(null,arg1,arg2,x,y));\n});\nvar G__13284__3 \x3d (function (x,y,z){\nreturn (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1,arg2,x,y,z) : f.call(null,arg1,arg2,x,y,z));\n});\nvar G__13284__4 \x3d (function() { \nvar G__13285__delegate \x3d function (x,y,z,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([z,args], 0));\n};\nvar G__13285 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13286__i \x3d 0, G__13286__a \x3d new Array(arguments.length -  3);\nwhile (G__13286__i \x3c G__13286__a.length) {G__13286__a[G__13286__i] \x3d arguments[G__13286__i + 3]; ++G__13286__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13286__a,0,null);\n} \nreturn G__13285__delegate.call(this,x,y,z,args);};\nG__13285.cljs$lang$maxFixedArity \x3d 3;\nG__13285.cljs$lang$applyTo \x3d (function (arglist__13287){\nvar x \x3d cljs.core.first(arglist__13287);\narglist__13287 \x3d cljs.core.next(arglist__13287);\nvar y \x3d cljs.core.first(arglist__13287);\narglist__13287 \x3d cljs.core.next(arglist__13287);\nvar z \x3d cljs.core.first(arglist__13287);\nvar args \x3d cljs.core.rest(arglist__13287);\nreturn G__13285__delegate(x,y,z,args);\n});\nG__13285.cljs$core$IFn$_invoke$arity$variadic \x3d G__13285__delegate;\nreturn G__13285;\n})()\n;\nG__13284 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__13284__0.call(this);\ncase 1:\nreturn G__13284__1.call(this,x);\ncase 2:\nreturn G__13284__2.call(this,x,y);\ncase 3:\nreturn G__13284__3.call(this,x,y,z);\ndefault:\nvar G__13288 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13289__i \x3d 0, G__13289__a \x3d new Array(arguments.length -  3);\nwhile (G__13289__i \x3c G__13289__a.length) {G__13289__a[G__13289__i] \x3d arguments[G__13289__i + 3]; ++G__13289__i;}\nG__13288 \x3d new cljs.core.IndexedSeq(G__13289__a,0,null);\n}\nreturn G__13284__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13288);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13284.cljs$lang$maxFixedArity \x3d 3;\nG__13284.cljs$lang$applyTo \x3d G__13284__4.cljs$lang$applyTo;\nG__13284.cljs$core$IFn$_invoke$arity$0 \x3d G__13284__0;\nG__13284.cljs$core$IFn$_invoke$arity$1 \x3d G__13284__1;\nG__13284.cljs$core$IFn$_invoke$arity$2 \x3d G__13284__2;\nG__13284.cljs$core$IFn$_invoke$arity$3 \x3d G__13284__3;\nG__13284.cljs$core$IFn$_invoke$arity$variadic \x3d G__13284__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__13284;\n})()\n}));\n\n(cljs.core.partial.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,arg1,arg2,arg3){\nreturn (function() {\nvar G__13290 \x3d null;\nvar G__13290__0 \x3d (function (){\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(arg1,arg2,arg3) : f.call(null,arg1,arg2,arg3));\n});\nvar G__13290__1 \x3d (function (x){\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(arg1,arg2,arg3,x) : f.call(null,arg1,arg2,arg3,x));\n});\nvar G__13290__2 \x3d (function (x,y){\nreturn (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(arg1,arg2,arg3,x,y) : f.call(null,arg1,arg2,arg3,x,y));\n});\nvar G__13290__3 \x3d (function (x,y,z){\nreturn (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(arg1,arg2,arg3,x,y,z) : f.call(null,arg1,arg2,arg3,x,y,z));\n});\nvar G__13290__4 \x3d (function() { \nvar G__13291__delegate \x3d function (x,y,z,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([y,z,args], 0));\n};\nvar G__13291 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13292__i \x3d 0, G__13292__a \x3d new Array(arguments.length -  3);\nwhile (G__13292__i \x3c G__13292__a.length) {G__13292__a[G__13292__i] \x3d arguments[G__13292__i + 3]; ++G__13292__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13292__a,0,null);\n} \nreturn G__13291__delegate.call(this,x,y,z,args);};\nG__13291.cljs$lang$maxFixedArity \x3d 3;\nG__13291.cljs$lang$applyTo \x3d (function (arglist__13293){\nvar x \x3d cljs.core.first(arglist__13293);\narglist__13293 \x3d cljs.core.next(arglist__13293);\nvar y \x3d cljs.core.first(arglist__13293);\narglist__13293 \x3d cljs.core.next(arglist__13293);\nvar z \x3d cljs.core.first(arglist__13293);\nvar args \x3d cljs.core.rest(arglist__13293);\nreturn G__13291__delegate(x,y,z,args);\n});\nG__13291.cljs$core$IFn$_invoke$arity$variadic \x3d G__13291__delegate;\nreturn G__13291;\n})()\n;\nG__13290 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__13290__0.call(this);\ncase 1:\nreturn G__13290__1.call(this,x);\ncase 2:\nreturn G__13290__2.call(this,x,y);\ncase 3:\nreturn G__13290__3.call(this,x,y,z);\ndefault:\nvar G__13297 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13298__i \x3d 0, G__13298__a \x3d new Array(arguments.length -  3);\nwhile (G__13298__i \x3c G__13298__a.length) {G__13298__a[G__13298__i] \x3d arguments[G__13298__i + 3]; ++G__13298__i;}\nG__13297 \x3d new cljs.core.IndexedSeq(G__13298__a,0,null);\n}\nreturn G__13290__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13297);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13290.cljs$lang$maxFixedArity \x3d 3;\nG__13290.cljs$lang$applyTo \x3d G__13290__4.cljs$lang$applyTo;\nG__13290.cljs$core$IFn$_invoke$arity$0 \x3d G__13290__0;\nG__13290.cljs$core$IFn$_invoke$arity$1 \x3d G__13290__1;\nG__13290.cljs$core$IFn$_invoke$arity$2 \x3d G__13290__2;\nG__13290.cljs$core$IFn$_invoke$arity$3 \x3d G__13290__3;\nG__13290.cljs$core$IFn$_invoke$arity$variadic \x3d G__13290__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__13290;\n})()\n}));\n\n(cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,arg1,arg2,arg3,more){\nreturn (function() { \nvar G__13299__delegate \x3d function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));\n};\nvar G__13299 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__13300__i \x3d 0, G__13300__a \x3d new Array(arguments.length -  0);\nwhile (G__13300__i \x3c G__13300__a.length) {G__13300__a[G__13300__i] \x3d arguments[G__13300__i + 0]; ++G__13300__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13300__a,0,null);\n} \nreturn G__13299__delegate.call(this,args);};\nG__13299.cljs$lang$maxFixedArity \x3d 0;\nG__13299.cljs$lang$applyTo \x3d (function (arglist__13301){\nvar args \x3d cljs.core.seq(arglist__13301);\nreturn G__13299__delegate(args);\n});\nG__13299.cljs$core$IFn$_invoke$arity$variadic \x3d G__13299__delegate;\nreturn G__13299;\n})()\n;\n}));\n\n/** @this {Function} */\n(cljs.core.partial.cljs$lang$applyTo \x3d (function (seq10246){\nvar G__10247 \x3d cljs.core.first(seq10246);\nvar seq10246__$1 \x3d cljs.core.next(seq10246);\nvar G__10248 \x3d cljs.core.first(seq10246__$1);\nvar seq10246__$2 \x3d cljs.core.next(seq10246__$1);\nvar G__10249 \x3d cljs.core.first(seq10246__$2);\nvar seq10246__$3 \x3d cljs.core.next(seq10246__$2);\nvar G__10250 \x3d cljs.core.first(seq10246__$3);\nvar seq10246__$4 \x3d cljs.core.next(seq10246__$3);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10247,G__10248,G__10249,G__10250,seq10246__$4);\n}));\n\n(cljs.core.partial.cljs$lang$maxFixedArity \x3d (4));\n\n/**\n * Takes a function f, and returns a function that calls f, replacing\n *   a nil first argument to f with the supplied value x. Higher arity\n *   versions can replace arguments in the second and third\n *   positions (y, z). Note that the function f can take any number of\n *   arguments, not just the one(s) being nil-patched.\n */\ncljs.core.fnil \x3d (function cljs$core$fnil(var_args){\nvar G__10253 \x3d arguments.length;\nswitch (G__10253) {\ncase 2:\nreturn cljs.core.fnil.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.fnil.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.fnil.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.fnil.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,x){\nreturn (function() {\nvar G__13303 \x3d null;\nvar G__13303__1 \x3d (function (a){\nvar G__10254 \x3d (((a \x3d\x3d null))?x:a);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10254) : f.call(null,G__10254));\n});\nvar G__13303__2 \x3d (function (a,b){\nvar G__10255 \x3d (((a \x3d\x3d null))?x:a);\nvar G__10256 \x3d b;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10255,G__10256) : f.call(null,G__10255,G__10256));\n});\nvar G__13303__3 \x3d (function (a,b,c){\nvar G__10257 \x3d (((a \x3d\x3d null))?x:a);\nvar G__10258 \x3d b;\nvar G__10259 \x3d c;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10257,G__10258,G__10259) : f.call(null,G__10257,G__10258,G__10259));\n});\nvar G__13303__4 \x3d (function() { \nvar G__13304__delegate \x3d function (a,b,c,ds){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a \x3d\x3d null))?x:a),b,c,ds);\n};\nvar G__13304 \x3d function (a,b,c,var_args){\nvar ds \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13305__i \x3d 0, G__13305__a \x3d new Array(arguments.length -  3);\nwhile (G__13305__i \x3c G__13305__a.length) {G__13305__a[G__13305__i] \x3d arguments[G__13305__i + 3]; ++G__13305__i;}\n  ds \x3d new cljs.core.IndexedSeq(G__13305__a,0,null);\n} \nreturn G__13304__delegate.call(this,a,b,c,ds);};\nG__13304.cljs$lang$maxFixedArity \x3d 3;\nG__13304.cljs$lang$applyTo \x3d (function (arglist__13306){\nvar a \x3d cljs.core.first(arglist__13306);\narglist__13306 \x3d cljs.core.next(arglist__13306);\nvar b \x3d cljs.core.first(arglist__13306);\narglist__13306 \x3d cljs.core.next(arglist__13306);\nvar c \x3d cljs.core.first(arglist__13306);\nvar ds \x3d cljs.core.rest(arglist__13306);\nreturn G__13304__delegate(a,b,c,ds);\n});\nG__13304.cljs$core$IFn$_invoke$arity$variadic \x3d G__13304__delegate;\nreturn G__13304;\n})()\n;\nG__13303 \x3d function(a,b,c,var_args){\nvar ds \x3d var_args;\nswitch(arguments.length){\ncase 1:\nreturn G__13303__1.call(this,a);\ncase 2:\nreturn G__13303__2.call(this,a,b);\ncase 3:\nreturn G__13303__3.call(this,a,b,c);\ndefault:\nvar G__13307 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13308__i \x3d 0, G__13308__a \x3d new Array(arguments.length -  3);\nwhile (G__13308__i \x3c G__13308__a.length) {G__13308__a[G__13308__i] \x3d arguments[G__13308__i + 3]; ++G__13308__i;}\nG__13307 \x3d new cljs.core.IndexedSeq(G__13308__a,0,null);\n}\nreturn G__13303__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13307);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13303.cljs$lang$maxFixedArity \x3d 3;\nG__13303.cljs$lang$applyTo \x3d G__13303__4.cljs$lang$applyTo;\nG__13303.cljs$core$IFn$_invoke$arity$1 \x3d G__13303__1;\nG__13303.cljs$core$IFn$_invoke$arity$2 \x3d G__13303__2;\nG__13303.cljs$core$IFn$_invoke$arity$3 \x3d G__13303__3;\nG__13303.cljs$core$IFn$_invoke$arity$variadic \x3d G__13303__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__13303;\n})()\n}));\n\n(cljs.core.fnil.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,x,y){\nreturn (function() {\nvar G__13309 \x3d null;\nvar G__13309__2 \x3d (function (a,b){\nvar G__10260 \x3d (((a \x3d\x3d null))?x:a);\nvar G__10261 \x3d (((b \x3d\x3d null))?y:b);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10260,G__10261) : f.call(null,G__10260,G__10261));\n});\nvar G__13309__3 \x3d (function (a,b,c){\nvar G__10262 \x3d (((a \x3d\x3d null))?x:a);\nvar G__10263 \x3d (((b \x3d\x3d null))?y:b);\nvar G__10264 \x3d c;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10262,G__10263,G__10264) : f.call(null,G__10262,G__10263,G__10264));\n});\nvar G__13309__4 \x3d (function() { \nvar G__13310__delegate \x3d function (a,b,c,ds){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a \x3d\x3d null))?x:a),(((b \x3d\x3d null))?y:b),c,ds);\n};\nvar G__13310 \x3d function (a,b,c,var_args){\nvar ds \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13311__i \x3d 0, G__13311__a \x3d new Array(arguments.length -  3);\nwhile (G__13311__i \x3c G__13311__a.length) {G__13311__a[G__13311__i] \x3d arguments[G__13311__i + 3]; ++G__13311__i;}\n  ds \x3d new cljs.core.IndexedSeq(G__13311__a,0,null);\n} \nreturn G__13310__delegate.call(this,a,b,c,ds);};\nG__13310.cljs$lang$maxFixedArity \x3d 3;\nG__13310.cljs$lang$applyTo \x3d (function (arglist__13312){\nvar a \x3d cljs.core.first(arglist__13312);\narglist__13312 \x3d cljs.core.next(arglist__13312);\nvar b \x3d cljs.core.first(arglist__13312);\narglist__13312 \x3d cljs.core.next(arglist__13312);\nvar c \x3d cljs.core.first(arglist__13312);\nvar ds \x3d cljs.core.rest(arglist__13312);\nreturn G__13310__delegate(a,b,c,ds);\n});\nG__13310.cljs$core$IFn$_invoke$arity$variadic \x3d G__13310__delegate;\nreturn G__13310;\n})()\n;\nG__13309 \x3d function(a,b,c,var_args){\nvar ds \x3d var_args;\nswitch(arguments.length){\ncase 2:\nreturn G__13309__2.call(this,a,b);\ncase 3:\nreturn G__13309__3.call(this,a,b,c);\ndefault:\nvar G__13313 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13314__i \x3d 0, G__13314__a \x3d new Array(arguments.length -  3);\nwhile (G__13314__i \x3c G__13314__a.length) {G__13314__a[G__13314__i] \x3d arguments[G__13314__i + 3]; ++G__13314__i;}\nG__13313 \x3d new cljs.core.IndexedSeq(G__13314__a,0,null);\n}\nreturn G__13309__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13313);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13309.cljs$lang$maxFixedArity \x3d 3;\nG__13309.cljs$lang$applyTo \x3d G__13309__4.cljs$lang$applyTo;\nG__13309.cljs$core$IFn$_invoke$arity$2 \x3d G__13309__2;\nG__13309.cljs$core$IFn$_invoke$arity$3 \x3d G__13309__3;\nG__13309.cljs$core$IFn$_invoke$arity$variadic \x3d G__13309__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__13309;\n})()\n}));\n\n(cljs.core.fnil.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,x,y,z){\nreturn (function() {\nvar G__13315 \x3d null;\nvar G__13315__2 \x3d (function (a,b){\nvar G__10265 \x3d (((a \x3d\x3d null))?x:a);\nvar G__10266 \x3d (((b \x3d\x3d null))?y:b);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10265,G__10266) : f.call(null,G__10265,G__10266));\n});\nvar G__13315__3 \x3d (function (a,b,c){\nvar G__10267 \x3d (((a \x3d\x3d null))?x:a);\nvar G__10268 \x3d (((b \x3d\x3d null))?y:b);\nvar G__10269 \x3d (((c \x3d\x3d null))?z:c);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10267,G__10268,G__10269) : f.call(null,G__10267,G__10268,G__10269));\n});\nvar G__13315__4 \x3d (function() { \nvar G__13328__delegate \x3d function (a,b,c,ds){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a \x3d\x3d null))?x:a),(((b \x3d\x3d null))?y:b),(((c \x3d\x3d null))?z:c),ds);\n};\nvar G__13328 \x3d function (a,b,c,var_args){\nvar ds \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13329__i \x3d 0, G__13329__a \x3d new Array(arguments.length -  3);\nwhile (G__13329__i \x3c G__13329__a.length) {G__13329__a[G__13329__i] \x3d arguments[G__13329__i + 3]; ++G__13329__i;}\n  ds \x3d new cljs.core.IndexedSeq(G__13329__a,0,null);\n} \nreturn G__13328__delegate.call(this,a,b,c,ds);};\nG__13328.cljs$lang$maxFixedArity \x3d 3;\nG__13328.cljs$lang$applyTo \x3d (function (arglist__13330){\nvar a \x3d cljs.core.first(arglist__13330);\narglist__13330 \x3d cljs.core.next(arglist__13330);\nvar b \x3d cljs.core.first(arglist__13330);\narglist__13330 \x3d cljs.core.next(arglist__13330);\nvar c \x3d cljs.core.first(arglist__13330);\nvar ds \x3d cljs.core.rest(arglist__13330);\nreturn G__13328__delegate(a,b,c,ds);\n});\nG__13328.cljs$core$IFn$_invoke$arity$variadic \x3d G__13328__delegate;\nreturn G__13328;\n})()\n;\nG__13315 \x3d function(a,b,c,var_args){\nvar ds \x3d var_args;\nswitch(arguments.length){\ncase 2:\nreturn G__13315__2.call(this,a,b);\ncase 3:\nreturn G__13315__3.call(this,a,b,c);\ndefault:\nvar G__13331 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13332__i \x3d 0, G__13332__a \x3d new Array(arguments.length -  3);\nwhile (G__13332__i \x3c G__13332__a.length) {G__13332__a[G__13332__i] \x3d arguments[G__13332__i + 3]; ++G__13332__i;}\nG__13331 \x3d new cljs.core.IndexedSeq(G__13332__a,0,null);\n}\nreturn G__13315__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__13331);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13315.cljs$lang$maxFixedArity \x3d 3;\nG__13315.cljs$lang$applyTo \x3d G__13315__4.cljs$lang$applyTo;\nG__13315.cljs$core$IFn$_invoke$arity$2 \x3d G__13315__2;\nG__13315.cljs$core$IFn$_invoke$arity$3 \x3d G__13315__3;\nG__13315.cljs$core$IFn$_invoke$arity$variadic \x3d G__13315__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__13315;\n})()\n}));\n\n(cljs.core.fnil.cljs$lang$maxFixedArity \x3d 4);\n\n/**\n * Returns a lazy sequence consisting of the result of applying f to 0\n *   and the first item of coll, followed by applying f to 1 and the second\n *   item in coll, etc, until coll is exhausted. Thus function f should\n *   accept 2 arguments, index and item. Returns a stateful transducer when\n *   no collection is provided.\n */\ncljs.core.map_indexed \x3d (function cljs$core$map_indexed(var_args){\nvar G__10271 \x3d arguments.length;\nswitch (G__10271) {\ncase 1:\nreturn cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn (function (rf){\nvar i \x3d (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1((-1)) : cljs.core.volatile_BANG_.call(null,(-1)));\nreturn (function() {\nvar G__13334 \x3d null;\nvar G__13334__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__13334__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__13334__2 \x3d (function (result,input){\nvar G__10272 \x3d result;\nvar G__10273 \x3d (function (){var G__10274 \x3d cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));\nvar G__10275 \x3d input;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10274,G__10275) : f.call(null,G__10274,G__10275));\n})();\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10272,G__10273) : rf.call(null,G__10272,G__10273));\n});\nG__13334 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__13334__0.call(this);\ncase 1:\nreturn G__13334__1.call(this,result);\ncase 2:\nreturn G__13334__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13334.cljs$core$IFn$_invoke$arity$0 \x3d G__13334__0;\nG__13334.cljs$core$IFn$_invoke$arity$1 \x3d G__13334__1;\nG__13334.cljs$core$IFn$_invoke$arity$2 \x3d G__13334__2;\nreturn G__13334;\n})()\n});\n}));\n\n(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\nvar mapi \x3d (function cljs$core$mapi(idx,coll__$1){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll__$1);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s)){\nvar c \x3d cljs.core.chunk_first(s);\nvar size \x3d cljs.core.count(c);\nvar b \x3d cljs.core.chunk_buffer(size);\nvar n__5636__auto___13335 \x3d size;\nvar i_13336 \x3d (0);\nwhile(true){\nif((i_13336 \x3c n__5636__auto___13335)){\ncljs.core.chunk_append(b,(function (){var G__10280 \x3d (idx + i_13336);\nvar G__10281 \x3d cljs.core._nth(c,i_13336);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10280,G__10281) : f.call(null,G__10280,G__10281));\n})());\n\nvar G__13337 \x3d (i_13336 + (1));\ni_13336 \x3d G__13337;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$mapi((idx + size),cljs.core.chunk_rest(s)));\n} else {\nreturn cljs.core.cons((function (){var G__10282 \x3d idx;\nvar G__10283 \x3d cljs.core.first(s);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10282,G__10283) : f.call(null,G__10282,G__10283));\n})(),cljs$core$mapi((idx + (1)),cljs.core.rest(s)));\n}\n} else {\nreturn null;\n}\n}),null,null));\n});\nreturn mapi((0),coll);\n}));\n\n(cljs.core.map_indexed.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a lazy sequence of the non-nil results of (f item). Note,\n *   this means false return values will be included.  f must be free of\n *   side-effects.  Returns a transducer when no collection is provided.\n */\ncljs.core.keep \x3d (function cljs$core$keep(var_args){\nvar G__10285 \x3d arguments.length;\nswitch (G__10285) {\ncase 1:\nreturn cljs.core.keep.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.keep.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.keep.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn (function (rf){\nreturn (function() {\nvar G__13339 \x3d null;\nvar G__13339__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__13339__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__13339__2 \x3d (function (result,input){\nvar v \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null,input));\nif((v \x3d\x3d null)){\nreturn result;\n} else {\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v));\n}\n});\nG__13339 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__13339__0.call(this);\ncase 1:\nreturn G__13339__1.call(this,result);\ncase 2:\nreturn G__13339__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13339.cljs$core$IFn$_invoke$arity$0 \x3d G__13339__0;\nG__13339.cljs$core$IFn$_invoke$arity$1 \x3d G__13339__1;\nG__13339.cljs$core$IFn$_invoke$arity$2 \x3d G__13339__2;\nreturn G__13339;\n})()\n});\n}));\n\n(cljs.core.keep.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s)){\nvar c \x3d cljs.core.chunk_first(s);\nvar size \x3d cljs.core.count(c);\nvar b \x3d cljs.core.chunk_buffer(size);\nvar n__5636__auto___13340 \x3d size;\nvar i_13341 \x3d (0);\nwhile(true){\nif((i_13341 \x3c n__5636__auto___13340)){\nvar x_13342 \x3d (function (){var G__10286 \x3d cljs.core._nth(c,i_13341);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10286) : f.call(null,G__10286));\n})();\nif((x_13342 \x3d\x3d null)){\n} else {\ncljs.core.chunk_append(b,x_13342);\n}\n\nvar G__13346 \x3d (i_13341 + (1));\ni_13341 \x3d G__13346;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));\n} else {\nvar x \x3d (function (){var G__10287 \x3d cljs.core.first(s);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10287) : f.call(null,G__10287));\n})();\nif((x \x3d\x3d null)){\nreturn cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));\n} else {\nreturn cljs.core.cons(x,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));\n}\n}\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.keep.cljs$lang$maxFixedArity \x3d 2);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n*/\ncljs.core.Atom \x3d (function (state,meta,validator,watches){\nthis.state \x3d state;\nthis.meta \x3d meta;\nthis.validator \x3d validator;\nthis.watches \x3d watches;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 16386;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 6455296;\n});\n(cljs.core.Atom.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (o,other){\nvar self__ \x3d this;\nvar o__$1 \x3d this;\nreturn (o__$1 \x3d\x3d\x3d other);\n}));\n\n(cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.state;\n}));\n\n(cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 \x3d (function (this$,oldval,newval){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar seq__10288 \x3d cljs.core.seq(self__.watches);\nvar chunk__10289 \x3d null;\nvar count__10290 \x3d (0);\nvar i__10291 \x3d (0);\nwhile(true){\nif((i__10291 \x3c count__10290)){\nvar vec__10298 \x3d chunk__10289.cljs$core$IIndexed$_nth$arity$2(null,i__10291);\nvar key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10298,(0),null);\nvar f \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10298,(1),null);\n(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key,this$__$1,oldval,newval) : f.call(null,key,this$__$1,oldval,newval));\n\n\nvar G__13360 \x3d seq__10288;\nvar G__13361 \x3d chunk__10289;\nvar G__13362 \x3d count__10290;\nvar G__13363 \x3d (i__10291 + (1));\nseq__10288 \x3d G__13360;\nchunk__10289 \x3d G__13361;\ncount__10290 \x3d G__13362;\ni__10291 \x3d G__13363;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__10288);\nif(temp__5804__auto__){\nvar seq__10288__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__10288__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__10288__$1);\nvar G__13364 \x3d cljs.core.chunk_rest(seq__10288__$1);\nvar G__13365 \x3d c__5568__auto__;\nvar G__13366 \x3d cljs.core.count(c__5568__auto__);\nvar G__13367 \x3d (0);\nseq__10288 \x3d G__13364;\nchunk__10289 \x3d G__13365;\ncount__10290 \x3d G__13366;\ni__10291 \x3d G__13367;\ncontinue;\n} else {\nvar vec__10301 \x3d cljs.core.first(seq__10288__$1);\nvar key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10301,(0),null);\nvar f \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10301,(1),null);\n(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(key,this$__$1,oldval,newval) : f.call(null,key,this$__$1,oldval,newval));\n\n\nvar G__13368 \x3d cljs.core.next(seq__10288__$1);\nvar G__13369 \x3d null;\nvar G__13370 \x3d (0);\nvar G__13371 \x3d (0);\nseq__10288 \x3d G__13368;\nchunk__10289 \x3d G__13369;\ncount__10290 \x3d G__13370;\ni__10291 \x3d G__13371;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 \x3d (function (this$,key,f){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\n(this$__$1.watches \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f));\n\nreturn this$__$1;\n}));\n\n(cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 \x3d (function (this$,key){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn (this$__$1.watches \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key));\n}));\n\n(cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn goog.getUid(this$__$1);\n}));\n\n(cljs.core.Atom.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22validator\x22,\x22validator\x22,-325659154,null),new cljs.core.Symbol(null,\x22watches\x22,\x22watches\x22,1367433992,null)], null);\n}));\n\n(cljs.core.Atom.cljs$lang$type \x3d true);\n\n(cljs.core.Atom.cljs$lang$ctorStr \x3d \x22cljs.core/Atom\x22);\n\n(cljs.core.Atom.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Atom\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Atom.\n */\ncljs.core.__GT_Atom \x3d (function cljs$core$__GT_Atom(state,meta,validator,watches){\nreturn (new cljs.core.Atom(state,meta,validator,watches));\n});\n\n/**\n * Creates and returns an Atom with an initial value of x and zero or\n *   more options (in any order):\n * \n *   :meta metadata-map\n * \n *   :validator validate-fn\n * \n *   If metadata-map is supplied, it will become the metadata on the\n *   atom. validate-fn must be nil or a side-effect-free fn of one\n *   argument, which will be passed the intended new state on any state\n *   change. If the new state is unacceptable, the validate-fn should\n *   return false or throw an Error.  If either of these error conditions\n *   occur, then the value of the atom will not change.\n */\ncljs.core.atom \x3d (function cljs$core$atom(var_args){\nvar G__10307 \x3d arguments.length;\nswitch (G__10307) {\ncase 1:\nreturn cljs.core.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13373 \x3d arguments.length;\nvar i__5770__auto___13374 \x3d (0);\nwhile(true){\nif((i__5770__auto___13374 \x3c len__5769__auto___13373)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13374]));\n\nvar G__13375 \x3d (i__5770__auto___13374 + (1));\ni__5770__auto___13374 \x3d G__13375;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((1)),(0),null));\nreturn cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.atom.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn (new cljs.core.Atom(x,null,null,null));\n}));\n\n(cljs.core.atom.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,p__10308){\nvar map__10309 \x3d p__10308;\nvar map__10309__$1 \x3d cljs.core.__destructure_map(map__10309);\nvar meta \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10309__$1,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964));\nvar validator \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__10309__$1,new cljs.core.Keyword(null,\x22validator\x22,\x22validator\x22,-1966190681));\nreturn (new cljs.core.Atom(x,meta,validator,null));\n}));\n\n/** @this {Function} */\n(cljs.core.atom.cljs$lang$applyTo \x3d (function (seq10305){\nvar G__10306 \x3d cljs.core.first(seq10305);\nvar seq10305__$1 \x3d cljs.core.next(seq10305);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10306,seq10305__$1);\n}));\n\n(cljs.core.atom.cljs$lang$maxFixedArity \x3d (1));\n\n/**\n * Sets the value of atom to newval without regard for the\n *   current value. Returns new-value.\n */\ncljs.core.reset_BANG_ \x3d (function cljs$core$reset_BANG_(a,new_value){\nif((a instanceof cljs.core.Atom)){\nvar validate \x3d a.validator;\nif((validate \x3d\x3d null)){\n} else {\nif(cljs.core.truth_((validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null,new_value)))){\n} else {\nthrow (new Error(\x22Validator rejected reference state\x22));\n}\n}\n\nvar old_value \x3d a.state;\n(a.state \x3d new_value);\n\nif((a.watches \x3d\x3d null)){\n} else {\na.cljs$core$IWatchable$_notify_watches$arity$3(null,old_value,new_value);\n}\n\nreturn new_value;\n} else {\nreturn cljs.core._reset_BANG_(a,new_value);\n}\n});\n/**\n * Sets the value of atom to newval. Returns [old new], the value of the\n * atom before and after the reset.\n */\ncljs.core.reset_vals_BANG_ \x3d (function cljs$core$reset_vals_BANG_(a,new_value){\nvar validate \x3d a.validator;\nif((validate \x3d\x3d null)){\n} else {\nif(cljs.core.truth_((validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(new_value) : validate.call(null,new_value)))){\n} else {\nthrow (new Error(\x22Validator rejected reference state\x22));\n}\n}\n\nvar old_value \x3d a.state;\n(a.state \x3d new_value);\n\nif((a.watches \x3d\x3d null)){\n} else {\ncljs.core._notify_watches(a,old_value,new_value);\n}\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [old_value,new_value], null);\n});\n/**\n * Atomically swaps the value of atom to be:\n *   (apply f current-value-of-atom args). Note that f may be called\n *   multiple times, and thus should be free of side effects.  Returns\n *   the value that was swapped in.\n */\ncljs.core.swap_BANG_ \x3d (function cljs$core$swap_BANG_(var_args){\nvar G__10316 \x3d arguments.length;\nswitch (G__10316) {\ncase 2:\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13383 \x3d arguments.length;\nvar i__5770__auto___13384 \x3d (0);\nwhile(true){\nif((i__5770__auto___13384 \x3c len__5769__auto___13383)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13384]));\n\nvar G__13385 \x3d (i__5770__auto___13384 + (1));\ni__5770__auto___13384 \x3d G__13385;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((4)),(0),null));\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,f){\nif((a instanceof cljs.core.Atom)){\nreturn cljs.core.reset_BANG_(a,(function (){var G__10317 \x3d a.state;\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10317) : f.call(null,G__10317));\n})());\n} else {\nreturn cljs.core._swap_BANG_(a,f);\n}\n}));\n\n(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,f,x){\nif((a instanceof cljs.core.Atom)){\nreturn cljs.core.reset_BANG_(a,(function (){var G__10318 \x3d a.state;\nvar G__10319 \x3d x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10318,G__10319) : f.call(null,G__10318,G__10319));\n})());\n} else {\nreturn cljs.core._swap_BANG_(a,f,x);\n}\n}));\n\n(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,f,x,y){\nif((a instanceof cljs.core.Atom)){\nreturn cljs.core.reset_BANG_(a,(function (){var G__10320 \x3d a.state;\nvar G__10321 \x3d x;\nvar G__10322 \x3d y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10320,G__10321,G__10322) : f.call(null,G__10320,G__10321,G__10322));\n})());\n} else {\nreturn cljs.core._swap_BANG_(a,f,x,y);\n}\n}));\n\n(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (a,f,x,y,more){\nif((a instanceof cljs.core.Atom)){\nreturn cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));\n} else {\nreturn cljs.core._swap_BANG_(a,f,x,y,more);\n}\n}));\n\n/** @this {Function} */\n(cljs.core.swap_BANG_.cljs$lang$applyTo \x3d (function (seq10311){\nvar G__10312 \x3d cljs.core.first(seq10311);\nvar seq10311__$1 \x3d cljs.core.next(seq10311);\nvar G__10313 \x3d cljs.core.first(seq10311__$1);\nvar seq10311__$2 \x3d cljs.core.next(seq10311__$1);\nvar G__10314 \x3d cljs.core.first(seq10311__$2);\nvar seq10311__$3 \x3d cljs.core.next(seq10311__$2);\nvar G__10315 \x3d cljs.core.first(seq10311__$3);\nvar seq10311__$4 \x3d cljs.core.next(seq10311__$3);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10312,G__10313,G__10314,G__10315,seq10311__$4);\n}));\n\n(cljs.core.swap_BANG_.cljs$lang$maxFixedArity \x3d (4));\n\n/**\n * Atomically swaps the value of atom to be:\n *   (apply f current-value-of-atom args). Note that f may be called\n *   multiple times, and thus should be free of side effects.\n *   Returns [old new], the value of the atom before and after the swap.\n */\ncljs.core.swap_vals_BANG_ \x3d (function cljs$core$swap_vals_BANG_(var_args){\nvar G__10329 \x3d arguments.length;\nswitch (G__10329) {\ncase 2:\nreturn cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13396 \x3d arguments.length;\nvar i__5770__auto___13397 \x3d (0);\nwhile(true){\nif((i__5770__auto___13397 \x3c len__5769__auto___13396)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13397]));\n\nvar G__13398 \x3d (i__5770__auto___13397 + (1));\ni__5770__auto___13397 \x3d G__13398;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((4)),(0),null));\nreturn cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,f){\nreturn cljs.core.reset_vals_BANG_(a,(function (){var G__10330 \x3d a.state;\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10330) : f.call(null,G__10330));\n})());\n}));\n\n(cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,f,x){\nreturn cljs.core.reset_vals_BANG_(a,(function (){var G__10331 \x3d a.state;\nvar G__10332 \x3d x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10331,G__10332) : f.call(null,G__10331,G__10332));\n})());\n}));\n\n(cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,f,x,y){\nreturn cljs.core.reset_vals_BANG_(a,(function (){var G__10333 \x3d a.state;\nvar G__10334 \x3d x;\nvar G__10335 \x3d y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10333,G__10334,G__10335) : f.call(null,G__10333,G__10334,G__10335));\n})());\n}));\n\n(cljs.core.swap_vals_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (a,f,x,y,more){\nreturn cljs.core.reset_vals_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));\n}));\n\n/** @this {Function} */\n(cljs.core.swap_vals_BANG_.cljs$lang$applyTo \x3d (function (seq10324){\nvar G__10325 \x3d cljs.core.first(seq10324);\nvar seq10324__$1 \x3d cljs.core.next(seq10324);\nvar G__10326 \x3d cljs.core.first(seq10324__$1);\nvar seq10324__$2 \x3d cljs.core.next(seq10324__$1);\nvar G__10327 \x3d cljs.core.first(seq10324__$2);\nvar seq10324__$3 \x3d cljs.core.next(seq10324__$2);\nvar G__10328 \x3d cljs.core.first(seq10324__$3);\nvar seq10324__$4 \x3d cljs.core.next(seq10324__$3);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10325,G__10326,G__10327,G__10328,seq10324__$4);\n}));\n\n(cljs.core.swap_vals_BANG_.cljs$lang$maxFixedArity \x3d (4));\n\n/**\n * Atomically sets the value of atom to newval if and only if the\n *   current value of the atom is equal to oldval. Returns true if\n *   set happened, else false.\n */\ncljs.core.compare_and_set_BANG_ \x3d (function cljs$core$compare_and_set_BANG_(a,oldval,newval){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){\ncljs.core.reset_BANG_(a,newval);\n\nreturn true;\n} else {\nreturn false;\n}\n});\n/**\n * Sets the validator-fn for an atom. validator-fn must be nil or a\n *   side-effect-free fn of one argument, which will be passed the intended\n *   new state on any state change. If the new state is unacceptable, the\n *   validator-fn should return false or throw an Error. If the current state\n *   is not acceptable to the new validator, an Error will be thrown and the\n *   validator will not be changed.\n */\ncljs.core.set_validator_BANG_ \x3d (function cljs$core$set_validator_BANG_(iref,val){\nif((((!((val \x3d\x3d null)))) \x26\x26 (cljs.core.not((function (){var G__10336 \x3d cljs.core._deref(iref);\nreturn (val.cljs$core$IFn$_invoke$arity$1 ? val.cljs$core$IFn$_invoke$arity$1(G__10336) : val.call(null,G__10336));\n})())))){\nthrow (new Error(\x22Validator rejected reference state\x22));\n} else {\n}\n\nreturn (iref.validator \x3d val);\n});\n/**\n * Gets the validator-fn for a var/ref/agent/atom.\n */\ncljs.core.get_validator \x3d (function cljs$core$get_validator(iref){\nreturn iref.validator;\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IVolatile}\n * @implements {cljs.core.IDeref}\n*/\ncljs.core.Volatile \x3d (function (state){\nthis.state \x3d state;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32768;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.Volatile.prototype.cljs$core$IVolatile$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 \x3d (function (_,new_state){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (self__.state \x3d new_state);\n}));\n\n(cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.state;\n}));\n\n(cljs.core.Volatile.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Volatile.cljs$lang$type \x3d true);\n\n(cljs.core.Volatile.cljs$lang$ctorStr \x3d \x22cljs.core/Volatile\x22);\n\n(cljs.core.Volatile.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Volatile\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Volatile.\n */\ncljs.core.__GT_Volatile \x3d (function cljs$core$__GT_Volatile(state){\nreturn (new cljs.core.Volatile(state));\n});\n\n/**\n * Creates and returns a Volatile with an initial value of val.\n */\ncljs.core.volatile_BANG_ \x3d (function cljs$core$volatile_BANG_(val){\nreturn (new cljs.core.Volatile(val));\n});\n/**\n * Returns true if x is a volatile.\n */\ncljs.core.volatile_QMARK_ \x3d (function cljs$core$volatile_QMARK_(x){\nreturn (x instanceof cljs.core.Volatile);\n});\n/**\n * Sets the value of volatile to newval without regard for the\n * current value. Returns newval.\n */\ncljs.core.vreset_BANG_ \x3d (function cljs$core$vreset_BANG_(vol,newval){\nreturn cljs.core._vreset_BANG_(vol,newval);\n});\n/**\n * Returns a lazy sequence of the non-nil results of (f index item). Note,\n *   this means false return values will be included.  f must be free of\n *   side-effects.  Returns a stateful transducer when no collection is\n *   provided.\n */\ncljs.core.keep_indexed \x3d (function cljs$core$keep_indexed(var_args){\nvar G__10338 \x3d arguments.length;\nswitch (G__10338) {\ncase 1:\nreturn cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn (function (rf){\nvar ia \x3d cljs.core.volatile_BANG_((-1));\nreturn (function() {\nvar G__13406 \x3d null;\nvar G__13406__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__13406__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__13406__2 \x3d (function (result,input){\nvar i \x3d ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));\nvar v \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(i,input) : f.call(null,i,input));\nif((v \x3d\x3d null)){\nreturn result;\n} else {\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v));\n}\n});\nG__13406 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__13406__0.call(this);\ncase 1:\nreturn G__13406__1.call(this,result);\ncase 2:\nreturn G__13406__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13406.cljs$core$IFn$_invoke$arity$0 \x3d G__13406__0;\nG__13406.cljs$core$IFn$_invoke$arity$1 \x3d G__13406__1;\nG__13406.cljs$core$IFn$_invoke$arity$2 \x3d G__13406__2;\nreturn G__13406;\n})()\n});\n}));\n\n(cljs.core.keep_indexed.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\nvar keepi \x3d (function cljs$core$keepi(idx,coll__$1){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll__$1);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s)){\nvar c \x3d cljs.core.chunk_first(s);\nvar size \x3d cljs.core.count(c);\nvar b \x3d cljs.core.chunk_buffer(size);\nvar n__5636__auto___13407 \x3d size;\nvar i_13411 \x3d (0);\nwhile(true){\nif((i_13411 \x3c n__5636__auto___13407)){\nvar x_13412 \x3d (function (){var G__10343 \x3d (idx + i_13411);\nvar G__10344 \x3d cljs.core._nth(c,i_13411);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10343,G__10344) : f.call(null,G__10343,G__10344));\n})();\nif((x_13412 \x3d\x3d null)){\n} else {\ncljs.core.chunk_append(b,x_13412);\n}\n\nvar G__13413 \x3d (i_13411 + (1));\ni_13411 \x3d G__13413;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keepi((idx + size),cljs.core.chunk_rest(s)));\n} else {\nvar x \x3d (function (){var G__10345 \x3d idx;\nvar G__10346 \x3d cljs.core.first(s);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10345,G__10346) : f.call(null,G__10345,G__10346));\n})();\nif((x \x3d\x3d null)){\nreturn cljs$core$keepi((idx + (1)),cljs.core.rest(s));\n} else {\nreturn cljs.core.cons(x,cljs$core$keepi((idx + (1)),cljs.core.rest(s)));\n}\n}\n} else {\nreturn null;\n}\n}),null,null));\n});\nreturn keepi((0),coll);\n}));\n\n(cljs.core.keep_indexed.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Takes a set of predicates and returns a function f that returns true if all of its\n *   composing predicates return a logical true value against all of its arguments, else it returns\n *   false. Note that f is short-circuiting in that it will stop execution on the first\n *   argument that triggers a logical false result against the original predicates.\n */\ncljs.core.every_pred \x3d (function cljs$core$every_pred(var_args){\nvar G__10358 \x3d arguments.length;\nswitch (G__10358) {\ncase 1:\nreturn cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13421 \x3d arguments.length;\nvar i__5770__auto___13422 \x3d (0);\nwhile(true){\nif((i__5770__auto___13422 \x3c len__5769__auto___13421)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13422]));\n\nvar G__13423 \x3d (i__5770__auto___13422 + (1));\ni__5770__auto___13422 \x3d G__13423;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.every_pred.cljs$core$IFn$_invoke$arity$1 \x3d (function (p){\nreturn (function() {\nvar cljs$core$ep1 \x3d null;\nvar cljs$core$ep1__0 \x3d (function (){\nreturn true;\n});\nvar cljs$core$ep1__1 \x3d (function (x){\nreturn cljs.core.boolean$((p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x)));\n});\nvar cljs$core$ep1__2 \x3d (function (x,y){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x));\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null,y));\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\nvar cljs$core$ep1__3 \x3d (function (x,y,z){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x));\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null,y));\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null,z));\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\nvar cljs$core$ep1__4 \x3d (function() { \nvar G__13424__delegate \x3d function (x,y,z,args){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d cljs$core$ep1.cljs$core$IFn$_invoke$arity$3(x,y,z);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core.every_QMARK_(p,args);\n} else {\nreturn and__5043__auto__;\n}\n})());\n};\nvar G__13424 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13425__i \x3d 0, G__13425__a \x3d new Array(arguments.length -  3);\nwhile (G__13425__i \x3c G__13425__a.length) {G__13425__a[G__13425__i] \x3d arguments[G__13425__i + 3]; ++G__13425__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13425__a,0,null);\n} \nreturn G__13424__delegate.call(this,x,y,z,args);};\nG__13424.cljs$lang$maxFixedArity \x3d 3;\nG__13424.cljs$lang$applyTo \x3d (function (arglist__13426){\nvar x \x3d cljs.core.first(arglist__13426);\narglist__13426 \x3d cljs.core.next(arglist__13426);\nvar y \x3d cljs.core.first(arglist__13426);\narglist__13426 \x3d cljs.core.next(arglist__13426);\nvar z \x3d cljs.core.first(arglist__13426);\nvar args \x3d cljs.core.rest(arglist__13426);\nreturn G__13424__delegate(x,y,z,args);\n});\nG__13424.cljs$core$IFn$_invoke$arity$variadic \x3d G__13424__delegate;\nreturn G__13424;\n})()\n;\ncljs$core$ep1 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn cljs$core$ep1__0.call(this);\ncase 1:\nreturn cljs$core$ep1__1.call(this,x);\ncase 2:\nreturn cljs$core$ep1__2.call(this,x,y);\ncase 3:\nreturn cljs$core$ep1__3.call(this,x,y,z);\ndefault:\nvar G__13427 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13428__i \x3d 0, G__13428__a \x3d new Array(arguments.length -  3);\nwhile (G__13428__i \x3c G__13428__a.length) {G__13428__a[G__13428__i] \x3d arguments[G__13428__i + 3]; ++G__13428__i;}\nG__13427 \x3d new cljs.core.IndexedSeq(G__13428__a,0,null);\n}\nreturn cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13427);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\ncljs$core$ep1.cljs$lang$maxFixedArity \x3d 3;\ncljs$core$ep1.cljs$lang$applyTo \x3d cljs$core$ep1__4.cljs$lang$applyTo;\ncljs$core$ep1.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$ep1__0;\ncljs$core$ep1.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$ep1__1;\ncljs$core$ep1.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$ep1__2;\ncljs$core$ep1.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$ep1__3;\ncljs$core$ep1.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$ep1__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn cljs$core$ep1;\n})()\n}));\n\n(cljs.core.every_pred.cljs$core$IFn$_invoke$arity$2 \x3d (function (p1,p2){\nreturn (function() {\nvar cljs$core$ep2 \x3d null;\nvar cljs$core$ep2__0 \x3d (function (){\nreturn true;\n});\nvar cljs$core$ep2__1 \x3d (function (x){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\nvar cljs$core$ep2__2 \x3d (function (x,y){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\nif(cljs.core.truth_(and__5043__auto____$1)){\nvar and__5043__auto____$2 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\nif(cljs.core.truth_(and__5043__auto____$2)){\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\nvar cljs$core$ep2__3 \x3d (function (x,y,z){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\nif(cljs.core.truth_(and__5043__auto____$1)){\nvar and__5043__auto____$2 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null,z));\nif(cljs.core.truth_(and__5043__auto____$2)){\nvar and__5043__auto____$3 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\nif(cljs.core.truth_(and__5043__auto____$3)){\nvar and__5043__auto____$4 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\nif(cljs.core.truth_(and__5043__auto____$4)){\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null,z));\n} else {\nreturn and__5043__auto____$4;\n}\n} else {\nreturn and__5043__auto____$3;\n}\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\nvar cljs$core$ep2__4 \x3d (function() { \nvar G__13429__delegate \x3d function (x,y,z,args){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d cljs$core$ep2.cljs$core$IFn$_invoke$arity$3(x,y,z);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core.every_QMARK_((function (p1__10347_SHARP_){\nvar and__5043__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__10347_SHARP_) : p1.call(null,p1__10347_SHARP_));\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__10347_SHARP_) : p2.call(null,p1__10347_SHARP_));\n} else {\nreturn and__5043__auto____$1;\n}\n}),args);\n} else {\nreturn and__5043__auto__;\n}\n})());\n};\nvar G__13429 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13430__i \x3d 0, G__13430__a \x3d new Array(arguments.length -  3);\nwhile (G__13430__i \x3c G__13430__a.length) {G__13430__a[G__13430__i] \x3d arguments[G__13430__i + 3]; ++G__13430__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13430__a,0,null);\n} \nreturn G__13429__delegate.call(this,x,y,z,args);};\nG__13429.cljs$lang$maxFixedArity \x3d 3;\nG__13429.cljs$lang$applyTo \x3d (function (arglist__13431){\nvar x \x3d cljs.core.first(arglist__13431);\narglist__13431 \x3d cljs.core.next(arglist__13431);\nvar y \x3d cljs.core.first(arglist__13431);\narglist__13431 \x3d cljs.core.next(arglist__13431);\nvar z \x3d cljs.core.first(arglist__13431);\nvar args \x3d cljs.core.rest(arglist__13431);\nreturn G__13429__delegate(x,y,z,args);\n});\nG__13429.cljs$core$IFn$_invoke$arity$variadic \x3d G__13429__delegate;\nreturn G__13429;\n})()\n;\ncljs$core$ep2 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn cljs$core$ep2__0.call(this);\ncase 1:\nreturn cljs$core$ep2__1.call(this,x);\ncase 2:\nreturn cljs$core$ep2__2.call(this,x,y);\ncase 3:\nreturn cljs$core$ep2__3.call(this,x,y,z);\ndefault:\nvar G__13432 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13433__i \x3d 0, G__13433__a \x3d new Array(arguments.length -  3);\nwhile (G__13433__i \x3c G__13433__a.length) {G__13433__a[G__13433__i] \x3d arguments[G__13433__i + 3]; ++G__13433__i;}\nG__13432 \x3d new cljs.core.IndexedSeq(G__13433__a,0,null);\n}\nreturn cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13432);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\ncljs$core$ep2.cljs$lang$maxFixedArity \x3d 3;\ncljs$core$ep2.cljs$lang$applyTo \x3d cljs$core$ep2__4.cljs$lang$applyTo;\ncljs$core$ep2.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$ep2__0;\ncljs$core$ep2.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$ep2__1;\ncljs$core$ep2.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$ep2__2;\ncljs$core$ep2.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$ep2__3;\ncljs$core$ep2.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$ep2__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn cljs$core$ep2;\n})()\n}));\n\n(cljs.core.every_pred.cljs$core$IFn$_invoke$arity$3 \x3d (function (p1,p2,p3){\nreturn (function() {\nvar cljs$core$ep3 \x3d null;\nvar cljs$core$ep3__0 \x3d (function (){\nreturn true;\n});\nvar cljs$core$ep3__1 \x3d (function (x){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\nvar cljs$core$ep3__2 \x3d (function (x,y){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\nif(cljs.core.truth_(and__5043__auto____$1)){\nvar and__5043__auto____$2 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\nif(cljs.core.truth_(and__5043__auto____$2)){\nvar and__5043__auto____$3 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\nif(cljs.core.truth_(and__5043__auto____$3)){\nvar and__5043__auto____$4 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\nif(cljs.core.truth_(and__5043__auto____$4)){\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null,y));\n} else {\nreturn and__5043__auto____$4;\n}\n} else {\nreturn and__5043__auto____$3;\n}\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\nvar cljs$core$ep3__3 \x3d (function (x,y,z){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\nif(cljs.core.truth_(and__5043__auto____$1)){\nvar and__5043__auto____$2 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null,z));\nif(cljs.core.truth_(and__5043__auto____$2)){\nvar and__5043__auto____$3 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\nif(cljs.core.truth_(and__5043__auto____$3)){\nvar and__5043__auto____$4 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\nif(cljs.core.truth_(and__5043__auto____$4)){\nvar and__5043__auto____$5 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null,z));\nif(cljs.core.truth_(and__5043__auto____$5)){\nvar and__5043__auto____$6 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\nif(cljs.core.truth_(and__5043__auto____$6)){\nvar and__5043__auto____$7 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null,y));\nif(cljs.core.truth_(and__5043__auto____$7)){\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null,z));\n} else {\nreturn and__5043__auto____$7;\n}\n} else {\nreturn and__5043__auto____$6;\n}\n} else {\nreturn and__5043__auto____$5;\n}\n} else {\nreturn and__5043__auto____$4;\n}\n} else {\nreturn and__5043__auto____$3;\n}\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\nvar cljs$core$ep3__4 \x3d (function() { \nvar G__13440__delegate \x3d function (x,y,z,args){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d cljs$core$ep3.cljs$core$IFn$_invoke$arity$3(x,y,z);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core.every_QMARK_((function (p1__10348_SHARP_){\nvar and__5043__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__10348_SHARP_) : p1.call(null,p1__10348_SHARP_));\nif(cljs.core.truth_(and__5043__auto____$1)){\nvar and__5043__auto____$2 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__10348_SHARP_) : p2.call(null,p1__10348_SHARP_));\nif(cljs.core.truth_(and__5043__auto____$2)){\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__10348_SHARP_) : p3.call(null,p1__10348_SHARP_));\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n}),args);\n} else {\nreturn and__5043__auto__;\n}\n})());\n};\nvar G__13440 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13441__i \x3d 0, G__13441__a \x3d new Array(arguments.length -  3);\nwhile (G__13441__i \x3c G__13441__a.length) {G__13441__a[G__13441__i] \x3d arguments[G__13441__i + 3]; ++G__13441__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13441__a,0,null);\n} \nreturn G__13440__delegate.call(this,x,y,z,args);};\nG__13440.cljs$lang$maxFixedArity \x3d 3;\nG__13440.cljs$lang$applyTo \x3d (function (arglist__13442){\nvar x \x3d cljs.core.first(arglist__13442);\narglist__13442 \x3d cljs.core.next(arglist__13442);\nvar y \x3d cljs.core.first(arglist__13442);\narglist__13442 \x3d cljs.core.next(arglist__13442);\nvar z \x3d cljs.core.first(arglist__13442);\nvar args \x3d cljs.core.rest(arglist__13442);\nreturn G__13440__delegate(x,y,z,args);\n});\nG__13440.cljs$core$IFn$_invoke$arity$variadic \x3d G__13440__delegate;\nreturn G__13440;\n})()\n;\ncljs$core$ep3 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn cljs$core$ep3__0.call(this);\ncase 1:\nreturn cljs$core$ep3__1.call(this,x);\ncase 2:\nreturn cljs$core$ep3__2.call(this,x,y);\ncase 3:\nreturn cljs$core$ep3__3.call(this,x,y,z);\ndefault:\nvar G__13443 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13444__i \x3d 0, G__13444__a \x3d new Array(arguments.length -  3);\nwhile (G__13444__i \x3c G__13444__a.length) {G__13444__a[G__13444__i] \x3d arguments[G__13444__i + 3]; ++G__13444__i;}\nG__13443 \x3d new cljs.core.IndexedSeq(G__13444__a,0,null);\n}\nreturn cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13443);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\ncljs$core$ep3.cljs$lang$maxFixedArity \x3d 3;\ncljs$core$ep3.cljs$lang$applyTo \x3d cljs$core$ep3__4.cljs$lang$applyTo;\ncljs$core$ep3.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$ep3__0;\ncljs$core$ep3.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$ep3__1;\ncljs$core$ep3.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$ep3__2;\ncljs$core$ep3.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$ep3__3;\ncljs$core$ep3.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$ep3__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn cljs$core$ep3;\n})()\n}));\n\n(cljs.core.every_pred.cljs$core$IFn$_invoke$arity$variadic \x3d (function (p1,p2,p3,ps){\nvar ps__$1 \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);\nreturn (function() {\nvar cljs$core$epn \x3d null;\nvar cljs$core$epn__0 \x3d (function (){\nreturn true;\n});\nvar cljs$core$epn__1 \x3d (function (x){\nreturn cljs.core.every_QMARK_((function (p1__10349_SHARP_){\nreturn (p1__10349_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10349_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10349_SHARP_.call(null,x));\n}),ps__$1);\n});\nvar cljs$core$epn__2 \x3d (function (x,y){\nreturn cljs.core.every_QMARK_((function (p1__10350_SHARP_){\nvar and__5043__auto__ \x3d (p1__10350_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10350_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10350_SHARP_.call(null,x));\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (p1__10350_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10350_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__10350_SHARP_.call(null,y));\n} else {\nreturn and__5043__auto__;\n}\n}),ps__$1);\n});\nvar cljs$core$epn__3 \x3d (function (x,y,z){\nreturn cljs.core.every_QMARK_((function (p1__10351_SHARP_){\nvar and__5043__auto__ \x3d (p1__10351_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10351_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10351_SHARP_.call(null,x));\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d (p1__10351_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10351_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__10351_SHARP_.call(null,y));\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn (p1__10351_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10351_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__10351_SHARP_.call(null,z));\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n}),ps__$1);\n});\nvar cljs$core$epn__4 \x3d (function() { \nvar G__13448__delegate \x3d function (x,y,z,args){\nreturn cljs.core.boolean$((function (){var and__5043__auto__ \x3d cljs$core$epn.cljs$core$IFn$_invoke$arity$3(x,y,z);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core.every_QMARK_((function (p1__10352_SHARP_){\nreturn cljs.core.every_QMARK_(p1__10352_SHARP_,args);\n}),ps__$1);\n} else {\nreturn and__5043__auto__;\n}\n})());\n};\nvar G__13448 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13449__i \x3d 0, G__13449__a \x3d new Array(arguments.length -  3);\nwhile (G__13449__i \x3c G__13449__a.length) {G__13449__a[G__13449__i] \x3d arguments[G__13449__i + 3]; ++G__13449__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13449__a,0,null);\n} \nreturn G__13448__delegate.call(this,x,y,z,args);};\nG__13448.cljs$lang$maxFixedArity \x3d 3;\nG__13448.cljs$lang$applyTo \x3d (function (arglist__13450){\nvar x \x3d cljs.core.first(arglist__13450);\narglist__13450 \x3d cljs.core.next(arglist__13450);\nvar y \x3d cljs.core.first(arglist__13450);\narglist__13450 \x3d cljs.core.next(arglist__13450);\nvar z \x3d cljs.core.first(arglist__13450);\nvar args \x3d cljs.core.rest(arglist__13450);\nreturn G__13448__delegate(x,y,z,args);\n});\nG__13448.cljs$core$IFn$_invoke$arity$variadic \x3d G__13448__delegate;\nreturn G__13448;\n})()\n;\ncljs$core$epn \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn cljs$core$epn__0.call(this);\ncase 1:\nreturn cljs$core$epn__1.call(this,x);\ncase 2:\nreturn cljs$core$epn__2.call(this,x,y);\ncase 3:\nreturn cljs$core$epn__3.call(this,x,y,z);\ndefault:\nvar G__13451 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13452__i \x3d 0, G__13452__a \x3d new Array(arguments.length -  3);\nwhile (G__13452__i \x3c G__13452__a.length) {G__13452__a[G__13452__i] \x3d arguments[G__13452__i + 3]; ++G__13452__i;}\nG__13451 \x3d new cljs.core.IndexedSeq(G__13452__a,0,null);\n}\nreturn cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13451);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\ncljs$core$epn.cljs$lang$maxFixedArity \x3d 3;\ncljs$core$epn.cljs$lang$applyTo \x3d cljs$core$epn__4.cljs$lang$applyTo;\ncljs$core$epn.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$epn__0;\ncljs$core$epn.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$epn__1;\ncljs$core$epn.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$epn__2;\ncljs$core$epn.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$epn__3;\ncljs$core$epn.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$epn__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn cljs$core$epn;\n})()\n}));\n\n/** @this {Function} */\n(cljs.core.every_pred.cljs$lang$applyTo \x3d (function (seq10354){\nvar G__10355 \x3d cljs.core.first(seq10354);\nvar seq10354__$1 \x3d cljs.core.next(seq10354);\nvar G__10356 \x3d cljs.core.first(seq10354__$1);\nvar seq10354__$2 \x3d cljs.core.next(seq10354__$1);\nvar G__10357 \x3d cljs.core.first(seq10354__$2);\nvar seq10354__$3 \x3d cljs.core.next(seq10354__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10355,G__10356,G__10357,seq10354__$3);\n}));\n\n(cljs.core.every_pred.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * Takes a set of predicates and returns a function f that returns the first logical true value\n *   returned by one of its composing predicates against any of its arguments, else it returns\n *   logical false. Note that f is short-circuiting in that it will stop execution on the first\n *   argument that triggers a logical true result against the original predicates.\n */\ncljs.core.some_fn \x3d (function cljs$core$some_fn(var_args){\nvar G__10370 \x3d arguments.length;\nswitch (G__10370) {\ncase 1:\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13454 \x3d arguments.length;\nvar i__5770__auto___13455 \x3d (0);\nwhile(true){\nif((i__5770__auto___13455 \x3c len__5769__auto___13454)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13455]));\n\nvar G__13456 \x3d (i__5770__auto___13455 + (1));\ni__5770__auto___13455 \x3d G__13456;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$1 \x3d (function (p){\nreturn (function() {\nvar cljs$core$sp1 \x3d null;\nvar cljs$core$sp1__0 \x3d (function (){\nreturn null;\n});\nvar cljs$core$sp1__1 \x3d (function (x){\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x));\n});\nvar cljs$core$sp1__2 \x3d (function (x,y){\nvar or__5045__auto__ \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null,y));\n}\n});\nvar cljs$core$sp1__3 \x3d (function (x,y,z){\nvar or__5045__auto__ \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(x) : p.call(null,x));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(y) : p.call(null,y));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(z) : p.call(null,z));\n}\n}\n});\nvar cljs$core$sp1__4 \x3d (function() { \nvar G__13457__delegate \x3d function (x,y,z,args){\nvar or__5045__auto__ \x3d cljs$core$sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.some(p,args);\n}\n};\nvar G__13457 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13458__i \x3d 0, G__13458__a \x3d new Array(arguments.length -  3);\nwhile (G__13458__i \x3c G__13458__a.length) {G__13458__a[G__13458__i] \x3d arguments[G__13458__i + 3]; ++G__13458__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13458__a,0,null);\n} \nreturn G__13457__delegate.call(this,x,y,z,args);};\nG__13457.cljs$lang$maxFixedArity \x3d 3;\nG__13457.cljs$lang$applyTo \x3d (function (arglist__13459){\nvar x \x3d cljs.core.first(arglist__13459);\narglist__13459 \x3d cljs.core.next(arglist__13459);\nvar y \x3d cljs.core.first(arglist__13459);\narglist__13459 \x3d cljs.core.next(arglist__13459);\nvar z \x3d cljs.core.first(arglist__13459);\nvar args \x3d cljs.core.rest(arglist__13459);\nreturn G__13457__delegate(x,y,z,args);\n});\nG__13457.cljs$core$IFn$_invoke$arity$variadic \x3d G__13457__delegate;\nreturn G__13457;\n})()\n;\ncljs$core$sp1 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn cljs$core$sp1__0.call(this);\ncase 1:\nreturn cljs$core$sp1__1.call(this,x);\ncase 2:\nreturn cljs$core$sp1__2.call(this,x,y);\ncase 3:\nreturn cljs$core$sp1__3.call(this,x,y,z);\ndefault:\nvar G__13460 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13461__i \x3d 0, G__13461__a \x3d new Array(arguments.length -  3);\nwhile (G__13461__i \x3c G__13461__a.length) {G__13461__a[G__13461__i] \x3d arguments[G__13461__i + 3]; ++G__13461__i;}\nG__13460 \x3d new cljs.core.IndexedSeq(G__13461__a,0,null);\n}\nreturn cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13460);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\ncljs$core$sp1.cljs$lang$maxFixedArity \x3d 3;\ncljs$core$sp1.cljs$lang$applyTo \x3d cljs$core$sp1__4.cljs$lang$applyTo;\ncljs$core$sp1.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$sp1__0;\ncljs$core$sp1.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$sp1__1;\ncljs$core$sp1.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$sp1__2;\ncljs$core$sp1.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$sp1__3;\ncljs$core$sp1.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$sp1__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn cljs$core$sp1;\n})()\n}));\n\n(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$2 \x3d (function (p1,p2){\nreturn (function() {\nvar cljs$core$sp2 \x3d null;\nvar cljs$core$sp2__0 \x3d (function (){\nreturn null;\n});\nvar cljs$core$sp2__1 \x3d (function (x){\nvar or__5045__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\n}\n});\nvar cljs$core$sp2__2 \x3d (function (x,y){\nvar or__5045__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\n}\n}\n}\n});\nvar cljs$core$sp2__3 \x3d (function (x,y,z){\nvar or__5045__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null,z));\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nvar or__5045__auto____$3 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\nif(cljs.core.truth_(or__5045__auto____$3)){\nreturn or__5045__auto____$3;\n} else {\nvar or__5045__auto____$4 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\nif(cljs.core.truth_(or__5045__auto____$4)){\nreturn or__5045__auto____$4;\n} else {\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null,z));\n}\n}\n}\n}\n}\n});\nvar cljs$core$sp2__4 \x3d (function() { \nvar G__13465__delegate \x3d function (x,y,z,args){\nvar or__5045__auto__ \x3d cljs$core$sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.some((function (p1__10359_SHARP_){\nvar or__5045__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__10359_SHARP_) : p1.call(null,p1__10359_SHARP_));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__10359_SHARP_) : p2.call(null,p1__10359_SHARP_));\n}\n}),args);\n}\n};\nvar G__13465 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13466__i \x3d 0, G__13466__a \x3d new Array(arguments.length -  3);\nwhile (G__13466__i \x3c G__13466__a.length) {G__13466__a[G__13466__i] \x3d arguments[G__13466__i + 3]; ++G__13466__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13466__a,0,null);\n} \nreturn G__13465__delegate.call(this,x,y,z,args);};\nG__13465.cljs$lang$maxFixedArity \x3d 3;\nG__13465.cljs$lang$applyTo \x3d (function (arglist__13470){\nvar x \x3d cljs.core.first(arglist__13470);\narglist__13470 \x3d cljs.core.next(arglist__13470);\nvar y \x3d cljs.core.first(arglist__13470);\narglist__13470 \x3d cljs.core.next(arglist__13470);\nvar z \x3d cljs.core.first(arglist__13470);\nvar args \x3d cljs.core.rest(arglist__13470);\nreturn G__13465__delegate(x,y,z,args);\n});\nG__13465.cljs$core$IFn$_invoke$arity$variadic \x3d G__13465__delegate;\nreturn G__13465;\n})()\n;\ncljs$core$sp2 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn cljs$core$sp2__0.call(this);\ncase 1:\nreturn cljs$core$sp2__1.call(this,x);\ncase 2:\nreturn cljs$core$sp2__2.call(this,x,y);\ncase 3:\nreturn cljs$core$sp2__3.call(this,x,y,z);\ndefault:\nvar G__13471 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13472__i \x3d 0, G__13472__a \x3d new Array(arguments.length -  3);\nwhile (G__13472__i \x3c G__13472__a.length) {G__13472__a[G__13472__i] \x3d arguments[G__13472__i + 3]; ++G__13472__i;}\nG__13471 \x3d new cljs.core.IndexedSeq(G__13472__a,0,null);\n}\nreturn cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13471);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\ncljs$core$sp2.cljs$lang$maxFixedArity \x3d 3;\ncljs$core$sp2.cljs$lang$applyTo \x3d cljs$core$sp2__4.cljs$lang$applyTo;\ncljs$core$sp2.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$sp2__0;\ncljs$core$sp2.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$sp2__1;\ncljs$core$sp2.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$sp2__2;\ncljs$core$sp2.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$sp2__3;\ncljs$core$sp2.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$sp2__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn cljs$core$sp2;\n})()\n}));\n\n(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$3 \x3d (function (p1,p2,p3){\nreturn (function() {\nvar cljs$core$sp3 \x3d null;\nvar cljs$core$sp3__0 \x3d (function (){\nreturn null;\n});\nvar cljs$core$sp3__1 \x3d (function (x){\nvar or__5045__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\n}\n}\n});\nvar cljs$core$sp3__2 \x3d (function (x,y){\nvar or__5045__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nvar or__5045__auto____$3 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\nif(cljs.core.truth_(or__5045__auto____$3)){\nreturn or__5045__auto____$3;\n} else {\nvar or__5045__auto____$4 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\nif(cljs.core.truth_(or__5045__auto____$4)){\nreturn or__5045__auto____$4;\n} else {\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null,y));\n}\n}\n}\n}\n}\n});\nvar cljs$core$sp3__3 \x3d (function (x,y,z){\nvar or__5045__auto__ \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(x) : p1.call(null,x));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(y) : p1.call(null,y));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(z) : p1.call(null,z));\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nvar or__5045__auto____$3 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(x) : p2.call(null,x));\nif(cljs.core.truth_(or__5045__auto____$3)){\nreturn or__5045__auto____$3;\n} else {\nvar or__5045__auto____$4 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(y) : p2.call(null,y));\nif(cljs.core.truth_(or__5045__auto____$4)){\nreturn or__5045__auto____$4;\n} else {\nvar or__5045__auto____$5 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(z) : p2.call(null,z));\nif(cljs.core.truth_(or__5045__auto____$5)){\nreturn or__5045__auto____$5;\n} else {\nvar or__5045__auto____$6 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(x) : p3.call(null,x));\nif(cljs.core.truth_(or__5045__auto____$6)){\nreturn or__5045__auto____$6;\n} else {\nvar or__5045__auto____$7 \x3d (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(y) : p3.call(null,y));\nif(cljs.core.truth_(or__5045__auto____$7)){\nreturn or__5045__auto____$7;\n} else {\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(z) : p3.call(null,z));\n}\n}\n}\n}\n}\n}\n}\n}\n});\nvar cljs$core$sp3__4 \x3d (function() { \nvar G__13476__delegate \x3d function (x,y,z,args){\nvar or__5045__auto__ \x3d cljs$core$sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.some((function (p1__10360_SHARP_){\nvar or__5045__auto____$1 \x3d (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(p1__10360_SHARP_) : p1.call(null,p1__10360_SHARP_));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 \x3d (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(p1__10360_SHARP_) : p2.call(null,p1__10360_SHARP_));\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nreturn (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(p1__10360_SHARP_) : p3.call(null,p1__10360_SHARP_));\n}\n}\n}),args);\n}\n};\nvar G__13476 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13477__i \x3d 0, G__13477__a \x3d new Array(arguments.length -  3);\nwhile (G__13477__i \x3c G__13477__a.length) {G__13477__a[G__13477__i] \x3d arguments[G__13477__i + 3]; ++G__13477__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13477__a,0,null);\n} \nreturn G__13476__delegate.call(this,x,y,z,args);};\nG__13476.cljs$lang$maxFixedArity \x3d 3;\nG__13476.cljs$lang$applyTo \x3d (function (arglist__13478){\nvar x \x3d cljs.core.first(arglist__13478);\narglist__13478 \x3d cljs.core.next(arglist__13478);\nvar y \x3d cljs.core.first(arglist__13478);\narglist__13478 \x3d cljs.core.next(arglist__13478);\nvar z \x3d cljs.core.first(arglist__13478);\nvar args \x3d cljs.core.rest(arglist__13478);\nreturn G__13476__delegate(x,y,z,args);\n});\nG__13476.cljs$core$IFn$_invoke$arity$variadic \x3d G__13476__delegate;\nreturn G__13476;\n})()\n;\ncljs$core$sp3 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn cljs$core$sp3__0.call(this);\ncase 1:\nreturn cljs$core$sp3__1.call(this,x);\ncase 2:\nreturn cljs$core$sp3__2.call(this,x,y);\ncase 3:\nreturn cljs$core$sp3__3.call(this,x,y,z);\ndefault:\nvar G__13479 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13480__i \x3d 0, G__13480__a \x3d new Array(arguments.length -  3);\nwhile (G__13480__i \x3c G__13480__a.length) {G__13480__a[G__13480__i] \x3d arguments[G__13480__i + 3]; ++G__13480__i;}\nG__13479 \x3d new cljs.core.IndexedSeq(G__13480__a,0,null);\n}\nreturn cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13479);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\ncljs$core$sp3.cljs$lang$maxFixedArity \x3d 3;\ncljs$core$sp3.cljs$lang$applyTo \x3d cljs$core$sp3__4.cljs$lang$applyTo;\ncljs$core$sp3.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$sp3__0;\ncljs$core$sp3.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$sp3__1;\ncljs$core$sp3.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$sp3__2;\ncljs$core$sp3.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$sp3__3;\ncljs$core$sp3.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$sp3__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn cljs$core$sp3;\n})()\n}));\n\n(cljs.core.some_fn.cljs$core$IFn$_invoke$arity$variadic \x3d (function (p1,p2,p3,ps){\nvar ps__$1 \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);\nreturn (function() {\nvar cljs$core$spn \x3d null;\nvar cljs$core$spn__0 \x3d (function (){\nreturn null;\n});\nvar cljs$core$spn__1 \x3d (function (x){\nreturn cljs.core.some((function (p1__10361_SHARP_){\nreturn (p1__10361_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10361_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10361_SHARP_.call(null,x));\n}),ps__$1);\n});\nvar cljs$core$spn__2 \x3d (function (x,y){\nreturn cljs.core.some((function (p1__10362_SHARP_){\nvar or__5045__auto__ \x3d (p1__10362_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10362_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10362_SHARP_.call(null,x));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (p1__10362_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10362_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__10362_SHARP_.call(null,y));\n}\n}),ps__$1);\n});\nvar cljs$core$spn__3 \x3d (function (x,y,z){\nreturn cljs.core.some((function (p1__10363_SHARP_){\nvar or__5045__auto__ \x3d (p1__10363_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10363_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p1__10363_SHARP_.call(null,x));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (p1__10363_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10363_SHARP_.cljs$core$IFn$_invoke$arity$1(y) : p1__10363_SHARP_.call(null,y));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn (p1__10363_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__10363_SHARP_.cljs$core$IFn$_invoke$arity$1(z) : p1__10363_SHARP_.call(null,z));\n}\n}\n}),ps__$1);\n});\nvar cljs$core$spn__4 \x3d (function() { \nvar G__13486__delegate \x3d function (x,y,z,args){\nvar or__5045__auto__ \x3d cljs$core$spn.cljs$core$IFn$_invoke$arity$3(x,y,z);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.some((function (p1__10364_SHARP_){\nreturn cljs.core.some(p1__10364_SHARP_,args);\n}),ps__$1);\n}\n};\nvar G__13486 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13487__i \x3d 0, G__13487__a \x3d new Array(arguments.length -  3);\nwhile (G__13487__i \x3c G__13487__a.length) {G__13487__a[G__13487__i] \x3d arguments[G__13487__i + 3]; ++G__13487__i;}\n  args \x3d new cljs.core.IndexedSeq(G__13487__a,0,null);\n} \nreturn G__13486__delegate.call(this,x,y,z,args);};\nG__13486.cljs$lang$maxFixedArity \x3d 3;\nG__13486.cljs$lang$applyTo \x3d (function (arglist__13488){\nvar x \x3d cljs.core.first(arglist__13488);\narglist__13488 \x3d cljs.core.next(arglist__13488);\nvar y \x3d cljs.core.first(arglist__13488);\narglist__13488 \x3d cljs.core.next(arglist__13488);\nvar z \x3d cljs.core.first(arglist__13488);\nvar args \x3d cljs.core.rest(arglist__13488);\nreturn G__13486__delegate(x,y,z,args);\n});\nG__13486.cljs$core$IFn$_invoke$arity$variadic \x3d G__13486__delegate;\nreturn G__13486;\n})()\n;\ncljs$core$spn \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn cljs$core$spn__0.call(this);\ncase 1:\nreturn cljs$core$spn__1.call(this,x);\ncase 2:\nreturn cljs$core$spn__2.call(this,x,y);\ncase 3:\nreturn cljs$core$spn__3.call(this,x,y,z);\ndefault:\nvar G__13494 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__13495__i \x3d 0, G__13495__a \x3d new Array(arguments.length -  3);\nwhile (G__13495__i \x3c G__13495__a.length) {G__13495__a[G__13495__i] \x3d arguments[G__13495__i + 3]; ++G__13495__i;}\nG__13494 \x3d new cljs.core.IndexedSeq(G__13495__a,0,null);\n}\nreturn cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__13494);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\ncljs$core$spn.cljs$lang$maxFixedArity \x3d 3;\ncljs$core$spn.cljs$lang$applyTo \x3d cljs$core$spn__4.cljs$lang$applyTo;\ncljs$core$spn.cljs$core$IFn$_invoke$arity$0 \x3d cljs$core$spn__0;\ncljs$core$spn.cljs$core$IFn$_invoke$arity$1 \x3d cljs$core$spn__1;\ncljs$core$spn.cljs$core$IFn$_invoke$arity$2 \x3d cljs$core$spn__2;\ncljs$core$spn.cljs$core$IFn$_invoke$arity$3 \x3d cljs$core$spn__3;\ncljs$core$spn.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$spn__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn cljs$core$spn;\n})()\n}));\n\n/** @this {Function} */\n(cljs.core.some_fn.cljs$lang$applyTo \x3d (function (seq10366){\nvar G__10367 \x3d cljs.core.first(seq10366);\nvar seq10366__$1 \x3d cljs.core.next(seq10366);\nvar G__10368 \x3d cljs.core.first(seq10366__$1);\nvar seq10366__$2 \x3d cljs.core.next(seq10366__$1);\nvar G__10369 \x3d cljs.core.first(seq10366__$2);\nvar seq10366__$3 \x3d cljs.core.next(seq10366__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10367,G__10368,G__10369,seq10366__$3);\n}));\n\n(cljs.core.some_fn.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * Returns a lazy sequence consisting of the result of applying f to\n *   the set of first items of each coll, followed by applying f to the\n *   set of second items in each coll, until any one of the colls is\n *   exhausted.  Any remaining items in other colls are ignored. Function\n *   f should accept number-of-colls arguments. Returns a transducer when\n *   no collection is provided.\n */\ncljs.core.map \x3d (function cljs$core$map(var_args){\nvar G__10378 \x3d arguments.length;\nswitch (G__10378) {\ncase 1:\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13497 \x3d arguments.length;\nvar i__5770__auto___13498 \x3d (0);\nwhile(true){\nif((i__5770__auto___13498 \x3c len__5769__auto___13497)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13498]));\n\nvar G__13499 \x3d (i__5770__auto___13498 + (1));\ni__5770__auto___13498 \x3d G__13499;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((4)),(0),null));\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.map.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn (function (rf){\nreturn (function() {\nvar G__13500 \x3d null;\nvar G__13500__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__13500__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__13500__2 \x3d (function (result,input){\nvar G__10379 \x3d result;\nvar G__10380 \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null,input));\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10379,G__10380) : rf.call(null,G__10379,G__10380));\n});\nvar G__13500__3 \x3d (function() { \nvar G__13501__delegate \x3d function (result,input,inputs){\nvar G__10381 \x3d result;\nvar G__10382 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__10381,G__10382) : rf.call(null,G__10381,G__10382));\n};\nvar G__13501 \x3d function (result,input,var_args){\nvar inputs \x3d null;\nif (arguments.length \x3e 2) {\nvar G__13514__i \x3d 0, G__13514__a \x3d new Array(arguments.length -  2);\nwhile (G__13514__i \x3c G__13514__a.length) {G__13514__a[G__13514__i] \x3d arguments[G__13514__i + 2]; ++G__13514__i;}\n  inputs \x3d new cljs.core.IndexedSeq(G__13514__a,0,null);\n} \nreturn G__13501__delegate.call(this,result,input,inputs);};\nG__13501.cljs$lang$maxFixedArity \x3d 2;\nG__13501.cljs$lang$applyTo \x3d (function (arglist__13515){\nvar result \x3d cljs.core.first(arglist__13515);\narglist__13515 \x3d cljs.core.next(arglist__13515);\nvar input \x3d cljs.core.first(arglist__13515);\nvar inputs \x3d cljs.core.rest(arglist__13515);\nreturn G__13501__delegate(result,input,inputs);\n});\nG__13501.cljs$core$IFn$_invoke$arity$variadic \x3d G__13501__delegate;\nreturn G__13501;\n})()\n;\nG__13500 \x3d function(result,input,var_args){\nvar inputs \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__13500__0.call(this);\ncase 1:\nreturn G__13500__1.call(this,result);\ncase 2:\nreturn G__13500__2.call(this,result,input);\ndefault:\nvar G__13516 \x3d null;\nif (arguments.length \x3e 2) {\nvar G__13517__i \x3d 0, G__13517__a \x3d new Array(arguments.length -  2);\nwhile (G__13517__i \x3c G__13517__a.length) {G__13517__a[G__13517__i] \x3d arguments[G__13517__i + 2]; ++G__13517__i;}\nG__13516 \x3d new cljs.core.IndexedSeq(G__13517__a,0,null);\n}\nreturn G__13500__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__13516);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13500.cljs$lang$maxFixedArity \x3d 2;\nG__13500.cljs$lang$applyTo \x3d G__13500__3.cljs$lang$applyTo;\nG__13500.cljs$core$IFn$_invoke$arity$0 \x3d G__13500__0;\nG__13500.cljs$core$IFn$_invoke$arity$1 \x3d G__13500__1;\nG__13500.cljs$core$IFn$_invoke$arity$2 \x3d G__13500__2;\nG__13500.cljs$core$IFn$_invoke$arity$variadic \x3d G__13500__3.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__13500;\n})()\n});\n}));\n\n(cljs.core.map.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s)){\nvar c \x3d cljs.core.chunk_first(s);\nvar size \x3d cljs.core.count(c);\nvar b \x3d cljs.core.chunk_buffer(size);\nvar n__5636__auto___13518 \x3d size;\nvar i_13519 \x3d (0);\nwhile(true){\nif((i_13519 \x3c n__5636__auto___13518)){\ncljs.core.chunk_append(b,(function (){var G__10383 \x3d cljs.core._nth(c,i_13519);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10383) : f.call(null,G__10383));\n})());\n\nvar G__13520 \x3d (i_13519 + (1));\ni_13519 \x3d G__13520;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));\n} else {\nreturn cljs.core.cons((function (){var G__10384 \x3d cljs.core.first(s);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10384) : f.call(null,G__10384));\n})(),cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));\n}\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.map.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,c1,c2){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s1 \x3d cljs.core.seq(c1);\nvar s2 \x3d cljs.core.seq(c2);\nif(((s1) \x26\x26 (s2))){\nreturn cljs.core.cons((function (){var G__10385 \x3d cljs.core.first(s1);\nvar G__10386 \x3d cljs.core.first(s2);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10385,G__10386) : f.call(null,G__10385,G__10386));\n})(),cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.map.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,c1,c2,c3){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s1 \x3d cljs.core.seq(c1);\nvar s2 \x3d cljs.core.seq(c2);\nvar s3 \x3d cljs.core.seq(c3);\nif(((s1) \x26\x26 (((s2) \x26\x26 (s3))))){\nreturn cljs.core.cons((function (){var G__10387 \x3d cljs.core.first(s1);\nvar G__10388 \x3d cljs.core.first(s2);\nvar G__10389 \x3d cljs.core.first(s3);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10387,G__10388,G__10389) : f.call(null,G__10387,G__10388,G__10389));\n})(),cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.map.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,c1,c2,c3,colls){\nvar step \x3d (function cljs$core$step(cs){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar ss \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);\nif(cljs.core.every_QMARK_(cljs.core.identity,ss)){\nreturn cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$step(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));\n} else {\nreturn null;\n}\n}),null,null));\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10371_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__10371_SHARP_);\n}),step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c2,c1], 0))));\n}));\n\n/** @this {Function} */\n(cljs.core.map.cljs$lang$applyTo \x3d (function (seq10373){\nvar G__10374 \x3d cljs.core.first(seq10373);\nvar seq10373__$1 \x3d cljs.core.next(seq10373);\nvar G__10375 \x3d cljs.core.first(seq10373__$1);\nvar seq10373__$2 \x3d cljs.core.next(seq10373__$1);\nvar G__10376 \x3d cljs.core.first(seq10373__$2);\nvar seq10373__$3 \x3d cljs.core.next(seq10373__$2);\nvar G__10377 \x3d cljs.core.first(seq10373__$3);\nvar seq10373__$4 \x3d cljs.core.next(seq10373__$3);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10374,G__10375,G__10376,G__10377,seq10373__$4);\n}));\n\n(cljs.core.map.cljs$lang$maxFixedArity \x3d (4));\n\n/**\n * Returns a lazy sequence of the first n items in coll, or all items if\n *   there are fewer than n.  Returns a stateful transducer when\n *   no collection is provided.\n */\ncljs.core.take \x3d (function cljs$core$take(var_args){\nvar G__10391 \x3d arguments.length;\nswitch (G__10391) {\ncase 1:\nreturn cljs.core.take.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.take.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.take.cljs$core$IFn$_invoke$arity$1 \x3d (function (n){\nif(typeof n \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? n)\x22));\n}\n\nreturn (function (rf){\nvar na \x3d cljs.core.volatile_BANG_(n);\nreturn (function() {\nvar G__13522 \x3d null;\nvar G__13522__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__13522__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__13522__2 \x3d (function (result,input){\nvar n__$1 \x3d cljs.core.deref(na);\nvar nn \x3d na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));\nvar result__$1 \x3d (((n__$1 \x3e (0)))?(rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input)):result);\nif((!((nn \x3e (0))))){\nreturn cljs.core.ensure_reduced(result__$1);\n} else {\nreturn result__$1;\n}\n});\nG__13522 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__13522__0.call(this);\ncase 1:\nreturn G__13522__1.call(this,result);\ncase 2:\nreturn G__13522__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13522.cljs$core$IFn$_invoke$arity$0 \x3d G__13522__0;\nG__13522.cljs$core$IFn$_invoke$arity$1 \x3d G__13522__1;\nG__13522.cljs$core$IFn$_invoke$arity$2 \x3d G__13522__2;\nreturn G__13522;\n})()\n});\n}));\n\n(cljs.core.take.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\nif(typeof n \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? n)\x22));\n}\n\nreturn (new cljs.core.LazySeq(null,(function (){\nif((n \x3e (0))){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nreturn cljs.core.cons(cljs.core.first(s),cljs.core.take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.take.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a lazy sequence of all but the first n items in coll.\n *   Returns a stateful transducer when no collection is provided.\n */\ncljs.core.drop \x3d (function cljs$core$drop(var_args){\nvar G__10393 \x3d arguments.length;\nswitch (G__10393) {\ncase 1:\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.drop.cljs$core$IFn$_invoke$arity$1 \x3d (function (n){\nif(typeof n \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? n)\x22));\n}\n\nreturn (function (rf){\nvar na \x3d cljs.core.volatile_BANG_(n);\nreturn (function() {\nvar G__13524 \x3d null;\nvar G__13524__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__13524__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__13524__2 \x3d (function (result,input){\nvar n__$1 \x3d cljs.core.deref(na);\nna.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));\n\nif((n__$1 \x3e (0))){\nreturn result;\n} else {\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\n}\n});\nG__13524 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__13524__0.call(this);\ncase 1:\nreturn G__13524__1.call(this,result);\ncase 2:\nreturn G__13524__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13524.cljs$core$IFn$_invoke$arity$0 \x3d G__13524__0;\nG__13524.cljs$core$IFn$_invoke$arity$1 \x3d G__13524__1;\nG__13524.cljs$core$IFn$_invoke$arity$2 \x3d G__13524__2;\nreturn G__13524;\n})()\n});\n}));\n\n(cljs.core.drop.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\nif(typeof n \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? n)\x22));\n}\n\nvar step \x3d (function (n__$1,coll__$1){\nwhile(true){\nvar s \x3d cljs.core.seq(coll__$1);\nif((((n__$1 \x3e (0))) \x26\x26 (s))){\nvar G__13525 \x3d (n__$1 - (1));\nvar G__13526 \x3d cljs.core.rest(s);\nn__$1 \x3d G__13525;\ncoll__$1 \x3d G__13526;\ncontinue;\n} else {\nreturn s;\n}\nbreak;\n}\n});\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn step(n,coll);\n}),null,null));\n}));\n\n(cljs.core.drop.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Return a lazy sequence of all but the last n (default 1) items in coll\n */\ncljs.core.drop_last \x3d (function cljs$core$drop_last(var_args){\nvar G__10395 \x3d arguments.length;\nswitch (G__10395) {\ncase 1:\nreturn cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1 \x3d (function (s){\nreturn cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((1),s);\n}));\n\n(cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,s){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){\nreturn x;\n}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));\n}));\n\n(cljs.core.drop_last.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a seq of the last n items in coll.  Depending on the type\n *   of coll may be no better than linear time.  For vectors, see also subvec.\n */\ncljs.core.take_last \x3d (function cljs$core$take_last(n,coll){\nvar s \x3d cljs.core.seq(coll);\nvar lead \x3d cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));\nwhile(true){\nif(lead){\nvar G__13528 \x3d cljs.core.next(s);\nvar G__13529 \x3d cljs.core.next(lead);\ns \x3d G__13528;\nlead \x3d G__13529;\ncontinue;\n} else {\nreturn s;\n}\nbreak;\n}\n});\n/**\n * Returns a lazy sequence of the items in coll starting from the\n *   first item for which (pred item) returns logical false.  Returns a\n *   stateful transducer when no collection is provided.\n */\ncljs.core.drop_while \x3d (function cljs$core$drop_while(var_args){\nvar G__10397 \x3d arguments.length;\nswitch (G__10397) {\ncase 1:\nreturn cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$1 \x3d (function (pred){\nreturn (function (rf){\nvar da \x3d cljs.core.volatile_BANG_(true);\nreturn (function() {\nvar G__13531 \x3d null;\nvar G__13531__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__13531__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__13531__2 \x3d (function (result,input){\nvar drop_QMARK_ \x3d cljs.core.deref(da);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d drop_QMARK_;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null,input));\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn result;\n} else {\ncljs.core.vreset_BANG_(da,null);\n\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\n}\n});\nG__13531 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__13531__0.call(this);\ncase 1:\nreturn G__13531__1.call(this,result);\ncase 2:\nreturn G__13531__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13531.cljs$core$IFn$_invoke$arity$0 \x3d G__13531__0;\nG__13531.cljs$core$IFn$_invoke$arity$1 \x3d G__13531__1;\nG__13531.cljs$core$IFn$_invoke$arity$2 \x3d G__13531__2;\nreturn G__13531;\n})()\n});\n}));\n\n(cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2 \x3d (function (pred,coll){\nvar step \x3d (function (pred__$1,coll__$1){\nwhile(true){\nvar s \x3d cljs.core.seq(coll__$1);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d s;\nif(and__5043__auto__){\nvar G__10398 \x3d cljs.core.first(s);\nreturn (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__10398) : pred__$1.call(null,G__10398));\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar G__13535 \x3d pred__$1;\nvar G__13536 \x3d cljs.core.rest(s);\npred__$1 \x3d G__13535;\ncoll__$1 \x3d G__13536;\ncontinue;\n} else {\nreturn s;\n}\nbreak;\n}\n});\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn step(pred,coll);\n}),null,null));\n}));\n\n(cljs.core.drop_while.cljs$lang$maxFixedArity \x3d 2);\n\n\n/**\n* @constructor\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IPending}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.Cycle \x3d (function (meta,all,prev,current,_next){\nthis.meta \x3d meta;\nthis.all \x3d all;\nthis.prev \x3d prev;\nthis.current \x3d current;\nthis._next \x3d _next;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 26083532;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1;\n});\n(cljs.core.Cycle.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.Cycle.prototype.currentval \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nif(self__.current){\n} else {\nvar temp__5802__auto___13537 \x3d cljs.core.next(self__.prev);\nif(temp__5802__auto___13537){\nvar c_13538 \x3d temp__5802__auto___13537;\n(self__.current \x3d c_13538);\n} else {\n(self__.current \x3d self__.all);\n}\n}\n\nreturn self__.current;\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ISeq$_rest$arity$1(null);\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (!((self__.current \x3d\x3d null)));\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar s \x3d coll__$1.currentval();\nvar ret \x3d cljs.core.first(s);\nwhile(true){\nvar s__$1 \x3d (function (){var or__5045__auto__ \x3d cljs.core.next(s);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn self__.all;\n}\n})();\nvar ret__$1 \x3d (function (){var G__10401 \x3d ret;\nvar G__10402 \x3d cljs.core.first(s__$1);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10401,G__10402) : f.call(null,G__10401,G__10402));\n})();\nif(cljs.core.reduced_QMARK_(ret__$1)){\nreturn cljs.core.deref(ret__$1);\n} else {\nvar G__13542 \x3d s__$1;\nvar G__13543 \x3d ret__$1;\ns \x3d G__13542;\nret \x3d G__13543;\ncontinue;\n}\nbreak;\n}\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar s \x3d coll__$1.currentval();\nvar ret \x3d start;\nwhile(true){\nvar ret__$1 \x3d (function (){var G__10403 \x3d ret;\nvar G__10404 \x3d cljs.core.first(s);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10403,G__10404) : f.call(null,G__10403,G__10404));\n})();\nif(cljs.core.reduced_QMARK_(ret__$1)){\nreturn cljs.core.deref(ret__$1);\n} else {\nvar G__13544 \x3d (function (){var or__5045__auto__ \x3d cljs.core.next(s);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn self__.all;\n}\n})();\nvar G__13545 \x3d ret__$1;\ns \x3d G__13544;\nret \x3d G__13545;\ncontinue;\n}\nbreak;\n}\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.first(coll__$1.currentval());\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__._next \x3d\x3d null)){\n(self__._next \x3d (new cljs.core.Cycle(null,self__.all,coll__$1.currentval(),null,null)));\n} else {\n}\n\nreturn self__._next;\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.Cycle(new_meta,self__.all,self__.prev,self__.current,self__._next));\n}\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.Cycle.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22all\x22,\x22all\x22,-1762306027,null),new cljs.core.Symbol(null,\x22prev\x22,\x22prev\x22,43462301,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22current\x22,\x22current\x22,552492924,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22_next\x22,\x22_next\x22,101877036,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Cycle.cljs$lang$type \x3d true);\n\n(cljs.core.Cycle.cljs$lang$ctorStr \x3d \x22cljs.core/Cycle\x22);\n\n(cljs.core.Cycle.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Cycle\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Cycle.\n */\ncljs.core.__GT_Cycle \x3d (function cljs$core$__GT_Cycle(meta,all,prev,current,_next){\nreturn (new cljs.core.Cycle(meta,all,prev,current,_next));\n});\n\n/**\n * Returns a lazy (infinite!) sequence of repetitions of the items in coll.\n */\ncljs.core.cycle \x3d (function cljs$core$cycle(coll){\nvar temp__5802__auto__ \x3d cljs.core.seq(coll);\nif(temp__5802__auto__){\nvar vals \x3d temp__5802__auto__;\nreturn (new cljs.core.Cycle(null,vals,null,vals,null));\n} else {\nreturn cljs.core.List.EMPTY;\n}\n});\n/**\n * Returns a vector of [(take n coll) (drop n coll)]\n */\ncljs.core.split_at \x3d (function cljs$core$split_at(n,coll){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IPending}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.Repeat \x3d (function (meta,count,val,next,__hash){\nthis.meta \x3d meta;\nthis.count \x3d count;\nthis.val \x3d val;\nthis.next \x3d next;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1;\n});\n(cljs.core.Repeat.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.Repeat.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.Repeat.prototype.indexOf \x3d (function() {\nvar G__13546 \x3d null;\nvar G__13546__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13546__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13546 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13546__1.call(this,x);\ncase 2:\nreturn G__13546__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13546.cljs$core$IFn$_invoke$arity$1 \x3d G__13546__1;\nG__13546.cljs$core$IFn$_invoke$arity$2 \x3d G__13546__2;\nreturn G__13546;\n})()\n);\n\n(cljs.core.Repeat.prototype.lastIndexOf \x3d (function() {\nvar G__13550 \x3d null;\nvar G__13550__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,self__.count);\n});\nvar G__13550__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13550 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13550__1.call(this,x);\ncase 2:\nreturn G__13550__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13550.cljs$core$IFn$_invoke$arity$1 \x3d G__13550__1;\nG__13550.cljs$core$IFn$_invoke$arity$2 \x3d G__13550__2;\nreturn G__13550;\n})()\n);\n\n(cljs.core.Repeat.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.next \x3d\x3d null)){\nif((self__.count \x3e (1))){\n(self__.next \x3d (new cljs.core.Repeat(null,(self__.count - (1)),self__.val,null,null)));\n\nreturn self__.next;\n} else {\nif(((-1) \x3d\x3d\x3d self__.count)){\nreturn coll__$1;\n} else {\nreturn null;\n}\n}\n} else {\nreturn self__.next;\n}\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn false;\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.count \x3d\x3d\x3d (-1))){\nvar ret \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.val,self__.val) : f.call(null,self__.val,self__.val));\nwhile(true){\nif(cljs.core.reduced_QMARK_(ret)){\nreturn cljs.core.deref(ret);\n} else {\nvar G__13551 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,self__.val) : f.call(null,ret,self__.val));\nret \x3d G__13551;\ncontinue;\n}\nbreak;\n}\n} else {\nvar i \x3d (1);\nvar ret \x3d self__.val;\nwhile(true){\nif((i \x3c self__.count)){\nvar ret__$1 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,self__.val) : f.call(null,ret,self__.val));\nif(cljs.core.reduced_QMARK_(ret__$1)){\nreturn cljs.core.deref(ret__$1);\n} else {\nvar G__13552 \x3d (i + (1));\nvar G__13553 \x3d ret__$1;\ni \x3d G__13552;\nret \x3d G__13553;\ncontinue;\n}\n} else {\nreturn ret;\n}\nbreak;\n}\n}\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.count \x3d\x3d\x3d (-1))){\nvar ret \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(start,self__.val) : f.call(null,start,self__.val));\nwhile(true){\nif(cljs.core.reduced_QMARK_(ret)){\nreturn cljs.core.deref(ret);\n} else {\nvar G__13557 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,self__.val) : f.call(null,ret,self__.val));\nret \x3d G__13557;\ncontinue;\n}\nbreak;\n}\n} else {\nvar i \x3d (0);\nvar ret \x3d start;\nwhile(true){\nif((i \x3c self__.count)){\nvar ret__$1 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,self__.val) : f.call(null,ret,self__.val));\nif(cljs.core.reduced_QMARK_(ret__$1)){\nreturn cljs.core.deref(ret__$1);\n} else {\nvar G__13558 \x3d (i + (1));\nvar G__13559 \x3d ret__$1;\ni \x3d G__13558;\nret \x3d G__13559;\ncontinue;\n}\n} else {\nreturn ret;\n}\nbreak;\n}\n}\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.val;\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.next \x3d\x3d null)){\nif((self__.count \x3e (1))){\n(self__.next \x3d (new cljs.core.Repeat(null,(self__.count - (1)),self__.val,null,null)));\n\nreturn self__.next;\n} else {\nif(((-1) \x3d\x3d\x3d self__.count)){\nreturn coll__$1;\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}\n} else {\nreturn self__.next;\n}\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.Repeat(new_meta,self__.count,self__.val,self__.next,null));\n}\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.Repeat.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22count\x22,\x22count\x22,-514511684,null),new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22next\x22,\x22next\x22,1522830042,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Repeat.cljs$lang$type \x3d true);\n\n(cljs.core.Repeat.cljs$lang$ctorStr \x3d \x22cljs.core/Repeat\x22);\n\n(cljs.core.Repeat.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Repeat\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Repeat.\n */\ncljs.core.__GT_Repeat \x3d (function cljs$core$__GT_Repeat(meta,count,val,next,__hash){\nreturn (new cljs.core.Repeat(meta,count,val,next,__hash));\n});\n\n/**\n * Returns a lazy (infinite!, or length n if supplied) sequence of xs.\n */\ncljs.core.repeat \x3d (function cljs$core$repeat(var_args){\nvar G__10406 \x3d arguments.length;\nswitch (G__10406) {\ncase 1:\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn (new cljs.core.Repeat(null,(-1),x,null,null));\n}));\n\n(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,x){\nif((n \x3e (0))){\nreturn (new cljs.core.Repeat(null,n,x,null,null));\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.repeat.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * DEPRECATED: Use \x27repeat\x27 instead.\n *   Returns a lazy seq of n xs.\n */\ncljs.core.replicate \x3d (function cljs$core$replicate(n,x){\nreturn cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));\n});\n/**\n * Takes a function of no args, presumably with side effects, and\n *   returns an infinite (or length n if supplied) lazy sequence of calls\n *   to it\n */\ncljs.core.repeatedly \x3d (function cljs$core$repeatedly(var_args){\nvar G__10408 \x3d arguments.length;\nswitch (G__10408) {\ncase 1:\nreturn cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons((f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)),cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));\n}),null,null));\n}));\n\n(cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,f){\nreturn cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeatedly.cljs$core$IFn$_invoke$arity$1(f));\n}));\n\n(cljs.core.repeatedly.cljs$lang$maxFixedArity \x3d 2);\n\ncljs.core.UNREALIZED_SEED \x3d ({});\n\n/**\n* @constructor\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IPending}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.Iterate \x3d (function (meta,f,prev_seed,seed,next){\nthis.meta \x3d meta;\nthis.f \x3d f;\nthis.prev_seed \x3d prev_seed;\nthis.seed \x3d seed;\nthis.next \x3d next;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 26083532;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1;\n});\n(cljs.core.Iterate.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ISeq$_rest$arity$1(null);\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (!((self__.seed \x3d\x3d\x3d cljs.core.UNREALIZED_SEED)));\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,rf){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar first \x3d coll__$1.cljs$core$ISeq$_first$arity$1(null);\nvar v \x3d (self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(first) : self__.f.call(null,first));\nvar ret \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(first,v) : rf.call(null,first,v));\nvar v__$1 \x3d v;\nwhile(true){\nif(cljs.core.reduced_QMARK_(ret)){\nreturn cljs.core.deref(ret);\n} else {\nvar v__$2 \x3d (self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null,v__$1));\nvar G__13562 \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret,v__$2) : rf.call(null,ret,v__$2));\nvar G__13563 \x3d v__$2;\nret \x3d G__13562;\nv__$1 \x3d G__13563;\ncontinue;\n}\nbreak;\n}\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,rf,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar v \x3d coll__$1.cljs$core$ISeq$_first$arity$1(null);\nvar ret \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(start,v) : rf.call(null,start,v));\nvar v__$1 \x3d v;\nwhile(true){\nif(cljs.core.reduced_QMARK_(ret)){\nreturn cljs.core.deref(ret);\n} else {\nvar v__$2 \x3d (self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(v__$1) : self__.f.call(null,v__$1));\nvar G__13564 \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(ret,v__$2) : rf.call(null,ret,v__$2));\nvar G__13565 \x3d v__$2;\nret \x3d G__13564;\nv__$1 \x3d G__13565;\ncontinue;\n}\nbreak;\n}\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((cljs.core.UNREALIZED_SEED \x3d\x3d\x3d self__.seed)){\n(self__.seed \x3d (self__.f.cljs$core$IFn$_invoke$arity$1 ? self__.f.cljs$core$IFn$_invoke$arity$1(self__.prev_seed) : self__.f.call(null,self__.prev_seed)));\n} else {\n}\n\nreturn self__.seed;\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.next \x3d\x3d null)){\n(self__.next \x3d (new cljs.core.Iterate(null,self__.f,coll__$1.cljs$core$ISeq$_first$arity$1(null),cljs.core.UNREALIZED_SEED,null)));\n} else {\n}\n\nreturn self__.next;\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.Iterate(new_meta,self__.f,self__.prev_seed,self__.seed,self__.next));\n}\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.Iterate.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),new cljs.core.Symbol(null,\x22prev-seed\x22,\x22prev-seed\x22,2126381367,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22seed\x22,\x22seed\x22,1709144854,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22next\x22,\x22next\x22,1522830042,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Iterate.cljs$lang$type \x3d true);\n\n(cljs.core.Iterate.cljs$lang$ctorStr \x3d \x22cljs.core/Iterate\x22);\n\n(cljs.core.Iterate.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Iterate\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Iterate.\n */\ncljs.core.__GT_Iterate \x3d (function cljs$core$__GT_Iterate(meta,f,prev_seed,seed,next){\nreturn (new cljs.core.Iterate(meta,f,prev_seed,seed,next));\n});\n\n/**\n * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects\n */\ncljs.core.iterate \x3d (function cljs$core$iterate(f,x){\nreturn (new cljs.core.Iterate(null,f,null,x,null));\n});\n/**\n * Returns a lazy seq of the first item in each coll, then the second etc.\n */\ncljs.core.interleave \x3d (function cljs$core$interleave(var_args){\nvar G__10413 \x3d arguments.length;\nswitch (G__10413) {\ncase 0:\nreturn cljs.core.interleave.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.interleave.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.interleave.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13570 \x3d arguments.length;\nvar i__5770__auto___13571 \x3d (0);\nwhile(true){\nif((i__5770__auto___13571 \x3c len__5769__auto___13570)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13571]));\n\nvar G__13572 \x3d (i__5770__auto___13571 + (1));\ni__5770__auto___13571 \x3d G__13572;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.interleave.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.interleave.cljs$core$IFn$_invoke$arity$1 \x3d (function (c1){\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn c1;\n}),null,null));\n}));\n\n(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2 \x3d (function (c1,c2){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s1 \x3d cljs.core.seq(c1);\nvar s2 \x3d cljs.core.seq(c2);\nif(((s1) \x26\x26 (s2))){\nreturn cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.interleave.cljs$core$IFn$_invoke$arity$variadic \x3d (function (c1,c2,colls){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar ss \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([c1], 0)));\nif(cljs.core.every_QMARK_(cljs.core.identity,ss)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n/** @this {Function} */\n(cljs.core.interleave.cljs$lang$applyTo \x3d (function (seq10410){\nvar G__10411 \x3d cljs.core.first(seq10410);\nvar seq10410__$1 \x3d cljs.core.next(seq10410);\nvar G__10412 \x3d cljs.core.first(seq10410__$1);\nvar seq10410__$2 \x3d cljs.core.next(seq10410__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10411,G__10412,seq10410__$2);\n}));\n\n(cljs.core.interleave.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns a lazy seq of the elements of coll separated by sep.\n *   Returns a stateful transducer when no collection is provided.\n */\ncljs.core.interpose \x3d (function cljs$core$interpose(var_args){\nvar G__10415 \x3d arguments.length;\nswitch (G__10415) {\ncase 1:\nreturn cljs.core.interpose.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.interpose.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.interpose.cljs$core$IFn$_invoke$arity$1 \x3d (function (sep){\nreturn (function (rf){\nvar started \x3d cljs.core.volatile_BANG_(false);\nreturn (function() {\nvar G__13577 \x3d null;\nvar G__13577__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__13577__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__13577__2 \x3d (function (result,input){\nif(cljs.core.truth_(cljs.core.deref(started))){\nvar sepr \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,sep) : rf.call(null,result,sep));\nif(cljs.core.reduced_QMARK_(sepr)){\nreturn sepr;\n} else {\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(sepr,input) : rf.call(null,sepr,input));\n}\n} else {\ncljs.core.vreset_BANG_(started,true);\n\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\n}\n});\nG__13577 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__13577__0.call(this);\ncase 1:\nreturn G__13577__1.call(this,result);\ncase 2:\nreturn G__13577__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13577.cljs$core$IFn$_invoke$arity$0 \x3d G__13577__0;\nG__13577.cljs$core$IFn$_invoke$arity$1 \x3d G__13577__1;\nG__13577.cljs$core$IFn$_invoke$arity$2 \x3d G__13577__2;\nreturn G__13577;\n})()\n});\n}));\n\n(cljs.core.interpose.cljs$core$IFn$_invoke$arity$2 \x3d (function (sep,coll){\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));\n}));\n\n(cljs.core.interpose.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Take a collection of collections, and return a lazy seq\n *   of items from the inner collection\n */\ncljs.core.flatten1 \x3d (function cljs$core$flatten1(colls){\nvar cat \x3d (function cljs$core$flatten1_$_cat(coll,colls__$1){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5802__auto__ \x3d cljs.core.seq(coll);\nif(temp__5802__auto__){\nvar coll__$1 \x3d temp__5802__auto__;\nreturn cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));\n} else {\nif(cljs.core.seq(colls__$1)){\nreturn cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));\n} else {\nreturn null;\n}\n}\n}),null,null));\n});\nreturn cat(null,colls);\n});\n/**\n * Returns the result of applying concat to the result of applying map\n *   to f and colls.  Thus function f should return a collection. Returns\n *   a transducer when no collections are provided\n */\ncljs.core.mapcat \x3d (function cljs$core$mapcat(var_args){\nvar G__10419 \x3d arguments.length;\nswitch (G__10419) {\ncase 1:\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13579 \x3d arguments.length;\nvar i__5770__auto___13580 \x3d (0);\nwhile(true){\nif((i__5770__auto___13580 \x3c len__5769__auto___13579)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13580]));\n\nvar G__13581 \x3d (i__5770__auto___13580 + (1));\ni__5770__auto___13580 \x3d G__13581;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((1)),(0),null));\nreturn cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);\n}));\n\n(cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,colls){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));\n}));\n\n/** @this {Function} */\n(cljs.core.mapcat.cljs$lang$applyTo \x3d (function (seq10417){\nvar G__10418 \x3d cljs.core.first(seq10417);\nvar seq10417__$1 \x3d cljs.core.next(seq10417);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10418,seq10417__$1);\n}));\n\n(cljs.core.mapcat.cljs$lang$maxFixedArity \x3d (1));\n\n/**\n * Returns a lazy sequence of the items in coll for which\n *   (pred item) returns logical true. pred must be free of side-effects.\n *   Returns a transducer when no collection is provided.\n */\ncljs.core.filter \x3d (function cljs$core$filter(var_args){\nvar G__10421 \x3d arguments.length;\nswitch (G__10421) {\ncase 1:\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.filter.cljs$core$IFn$_invoke$arity$1 \x3d (function (pred){\nreturn (function (rf){\nreturn (function() {\nvar G__13586 \x3d null;\nvar G__13586__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__13586__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__13586__2 \x3d (function (result,input){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null,input)))){\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\n} else {\nreturn result;\n}\n});\nG__13586 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__13586__0.call(this);\ncase 1:\nreturn G__13586__1.call(this,result);\ncase 2:\nreturn G__13586__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13586.cljs$core$IFn$_invoke$arity$0 \x3d G__13586__0;\nG__13586.cljs$core$IFn$_invoke$arity$1 \x3d G__13586__1;\nG__13586.cljs$core$IFn$_invoke$arity$2 \x3d G__13586__2;\nreturn G__13586;\n})()\n});\n}));\n\n(cljs.core.filter.cljs$core$IFn$_invoke$arity$2 \x3d (function (pred,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s)){\nvar c \x3d cljs.core.chunk_first(s);\nvar size \x3d cljs.core.count(c);\nvar b \x3d cljs.core.chunk_buffer(size);\nvar n__5636__auto___13587 \x3d size;\nvar i_13588 \x3d (0);\nwhile(true){\nif((i_13588 \x3c n__5636__auto___13587)){\nif(cljs.core.truth_((function (){var G__10422 \x3d cljs.core._nth(c,i_13588);\nreturn (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10422) : pred.call(null,G__10422));\n})())){\ncljs.core.chunk_append(b,cljs.core._nth(c,i_13588));\n} else {\n}\n\nvar G__13589 \x3d (i_13588 + (1));\ni_13588 \x3d G__13589;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.chunk_cons(cljs.core.chunk(b),cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));\n} else {\nvar f \x3d cljs.core.first(s);\nvar r \x3d cljs.core.rest(s);\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(f) : pred.call(null,f)))){\nreturn cljs.core.cons(f,cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,r));\n} else {\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(pred,r);\n}\n}\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.filter.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a lazy sequence of the items in coll for which\n *   (pred item) returns logical false. pred must be free of side-effects.\n *   Returns a transducer when no collection is provided.\n */\ncljs.core.remove \x3d (function cljs$core$remove(var_args){\nvar G__10424 \x3d arguments.length;\nswitch (G__10424) {\ncase 1:\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.remove.cljs$core$IFn$_invoke$arity$1 \x3d (function (pred){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));\n}));\n\n(cljs.core.remove.cljs$core$IFn$_invoke$arity$2 \x3d (function (pred,coll){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);\n}));\n\n(cljs.core.remove.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.\n *   branch? must be a fn of one arg that returns true if passed a node\n *   that can have children (but may not).  children must be a fn of one\n *   arg that returns a sequence of the children. Will only be called on\n *   nodes for which branch? returns true. Root is the root node of the\n *   tree.\n */\ncljs.core.tree_seq \x3d (function cljs$core$tree_seq(branch_QMARK_,children,root){\nvar walk \x3d (function cljs$core$tree_seq_$_walk(node){\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.cons(node,(cljs.core.truth_((branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(node) : branch_QMARK_.call(null,node)))?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(node) : children.call(null,node))], 0)):null));\n}),null,null));\n});\nreturn walk(root);\n});\n/**\n * Takes any nested combination of sequential things (lists, vectors,\n *   etc.) and returns their contents as a single, flat sequence.\n *   (flatten nil) returns nil.\n */\ncljs.core.flatten \x3d (function cljs$core$flatten(x){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__10425_SHARP_){\nreturn (!(cljs.core.sequential_QMARK_(p1__10425_SHARP_)));\n}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));\n});\n/**\n * Returns a new coll consisting of to-coll with all of the items of\n *   from-coll conjoined. A transducer may be supplied.\n */\ncljs.core.into \x3d (function cljs$core$into(var_args){\nvar G__10427 \x3d arguments.length;\nswitch (G__10427) {\ncase 0:\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.into.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(cljs.core.into.cljs$core$IFn$_invoke$arity$1 \x3d (function (to){\nreturn to;\n}));\n\n(cljs.core.into.cljs$core$IFn$_invoke$arity$2 \x3d (function (to,from){\nif((!((to \x3d\x3d null)))){\nif((((!((to \x3d\x3d null))))?(((((to.cljs$lang$protocol_mask$partition1$ \x26 (4))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d to.cljs$core$IEditableCollection$))))?true:false):false)){\nreturn cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);\n}\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,to,from);\n}\n}));\n\n(cljs.core.into.cljs$core$IFn$_invoke$arity$3 \x3d (function (to,xform,from){\nif((((!((to \x3d\x3d null))))?(((((to.cljs$lang$protocol_mask$partition1$ \x26 (4))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d to.cljs$core$IEditableCollection$))))?true:false):false)){\nvar tm \x3d cljs.core.meta(to);\nvar rf \x3d (function() {\nvar G__13595 \x3d null;\nvar G__13595__1 \x3d (function (coll){\nreturn cljs.core._with_meta(cljs.core.persistent_BANG_(coll),tm);\n});\nvar G__13595__2 \x3d (function (coll,v){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(coll,v);\n});\nG__13595 \x3d function(coll,v){\nswitch(arguments.length){\ncase 1:\nreturn G__13595__1.call(this,coll);\ncase 2:\nreturn G__13595__2.call(this,coll,v);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13595.cljs$core$IFn$_invoke$arity$1 \x3d G__13595__1;\nG__13595.cljs$core$IFn$_invoke$arity$2 \x3d G__13595__2;\nreturn G__13595;\n})()\n;\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,rf,cljs.core.transient$(to),from);\n} else {\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);\n}\n}));\n\n(cljs.core.into.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Returns a vector consisting of the result of applying f to the\n *   set of first items of each coll, followed by applying f to the set\n *   of second items in each coll, until any one of the colls is\n *   exhausted.  Any remaining items in other colls are ignored. Function\n *   f should accept number-of-colls arguments.\n */\ncljs.core.mapv \x3d (function cljs$core$mapv(var_args){\nvar G__10436 \x3d arguments.length;\nswitch (G__10436) {\ncase 2:\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13597 \x3d arguments.length;\nvar i__5770__auto___13598 \x3d (0);\nwhile(true){\nif((i__5770__auto___13598 \x3c len__5769__auto___13597)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13598]));\n\nvar G__13599 \x3d (i__5770__auto___13598 + (1));\ni__5770__auto___13598 \x3d G__13599;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((4)),(0),null));\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.mapv.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(o) : f.call(null,o)));\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));\n}));\n\n(cljs.core.mapv.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,c1,c2){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));\n}));\n\n(cljs.core.mapv.cljs$core$IFn$_invoke$arity$4 \x3d (function (f,c1,c2,c3){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));\n}));\n\n(cljs.core.mapv.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,c1,c2,c3,colls){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([colls], 0)));\n}));\n\n/** @this {Function} */\n(cljs.core.mapv.cljs$lang$applyTo \x3d (function (seq10431){\nvar G__10432 \x3d cljs.core.first(seq10431);\nvar seq10431__$1 \x3d cljs.core.next(seq10431);\nvar G__10433 \x3d cljs.core.first(seq10431__$1);\nvar seq10431__$2 \x3d cljs.core.next(seq10431__$1);\nvar G__10434 \x3d cljs.core.first(seq10431__$2);\nvar seq10431__$3 \x3d cljs.core.next(seq10431__$2);\nvar G__10435 \x3d cljs.core.first(seq10431__$3);\nvar seq10431__$4 \x3d cljs.core.next(seq10431__$3);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10432,G__10433,G__10434,G__10435,seq10431__$4);\n}));\n\n(cljs.core.mapv.cljs$lang$maxFixedArity \x3d (4));\n\n/**\n * Returns a vector of the items in coll for which\n *   (pred item) returns logical true. pred must be free of side-effects.\n */\ncljs.core.filterv \x3d (function cljs$core$filterv(pred,coll){\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(o) : pred.call(null,o)))){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);\n} else {\nreturn v;\n}\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));\n});\n/**\n * Returns a lazy sequence of lists of n items each, at offsets step\n *   apart. If step is not supplied, defaults to n, i.e. the partitions\n *   do not overlap. If a pad collection is supplied, use its elements as\n *   necessary to complete last partition up to n items. In case there are\n *   not enough padding elements, return a partition with less than n items.\n */\ncljs.core.partition \x3d (function cljs$core$partition(var_args){\nvar G__10438 \x3d arguments.length;\nswitch (G__10438) {\ncase 2:\nreturn cljs.core.partition.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.partition.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.partition.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.partition.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\nreturn cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);\n}));\n\n(cljs.core.partition.cljs$core$IFn$_invoke$arity$3 \x3d (function (n,step,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nvar p \x3d cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);\nif((n \x3d\x3d\x3d cljs.core.count(p))){\nreturn cljs.core.cons(p,cljs.core.partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.partition.cljs$core$IFn$_invoke$arity$4 \x3d (function (n,step,pad,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nvar p \x3d cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);\nif((n \x3d\x3d\x3d cljs.core.count(p))){\nreturn cljs.core.cons(p,cljs.core.partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));\n} else {\nreturn (new cljs.core.List(null,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)),null,(1),null));\n}\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.partition.cljs$lang$maxFixedArity \x3d 4);\n\n/**\n * Returns the value in a nested associative structure,\n *   where ks is a sequence of keys. Returns nil if the key is not present,\n *   or the not-found value if supplied.\n */\ncljs.core.get_in \x3d (function cljs$core$get_in(var_args){\nvar G__10440 \x3d arguments.length;\nswitch (G__10440) {\ncase 2:\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.get_in.cljs$core$IFn$_invoke$arity$2 \x3d (function (m,ks){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.get,m,ks);\n}));\n\n(cljs.core.get_in.cljs$core$IFn$_invoke$arity$3 \x3d (function (m,ks,not_found){\nvar sentinel \x3d cljs.core.lookup_sentinel;\nvar m__$1 \x3d m;\nvar ks__$1 \x3d cljs.core.seq(ks);\nwhile(true){\nif((!((ks__$1 \x3d\x3d null)))){\nvar m__$2 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);\nif((sentinel \x3d\x3d\x3d m__$2)){\nreturn not_found;\n} else {\nvar G__13605 \x3d sentinel;\nvar G__13606 \x3d m__$2;\nvar G__13607 \x3d cljs.core.next(ks__$1);\nsentinel \x3d G__13605;\nm__$1 \x3d G__13606;\nks__$1 \x3d G__13607;\ncontinue;\n}\n} else {\nreturn m__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.get_in.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Associates a value in a nested associative structure, where ks is a\n *   sequence of keys and v is the new value and returns a new nested structure.\n *   If any levels do not exist, hash-maps will be created.\n */\ncljs.core.assoc_in \x3d (function cljs$core$assoc_in(m,p__10441,v){\nvar vec__10442 \x3d p__10441;\nvar seq__10443 \x3d cljs.core.seq(vec__10442);\nvar first__10444 \x3d cljs.core.first(seq__10443);\nvar seq__10443__$1 \x3d cljs.core.next(seq__10443);\nvar k \x3d first__10444;\nvar ks \x3d seq__10443__$1;\nif(ks){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10445 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nvar G__10446 \x3d ks;\nvar G__10447 \x3d v;\nreturn (cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3 ? cljs.core.assoc_in.cljs$core$IFn$_invoke$arity$3(G__10445,G__10446,G__10447) : cljs.core.assoc_in.call(null,G__10445,G__10446,G__10447));\n})());\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);\n}\n});\n/**\n * \x27Updates\x27 a value in a nested associative structure, where ks is a\n *   sequence of keys and f is a function that will take the old value\n *   and any supplied args and return the new value, and returns a new\n *   nested structure.  If any levels do not exist, hash-maps will be\n *   created.\n */\ncljs.core.update_in \x3d (function cljs$core$update_in(var_args){\nvar G__10456 \x3d arguments.length;\nswitch (G__10456) {\ncase 3:\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase 6:\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13609 \x3d arguments.length;\nvar i__5770__auto___13610 \x3d (0);\nwhile(true){\nif((i__5770__auto___13610 \x3c len__5769__auto___13609)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13610]));\n\nvar G__13611 \x3d (i__5770__auto___13610 + (1));\ni__5770__auto___13610 \x3d G__13611;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((6)),(0),null));\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.update_in.cljs$core$IFn$_invoke$arity$3 \x3d (function (m,p__10457,f){\nvar vec__10458 \x3d p__10457;\nvar seq__10459 \x3d cljs.core.seq(vec__10458);\nvar first__10460 \x3d cljs.core.first(seq__10459);\nvar seq__10459__$1 \x3d cljs.core.next(seq__10459);\nvar k \x3d first__10460;\nvar ks \x3d seq__10459__$1;\nif(ks){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10461 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10461) : f.call(null,G__10461));\n})());\n}\n}));\n\n(cljs.core.update_in.cljs$core$IFn$_invoke$arity$4 \x3d (function (m,p__10462,f,a){\nvar vec__10463 \x3d p__10462;\nvar seq__10464 \x3d cljs.core.seq(vec__10463);\nvar first__10465 \x3d cljs.core.first(seq__10464);\nvar seq__10464__$1 \x3d cljs.core.next(seq__10464);\nvar k \x3d first__10465;\nvar ks \x3d seq__10464__$1;\nif(ks){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10466 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nvar G__10467 \x3d a;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10466,G__10467) : f.call(null,G__10466,G__10467));\n})());\n}\n}));\n\n(cljs.core.update_in.cljs$core$IFn$_invoke$arity$5 \x3d (function (m,p__10468,f,a,b){\nvar vec__10469 \x3d p__10468;\nvar seq__10470 \x3d cljs.core.seq(vec__10469);\nvar first__10471 \x3d cljs.core.first(seq__10470);\nvar seq__10470__$1 \x3d cljs.core.next(seq__10470);\nvar k \x3d first__10471;\nvar ks \x3d seq__10470__$1;\nif(ks){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10472 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nvar G__10473 \x3d a;\nvar G__10474 \x3d b;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10472,G__10473,G__10474) : f.call(null,G__10472,G__10473,G__10474));\n})());\n}\n}));\n\n(cljs.core.update_in.cljs$core$IFn$_invoke$arity$6 \x3d (function (m,p__10475,f,a,b,c){\nvar vec__10476 \x3d p__10475;\nvar seq__10477 \x3d cljs.core.seq(vec__10476);\nvar first__10478 \x3d cljs.core.first(seq__10477);\nvar seq__10477__$1 \x3d cljs.core.next(seq__10477);\nvar k \x3d first__10478;\nvar ks \x3d seq__10477__$1;\nif(ks){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10479 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nvar G__10480 \x3d a;\nvar G__10481 \x3d b;\nvar G__10482 \x3d c;\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10479,G__10480,G__10481,G__10482) : f.call(null,G__10479,G__10480,G__10481,G__10482));\n})());\n}\n}));\n\n(cljs.core.update_in.cljs$core$IFn$_invoke$arity$variadic \x3d (function (m,p__10483,f,a,b,c,args){\nvar vec__10484 \x3d p__10483;\nvar seq__10485 \x3d cljs.core.seq(vec__10484);\nvar first__10486 \x3d cljs.core.first(seq__10485);\nvar seq__10485__$1 \x3d cljs.core.next(seq__10485);\nvar k \x3d first__10486;\nvar ks \x3d seq__10485__$1;\nif(ks){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([b,c,args], 0)));\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0)));\n}\n}));\n\n/** @this {Function} */\n(cljs.core.update_in.cljs$lang$applyTo \x3d (function (seq10449){\nvar G__10450 \x3d cljs.core.first(seq10449);\nvar seq10449__$1 \x3d cljs.core.next(seq10449);\nvar G__10451 \x3d cljs.core.first(seq10449__$1);\nvar seq10449__$2 \x3d cljs.core.next(seq10449__$1);\nvar G__10452 \x3d cljs.core.first(seq10449__$2);\nvar seq10449__$3 \x3d cljs.core.next(seq10449__$2);\nvar G__10453 \x3d cljs.core.first(seq10449__$3);\nvar seq10449__$4 \x3d cljs.core.next(seq10449__$3);\nvar G__10454 \x3d cljs.core.first(seq10449__$4);\nvar seq10449__$5 \x3d cljs.core.next(seq10449__$4);\nvar G__10455 \x3d cljs.core.first(seq10449__$5);\nvar seq10449__$6 \x3d cljs.core.next(seq10449__$5);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10450,G__10451,G__10452,G__10453,G__10454,G__10455,seq10449__$6);\n}));\n\n(cljs.core.update_in.cljs$lang$maxFixedArity \x3d (6));\n\n/**\n * \x27Updates\x27 a value in an associative structure, where k is a\n *   key and f is a function that will take the old value\n *   and any supplied args and return the new value, and returns a new\n *   structure.  If the key does not exist, nil is passed as the old value.\n */\ncljs.core.update \x3d (function cljs$core$update(var_args){\nvar G__10495 \x3d arguments.length;\nswitch (G__10495) {\ncase 3:\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase 6:\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___13620 \x3d arguments.length;\nvar i__5770__auto___13621 \x3d (0);\nwhile(true){\nif((i__5770__auto___13621 \x3c len__5769__auto___13620)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___13621]));\n\nvar G__13622 \x3d (i__5770__auto___13621 + (1));\ni__5770__auto___13621 \x3d G__13622;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((6)),(0),null));\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.update.cljs$core$IFn$_invoke$arity$3 \x3d (function (m,k,f){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10496 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__10496) : f.call(null,G__10496));\n})());\n}));\n\n(cljs.core.update.cljs$core$IFn$_invoke$arity$4 \x3d (function (m,k,f,x){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10497 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nvar G__10498 \x3d x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10497,G__10498) : f.call(null,G__10497,G__10498));\n})());\n}));\n\n(cljs.core.update.cljs$core$IFn$_invoke$arity$5 \x3d (function (m,k,f,x,y){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10499 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nvar G__10500 \x3d x;\nvar G__10501 \x3d y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10499,G__10500,G__10501) : f.call(null,G__10499,G__10500,G__10501));\n})());\n}));\n\n(cljs.core.update.cljs$core$IFn$_invoke$arity$6 \x3d (function (m,k,f,x,y,z){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10502 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nvar G__10503 \x3d x;\nvar G__10504 \x3d y;\nvar G__10505 \x3d z;\nreturn (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__10502,G__10503,G__10504,G__10505) : f.call(null,G__10502,G__10503,G__10504,G__10505));\n})());\n}));\n\n(cljs.core.update.cljs$core$IFn$_invoke$arity$variadic \x3d (function (m,k,f,x,y,z,more){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([more], 0)));\n}));\n\n/** @this {Function} */\n(cljs.core.update.cljs$lang$applyTo \x3d (function (seq10488){\nvar G__10489 \x3d cljs.core.first(seq10488);\nvar seq10488__$1 \x3d cljs.core.next(seq10488);\nvar G__10490 \x3d cljs.core.first(seq10488__$1);\nvar seq10488__$2 \x3d cljs.core.next(seq10488__$1);\nvar G__10491 \x3d cljs.core.first(seq10488__$2);\nvar seq10488__$3 \x3d cljs.core.next(seq10488__$2);\nvar G__10492 \x3d cljs.core.first(seq10488__$3);\nvar seq10488__$4 \x3d cljs.core.next(seq10488__$3);\nvar G__10493 \x3d cljs.core.first(seq10488__$4);\nvar seq10488__$5 \x3d cljs.core.next(seq10488__$4);\nvar G__10494 \x3d cljs.core.first(seq10488__$5);\nvar seq10488__$6 \x3d cljs.core.next(seq10488__$5);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10489,G__10490,G__10491,G__10492,G__10493,G__10494,seq10488__$6);\n}));\n\n(cljs.core.update.cljs$lang$maxFixedArity \x3d (6));\n\n\n/**\n* @constructor\n*/\ncljs.core.VectorNode \x3d (function (edit,arr){\nthis.edit \x3d edit;\nthis.arr \x3d arr;\n});\n\n(cljs.core.VectorNode.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22edit\x22,\x22edit\x22,-1302639,null),new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null)], null);\n}));\n\n(cljs.core.VectorNode.cljs$lang$type \x3d true);\n\n(cljs.core.VectorNode.cljs$lang$ctorStr \x3d \x22cljs.core/VectorNode\x22);\n\n(cljs.core.VectorNode.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/VectorNode\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/VectorNode.\n */\ncljs.core.__GT_VectorNode \x3d (function cljs$core$__GT_VectorNode(edit,arr){\nreturn (new cljs.core.VectorNode(edit,arr));\n});\n\ncljs.core.pv_fresh_node \x3d (function cljs$core$pv_fresh_node(edit){\nreturn (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));\n});\ncljs.core.pv_aget \x3d (function cljs$core$pv_aget(node,idx){\nreturn (node.arr[idx]);\n});\ncljs.core.pv_aset \x3d (function cljs$core$pv_aset(node,idx,val){\nreturn (node.arr[idx] \x3d val);\n});\ncljs.core.pv_clone_node \x3d (function cljs$core$pv_clone_node(node){\nreturn (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));\n});\ncljs.core.tail_off \x3d (function cljs$core$tail_off(pv){\nvar cnt \x3d pv.cnt;\nif((cnt \x3c (32))){\nreturn (0);\n} else {\nreturn (((cnt - (1)) \x3e\x3e\x3e (5)) \x3c\x3c (5));\n}\n});\ncljs.core.new_path \x3d (function cljs$core$new_path(edit,level,node){\nvar ll \x3d level;\nvar ret \x3d node;\nwhile(true){\nif((ll \x3d\x3d\x3d (0))){\nreturn ret;\n} else {\nvar embed \x3d ret;\nvar r \x3d cljs.core.pv_fresh_node(edit);\nvar _ \x3d cljs.core.pv_aset(r,(0),embed);\nvar G__13643 \x3d (ll - (5));\nvar G__13644 \x3d r;\nll \x3d G__13643;\nret \x3d G__13644;\ncontinue;\n}\nbreak;\n}\n});\ncljs.core.push_tail \x3d (function cljs$core$push_tail(pv,level,parent,tailnode){\nvar ret \x3d cljs.core.pv_clone_node(parent);\nvar subidx \x3d (((pv.cnt - (1)) \x3e\x3e\x3e level) \x26 (31));\nif(((5) \x3d\x3d\x3d level)){\ncljs.core.pv_aset(ret,subidx,tailnode);\n\nreturn ret;\n} else {\nvar child \x3d cljs.core.pv_aget(parent,subidx);\nif((!((child \x3d\x3d null)))){\nvar node_to_insert \x3d (function (){var G__10506 \x3d pv;\nvar G__10507 \x3d (level - (5));\nvar G__10508 \x3d child;\nvar G__10509 \x3d tailnode;\nreturn (cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.push_tail.cljs$core$IFn$_invoke$arity$4(G__10506,G__10507,G__10508,G__10509) : cljs.core.push_tail.call(null,G__10506,G__10507,G__10508,G__10509));\n})();\ncljs.core.pv_aset(ret,subidx,node_to_insert);\n\nreturn ret;\n} else {\nvar node_to_insert \x3d cljs.core.new_path(null,(level - (5)),tailnode);\ncljs.core.pv_aset(ret,subidx,node_to_insert);\n\nreturn ret;\n}\n}\n});\ncljs.core.vector_index_out_of_bounds \x3d (function cljs$core$vector_index_out_of_bounds(i,cnt){\nthrow (new Error([\x22No item \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(i),\x22 in vector of length \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cnt)].join(\x27\x27)));\n});\ncljs.core.first_array_for_longvec \x3d (function cljs$core$first_array_for_longvec(pv){\nvar node \x3d pv.root;\nvar level \x3d pv.shift;\nwhile(true){\nif((level \x3e (0))){\nvar G__13664 \x3d cljs.core.pv_aget(node,(0));\nvar G__13665 \x3d (level - (5));\nnode \x3d G__13664;\nlevel \x3d G__13665;\ncontinue;\n} else {\nreturn node.arr;\n}\nbreak;\n}\n});\ncljs.core.unchecked_array_for \x3d (function cljs$core$unchecked_array_for(pv,i){\nif((i \x3e\x3d cljs.core.tail_off(pv))){\nreturn pv.tail;\n} else {\nvar node \x3d pv.root;\nvar level \x3d pv.shift;\nwhile(true){\nif((level \x3e (0))){\nvar G__13666 \x3d cljs.core.pv_aget(node,((i \x3e\x3e\x3e level) \x26 (31)));\nvar G__13667 \x3d (level - (5));\nnode \x3d G__13666;\nlevel \x3d G__13667;\ncontinue;\n} else {\nreturn node.arr;\n}\nbreak;\n}\n}\n});\ncljs.core.array_for \x3d (function cljs$core$array_for(pv,i){\nif(((((0) \x3c\x3d i)) \x26\x26 ((i \x3c pv.cnt)))){\nreturn cljs.core.unchecked_array_for(pv,i);\n} else {\nreturn cljs.core.vector_index_out_of_bounds(i,pv.cnt);\n}\n});\ncljs.core.do_assoc \x3d (function cljs$core$do_assoc(pv,level,node,i,val){\nvar ret \x3d cljs.core.pv_clone_node(node);\nif((level \x3d\x3d\x3d (0))){\ncljs.core.pv_aset(ret,(i \x26 (31)),val);\n\nreturn ret;\n} else {\nvar subidx \x3d ((i \x3e\x3e\x3e level) \x26 (31));\ncljs.core.pv_aset(ret,subidx,(function (){var G__10510 \x3d pv;\nvar G__10511 \x3d (level - (5));\nvar G__10512 \x3d cljs.core.pv_aget(node,subidx);\nvar G__10513 \x3d i;\nvar G__10514 \x3d val;\nreturn (cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5 ? cljs.core.do_assoc.cljs$core$IFn$_invoke$arity$5(G__10510,G__10511,G__10512,G__10513,G__10514) : cljs.core.do_assoc.call(null,G__10510,G__10511,G__10512,G__10513,G__10514));\n})());\n\nreturn ret;\n}\n});\ncljs.core.pop_tail \x3d (function cljs$core$pop_tail(pv,level,node){\nvar subidx \x3d (((pv.cnt - (2)) \x3e\x3e\x3e level) \x26 (31));\nif((level \x3e (5))){\nvar new_child \x3d (function (){var G__10515 \x3d pv;\nvar G__10516 \x3d (level - (5));\nvar G__10517 \x3d cljs.core.pv_aget(node,subidx);\nreturn (cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pop_tail.cljs$core$IFn$_invoke$arity$3(G__10515,G__10516,G__10517) : cljs.core.pop_tail.call(null,G__10515,G__10516,G__10517));\n})();\nif((((new_child \x3d\x3d null)) \x26\x26 ((subidx \x3d\x3d\x3d (0))))){\nreturn null;\n} else {\nvar ret \x3d cljs.core.pv_clone_node(node);\ncljs.core.pv_aset(ret,subidx,new_child);\n\nreturn ret;\n}\n} else {\nif((subidx \x3d\x3d\x3d (0))){\nreturn null;\n} else {\nvar ret \x3d cljs.core.pv_clone_node(node);\ncljs.core.pv_aset(ret,subidx,null);\n\nreturn ret;\n\n}\n}\n});\n\n/**\n* @constructor\n*/\ncljs.core.RangedIterator \x3d (function (i,base,arr,v,start,end){\nthis.i \x3d i;\nthis.base \x3d base;\nthis.arr \x3d arr;\nthis.v \x3d v;\nthis.start \x3d start;\nthis.end \x3d end;\n});\n(cljs.core.RangedIterator.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn (self__.i \x3c self__.end);\n}));\n\n(cljs.core.RangedIterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif(((self__.i - self__.base) \x3d\x3d\x3d (32))){\n(self__.arr \x3d cljs.core.unchecked_array_for(self__.v,self__.i));\n\n(self__.base \x3d (self__.base + (32)));\n} else {\n}\n\nvar ret \x3d (self__.arr[(self__.i \x26 (31))]);\n(self__.i \x3d (self__.i + (1)));\n\nreturn ret;\n}));\n\n(cljs.core.RangedIterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22base\x22,\x22base\x22,1825810849,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22v\x22,\x22v\x22,1661996586,null),new cljs.core.Symbol(null,\x22start\x22,\x22start\x22,1285322546,null),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null)], null);\n}));\n\n(cljs.core.RangedIterator.cljs$lang$type \x3d true);\n\n(cljs.core.RangedIterator.cljs$lang$ctorStr \x3d \x22cljs.core/RangedIterator\x22);\n\n(cljs.core.RangedIterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/RangedIterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/RangedIterator.\n */\ncljs.core.__GT_RangedIterator \x3d (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){\nreturn (new cljs.core.RangedIterator(i,base,arr,v,start,end));\n});\n\ncljs.core.ranged_iterator \x3d (function cljs$core$ranged_iterator(v,start,end){\nvar i \x3d start;\nreturn (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start \x3c cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));\n});\ncljs.core.pv_reduce \x3d (function cljs$core$pv_reduce(var_args){\nvar G__10519 \x3d arguments.length;\nswitch (G__10519) {\ncase 4:\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4 \x3d (function (pv,f,start,end){\nif((start \x3c end)){\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(pv,f,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(pv,start),(start + (1)),end);\n} else {\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n}));\n\n(cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5 \x3d (function (pv,f,init,start,end){\nvar acc \x3d init;\nvar i \x3d start;\nvar arr \x3d cljs.core.unchecked_array_for(pv,start);\nwhile(true){\nif((i \x3c end)){\nvar j \x3d (i \x26 (31));\nvar arr__$1 \x3d (((j \x3d\x3d\x3d (0)))?cljs.core.unchecked_array_for(pv,i):arr);\nvar nacc \x3d (function (){var G__10520 \x3d acc;\nvar G__10521 \x3d (arr__$1[j]);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10520,G__10521) : f.call(null,G__10520,G__10521));\n})();\nif(cljs.core.reduced_QMARK_(nacc)){\nreturn cljs.core.deref(nacc);\n} else {\nvar G__13672 \x3d nacc;\nvar G__13673 \x3d (i + (1));\nvar G__13674 \x3d arr__$1;\nacc \x3d G__13672;\ni \x3d G__13673;\narr \x3d G__13674;\ncontinue;\n}\n} else {\nreturn acc;\n}\nbreak;\n}\n}));\n\n(cljs.core.pv_reduce.cljs$lang$maxFixedArity \x3d 5);\n\n\n\n\n\n\n\n\n/**\n * Marker protocol\n * @interface\n */\ncljs.core.APersistentVector \x3d function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.APersistentVector}\n * @implements {cljs.core.IIndexed}\n * @implements {cljs.core.IVector}\n * @implements {cljs.core.IReversible}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEditableCollection}\n * @implements {cljs.core.IFind}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IStack}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.ILookup}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.PersistentVector \x3d (function (meta,cnt,shift,root,tail,__hash){\nthis.meta \x3d meta;\nthis.cnt \x3d cnt;\nthis.shift \x3d shift;\nthis.root \x3d root;\nthis.tail \x3d tail;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 167666463;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139268;\n});\n(cljs.core.PersistentVector.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentVector.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,n){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c self__.cnt)))){\nreturn (new cljs.core.MapEntry(n,(cljs.core.unchecked_array_for(coll__$1,n)[(n \x26 (31))]),null));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentVector.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.PersistentVector.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.PersistentVector.prototype.indexOf \x3d (function() {\nvar G__13675 \x3d null;\nvar G__13675__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13675__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13675 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13675__1.call(this,x);\ncase 2:\nreturn G__13675__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13675.cljs$core$IFn$_invoke$arity$1 \x3d G__13675__1;\nG__13675.cljs$core$IFn$_invoke$arity$2 \x3d G__13675__2;\nreturn G__13675;\n})()\n);\n\n(cljs.core.PersistentVector.prototype.lastIndexOf \x3d (function() {\nvar G__13676 \x3d null;\nvar G__13676__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__13676__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13676 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13676__1.call(this,x);\ncase 2:\nreturn G__13676__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13676.cljs$core$IFn$_invoke$arity$1 \x3d G__13676__1;\nG__13676.cljs$core$IFn$_invoke$arity$2 \x3d G__13676__2;\nreturn G__13676;\n})()\n);\n\n(cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(typeof k \x3d\x3d\x3d \x27number\x27){\nreturn coll__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (v,f,init){\nvar self__ \x3d this;\nvar v__$1 \x3d this;\nvar i \x3d (0);\nvar init__$1 \x3d init;\nwhile(true){\nif((i \x3c self__.cnt)){\nvar arr \x3d cljs.core.unchecked_array_for(v__$1,i);\nvar len \x3d arr.length;\nvar init__$2 \x3d (function (){var j \x3d (0);\nvar init__$2 \x3d init__$1;\nwhile(true){\nif((j \x3c len)){\nvar init__$3 \x3d (function (){var G__10523 \x3d init__$2;\nvar G__10524 \x3d (j + i);\nvar G__10525 \x3d (arr[j]);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10523,G__10524,G__10525) : f.call(null,G__10523,G__10524,G__10525));\n})();\nif(cljs.core.reduced_QMARK_(init__$3)){\nreturn init__$3;\n} else {\nvar G__13677 \x3d (j + (1));\nvar G__13678 \x3d init__$3;\nj \x3d G__13677;\ninit__$2 \x3d G__13678;\ncontinue;\n}\n} else {\nreturn init__$2;\n}\nbreak;\n}\n})();\nif(cljs.core.reduced_QMARK_(init__$2)){\nreturn cljs.core.deref(init__$2);\n} else {\nvar G__13679 \x3d (i + len);\nvar G__13680 \x3d init__$2;\ni \x3d G__13679;\ninit__$1 \x3d G__13680;\ncontinue;\n}\n} else {\nreturn init__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$APersistentVector$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,n){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (cljs.core.array_for(coll__$1,n)[(n \x26 (31))]);\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,n,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c self__.cnt)))){\nreturn (cljs.core.unchecked_array_for(coll__$1,n)[(n \x26 (31))]);\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (coll,n,val){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c self__.cnt)))){\nif((cljs.core.tail_off(coll__$1) \x3c\x3d n)){\nvar new_tail \x3d cljs.core.aclone(self__.tail);\n(new_tail[(n \x26 (31))] \x3d val);\n\nreturn (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));\n} else {\nreturn (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));\n}\n} else {\nif((n \x3d\x3d\x3d self__.cnt)){\nreturn coll__$1.cljs$core$ICollection$_conj$arity$2(null,val);\n} else {\nthrow (new Error([\x22Index \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22 out of bounds  [0,\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt),\x22]\x22].join(\x27\x27)));\n\n}\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.cnt;\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.cnt \x3e (0))){\nreturn coll__$1.cljs$core$IIndexed$_nth$arity$2(null,(self__.cnt - (1)));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.cnt \x3d\x3d\x3d (0))){\nthrow (new Error(\x22Can\x27t pop empty vector\x22));\n} else {\nif(((1) \x3d\x3d\x3d self__.cnt)){\nreturn cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);\n} else {\nif(((1) \x3c (self__.cnt - cljs.core.tail_off(coll__$1)))){\nreturn (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));\n} else {\nvar new_tail \x3d cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));\nvar nr \x3d cljs.core.pop_tail(coll__$1,self__.shift,self__.root);\nvar new_root \x3d (((nr \x3d\x3d null))?cljs.core.PersistentVector.EMPTY_NODE:nr);\nvar cnt_1 \x3d (self__.cnt - (1));\nif(((((5) \x3c self__.shift)) \x26\x26 ((cljs.core.pv_aget(new_root,(1)) \x3d\x3d null)))){\nreturn (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));\n} else {\nreturn (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));\n}\n\n}\n}\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.cnt \x3e (0))){\nreturn (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((other instanceof cljs.core.PersistentVector)){\nif((self__.cnt \x3d\x3d\x3d cljs.core.count(other))){\nvar me_iter \x3d coll__$1.cljs$core$IIterable$_iterator$arity$1(null);\nvar you_iter \x3d other.cljs$core$IIterable$_iterator$arity$1(null);\nwhile(true){\nif(me_iter.hasNext()){\nvar x \x3d me_iter.next();\nvar y \x3d you_iter.next();\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){\ncontinue;\n} else {\nreturn false;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n} else {\nreturn false;\n}\n} else {\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.TransientVector(self__.cnt,self__.shift,(cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(self__.root) : cljs.core.tv_editable_root.call(null,self__.root)),(cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(self__.tail) : cljs.core.tv_editable_tail.call(null,self__.tail))));\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (v,f){\nvar self__ \x3d this;\nvar v__$1 \x3d this;\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(v__$1,f,(0),self__.cnt);\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (v,f,init){\nvar self__ \x3d this;\nvar v__$1 \x3d this;\nvar i \x3d (0);\nvar init__$1 \x3d init;\nwhile(true){\nif((i \x3c self__.cnt)){\nvar arr \x3d cljs.core.unchecked_array_for(v__$1,i);\nvar len \x3d arr.length;\nvar init__$2 \x3d (function (){var j \x3d (0);\nvar init__$2 \x3d init__$1;\nwhile(true){\nif((j \x3c len)){\nvar init__$3 \x3d (function (){var G__10526 \x3d init__$2;\nvar G__10527 \x3d (arr[j]);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10526,G__10527) : f.call(null,G__10526,G__10527));\n})();\nif(cljs.core.reduced_QMARK_(init__$3)){\nreturn init__$3;\n} else {\nvar G__13684 \x3d (j + (1));\nvar G__13685 \x3d init__$3;\nj \x3d G__13684;\ninit__$2 \x3d G__13685;\ncontinue;\n}\n} else {\nreturn init__$2;\n}\nbreak;\n}\n})();\nif(cljs.core.reduced_QMARK_(init__$2)){\nreturn cljs.core.deref(init__$2);\n} else {\nvar G__13686 \x3d (i + len);\nvar G__13687 \x3d init__$2;\ni \x3d G__13686;\ninit__$1 \x3d G__13687;\ncontinue;\n}\n} else {\nreturn init__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,k,v){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(typeof k \x3d\x3d\x3d \x27number\x27){\nreturn coll__$1.cljs$core$IVector$_assoc_n$arity$3(null,k,v);\n} else {\nthrow (new Error(\x22Vector\x27s key for assoc must be a number.\x22));\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(cljs.core.integer_QMARK_(k)){\nreturn ((((0) \x3c\x3d k)) \x26\x26 ((k \x3c self__.cnt)));\n} else {\nreturn false;\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.cnt \x3d\x3d\x3d (0))){\nreturn null;\n} else {\nif((self__.cnt \x3c\x3d (32))){\nreturn (new cljs.core.IndexedSeq(self__.tail,(0),null));\n} else {\nvar G__10528 \x3d coll__$1;\nvar G__10529 \x3d cljs.core.first_array_for_longvec(coll__$1);\nvar G__10530 \x3d (0);\nvar G__10531 \x3d (0);\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10528,G__10529,G__10530,G__10531) : cljs.core.chunked_seq.call(null,G__10528,G__10529,G__10530,G__10531));\n\n}\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentVector(new_meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((self__.cnt - cljs.core.tail_off(coll__$1)) \x3c (32))){\nvar len \x3d self__.tail.length;\nvar new_tail \x3d (new Array((len + (1))));\nvar n__5636__auto___13688 \x3d len;\nvar i_13689 \x3d (0);\nwhile(true){\nif((i_13689 \x3c n__5636__auto___13688)){\n(new_tail[i_13689] \x3d (self__.tail[i_13689]));\n\nvar G__13690 \x3d (i_13689 + (1));\ni_13689 \x3d G__13690;\ncontinue;\n} else {\n}\nbreak;\n}\n\n(new_tail[len] \x3d o);\n\nreturn (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));\n} else {\nvar root_overflow_QMARK_ \x3d ((self__.cnt \x3e\x3e\x3e (5)) \x3e ((1) \x3c\x3c self__.shift));\nvar new_shift \x3d ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);\nvar new_root \x3d ((root_overflow_QMARK_)?(function (){var n_r \x3d cljs.core.pv_fresh_node(null);\ncljs.core.pv_aset(n_r,(0),self__.root);\n\ncljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));\n\nreturn n_r;\n})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));\nreturn (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));\n}\n}));\n\n(cljs.core.PersistentVector.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10532 \x3d (arguments.length - (1));\nswitch (G__10532) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.PersistentVector.prototype.apply \x3d (function (self__,args10522){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10522)));\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nif(typeof k \x3d\x3d\x3d \x27number\x27){\nreturn coll.cljs$core$IIndexed$_nth$arity$2(null,k);\n} else {\nthrow (new Error(\x22Key must be integer\x22));\n}\n}));\n\n(cljs.core.PersistentVector.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.Symbol(null,\x22shift\x22,\x22shift\x22,-1657295705,null),new cljs.core.Symbol(null,\x22root\x22,\x22root\x22,1191874074,null),new cljs.core.Symbol(null,\x22tail\x22,\x22tail\x22,494507963,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.PersistentVector.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentVector.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentVector\x22);\n\n(cljs.core.PersistentVector.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentVector\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentVector.\n */\ncljs.core.__GT_PersistentVector \x3d (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){\nreturn (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));\n});\n\n(cljs.core.PersistentVector.EMPTY_NODE \x3d (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null])));\n(cljs.core.PersistentVector.EMPTY \x3d (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash)));\n(cljs.core.PersistentVector.fromArray \x3d (function (xs,no_clone){\nvar l \x3d xs.length;\nvar xs__$1 \x3d ((no_clone)?xs:cljs.core.aclone(xs));\nif((l \x3c (32))){\nreturn (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));\n} else {\nvar node \x3d xs__$1.slice((0),(32));\nvar v \x3d (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));\nvar i \x3d (32);\nvar out \x3d v.cljs$core$IEditableCollection$_as_transient$arity$1(null);\nwhile(true){\nif((i \x3c l)){\nvar G__13692 \x3d (i + (1));\nvar G__13693 \x3d cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));\ni \x3d G__13692;\nout \x3d G__13693;\ncontinue;\n} else {\nreturn cljs.core.persistent_BANG_(out);\n}\nbreak;\n}\n}\n}));\n(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n/**\n * Creates a new vector containing the contents of coll. JavaScript arrays\n *   will be aliased and should not be modified.\n */\ncljs.core.vec \x3d (function cljs$core$vec(coll){\nif(cljs.core.truth_((cljs.core.map_entry_QMARK_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.map_entry_QMARK_.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.map_entry_QMARK_.call(null,coll)))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.key.call(null,coll)),(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.val.call(null,coll))], null);\n} else {\nif(cljs.core.vector_QMARK_(coll)){\nreturn cljs.core.with_meta(coll,null);\n} else {\nif(cljs.core.array_QMARK_(coll)){\nreturn cljs.core.PersistentVector.fromArray(coll,true);\n} else {\nreturn cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));\n\n}\n}\n}\n});\n/**\n * Creates a new vector containing the args.\n */\ncljs.core.vector \x3d (function cljs$core$vector(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___13694 \x3d arguments.length;\nvar i__5770__auto___13695 \x3d (0);\nwhile(true){\nif((i__5770__auto___13695 \x3c len__5769__auto___13694)){\nargs__5775__auto__.push((arguments[i__5770__auto___13695]));\n\nvar G__13696 \x3d (i__5770__auto___13695 + (1));\ni__5770__auto___13695 \x3d G__13696;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.vector.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\nif((((args instanceof cljs.core.IndexedSeq)) \x26\x26 ((args.i \x3d\x3d\x3d (0))))){\nreturn cljs.core.PersistentVector.fromArray(args.arr,(!(cljs.core.array_QMARK_(args.arr))));\n} else {\nreturn cljs.core.vec(args);\n}\n}));\n\n(cljs.core.vector.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.vector.cljs$lang$applyTo \x3d (function (seq10533){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10533));\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ASeq}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IChunkedNext}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IChunkedSeq}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.ChunkedSeq \x3d (function (vec,node,i,off,meta,__hash){\nthis.vec \x3d vec;\nthis.node \x3d node;\nthis.i \x3d i;\nthis.off \x3d off;\nthis.meta \x3d meta;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32375020;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1536;\n});\n(cljs.core.ChunkedSeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.ChunkedSeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.ChunkedSeq.prototype.indexOf \x3d (function() {\nvar G__13700 \x3d null;\nvar G__13700__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13700__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13700 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13700__1.call(this,x);\ncase 2:\nreturn G__13700__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13700.cljs$core$IFn$_invoke$arity$1 \x3d G__13700__1;\nG__13700.cljs$core$IFn$_invoke$arity$2 \x3d G__13700__2;\nreturn G__13700;\n})()\n);\n\n(cljs.core.ChunkedSeq.prototype.lastIndexOf \x3d (function() {\nvar G__13707 \x3d null;\nvar G__13707__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__13707__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13707 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13707__1.call(this,x);\ncase 2:\nreturn G__13707__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13707.cljs$core$IFn$_invoke$arity$1 \x3d G__13707__1;\nG__13707.cljs$core$IFn$_invoke$arity$2 \x3d G__13707__2;\nreturn G__13707;\n})()\n);\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((self__.off + (1)) \x3c self__.node.length)){\nvar s \x3d (function (){var G__10534 \x3d self__.vec;\nvar G__10535 \x3d self__.node;\nvar G__10536 \x3d self__.i;\nvar G__10537 \x3d (self__.off + (1));\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10534,G__10535,G__10536,G__10537) : cljs.core.chunked_seq.call(null,G__10534,G__10535,G__10536,G__10537));\n})();\nif((s \x3d\x3d null)){\nreturn null;\n} else {\nreturn s;\n}\n} else {\nreturn coll__$1.cljs$core$IChunkedNext$_chunked_next$arity$1(null);\n}\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.vec,f,(self__.i + self__.off),cljs.core.count(self__.vec));\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.vec,f,start,(self__.i + self__.off),cljs.core.count(self__.vec));\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (self__.node[self__.off]);\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((self__.off + (1)) \x3c self__.node.length)){\nvar s \x3d (function (){var G__10538 \x3d self__.vec;\nvar G__10539 \x3d self__.node;\nvar G__10540 \x3d self__.i;\nvar G__10541 \x3d (self__.off + (1));\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10538,G__10539,G__10540,G__10541) : cljs.core.chunked_seq.call(null,G__10538,G__10539,G__10540,G__10541));\n})();\nif((s \x3d\x3d null)){\nreturn cljs.core.List.EMPTY;\n} else {\nreturn s;\n}\n} else {\nreturn coll__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null);\n}\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar end \x3d (self__.i + self__.node.length);\nif((end \x3c cljs.core._count(self__.vec))){\nvar G__10542 \x3d self__.vec;\nvar G__10543 \x3d cljs.core.unchecked_array_for(self__.vec,end);\nvar G__10544 \x3d end;\nvar G__10545 \x3d (0);\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10542,G__10543,G__10544,G__10545) : cljs.core.chunked_seq.call(null,G__10542,G__10543,G__10544,G__10545));\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(self__.vec,self__.node,self__.i,self__.off,new_meta) : cljs.core.chunked_seq.call(null,self__.vec,self__.node,self__.i,self__.off,new_meta));\n}\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar end \x3d (self__.i + self__.node.length);\nif((end \x3c cljs.core._count(self__.vec))){\nvar G__10546 \x3d self__.vec;\nvar G__10547 \x3d cljs.core.unchecked_array_for(self__.vec,end);\nvar G__10548 \x3d end;\nvar G__10549 \x3d (0);\nreturn (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__10546,G__10547,G__10548,G__10549) : cljs.core.chunked_seq.call(null,G__10546,G__10547,G__10548,G__10549));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.ChunkedSeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22vec\x22,\x22vec\x22,982683596,null),new cljs.core.Symbol(null,\x22node\x22,\x22node\x22,-2073234571,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22off\x22,\x22off\x22,-2047994980,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ChunkedSeq.cljs$lang$type \x3d true);\n\n(cljs.core.ChunkedSeq.cljs$lang$ctorStr \x3d \x22cljs.core/ChunkedSeq\x22);\n\n(cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ChunkedSeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ChunkedSeq.\n */\ncljs.core.__GT_ChunkedSeq \x3d (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){\nreturn (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));\n});\n\n(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\ncljs.core.chunked_seq \x3d (function cljs$core$chunked_seq(var_args){\nvar G__10551 \x3d arguments.length;\nswitch (G__10551) {\ncase 3:\nreturn cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 5:\nreturn cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$3 \x3d (function (vec,i,off){\nreturn (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));\n}));\n\n(cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 \x3d (function (vec,node,i,off){\nreturn (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));\n}));\n\n(cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 \x3d (function (vec,node,i,off,meta){\nreturn (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));\n}));\n\n(cljs.core.chunked_seq.cljs$lang$maxFixedArity \x3d 5);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n * @implements {cljs.core.IVector}\n * @implements {cljs.core.IReversible}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IFind}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IStack}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.ILookup}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.Subvec \x3d (function (meta,v,start,end,__hash){\nthis.meta \x3d meta;\nthis.v \x3d v;\nthis.start \x3d start;\nthis.end \x3d end;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 167666463;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(cljs.core.Subvec.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Subvec.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,n){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((n \x3c (0))){\nreturn null;\n} else {\nvar idx \x3d (self__.start + n);\nif((idx \x3c self__.end)){\nreturn (new cljs.core.MapEntry(n,cljs.core._lookup(self__.v,idx),null));\n} else {\nreturn null;\n}\n}\n}));\n\n(cljs.core.Subvec.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.Subvec.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.Subvec.prototype.indexOf \x3d (function() {\nvar G__13709 \x3d null;\nvar G__13709__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13709__2 \x3d (function (x,start__$1){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\n});\nG__13709 \x3d function(x,start__$1){\nswitch(arguments.length){\ncase 1:\nreturn G__13709__1.call(this,x);\ncase 2:\nreturn G__13709__2.call(this,x,start__$1);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13709.cljs$core$IFn$_invoke$arity$1 \x3d G__13709__1;\nG__13709.cljs$core$IFn$_invoke$arity$2 \x3d G__13709__2;\nreturn G__13709;\n})()\n);\n\n(cljs.core.Subvec.prototype.lastIndexOf \x3d (function() {\nvar G__13710 \x3d null;\nvar G__13710__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__13710__2 \x3d (function (x,start__$1){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\n});\nG__13710 \x3d function(x,start__$1){\nswitch(arguments.length){\ncase 1:\nreturn G__13710__1.call(this,x);\ncase 2:\nreturn G__13710__2.call(this,x,start__$1);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13710.cljs$core$IFn$_invoke$arity$1 \x3d G__13710__1;\nG__13710.cljs$core$IFn$_invoke$arity$2 \x3d G__13710__2;\nreturn G__13710;\n})()\n);\n\n(cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(typeof k \x3d\x3d\x3d \x27number\x27){\nreturn coll__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (coll,f,init){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar i \x3d self__.start;\nvar j \x3d (0);\nvar init__$1 \x3d init;\nwhile(true){\nif((i \x3c self__.end)){\nvar init__$2 \x3d (function (){var G__10553 \x3d init__$1;\nvar G__10554 \x3d j;\nvar G__10555 \x3d cljs.core._nth(self__.v,i);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10553,G__10554,G__10555) : f.call(null,G__10553,G__10554,G__10555));\n})();\nif(cljs.core.reduced_QMARK_(init__$2)){\nreturn cljs.core.deref(init__$2);\n} else {\nvar G__13711 \x3d (i + (1));\nvar G__13712 \x3d (j + (1));\nvar G__13713 \x3d init__$2;\ni \x3d G__13711;\nj \x3d G__13712;\ninit__$1 \x3d G__13713;\ncontinue;\n}\n} else {\nreturn init__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,n){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((((n \x3c (0))) || ((self__.end \x3c\x3d (self__.start + n))))){\nreturn cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));\n} else {\nreturn cljs.core._nth(self__.v,(self__.start + n));\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,n,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((((n \x3c (0))) || ((self__.end \x3c\x3d (self__.start + n))))){\nreturn not_found;\n} else {\nreturn cljs.core._nth(self__.v,(self__.start + n),not_found);\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (coll,n,val){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar v_pos \x3d (self__.start + n);\nif((((n \x3c (0))) || (((self__.end + (1)) \x3c\x3d v_pos)))){\nthrow (new Error([\x22Index \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22 out of bounds [0,\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(coll__$1.cljs$core$ICounted$_count$arity$1(null)),\x22]\x22].join(\x27\x27)));\n} else {\nvar G__10556 \x3d self__.meta;\nvar G__10557 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);\nvar G__10558 \x3d self__.start;\nvar G__10559 \x3d (function (){var x__5130__auto__ \x3d self__.end;\nvar y__5131__auto__ \x3d (v_pos + (1));\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})();\nvar G__10560 \x3d null;\nreturn (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10556,G__10557,G__10558,G__10559,G__10560) : cljs.core.build_subvec.call(null,G__10556,G__10557,G__10558,G__10559,G__10560));\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((((!((self__.v \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.v.cljs$core$APersistentVector$))))?true:false):false)){\nreturn cljs.core.ranged_iterator(self__.v,self__.start,self__.end);\n} else {\nreturn cljs.core.seq_iter(coll__$1);\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (self__.end - self__.start);\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.start \x3d\x3d\x3d self__.end)){\nreturn null;\n} else {\nreturn cljs.core._nth(self__.v,(self__.end - (1)));\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.start \x3d\x3d\x3d self__.end)){\nthrow (new Error(\x22Can\x27t pop empty vector\x22));\n} else {\nvar G__10562 \x3d self__.meta;\nvar G__10563 \x3d self__.v;\nvar G__10564 \x3d self__.start;\nvar G__10565 \x3d (self__.end - (1));\nvar G__10566 \x3d null;\nreturn (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10562,G__10563,G__10564,G__10565,G__10566) : cljs.core.build_subvec.call(null,G__10562,G__10563,G__10564,G__10565,G__10566));\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((!((self__.start \x3d\x3d\x3d self__.end)))){\nreturn (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((((!((self__.v \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.v.cljs$core$APersistentVector$))))?true:false):false)){\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$4(self__.v,f,self__.start,self__.end);\n} else {\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,init){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((((!((self__.v \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.v.cljs$core$APersistentVector$))))?true:false):false)){\nreturn cljs.core.pv_reduce.cljs$core$IFn$_invoke$arity$5(self__.v,f,init,self__.start,self__.end);\n} else {\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,init);\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,key,val){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(typeof key \x3d\x3d\x3d \x27number\x27){\nreturn coll__$1.cljs$core$IVector$_assoc_n$arity$3(null,key,val);\n} else {\nthrow (new Error(\x22Subvec\x27s key for assoc must be a number.\x22));\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,key){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(cljs.core.integer_QMARK_(key)){\nreturn ((((0) \x3c\x3d key)) \x26\x26 ((key \x3c (self__.end - self__.start))));\n} else {\nreturn false;\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar subvec_seq \x3d (function cljs$core$subvec_seq(i){\nif((i \x3d\x3d\x3d self__.end)){\nreturn null;\n} else {\nreturn cljs.core.cons(cljs.core._nth(self__.v,i),(new cljs.core.LazySeq(null,(function (){\nreturn cljs$core$subvec_seq((i + (1)));\n}),null,null)));\n}\n});\nreturn subvec_seq(self__.start);\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(new_meta,self__.v,self__.start,self__.end,self__.__hash) : cljs.core.build_subvec.call(null,new_meta,self__.v,self__.start,self__.end,self__.__hash));\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar G__10569 \x3d self__.meta;\nvar G__10570 \x3d cljs.core._assoc_n(self__.v,self__.end,o);\nvar G__10571 \x3d self__.start;\nvar G__10572 \x3d (self__.end + (1));\nvar G__10573 \x3d null;\nreturn (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__10569,G__10570,G__10571,G__10572,G__10573) : cljs.core.build_subvec.call(null,G__10569,G__10570,G__10571,G__10572,G__10573));\n}));\n\n(cljs.core.Subvec.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10574 \x3d (arguments.length - (1));\nswitch (G__10574) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.Subvec.prototype.apply \x3d (function (self__,args10552){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10552)));\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$IIndexed$_nth$arity$2(null,k);\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\n}));\n\n(cljs.core.Subvec.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22v\x22,\x22v\x22,1661996586,null),new cljs.core.Symbol(null,\x22start\x22,\x22start\x22,1285322546,null),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Subvec.cljs$lang$type \x3d true);\n\n(cljs.core.Subvec.cljs$lang$ctorStr \x3d \x22cljs.core/Subvec\x22);\n\n(cljs.core.Subvec.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Subvec\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Subvec.\n */\ncljs.core.__GT_Subvec \x3d (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){\nreturn (new cljs.core.Subvec(meta,v,start,end,__hash));\n});\n\n(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\ncljs.core.build_subvec \x3d (function cljs$core$build_subvec(meta,v,start,end,__hash){\nwhile(true){\nif((v instanceof cljs.core.Subvec)){\nvar G__13725 \x3d meta;\nvar G__13726 \x3d v.v;\nvar G__13727 \x3d (v.start + start);\nvar G__13728 \x3d (v.start + end);\nvar G__13729 \x3d __hash;\nmeta \x3d G__13725;\nv \x3d G__13726;\nstart \x3d G__13727;\nend \x3d G__13728;\n__hash \x3d G__13729;\ncontinue;\n} else {\nif(cljs.core.vector_QMARK_(v)){\n} else {\nthrow (new Error(\x22v must satisfy IVector\x22));\n}\n\nif((((start \x3c (0))) || ((((end \x3c start)) || ((end \x3e cljs.core.count(v))))))){\nthrow (new Error(\x22Index out of bounds\x22));\n} else {\n}\n\nreturn (new cljs.core.Subvec(meta,v,start,end,__hash));\n}\nbreak;\n}\n});\n/**\n * Returns a persistent vector of the items in vector from\n *   start (inclusive) to end (exclusive).  If end is not supplied,\n *   defaults to (count vector). This operation is O(1) and very fast, as\n *   the resulting vector shares structure with the original and no\n *   trimming is done.\n */\ncljs.core.subvec \x3d (function cljs$core$subvec(var_args){\nvar G__10576 \x3d arguments.length;\nswitch (G__10576) {\ncase 2:\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.subvec.cljs$core$IFn$_invoke$arity$2 \x3d (function (v,start){\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));\n}));\n\n(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 \x3d (function (v,start,end){\nif((((!((start \x3d\x3d null)))) \x26\x26 ((!((end \x3d\x3d null)))))){\n} else {\nthrow (new Error(\x22Assert failed: (and (not (nil? start)) (not (nil? end)))\x22));\n}\n\nreturn cljs.core.build_subvec(null,v,(start | (0)),(end | (0)),null);\n}));\n\n(cljs.core.subvec.cljs$lang$maxFixedArity \x3d 3);\n\ncljs.core.tv_ensure_editable \x3d (function cljs$core$tv_ensure_editable(edit,node){\nif((edit \x3d\x3d\x3d node.edit)){\nreturn node;\n} else {\nreturn (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));\n}\n});\ncljs.core.tv_editable_root \x3d (function cljs$core$tv_editable_root(node){\nreturn (new cljs.core.VectorNode(({}),cljs.core.aclone(node.arr)));\n});\ncljs.core.tv_editable_tail \x3d (function cljs$core$tv_editable_tail(tl){\nvar ret \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\ncljs.core.array_copy(tl,(0),ret,(0),tl.length);\n\nreturn ret;\n});\ncljs.core.tv_push_tail \x3d (function cljs$core$tv_push_tail(tv,level,parent,tail_node){\nvar ret \x3d cljs.core.tv_ensure_editable(tv.root.edit,parent);\nvar subidx \x3d (((tv.cnt - (1)) \x3e\x3e\x3e level) \x26 (31));\ncljs.core.pv_aset(ret,subidx,(((level \x3d\x3d\x3d (5)))?tail_node:(function (){var child \x3d cljs.core.pv_aget(ret,subidx);\nif((!((child \x3d\x3d null)))){\nvar G__10579 \x3d tv;\nvar G__10580 \x3d (level - (5));\nvar G__10581 \x3d child;\nvar G__10582 \x3d tail_node;\nreturn (cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tv_push_tail.cljs$core$IFn$_invoke$arity$4(G__10579,G__10580,G__10581,G__10582) : cljs.core.tv_push_tail.call(null,G__10579,G__10580,G__10581,G__10582));\n} else {\nreturn cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);\n}\n})()));\n\nreturn ret;\n});\ncljs.core.tv_pop_tail \x3d (function cljs$core$tv_pop_tail(tv,level,node){\nvar node__$1 \x3d cljs.core.tv_ensure_editable(tv.root.edit,node);\nvar subidx \x3d (((tv.cnt - (2)) \x3e\x3e\x3e level) \x26 (31));\nif((level \x3e (5))){\nvar new_child \x3d (function (){var G__10583 \x3d tv;\nvar G__10584 \x3d (level - (5));\nvar G__10585 \x3d cljs.core.pv_aget(node__$1,subidx);\nreturn (cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tv_pop_tail.cljs$core$IFn$_invoke$arity$3(G__10583,G__10584,G__10585) : cljs.core.tv_pop_tail.call(null,G__10583,G__10584,G__10585));\n})();\nif((((new_child \x3d\x3d null)) \x26\x26 ((subidx \x3d\x3d\x3d (0))))){\nreturn null;\n} else {\ncljs.core.pv_aset(node__$1,subidx,new_child);\n\nreturn node__$1;\n}\n} else {\nif((subidx \x3d\x3d\x3d (0))){\nreturn null;\n} else {\ncljs.core.pv_aset(node__$1,subidx,null);\n\nreturn node__$1;\n\n}\n}\n});\ncljs.core.unchecked_editable_array_for \x3d (function cljs$core$unchecked_editable_array_for(tv,i){\nif((i \x3e\x3d cljs.core.tail_off(tv))){\nreturn tv.tail;\n} else {\nvar root \x3d tv.root;\nvar node \x3d root;\nvar level \x3d tv.shift;\nwhile(true){\nif((level \x3e (0))){\nvar G__13739 \x3d cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i \x3e\x3e\x3e level) \x26 (31))));\nvar G__13740 \x3d (level - (5));\nnode \x3d G__13739;\nlevel \x3d G__13740;\ncontinue;\n} else {\nreturn node.arr;\n}\nbreak;\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ITransientCollection}\n * @implements {cljs.core.ITransientVector}\n * @implements {cljs.core.ITransientAssociative}\n * @implements {cljs.core.ILookup}\n*/\ncljs.core.TransientVector \x3d (function (cnt,shift,root,tail){\nthis.cnt \x3d cnt;\nthis.shift \x3d shift;\nthis.root \x3d root;\nthis.tail \x3d tail;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 88;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 275;\n});\n(cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 \x3d (function (tcoll,o){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(self__.root.edit){\nif(((self__.cnt - cljs.core.tail_off(tcoll__$1)) \x3c (32))){\n(self__.tail[(self__.cnt \x26 (31))] \x3d o);\n\n(self__.cnt \x3d (self__.cnt + (1)));\n\nreturn tcoll__$1;\n} else {\nvar tail_node \x3d (new cljs.core.VectorNode(self__.root.edit,self__.tail));\nvar new_tail \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n(new_tail[(0)] \x3d o);\n\n(self__.tail \x3d new_tail);\n\nif(((self__.cnt \x3e\x3e\x3e (5)) \x3e ((1) \x3c\x3c self__.shift))){\nvar new_root_array \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\nvar new_shift \x3d (self__.shift + (5));\n(new_root_array[(0)] \x3d self__.root);\n\n(new_root_array[(1)] \x3d cljs.core.new_path(self__.root.edit,self__.shift,tail_node));\n\n(self__.root \x3d (new cljs.core.VectorNode(self__.root.edit,new_root_array)));\n\n(self__.shift \x3d new_shift);\n\n(self__.cnt \x3d (self__.cnt + (1)));\n\nreturn tcoll__$1;\n} else {\nvar new_root \x3d cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);\n(self__.root \x3d new_root);\n\n(self__.cnt \x3d (self__.cnt + (1)));\n\nreturn tcoll__$1;\n}\n}\n} else {\nthrow (new Error(\x22conj! after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 \x3d (function (tcoll){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(self__.root.edit){\n(self__.root.edit \x3d null);\n\nvar len \x3d (self__.cnt - cljs.core.tail_off(tcoll__$1));\nvar trimmed_tail \x3d (new Array(len));\ncljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);\n\nreturn (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));\n} else {\nthrow (new Error(\x22persistent! called twice\x22));\n}\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 \x3d (function (tcoll,key,val){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(typeof key \x3d\x3d\x3d \x27number\x27){\nreturn tcoll__$1.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(null,key,val);\n} else {\nthrow (new Error(\x22TransientVector\x27s key for assoc! must be a number.\x22));\n}\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 \x3d (function (tcoll,n,val){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(self__.root.edit){\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c self__.cnt)))){\nif((cljs.core.tail_off(tcoll__$1) \x3c\x3d n)){\n(self__.tail[(n \x26 (31))] \x3d val);\n\nreturn tcoll__$1;\n} else {\nvar new_root \x3d (function cljs$core$go(level,node){\nvar node__$1 \x3d cljs.core.tv_ensure_editable(self__.root.edit,node);\nif((level \x3d\x3d\x3d (0))){\ncljs.core.pv_aset(node__$1,(n \x26 (31)),val);\n\nreturn node__$1;\n} else {\nvar subidx \x3d ((n \x3e\x3e\x3e level) \x26 (31));\ncljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));\n\nreturn node__$1;\n}\n})(self__.shift,self__.root);\n(self__.root \x3d new_root);\n\nreturn tcoll__$1;\n}\n} else {\nif((n \x3d\x3d\x3d self__.cnt)){\nreturn tcoll__$1.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,val);\n} else {\nthrow (new Error([\x22Index \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22 out of bounds for TransientVector of length\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.cnt)].join(\x27\x27)));\n\n}\n}\n} else {\nthrow (new Error(\x22assoc! after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 \x3d (function (tcoll){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(self__.root.edit){\nif((self__.cnt \x3d\x3d\x3d (0))){\nthrow (new Error(\x22Can\x27t pop empty vector\x22));\n} else {\nif(((1) \x3d\x3d\x3d self__.cnt)){\n(self__.cnt \x3d (0));\n\nreturn tcoll__$1;\n} else {\nif((((self__.cnt - (1)) \x26 (31)) \x3e (0))){\n(self__.cnt \x3d (self__.cnt - (1)));\n\nreturn tcoll__$1;\n} else {\nvar new_tail \x3d cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));\nvar new_root \x3d (function (){var nr \x3d cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);\nif((!((nr \x3d\x3d null)))){\nreturn nr;\n} else {\nreturn (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));\n}\n})();\nif(((((5) \x3c self__.shift)) \x26\x26 ((cljs.core.pv_aget(new_root,(1)) \x3d\x3d null)))){\nvar new_root__$1 \x3d cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));\n(self__.root \x3d new_root__$1);\n\n(self__.shift \x3d (self__.shift - (5)));\n\n(self__.cnt \x3d (self__.cnt - (1)));\n\n(self__.tail \x3d new_tail);\n\nreturn tcoll__$1;\n} else {\n(self__.root \x3d new_root);\n\n(self__.cnt \x3d (self__.cnt - (1)));\n\n(self__.tail \x3d new_tail);\n\nreturn tcoll__$1;\n}\n\n}\n}\n}\n} else {\nthrow (new Error(\x22pop! after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(self__.root.edit){\nreturn self__.cnt;\n} else {\nthrow (new Error(\x22count after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,n){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(self__.root.edit){\nreturn (cljs.core.array_for(coll__$1,n)[(n \x26 (31))]);\n} else {\nthrow (new Error(\x22nth after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,n,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c self__.cnt)))){\nreturn coll__$1.cljs$core$IIndexed$_nth$arity$2(null,n);\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((!(self__.root.edit))){\nthrow (new Error(\x22lookup after persistent!\x22));\n} else {\nif(typeof k \x3d\x3d\x3d \x27number\x27){\nreturn coll__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\n} else {\nreturn not_found;\n\n}\n}\n}));\n\n(cljs.core.TransientVector.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10587 \x3d (arguments.length - (1));\nswitch (G__10587) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.TransientVector.prototype.apply \x3d (function (self__,args10586){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10586)));\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\n}));\n\n(cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n}));\n\n(cljs.core.TransientVector.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22shift\x22,\x22shift\x22,-1657295705,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22root\x22,\x22root\x22,1191874074,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22tail\x22,\x22tail\x22,494507963,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.TransientVector.cljs$lang$type \x3d true);\n\n(cljs.core.TransientVector.cljs$lang$ctorStr \x3d \x22cljs.core/TransientVector\x22);\n\n(cljs.core.TransientVector.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/TransientVector\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/TransientVector.\n */\ncljs.core.__GT_TransientVector \x3d (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){\nreturn (new cljs.core.TransientVector(cnt,shift,root,tail));\n});\n\n\n/**\n* @constructor\n*/\ncljs.core.PersistentQueueIter \x3d (function (fseq,riter){\nthis.fseq \x3d fseq;\nthis.riter \x3d riter;\n});\n(cljs.core.PersistentQueueIter.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar or__5045__auto__ \x3d (((!((self__.fseq \x3d\x3d null)))) \x26\x26 (cljs.core.seq(self__.fseq)));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar and__5043__auto__ \x3d (!((self__.riter \x3d\x3d null)));\nif(and__5043__auto__){\nreturn self__.riter.hasNext();\n} else {\nreturn and__5043__auto__;\n}\n}\n}));\n\n(cljs.core.PersistentQueueIter.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nif((!((self__.fseq \x3d\x3d null)))){\nvar ret \x3d cljs.core.first(self__.fseq);\n(self__.fseq \x3d cljs.core.next(self__.fseq));\n\nreturn ret;\n} else {\nif((((!((self__.riter \x3d\x3d null)))) \x26\x26 (self__.riter.hasNext()))){\nreturn self__.riter.next();\n} else {\nthrow (new Error(\x22No such element\x22));\n\n}\n}\n}));\n\n(cljs.core.PersistentQueueIter.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.PersistentQueueIter.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22fseq\x22,\x22fseq\x22,-1466412450,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22riter\x22,\x22riter\x22,-237834262,null)], null);\n}));\n\n(cljs.core.PersistentQueueIter.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentQueueIter.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentQueueIter\x22);\n\n(cljs.core.PersistentQueueIter.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentQueueIter\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentQueueIter.\n */\ncljs.core.__GT_PersistentQueueIter \x3d (function cljs$core$__GT_PersistentQueueIter(fseq,riter){\nreturn (new cljs.core.PersistentQueueIter(fseq,riter));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.core.PersistentQueueSeq \x3d (function (meta,front,rear,__hash){\nthis.meta \x3d meta;\nthis.front \x3d front;\nthis.rear \x3d rear;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 31850700;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.PersistentQueueSeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.indexOf \x3d (function() {\nvar G__13757 \x3d null;\nvar G__13757__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13757__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13757 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13757__1.call(this,x);\ncase 2:\nreturn G__13757__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13757.cljs$core$IFn$_invoke$arity$1 \x3d G__13757__1;\nG__13757.cljs$core$IFn$_invoke$arity$2 \x3d G__13757__2;\nreturn G__13757;\n})()\n);\n\n(cljs.core.PersistentQueueSeq.prototype.lastIndexOf \x3d (function() {\nvar G__13758 \x3d null;\nvar G__13758__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__13758__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13758 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13758__1.call(this,x);\ncase 2:\nreturn G__13758__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13758.cljs$core$IFn$_invoke$arity$1 \x3d G__13758__1;\nG__13758.cljs$core$IFn$_invoke$arity$2 \x3d G__13758__2;\nreturn G__13758;\n})()\n);\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar temp__5802__auto__ \x3d cljs.core.next(self__.front);\nif(temp__5802__auto__){\nvar f1 \x3d temp__5802__auto__;\nreturn (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));\n} else {\nif((!((self__.rear \x3d\x3d null)))){\nreturn (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));\n} else {\nreturn null;\n}\n}\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.first(self__.front);\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar temp__5802__auto__ \x3d cljs.core.next(self__.front);\nif(temp__5802__auto__){\nvar f1 \x3d temp__5802__auto__;\nreturn (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));\n} else {\nif((self__.rear \x3d\x3d null)){\nreturn coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);\n} else {\nreturn (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));\n}\n}\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentQueueSeq(new_meta,self__.front,self__.rear,self__.__hash));\n}\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.PersistentQueueSeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22front\x22,\x22front\x22,117022539,null),new cljs.core.Symbol(null,\x22rear\x22,\x22rear\x22,-900164830,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.PersistentQueueSeq.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentQueueSeq.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentQueueSeq\x22);\n\n(cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentQueueSeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentQueueSeq.\n */\ncljs.core.__GT_PersistentQueueSeq \x3d (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){\nreturn (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));\n});\n\n(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IStack}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.core.PersistentQueue \x3d (function (meta,count,front,rear,__hash){\nthis.meta \x3d meta;\nthis.count \x3d count;\nthis.front \x3d front;\nthis.rear \x3d rear;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 31858766;\n});\n(cljs.core.PersistentQueue.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.PersistentQueue.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.PersistentQueue.prototype.indexOf \x3d (function() {\nvar G__13777 \x3d null;\nvar G__13777__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13777__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13777 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13777__1.call(this,x);\ncase 2:\nreturn G__13777__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13777.cljs$core$IFn$_invoke$arity$1 \x3d G__13777__1;\nG__13777.cljs$core$IFn$_invoke$arity$2 \x3d G__13777__2;\nreturn G__13777;\n})()\n);\n\n(cljs.core.PersistentQueue.prototype.lastIndexOf \x3d (function() {\nvar G__13778 \x3d null;\nvar G__13778__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(self__.count.cljs$core$IFn$_invoke$arity$1 ? self__.count.cljs$core$IFn$_invoke$arity$1(coll) : self__.count.call(null,coll)));\n});\nvar G__13778__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13778 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13778__1.call(this,x);\ncase 2:\nreturn G__13778__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13778.cljs$core$IFn$_invoke$arity$1 \x3d G__13778__1;\nG__13778.cljs$core$IFn$_invoke$arity$2 \x3d G__13778__2;\nreturn G__13778;\n})()\n);\n\n(cljs.core.PersistentQueue.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.PersistentQueueIter(self__.front,cljs.core._iterator(self__.rear)));\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.count;\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.first(self__.front);\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(cljs.core.truth_(self__.front)){\nvar temp__5802__auto__ \x3d cljs.core.next(self__.front);\nif(temp__5802__auto__){\nvar f1 \x3d temp__5802__auto__;\nreturn (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));\n} else {\nreturn (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));\n}\n} else {\nreturn coll__$1;\n}\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.first(self__.front);\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.rest(cljs.core.seq(coll__$1));\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar rear__$1 \x3d cljs.core.seq(self__.rear);\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d self__.front;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn rear__$1;\n}\n})())){\nreturn (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentQueue(new_meta,self__.count,self__.front,self__.rear,self__.__hash));\n}\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(cljs.core.truth_(self__.front)){\nreturn (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5045__auto__ \x3d self__.rear;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentVector.EMPTY;\n}\n})(),o),null));\n} else {\nreturn (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));\n}\n}));\n\n(cljs.core.PersistentQueue.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22count\x22,\x22count\x22,-514511684,null),new cljs.core.Symbol(null,\x22front\x22,\x22front\x22,117022539,null),new cljs.core.Symbol(null,\x22rear\x22,\x22rear\x22,-900164830,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.PersistentQueue.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentQueue.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentQueue\x22);\n\n(cljs.core.PersistentQueue.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentQueue\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentQueue.\n */\ncljs.core.__GT_PersistentQueue \x3d (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){\nreturn (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));\n});\n\n(cljs.core.PersistentQueue.EMPTY \x3d (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash)));\n(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n*/\ncljs.core.NeverEquiv \x3d (function (){\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2097152;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.NeverEquiv.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (o,other){\nvar self__ \x3d this;\nvar o__$1 \x3d this;\nreturn false;\n}));\n\n(cljs.core.NeverEquiv.getBasis \x3d (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(cljs.core.NeverEquiv.cljs$lang$type \x3d true);\n\n(cljs.core.NeverEquiv.cljs$lang$ctorStr \x3d \x22cljs.core/NeverEquiv\x22);\n\n(cljs.core.NeverEquiv.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/NeverEquiv\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/NeverEquiv.\n */\ncljs.core.__GT_NeverEquiv \x3d (function cljs$core$__GT_NeverEquiv(){\nreturn (new cljs.core.NeverEquiv());\n});\n\ncljs.core.never_equiv \x3d (new cljs.core.NeverEquiv());\n/**\n * Test map equivalence. Returns true if x equals y, otherwise returns false.\n */\ncljs.core.equiv_map \x3d (function cljs$core$equiv_map(x,y){\nreturn cljs.core.boolean$(((((cljs.core.map_QMARK_(y)) \x26\x26 ((!(cljs.core.record_QMARK_(y))))))?(((cljs.core.count(x) \x3d\x3d\x3d cljs.core.count(y)))?(((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition0$ \x26 (1048576))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IKVReduce$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IKVReduce,x)))?cljs.core.reduce_kv((function (_,k,v){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,k,cljs.core.never_equiv),v)){\nreturn true;\n} else {\nreturn cljs.core.reduced(false);\n}\n}),true,x):cljs.core.every_QMARK_((function (xkv){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));\n}),x)):null):null));\n});\ncljs.core.scan_array \x3d (function cljs$core$scan_array(incr,k,array){\nvar len \x3d array.length;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c len)){\nif((k \x3d\x3d\x3d (array[i]))){\nreturn i;\n} else {\nvar G__13780 \x3d (i + incr);\ni \x3d G__13780;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});\ncljs.core.obj_map_compare_keys \x3d (function cljs$core$obj_map_compare_keys(a,b){\nvar a__$1 \x3d cljs.core.hash(a);\nvar b__$1 \x3d cljs.core.hash(b);\nif((a__$1 \x3c b__$1)){\nreturn (-1);\n} else {\nif((a__$1 \x3e b__$1)){\nreturn (1);\n} else {\nreturn (0);\n\n}\n}\n});\ncljs.core.obj_map__GT_hash_map \x3d (function cljs$core$obj_map__GT_hash_map(m,k,v){\nvar ks \x3d m.keys;\nvar len \x3d ks.length;\nvar so \x3d m.strobj;\nvar mm \x3d cljs.core.meta(m);\nvar i \x3d (0);\nvar out \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\nwhile(true){\nif((i \x3c len)){\nvar k__$1 \x3d (ks[i]);\nvar G__13784 \x3d (i + (1));\nvar G__13785 \x3d cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,cljs.core.goog$module$goog$object.get(so,k__$1));\ni \x3d G__13784;\nout \x3d G__13785;\ncontinue;\n} else {\nreturn cljs.core._with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);\n}\nbreak;\n}\n});\ncljs.core.obj_clone \x3d (function cljs$core$obj_clone(obj,ks){\nvar new_obj \x3d ({});\nvar l \x3d ks.length;\nvar i_13786 \x3d (0);\nwhile(true){\nif((i_13786 \x3c l)){\nvar k_13787 \x3d (ks[i_13786]);\ncljs.core.goog$module$goog$object.set(new_obj,k_13787,cljs.core.goog$module$goog$object.get(obj,k_13787));\n\nvar G__13788 \x3d (i_13786 + (1));\ni_13786 \x3d G__13788;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn new_obj;\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEditableCollection}\n * @implements {cljs.core.IFind}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.core.ObjMap \x3d (function (meta,keys,strobj,update_count,__hash){\nthis.meta \x3d meta;\nthis.keys \x3d keys;\nthis.strobj \x3d strobj;\nthis.update_count \x3d update_count;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 16123663;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 4;\n});\n(cljs.core.ObjMap.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.ObjMap.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((typeof k \x3d\x3d\x3d \x27string\x27) \x26\x26 ((!((cljs.core.scan_array((1),k,self__.keys) \x3d\x3d null)))))){\nreturn (new cljs.core.MapEntry(k,(self__.strobj[k]),null));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.ObjMap.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.ObjMap.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((typeof k \x3d\x3d\x3d \x27string\x27) \x26\x26 ((!((cljs.core.scan_array((1),k,self__.keys) \x3d\x3d null)))))){\nreturn (self__.strobj[k]);\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (coll,f,init){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar len \x3d self__.keys.length;\nvar keys__$1 \x3d self__.keys.sort(cljs.core.obj_map_compare_keys);\nvar init__$1 \x3d init;\nwhile(true){\nif(cljs.core.seq(keys__$1)){\nvar k \x3d cljs.core.first(keys__$1);\nvar init__$2 \x3d (function (){var G__10593 \x3d init__$1;\nvar G__10594 \x3d k;\nvar G__10595 \x3d (self__.strobj[k]);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10593,G__10594,G__10595) : f.call(null,G__10593,G__10594,G__10595));\n})();\nif(cljs.core.reduced_QMARK_(init__$2)){\nreturn cljs.core.deref(init__$2);\n} else {\nvar G__13789 \x3d cljs.core.rest(keys__$1);\nvar G__13790 \x3d init__$2;\nkeys__$1 \x3d G__13789;\ninit__$1 \x3d G__13790;\ncontinue;\n}\n} else {\nreturn init__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.keys.length;\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_map(coll__$1,other);\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._with_meta(cljs.core.ObjMap.EMPTY,self__.meta);\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((typeof k \x3d\x3d\x3d \x27string\x27) \x26\x26 ((!((cljs.core.scan_array((1),k,self__.keys) \x3d\x3d null)))))){\nvar new_keys \x3d cljs.core.aclone(self__.keys);\nvar new_strobj \x3d cljs.core.obj_clone(self__.strobj,self__.keys);\nnew_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));\n\ndelete new_strobj[k];\n\nreturn (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));\n} else {\nreturn coll__$1;\n}\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,k,v){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(typeof k \x3d\x3d\x3d \x27string\x27){\nif((((self__.update_count \x3e cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length \x3e\x3d cljs.core.ObjMap.HASHMAP_THRESHOLD)))){\nreturn cljs.core.obj_map__GT_hash_map(coll__$1,k,v);\n} else {\nif((!((cljs.core.scan_array((1),k,self__.keys) \x3d\x3d null)))){\nvar new_strobj \x3d cljs.core.obj_clone(self__.strobj,self__.keys);\ncljs.core.goog$module$goog$object.set(new_strobj,k,v);\n\nreturn (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));\n} else {\nvar new_strobj \x3d cljs.core.obj_clone(self__.strobj,self__.keys);\nvar new_keys \x3d cljs.core.aclone(self__.keys);\ncljs.core.goog$module$goog$object.set(new_strobj,k,v);\n\nnew_keys.push(k);\n\nreturn (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));\n}\n}\n} else {\nreturn cljs.core.obj_map__GT_hash_map(coll__$1,k,v);\n}\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((typeof k \x3d\x3d\x3d \x27string\x27) \x26\x26 ((!((cljs.core.scan_array((1),k,self__.keys) \x3d\x3d null)))))){\nreturn true;\n} else {\nreturn false;\n}\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.keys.length \x3e (0))){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10591_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__10591_SHARP_,(self__.strobj[p1__10591_SHARP_])],null));\n}),self__.keys.sort(cljs.core.obj_map_compare_keys));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.ObjMap(new_meta,self__.keys,self__.strobj,self__.update_count,self__.__hash));\n}\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,entry){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry)){\nreturn coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry,(0)),cljs.core._nth(entry,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);\n}\n}));\n\n(cljs.core.ObjMap.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10596 \x3d (arguments.length - (1));\nswitch (G__10596) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.ObjMap.prototype.apply \x3d (function (self__,args10592){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10592)));\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n}));\n\n(cljs.core.ObjMap.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22keys\x22,\x22keys\x22,-1586012071,null),new cljs.core.Symbol(null,\x22strobj\x22,\x22strobj\x22,1088091283,null),new cljs.core.Symbol(null,\x22update-count\x22,\x22update-count\x22,-411982269,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ObjMap.cljs$lang$type \x3d true);\n\n(cljs.core.ObjMap.cljs$lang$ctorStr \x3d \x22cljs.core/ObjMap\x22);\n\n(cljs.core.ObjMap.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ObjMap\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ObjMap.\n */\ncljs.core.__GT_ObjMap \x3d (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){\nreturn (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));\n});\n\n(cljs.core.ObjMap.EMPTY \x3d (new cljs.core.ObjMap(null,[],({}),(0),cljs.core.empty_unordered_hash)));\n(cljs.core.ObjMap.HASHMAP_THRESHOLD \x3d (8));\n(cljs.core.ObjMap.fromObject \x3d (function (ks,obj){\nreturn (new cljs.core.ObjMap(null,ks,obj,(0),null));\n}));\n\n/**\n* @constructor\n*/\ncljs.core.RecordIter \x3d (function (i,record,base_count,fields,ext_map_iter){\nthis.i \x3d i;\nthis.record \x3d record;\nthis.base_count \x3d base_count;\nthis.fields \x3d fields;\nthis.ext_map_iter \x3d ext_map_iter;\n});\n(cljs.core.RecordIter.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar or__5045__auto__ \x3d (self__.i \x3c self__.base_count);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn self__.ext_map_iter.hasNext();\n}\n}));\n\n(cljs.core.RecordIter.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nif((self__.i \x3c self__.base_count)){\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(self__.fields,self__.i);\n(self__.i \x3d (self__.i + (1)));\n\nreturn (new cljs.core.MapEntry(k,cljs.core._lookup(self__.record,k),null));\n} else {\nreturn self__.ext_map_iter.next();\n}\n}));\n\n(cljs.core.RecordIter.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.RecordIter.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22record\x22,\x22record\x22,861424668,null),new cljs.core.Symbol(null,\x22base-count\x22,\x22base-count\x22,-1180647182,null),new cljs.core.Symbol(null,\x22fields\x22,\x22fields\x22,-291534703,null),new cljs.core.Symbol(null,\x22ext-map-iter\x22,\x22ext-map-iter\x22,-1215982757,null)], null);\n}));\n\n(cljs.core.RecordIter.cljs$lang$type \x3d true);\n\n(cljs.core.RecordIter.cljs$lang$ctorStr \x3d \x22cljs.core/RecordIter\x22);\n\n(cljs.core.RecordIter.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/RecordIter\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/RecordIter.\n */\ncljs.core.__GT_RecordIter \x3d (function cljs$core$__GT_RecordIter(i,record,base_count,fields,ext_map_iter){\nreturn (new cljs.core.RecordIter(i,record,base_count,fields,ext_map_iter));\n});\n\n\n/**\n* @constructor\n*/\ncljs.core.ES6EntriesIterator \x3d (function (s){\nthis.s \x3d s;\n});\n(cljs.core.ES6EntriesIterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nif((!((self__.s \x3d\x3d null)))){\nvar vec__10599 \x3d cljs.core.first(self__.s);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10599,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10599,(1),null);\n(self__.s \x3d cljs.core.next(self__.s));\n\nreturn ({\x22value\x22: [k,v], \x22done\x22: false});\n} else {\nreturn ({\x22value\x22: null, \x22done\x22: true});\n}\n}));\n\n(cljs.core.ES6EntriesIterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ES6EntriesIterator.cljs$lang$type \x3d true);\n\n(cljs.core.ES6EntriesIterator.cljs$lang$ctorStr \x3d \x22cljs.core/ES6EntriesIterator\x22);\n\n(cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ES6EntriesIterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ES6EntriesIterator.\n */\ncljs.core.__GT_ES6EntriesIterator \x3d (function cljs$core$__GT_ES6EntriesIterator(s){\nreturn (new cljs.core.ES6EntriesIterator(s));\n});\n\ncljs.core.es6_entries_iterator \x3d (function cljs$core$es6_entries_iterator(coll){\nreturn (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));\n});\n\n/**\n* @constructor\n*/\ncljs.core.ES6SetEntriesIterator \x3d (function (s){\nthis.s \x3d s;\n});\n(cljs.core.ES6SetEntriesIterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nif((!((self__.s \x3d\x3d null)))){\nvar x \x3d cljs.core.first(self__.s);\n(self__.s \x3d cljs.core.next(self__.s));\n\nreturn ({\x22value\x22: [x,x], \x22done\x22: false});\n} else {\nreturn ({\x22value\x22: null, \x22done\x22: true});\n}\n}));\n\n(cljs.core.ES6SetEntriesIterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ES6SetEntriesIterator.cljs$lang$type \x3d true);\n\n(cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr \x3d \x22cljs.core/ES6SetEntriesIterator\x22);\n\n(cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ES6SetEntriesIterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ES6SetEntriesIterator.\n */\ncljs.core.__GT_ES6SetEntriesIterator \x3d (function cljs$core$__GT_ES6SetEntriesIterator(s){\nreturn (new cljs.core.ES6SetEntriesIterator(s));\n});\n\ncljs.core.es6_set_entries_iterator \x3d (function cljs$core$es6_set_entries_iterator(coll){\nreturn (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));\n});\ncljs.core.array_index_of_nil_QMARK_ \x3d (function cljs$core$array_index_of_nil_QMARK_(arr){\nvar len \x3d arr.length;\nvar i \x3d (0);\nwhile(true){\nif((len \x3c\x3d i)){\nreturn (-1);\n} else {\nif(((arr[i]) \x3d\x3d null)){\nreturn i;\n} else {\nvar G__13808 \x3d (i + (2));\ni \x3d G__13808;\ncontinue;\n\n}\n}\nbreak;\n}\n});\ncljs.core.array_index_of_keyword_QMARK_ \x3d (function cljs$core$array_index_of_keyword_QMARK_(arr,k){\nvar len \x3d arr.length;\nvar kstr \x3d k.fqn;\nvar i \x3d (0);\nwhile(true){\nif((len \x3c\x3d i)){\nreturn (-1);\n} else {\nif(((((arr[i]) instanceof cljs.core.Keyword)) \x26\x26 ((kstr \x3d\x3d\x3d (arr[i]).fqn)))){\nreturn i;\n} else {\nvar G__13809 \x3d (i + (2));\ni \x3d G__13809;\ncontinue;\n\n}\n}\nbreak;\n}\n});\ncljs.core.array_index_of_symbol_QMARK_ \x3d (function cljs$core$array_index_of_symbol_QMARK_(arr,k){\nvar len \x3d arr.length;\nvar kstr \x3d k.str;\nvar i \x3d (0);\nwhile(true){\nif((len \x3c\x3d i)){\nreturn (-1);\n} else {\nif(((((arr[i]) instanceof cljs.core.Symbol)) \x26\x26 ((kstr \x3d\x3d\x3d (arr[i]).str)))){\nreturn i;\n} else {\nvar G__13810 \x3d (i + (2));\ni \x3d G__13810;\ncontinue;\n\n}\n}\nbreak;\n}\n});\ncljs.core.array_index_of_identical_QMARK_ \x3d (function cljs$core$array_index_of_identical_QMARK_(arr,k){\nvar len \x3d arr.length;\nvar i \x3d (0);\nwhile(true){\nif((len \x3c\x3d i)){\nreturn (-1);\n} else {\nif((k \x3d\x3d\x3d (arr[i]))){\nreturn i;\n} else {\nvar G__13811 \x3d (i + (2));\ni \x3d G__13811;\ncontinue;\n\n}\n}\nbreak;\n}\n});\ncljs.core.array_index_of_equiv_QMARK_ \x3d (function cljs$core$array_index_of_equiv_QMARK_(arr,k){\nvar len \x3d arr.length;\nvar i \x3d (0);\nwhile(true){\nif((len \x3c\x3d i)){\nreturn (-1);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){\nreturn i;\n} else {\nvar G__13812 \x3d (i + (2));\ni \x3d G__13812;\ncontinue;\n\n}\n}\nbreak;\n}\n});\ncljs.core.array_index_of \x3d (function cljs$core$array_index_of(arr,k){\nif((k instanceof cljs.core.Keyword)){\nreturn cljs.core.array_index_of_keyword_QMARK_(arr,k);\n} else {\nif(((typeof k \x3d\x3d\x3d \x27string\x27) || (typeof k \x3d\x3d\x3d \x27number\x27))){\nreturn cljs.core.array_index_of_identical_QMARK_(arr,k);\n} else {\nif((k instanceof cljs.core.Symbol)){\nreturn cljs.core.array_index_of_symbol_QMARK_(arr,k);\n} else {\nif((k \x3d\x3d null)){\nreturn cljs.core.array_index_of_nil_QMARK_(arr);\n} else {\nreturn cljs.core.array_index_of_equiv_QMARK_(arr,k);\n\n}\n}\n}\n}\n});\ncljs.core.array_map_index_of \x3d (function cljs$core$array_map_index_of(m,k){\nreturn cljs.core.array_index_of(m.arr,k);\n});\ncljs.core.array_extend_kv \x3d (function cljs$core$array_extend_kv(arr,k,v){\nvar l \x3d arr.length;\nvar narr \x3d (new Array((l + (2))));\nvar i_13813 \x3d (0);\nwhile(true){\nif((i_13813 \x3c l)){\n(narr[i_13813] \x3d (arr[i_13813]));\n\nvar G__13814 \x3d (i_13813 + (1));\ni_13813 \x3d G__13814;\ncontinue;\n} else {\n}\nbreak;\n}\n\n(narr[l] \x3d k);\n\n(narr[(l + (1))] \x3d v);\n\nreturn narr;\n});\ncljs.core.array_map_extend_kv \x3d (function cljs$core$array_map_extend_kv(m,k,v){\nreturn cljs.core.array_extend_kv(m.arr,k,v);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n * @implements {cljs.core.IVector}\n * @implements {cljs.core.IReversible}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IFind}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IStack}\n * @implements {cljs.core.IMapEntry}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.ILookup}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.MapEntry \x3d (function (key,val,__hash){\nthis.key \x3d key;\nthis.val \x3d val;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 166619935;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.MapEntry.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.MapEntry.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (node,k){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nvar G__10603 \x3d k;\nswitch (G__10603) {\ncase (0):\nreturn (new cljs.core.MapEntry((0),self__.key,null));\n\nbreak;\ncase (1):\nreturn (new cljs.core.MapEntry((1),self__.val,null));\n\nbreak;\ndefault:\nreturn null;\n\n}\n}));\n\n(cljs.core.MapEntry.prototype.indexOf \x3d (function() {\nvar G__13816 \x3d null;\nvar G__13816__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13816__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13816 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13816__1.call(this,x);\ncase 2:\nreturn G__13816__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13816.cljs$core$IFn$_invoke$arity$1 \x3d G__13816__1;\nG__13816.cljs$core$IFn$_invoke$arity$2 \x3d G__13816__2;\nreturn G__13816;\n})()\n);\n\n(cljs.core.MapEntry.prototype.lastIndexOf \x3d (function() {\nvar G__13818 \x3d null;\nvar G__13818__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__13818__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13818 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13818__1.call(this,x);\ncase 2:\nreturn G__13818__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13818.cljs$core$IFn$_invoke$arity$1 \x3d G__13818__1;\nG__13818.cljs$core$IFn$_invoke$arity$2 \x3d G__13818__2;\nreturn G__13818;\n})()\n);\n\n(cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (node,k){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,null);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (node,k,not_found){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (node,n){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nif((n \x3d\x3d\x3d (0))){\nreturn self__.key;\n} else {\nif((n \x3d\x3d\x3d (1))){\nreturn self__.val;\n} else {\nthrow (new Error(\x22Index out of bounds\x22));\n\n}\n}\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (node,n,not_found){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nif((n \x3d\x3d\x3d (0))){\nreturn self__.key;\n} else {\nif((n \x3d\x3d\x3d (1))){\nreturn self__.val;\n} else {\nreturn not_found;\n\n}\n}\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (node,n,v){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (2);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_key$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn self__.key;\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IMapEntry$_val$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn self__.val;\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn self__.val;\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (new cljs.core.IndexedSeq([self__.val,self__.key],(0),null));\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (node,f){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (node,f,start){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (node,k,v){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (node,k){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (((k \x3d\x3d\x3d (0))) || ((k \x3d\x3d\x3d (1))));\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (new cljs.core.IndexedSeq([self__.key,self__.val],(0),null));\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (node,meta){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (node,o){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);\n}));\n\n(cljs.core.MapEntry.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10604 \x3d (arguments.length - (1));\nswitch (G__10604) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.MapEntry.prototype.apply \x3d (function (self__,args10602){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10602)));\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn node.cljs$core$IIndexed$_nth$arity$2(null,k);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\n}));\n\n(cljs.core.MapEntry.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22key\x22,\x22key\x22,124488940,null),new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.MapEntry.cljs$lang$type \x3d true);\n\n(cljs.core.MapEntry.cljs$lang$ctorStr \x3d \x22cljs.core/MapEntry\x22);\n\n(cljs.core.MapEntry.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/MapEntry\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/MapEntry.\n */\ncljs.core.__GT_MapEntry \x3d (function cljs$core$__GT_MapEntry(key,val,__hash){\nreturn (new cljs.core.MapEntry(key,val,__hash));\n});\n\n/**\n * Returns true if x satisfies IMapEntry\n */\ncljs.core.map_entry_QMARK_ \x3d (function cljs$core$map_entry_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (2048))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IMapEntry$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.PersistentArrayMapSeq \x3d (function (arr,i,_meta){\nthis.arr \x3d arr;\nthis.i \x3d i;\nthis._meta \x3d _meta;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374990;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.PersistentArrayMapSeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.indexOf \x3d (function() {\nvar G__13829 \x3d null;\nvar G__13829__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13829__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13829 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13829__1.call(this,x);\ncase 2:\nreturn G__13829__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13829.cljs$core$IFn$_invoke$arity$1 \x3d G__13829__1;\nG__13829.cljs$core$IFn$_invoke$arity$2 \x3d G__13829__2;\nreturn G__13829;\n})()\n);\n\n(cljs.core.PersistentArrayMapSeq.prototype.lastIndexOf \x3d (function() {\nvar G__13830 \x3d null;\nvar G__13830__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__13830__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13830 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13830__1.call(this,x);\ncase 2:\nreturn G__13830__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13830.cljs$core$IFn$_invoke$arity$1 \x3d G__13830__1;\nG__13830.cljs$core$IFn$_invoke$arity$2 \x3d G__13830__2;\nreturn G__13830;\n})()\n);\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__._meta;\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.i \x3c (self__.arr.length - (2)))){\nreturn (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),null));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn ((self__.arr.length - self__.i) / (2));\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.hash_ordered_coll(coll__$1);\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.MapEntry((self__.arr[self__.i]),(self__.arr[(self__.i + (1))]),null));\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.i \x3c (self__.arr.length - (2)))){\nreturn (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),null));\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__._meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));\n}\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.PersistentArrayMapSeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22_meta\x22,\x22_meta\x22,-1716892533,null)], null);\n}));\n\n(cljs.core.PersistentArrayMapSeq.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentArrayMapSeq\x22);\n\n(cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentArrayMapSeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentArrayMapSeq.\n */\ncljs.core.__GT_PersistentArrayMapSeq \x3d (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){\nreturn (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));\n});\n\n(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\ncljs.core.persistent_array_map_seq \x3d (function cljs$core$persistent_array_map_seq(arr,i,_meta){\nif((i \x3c\x3d (arr.length - (2)))){\nreturn (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));\n} else {\nreturn null;\n}\n});\n\n\n/**\n* @constructor\n*/\ncljs.core.PersistentArrayMapIterator \x3d (function (arr,i,cnt){\nthis.arr \x3d arr;\nthis.i \x3d i;\nthis.cnt \x3d cnt;\n});\n(cljs.core.PersistentArrayMapIterator.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.i \x3c self__.cnt);\n}));\n\n(cljs.core.PersistentArrayMapIterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar ret \x3d (new cljs.core.MapEntry((self__.arr[self__.i]),(self__.arr[(self__.i + (1))]),null));\n(self__.i \x3d (self__.i + (2)));\n\nreturn ret;\n}));\n\n(cljs.core.PersistentArrayMapIterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null)], null);\n}));\n\n(cljs.core.PersistentArrayMapIterator.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentArrayMapIterator\x22);\n\n(cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentArrayMapIterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentArrayMapIterator.\n */\ncljs.core.__GT_PersistentArrayMapIterator \x3d (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){\nreturn (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEditableCollection}\n * @implements {cljs.core.IFind}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.PersistentArrayMap \x3d (function (meta,cnt,arr,__hash){\nthis.meta \x3d meta;\nthis.cnt \x3d cnt;\nthis.arr \x3d arr;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 16647951;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139268;\n});\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar idx \x3d cljs.core.array_map_index_of(coll__$1,k);\nif((idx \x3d\x3d\x3d (-1))){\nreturn null;\n} else {\nreturn (new cljs.core.MapEntry((self__.arr[idx]),(self__.arr[(idx + (1))]),null));\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.keys \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_iterator((cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null,coll)));\n}));\n\n(cljs.core.PersistentArrayMap.prototype.entries \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_entries_iterator(cljs.core.seq(coll));\n}));\n\n(cljs.core.PersistentArrayMap.prototype.values \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_iterator((cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null,coll)));\n}));\n\n(cljs.core.PersistentArrayMap.prototype.has \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.contains_QMARK_(coll,k);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.get \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.forEach \x3d (function (f){\nvar self__ \x3d this;\nvar coll \x3d this;\nvar seq__10607 \x3d cljs.core.seq(coll);\nvar chunk__10608 \x3d null;\nvar count__10609 \x3d (0);\nvar i__10610 \x3d (0);\nwhile(true){\nif((i__10610 \x3c count__10609)){\nvar vec__10617 \x3d chunk__10608.cljs$core$IIndexed$_nth$arity$2(null,i__10610);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10617,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10617,(1),null);\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\n\n\nvar G__13837 \x3d seq__10607;\nvar G__13838 \x3d chunk__10608;\nvar G__13839 \x3d count__10609;\nvar G__13840 \x3d (i__10610 + (1));\nseq__10607 \x3d G__13837;\nchunk__10608 \x3d G__13838;\ncount__10609 \x3d G__13839;\ni__10610 \x3d G__13840;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__10607);\nif(temp__5804__auto__){\nvar seq__10607__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__10607__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__10607__$1);\nvar G__13841 \x3d cljs.core.chunk_rest(seq__10607__$1);\nvar G__13842 \x3d c__5568__auto__;\nvar G__13843 \x3d cljs.core.count(c__5568__auto__);\nvar G__13844 \x3d (0);\nseq__10607 \x3d G__13841;\nchunk__10608 \x3d G__13842;\ncount__10609 \x3d G__13843;\ni__10610 \x3d G__13844;\ncontinue;\n} else {\nvar vec__10620 \x3d cljs.core.first(seq__10607__$1);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10620,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10620,(1),null);\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\n\n\nvar G__13845 \x3d cljs.core.next(seq__10607__$1);\nvar G__13846 \x3d null;\nvar G__13847 \x3d (0);\nvar G__13848 \x3d (0);\nseq__10607 \x3d G__13845;\nchunk__10608 \x3d G__13846;\ncount__10609 \x3d G__13847;\ni__10610 \x3d G__13848;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar idx \x3d cljs.core.array_map_index_of(coll__$1,k);\nif((idx \x3d\x3d\x3d (-1))){\nreturn not_found;\n} else {\nreturn (self__.arr[(idx + (1))]);\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (coll,f,init){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar len \x3d self__.arr.length;\nvar i \x3d (0);\nvar init__$1 \x3d init;\nwhile(true){\nif((i \x3c len)){\nvar init__$2 \x3d (function (){var G__10623 \x3d init__$1;\nvar G__10624 \x3d (self__.arr[i]);\nvar G__10625 \x3d (self__.arr[(i + (1))]);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10623,G__10624,G__10625) : f.call(null,G__10623,G__10624,G__10625));\n})();\nif(cljs.core.reduced_QMARK_(init__$2)){\nreturn cljs.core.deref(init__$2);\n} else {\nvar G__13853 \x3d (i + (2));\nvar G__13854 \x3d init__$2;\ni \x3d G__13853;\ninit__$1 \x3d G__13854;\ncontinue;\n}\n} else {\nreturn init__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.cnt;\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(((cljs.core.map_QMARK_(other)) \x26\x26 ((!(cljs.core.record_QMARK_(other)))))){\nvar alen \x3d self__.arr.length;\nvar other__$1 \x3d other;\nif((self__.cnt \x3d\x3d\x3d other__$1.cljs$core$ICounted$_count$arity$1(null))){\nvar i \x3d (0);\nwhile(true){\nif((i \x3c alen)){\nvar v \x3d other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);\nif((!((v \x3d\x3d\x3d cljs.core.lookup_sentinel)))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){\nvar G__13856 \x3d (i + (2));\ni \x3d G__13856;\ncontinue;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.TransientArrayMap(({}),self__.arr.length,cljs.core.aclone(self__.arr)));\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.iter_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar idx \x3d cljs.core.array_map_index_of(coll__$1,k);\nif((idx \x3e\x3d (0))){\nvar len \x3d self__.arr.length;\nvar new_len \x3d (len - (2));\nif((new_len \x3d\x3d\x3d (0))){\nreturn coll__$1.cljs$core$IEmptyableCollection$_empty$arity$1(null);\n} else {\nvar new_arr \x3d (new Array(new_len));\nvar s \x3d (0);\nvar d \x3d (0);\nwhile(true){\nif((s \x3e\x3d len)){\nreturn (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){\nvar G__13857 \x3d (s + (2));\nvar G__13858 \x3d d;\ns \x3d G__13857;\nd \x3d G__13858;\ncontinue;\n} else {\n(new_arr[d] \x3d (self__.arr[s]));\n\n(new_arr[(d + (1))] \x3d (self__.arr[(s + (1))]));\n\nvar G__13859 \x3d (s + (2));\nvar G__13860 \x3d (d + (2));\ns \x3d G__13859;\nd \x3d G__13860;\ncontinue;\n\n}\n}\nbreak;\n}\n}\n} else {\nreturn coll__$1;\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,k,v){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar idx \x3d cljs.core.array_map_index_of(coll__$1,k);\nif((idx \x3d\x3d\x3d (-1))){\nif((self__.cnt \x3c cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){\nvar arr__$1 \x3d cljs.core.array_map_extend_kv(coll__$1,k,v);\nreturn (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));\n} else {\nreturn cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);\n}\n} else {\nif((v \x3d\x3d\x3d (self__.arr[(idx + (1))]))){\nreturn coll__$1;\n} else {\nvar arr__$1 \x3d (function (){var G__10628 \x3d cljs.core.aclone(self__.arr);\n(G__10628[(idx + (1))] \x3d v);\n\nreturn G__10628;\n})();\nreturn (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));\n\n}\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (!((cljs.core.array_map_index_of(coll__$1,k) \x3d\x3d\x3d (-1))));\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.persistent_array_map_seq(self__.arr,(0),null);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentArrayMap(new_meta,self__.cnt,self__.arr,self__.__hash));\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,entry){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry)){\nreturn coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry,(0)),cljs.core._nth(entry,(1)));\n} else {\nvar ret \x3d coll__$1;\nvar es \x3d cljs.core.seq(entry);\nwhile(true){\nif((es \x3d\x3d null)){\nreturn ret;\n} else {\nvar e \x3d cljs.core.first(es);\nif(cljs.core.vector_QMARK_(e)){\nvar G__13864 \x3d cljs.core._assoc(ret,cljs.core._nth(e,(0)),cljs.core._nth(e,(1)));\nvar G__13865 \x3d cljs.core.next(es);\nret \x3d G__13864;\nes \x3d G__13865;\ncontinue;\n} else {\nthrow (new Error(\x22conj on a map takes map entries or seqables of map entries\x22));\n}\n}\nbreak;\n}\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10629 \x3d (arguments.length - (1));\nswitch (G__10629) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.PersistentArrayMap.prototype.apply \x3d (function (self__,args10606){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10606)));\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n}));\n\n(cljs.core.PersistentArrayMap.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.PersistentArrayMap.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentArrayMap.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentArrayMap\x22);\n\n(cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentArrayMap\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentArrayMap.\n */\ncljs.core.__GT_PersistentArrayMap \x3d (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){\nreturn (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));\n});\n\n(cljs.core.PersistentArrayMap.EMPTY \x3d (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash)));\n(cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD \x3d (8));\n(cljs.core.PersistentArrayMap.fromArray \x3d (function (arr,no_clone,no_check){\nvar arr__$1 \x3d ((no_clone)?arr:cljs.core.aclone(arr));\nvar arr__$2 \x3d ((no_check)?arr__$1:(function (){var ret \x3d [];\nvar i_13868 \x3d (0);\nwhile(true){\nif((i_13868 \x3c arr__$1.length)){\nvar k_13869 \x3d (arr__$1[i_13868]);\nvar v_13870 \x3d (arr__$1[(i_13868 + (1))]);\nvar idx_13871 \x3d cljs.core.array_index_of(ret,k_13869);\nif((idx_13871 \x3d\x3d\x3d (-1))){\nret.push(k_13869);\n\nret.push(v_13870);\n} else {\n}\n\nvar G__13876 \x3d (i_13868 + (2));\ni_13868 \x3d G__13876;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn ret;\n})());\nvar cnt \x3d (arr__$2.length / (2));\nreturn (new cljs.core.PersistentArrayMap(null,cnt,arr__$2,null));\n}));\n(cljs.core.PersistentArrayMap.createWithCheck \x3d (function (arr){\nvar ret \x3d [];\nvar i_13878 \x3d (0);\nwhile(true){\nif((i_13878 \x3c arr.length)){\nvar k_13879 \x3d (arr[i_13878]);\nvar v_13880 \x3d (arr[(i_13878 + (1))]);\nvar idx_13881 \x3d cljs.core.array_index_of(ret,k_13879);\nif((idx_13881 \x3d\x3d\x3d (-1))){\nvar G__10630_13882 \x3d ret;\nG__10630_13882.push(k_13879);\n\nG__10630_13882.push(v_13880);\n\n} else {\nthrow (new Error([\x22Duplicate key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(k_13879)].join(\x27\x27)));\n}\n\nvar G__13883 \x3d (i_13878 + (2));\ni_13878 \x3d G__13883;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar cnt \x3d (arr.length / (2));\nreturn (new cljs.core.PersistentArrayMap(null,cnt,arr,null));\n}));\ncljs.core.key_test \x3d (function cljs$core$key_test(key,other){\nif((key \x3d\x3d\x3d other)){\nreturn true;\n} else {\nif(cljs.core.keyword_identical_QMARK_(key,other)){\nreturn true;\n} else {\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);\n\n}\n}\n});\ncljs.core.pam_dupes_QMARK_ \x3d (function cljs$core$pam_dupes_QMARK_(arr){\nvar i \x3d (0);\nwhile(true){\nif((i \x3c arr.length)){\nvar dupe_QMARK_ \x3d (function (){var j \x3d (0);\nwhile(true){\nif((j \x3c i)){\nvar or__5045__auto__ \x3d cljs.core.key_test((arr[i]),(arr[j]));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar G__13888 \x3d ((2) + j);\nj \x3d G__13888;\ncontinue;\n}\n} else {\nreturn false;\n}\nbreak;\n}\n})();\nvar or__5045__auto__ \x3d dupe_QMARK_;\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar G__13889 \x3d ((2) + i);\ni \x3d G__13889;\ncontinue;\n}\n} else {\nreturn false;\n}\nbreak;\n}\n});\ncljs.core.pam_new_size \x3d (function cljs$core$pam_new_size(arr){\nvar i \x3d (0);\nvar n \x3d (0);\nwhile(true){\nif((i \x3c arr.length)){\nvar dupe_QMARK_ \x3d (function (){var j \x3d (0);\nwhile(true){\nif((j \x3c i)){\nvar or__5045__auto__ \x3d cljs.core.key_test((arr[i]),(arr[j]));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar G__13890 \x3d ((2) + j);\nj \x3d G__13890;\ncontinue;\n}\n} else {\nreturn false;\n}\nbreak;\n}\n})();\nvar G__13891 \x3d ((2) + i);\nvar G__13892 \x3d ((dupe_QMARK_)?n:(n + (2)));\ni \x3d G__13891;\nn \x3d G__13892;\ncontinue;\n} else {\nreturn n;\n}\nbreak;\n}\n});\ncljs.core.pam_grow_seed_array \x3d (function cljs$core$pam_grow_seed_array(seed,trailing){\nvar seed_cnt \x3d (seed.length - (1));\nvar extra_kvs \x3d cljs.core.seq(trailing);\nvar ret \x3d (new Array((seed_cnt + ((2) * cljs.core.count(extra_kvs)))));\nvar ret__$1 \x3d cljs.core.array_copy(seed,(0),ret,(0),seed_cnt);\nvar i \x3d seed_cnt;\nvar extra_kvs__$1 \x3d extra_kvs;\nwhile(true){\nif(extra_kvs__$1){\nvar kv \x3d cljs.core.first(extra_kvs__$1);\n(ret__$1[i] \x3d cljs.core._key(kv));\n\n(ret__$1[(i + (1))] \x3d cljs.core._val(kv));\n\nvar G__13893 \x3d ((2) + seed_cnt);\nvar G__13894 \x3d cljs.core.next(extra_kvs__$1);\ni \x3d G__13893;\nextra_kvs__$1 \x3d G__13894;\ncontinue;\n} else {\nreturn ret__$1;\n}\nbreak;\n}\n});\n(cljs.core.PersistentArrayMap.createAsIfByAssoc \x3d (function (init){\nvar len \x3d init.length;\nvar has_trailing_QMARK_ \x3d ((1) \x3d\x3d\x3d (len \x26 (1)));\nif((!(((has_trailing_QMARK_) || (cljs.core.pam_dupes_QMARK_(init)))))){\nreturn (new cljs.core.PersistentArrayMap(null,(len / (2)),init,null));\n} else {\nreturn cljs.core.PersistentArrayMap.createAsIfByAssocComplexPath(init,has_trailing_QMARK_);\n}\n}));\n(cljs.core.PersistentArrayMap.createAsIfByAssocComplexPath \x3d (function (init,has_trailing_QMARK_){\nvar init__$1 \x3d ((has_trailing_QMARK_)?cljs.core.pam_grow_seed_array(init,cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(init[(init.length - (1))]))):init);\nvar n \x3d cljs.core.pam_new_size(init__$1);\nvar len \x3d init__$1.length;\nif((n \x3c len)){\nvar nodups \x3d (new Array(n));\nvar i_13895 \x3d (0);\nvar m_13896 \x3d (0);\nwhile(true){\nif((i_13895 \x3c len)){\nvar dupe_QMARK__13897 \x3d (function (){var j \x3d (0);\nwhile(true){\nif((j \x3c m_13896)){\nvar or__5045__auto__ \x3d cljs.core.key_test((init__$1[i_13895]),(init__$1[j]));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar G__13898 \x3d ((2) + j);\nj \x3d G__13898;\ncontinue;\n}\n} else {\nreturn false;\n}\nbreak;\n}\n})();\nif((!(dupe_QMARK__13897))){\nvar j_13899 \x3d (function (){var j_13899 \x3d (len - (2));\nwhile(true){\nif((j_13899 \x3e\x3d i_13895)){\nif(cljs.core.key_test((init__$1[i_13895]),(init__$1[j_13899]))){\nreturn j_13899;\n} else {\nvar G__13900 \x3d (j_13899 - (2));\nj_13899 \x3d G__13900;\ncontinue;\n}\n} else {\nreturn j_13899;\n}\nbreak;\n}\n})();\n(nodups[m_13896] \x3d (init__$1[i_13895]));\n\n(nodups[(m_13896 + (1))] \x3d (init__$1[(j_13899 + (1))]));\n\nvar G__13901 \x3d ((2) + i_13895);\nvar G__13902 \x3d ((2) + m_13896);\ni_13895 \x3d G__13901;\nm_13896 \x3d G__13902;\ncontinue;\n} else {\nvar G__13903 \x3d ((2) + i_13895);\nvar G__13904 \x3d m_13896;\ni_13895 \x3d G__13903;\nm_13896 \x3d G__13904;\ncontinue;\n}\n} else {\n}\nbreak;\n}\n\nreturn (new cljs.core.PersistentArrayMap(null,(nodups.length / (2)),nodups,null));\n} else {\nreturn (new cljs.core.PersistentArrayMap(null,(init__$1.length / (2)),init__$1,null));\n}\n}));\n(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n\n/**\n* @constructor\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ITransientMap}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ITransientCollection}\n * @implements {cljs.core.ITransientAssociative}\n * @implements {cljs.core.ILookup}\n*/\ncljs.core.TransientArrayMap \x3d (function (editable_QMARK_,len,arr){\nthis.editable_QMARK_ \x3d editable_QMARK_;\nthis.len \x3d len;\nthis.arr \x3d arr;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 259;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 56;\n});\n(cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (tcoll){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(self__.editable_QMARK_){\nreturn cljs.core.quot(self__.len,(2));\n} else {\nthrow (new Error(\x22count after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (tcoll,k){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nreturn tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\n}));\n\n(cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (tcoll,k,not_found){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(self__.editable_QMARK_){\nvar idx \x3d cljs.core.array_map_index_of(tcoll__$1,k);\nif((idx \x3d\x3d\x3d (-1))){\nreturn not_found;\n} else {\nreturn (self__.arr[(idx + (1))]);\n}\n} else {\nthrow (new Error(\x22lookup after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 \x3d (function (tcoll,o){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(self__.editable_QMARK_){\nif(cljs.core.map_entry_QMARK_(o)){\nreturn tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null,o)),(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null,o)));\n} else {\nif(cljs.core.vector_QMARK_(o)){\nreturn tcoll__$1.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1((0)) : o.call(null,(0))),(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1((1)) : o.call(null,(1))));\n} else {\nvar es \x3d cljs.core.seq(o);\nvar tcoll__$2 \x3d tcoll__$1;\nwhile(true){\nvar temp__5802__auto__ \x3d cljs.core.first(es);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar e \x3d temp__5802__auto__;\nvar G__13905 \x3d cljs.core.next(es);\nvar G__13906 \x3d cljs.core._assoc_BANG_(tcoll__$2,(cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null,e)),(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null,e)));\nes \x3d G__13905;\ntcoll__$2 \x3d G__13906;\ncontinue;\n} else {\nreturn tcoll__$2;\n}\nbreak;\n}\n\n}\n}\n} else {\nthrow (new Error(\x22conj! after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 \x3d (function (tcoll){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(self__.editable_QMARK_){\n(self__.editable_QMARK_ \x3d false);\n\nreturn (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));\n} else {\nthrow (new Error(\x22persistent! called twice\x22));\n}\n}));\n\n(cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 \x3d (function (tcoll,key,val){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(self__.editable_QMARK_){\nvar idx \x3d cljs.core.array_map_index_of(tcoll__$1,key);\nif((idx \x3d\x3d\x3d (-1))){\nif(((self__.len + (2)) \x3c\x3d ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){\n(self__.len \x3d (self__.len + (2)));\n\nself__.arr.push(key);\n\nself__.arr.push(val);\n\nreturn tcoll__$1;\n} else {\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(self__.len,self__.arr) : cljs.core.array__GT_transient_hash_map.call(null,self__.len,self__.arr)),key,val);\n}\n} else {\nif((val \x3d\x3d\x3d (self__.arr[(idx + (1))]))){\nreturn tcoll__$1;\n} else {\n(self__.arr[(idx + (1))] \x3d val);\n\nreturn tcoll__$1;\n}\n}\n} else {\nthrow (new Error(\x22assoc! after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 \x3d (function (tcoll,key){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif(self__.editable_QMARK_){\nvar idx \x3d cljs.core.array_map_index_of(tcoll__$1,key);\nif((idx \x3e\x3d (0))){\n(self__.arr[idx] \x3d (self__.arr[(self__.len - (2))]));\n\n(self__.arr[(idx + (1))] \x3d (self__.arr[(self__.len - (1))]));\n\nvar G__10632_13911 \x3d self__.arr;\nG__10632_13911.pop();\n\nG__10632_13911.pop();\n\n\n(self__.len \x3d (self__.len - (2)));\n} else {\n}\n\nreturn tcoll__$1;\n} else {\nthrow (new Error(\x22dissoc! after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientArrayMap.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10633 \x3d (arguments.length - (1));\nswitch (G__10633) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.TransientArrayMap.prototype.apply \x3d (function (self__,args10631){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10631)));\n}));\n\n(cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (key){\nvar self__ \x3d this;\nvar tcoll \x3d this;\nreturn tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,null);\n}));\n\n(cljs.core.TransientArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (key,not_found){\nvar self__ \x3d this;\nvar tcoll \x3d this;\nreturn tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,not_found);\n}));\n\n(cljs.core.TransientArrayMap.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22editable?\x22,\x22editable?\x22,-164945806,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22len\x22,\x22len\x22,-1230778691,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null)], null);\n}));\n\n(cljs.core.TransientArrayMap.cljs$lang$type \x3d true);\n\n(cljs.core.TransientArrayMap.cljs$lang$ctorStr \x3d \x22cljs.core/TransientArrayMap\x22);\n\n(cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/TransientArrayMap\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/TransientArrayMap.\n */\ncljs.core.__GT_TransientArrayMap \x3d (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){\nreturn (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));\n});\n\ncljs.core.array__GT_transient_hash_map \x3d (function cljs$core$array__GT_transient_hash_map(len,arr){\nvar out \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\nvar i \x3d (0);\nwhile(true){\nif((i \x3c len)){\nvar G__13914 \x3d cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));\nvar G__13915 \x3d (i + (2));\nout \x3d G__13914;\ni \x3d G__13915;\ncontinue;\n} else {\nreturn out;\n}\nbreak;\n}\n});\n\n/**\n* @constructor\n*/\ncljs.core.Box \x3d (function (val){\nthis.val \x3d val;\n});\n\n(cljs.core.Box.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Box.cljs$lang$type \x3d true);\n\n(cljs.core.Box.cljs$lang$ctorStr \x3d \x22cljs.core/Box\x22);\n\n(cljs.core.Box.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Box\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Box.\n */\ncljs.core.__GT_Box \x3d (function cljs$core$__GT_Box(val){\nreturn (new cljs.core.Box(val));\n});\n\n\n\n\n\n\ncljs.core.mask \x3d (function cljs$core$mask(hash,shift){\nreturn ((hash \x3e\x3e\x3e shift) \x26 (31));\n});\ncljs.core.clone_and_set \x3d (function cljs$core$clone_and_set(var_args){\nvar G__10635 \x3d arguments.length;\nswitch (G__10635) {\ncase 3:\nreturn cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 5:\nreturn cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3 \x3d (function (arr,i,a){\nvar G__10636 \x3d cljs.core.aclone(arr);\n(G__10636[i] \x3d a);\n\nreturn G__10636;\n}));\n\n(cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5 \x3d (function (arr,i,a,j,b){\nvar G__10637 \x3d cljs.core.aclone(arr);\n(G__10637[i] \x3d a);\n\n(G__10637[j] \x3d b);\n\nreturn G__10637;\n}));\n\n(cljs.core.clone_and_set.cljs$lang$maxFixedArity \x3d 5);\n\ncljs.core.remove_pair \x3d (function cljs$core$remove_pair(arr,i){\nvar new_arr \x3d (new Array((arr.length - (2))));\ncljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));\n\ncljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));\n\nreturn new_arr;\n});\ncljs.core.bitmap_indexed_node_index \x3d (function cljs$core$bitmap_indexed_node_index(bitmap,bit){\nreturn cljs.core.bit_count((bitmap \x26 (bit - (1))));\n});\ncljs.core.bitpos \x3d (function cljs$core$bitpos(hash,shift){\nreturn ((1) \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\n});\ncljs.core.edit_and_set \x3d (function cljs$core$edit_and_set(var_args){\nvar G__10639 \x3d arguments.length;\nswitch (G__10639) {\ncase 4:\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase 6:\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4 \x3d (function (inode,edit,i,a){\nvar editable \x3d inode.ensure_editable(edit);\n(editable.arr[i] \x3d a);\n\nreturn editable;\n}));\n\n(cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6 \x3d (function (inode,edit,i,a,j,b){\nvar editable \x3d inode.ensure_editable(edit);\n(editable.arr[i] \x3d a);\n\n(editable.arr[j] \x3d b);\n\nreturn editable;\n}));\n\n(cljs.core.edit_and_set.cljs$lang$maxFixedArity \x3d 6);\n\ncljs.core.inode_kv_reduce \x3d (function cljs$core$inode_kv_reduce(arr,f,init){\nvar len \x3d arr.length;\nvar i \x3d (0);\nvar init__$1 \x3d init;\nwhile(true){\nif((i \x3c len)){\nvar init__$2 \x3d (function (){var k \x3d (arr[i]);\nif((!((k \x3d\x3d null)))){\nvar G__10640 \x3d init__$1;\nvar G__10641 \x3d k;\nvar G__10642 \x3d (arr[(i + (1))]);\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10640,G__10641,G__10642) : f.call(null,G__10640,G__10641,G__10642));\n} else {\nvar node \x3d (arr[(i + (1))]);\nif((!((node \x3d\x3d null)))){\nreturn node.kv_reduce(f,init__$1);\n} else {\nreturn init__$1;\n}\n}\n})();\nif(cljs.core.reduced_QMARK_(init__$2)){\nreturn init__$2;\n} else {\nvar G__13920 \x3d (i + (2));\nvar G__13921 \x3d init__$2;\ni \x3d G__13920;\ninit__$1 \x3d G__13921;\ncontinue;\n}\n} else {\nreturn init__$1;\n}\nbreak;\n}\n});\n\n/**\n* @constructor\n*/\ncljs.core.NodeIterator \x3d (function (arr,i,next_entry,next_iter){\nthis.arr \x3d arr;\nthis.i \x3d i;\nthis.next_entry \x3d next_entry;\nthis.next_iter \x3d next_iter;\n});\n(cljs.core.NodeIterator.prototype.advance \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar len \x3d self__.arr.length;\nwhile(true){\nif((self__.i \x3c len)){\nvar key \x3d (self__.arr[self__.i]);\nvar node_or_val \x3d (self__.arr[(self__.i + (1))]);\nvar found \x3d (((!((key \x3d\x3d null))))?(self__.next_entry \x3d (new cljs.core.MapEntry(key,node_or_val,null))):(((!((node_or_val \x3d\x3d null))))?(function (){var new_iter \x3d cljs.core._iterator(node_or_val);\nif(new_iter.hasNext()){\nreturn (self__.next_iter \x3d new_iter);\n} else {\nreturn false;\n}\n})():false\n));\n(self__.i \x3d (self__.i + (2)));\n\nif(found){\nreturn true;\n} else {\ncontinue;\n}\n} else {\nreturn false;\n}\nbreak;\n}\n}));\n\n(cljs.core.NodeIterator.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar or__5045__auto__ \x3d (!((self__.next_entry \x3d\x3d null)));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (!((self__.next_iter \x3d\x3d null)));\nif(or__5045__auto____$1){\nreturn or__5045__auto____$1;\n} else {\nreturn this$.advance();\n}\n}\n}));\n\n(cljs.core.NodeIterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((!((self__.next_entry \x3d\x3d null)))){\nvar ret \x3d self__.next_entry;\n(self__.next_entry \x3d null);\n\nreturn ret;\n} else {\nif((!((self__.next_iter \x3d\x3d null)))){\nvar ret \x3d self__.next_iter.next();\nif(self__.next_iter.hasNext()){\n} else {\n(self__.next_iter \x3d null);\n}\n\nreturn ret;\n} else {\nif(this$.advance()){\nreturn this$.next();\n} else {\nthrow (new Error(\x22No such element\x22));\n\n}\n}\n}\n}));\n\n(cljs.core.NodeIterator.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.NodeIterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22next-entry\x22,\x22next-entry\x22,1091342476,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22next-iter\x22,\x22next-iter\x22,1526626239,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.NodeIterator.cljs$lang$type \x3d true);\n\n(cljs.core.NodeIterator.cljs$lang$ctorStr \x3d \x22cljs.core/NodeIterator\x22);\n\n(cljs.core.NodeIterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/NodeIterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/NodeIterator.\n */\ncljs.core.__GT_NodeIterator \x3d (function cljs$core$__GT_NodeIterator(arr,i,next_entry,next_iter){\nreturn (new cljs.core.NodeIterator(arr,i,next_entry,next_iter));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IIterable}\n*/\ncljs.core.BitmapIndexedNode \x3d (function (edit,bitmap,arr){\nthis.edit \x3d edit;\nthis.bitmap \x3d bitmap;\nthis.arr \x3d arr;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 131072;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 0;\n});\n(cljs.core.BitmapIndexedNode.prototype.ensure_editable \x3d (function (e){\nvar self__ \x3d this;\nvar inode \x3d this;\nif((e \x3d\x3d\x3d self__.edit)){\nreturn inode;\n} else {\nvar n \x3d cljs.core.bit_count(self__.bitmap);\nvar new_arr \x3d (new Array((((n \x3c (0)))?(4):((2) * (n + (1))))));\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));\n\nreturn (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));\n}\n}));\n\n(cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ \x3d (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\nreturn inode;\n} else {\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\nif((key_or_nil \x3d\x3d null)){\nvar n \x3d val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);\nif((n \x3d\x3d\x3d val_or_node)){\nreturn inode;\n} else {\nif((!((n \x3d\x3d null)))){\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);\n} else {\nif((self__.bitmap \x3d\x3d\x3d bit)){\nreturn null;\n} else {\nreturn inode.edit_and_remove_pair(edit__$1,bit,idx);\n\n}\n}\n}\n} else {\nif(cljs.core.key_test(key,key_or_nil)){\n(removed_leaf_QMARK_.val \x3d true);\n\nreturn inode.edit_and_remove_pair(edit__$1,bit,idx);\n} else {\nreturn inode;\n\n}\n}\n}\n}));\n\n(cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair \x3d (function (e,bit,i){\nvar self__ \x3d this;\nvar inode \x3d this;\nif((self__.bitmap \x3d\x3d\x3d bit)){\nreturn null;\n} else {\nvar editable \x3d inode.ensure_editable(e);\nvar earr \x3d editable.arr;\nvar len \x3d earr.length;\n(editable.bitmap \x3d (bit ^ editable.bitmap));\n\ncljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));\n\n(earr[(len - (2))] \x3d null);\n\n(earr[(len - (1))] \x3d null);\n\nreturn editable;\n}\n}));\n\n(cljs.core.BitmapIndexedNode.prototype.inode_seq \x3d (function (){\nvar self__ \x3d this;\nvar inode \x3d this;\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null,self__.arr));\n}));\n\n(cljs.core.BitmapIndexedNode.prototype.kv_reduce \x3d (function (f,init){\nvar self__ \x3d this;\nvar inode \x3d this;\nreturn cljs.core.inode_kv_reduce(self__.arr,f,init);\n}));\n\n(cljs.core.BitmapIndexedNode.prototype.inode_lookup \x3d (function (shift,hash,key,not_found){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\nreturn not_found;\n} else {\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\nif((key_or_nil \x3d\x3d null)){\nreturn val_or_node.inode_lookup((shift + (5)),hash,key,not_found);\n} else {\nif(cljs.core.key_test(key,key_or_nil)){\nreturn val_or_node;\n} else {\nreturn not_found;\n\n}\n}\n}\n}));\n\n(cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ \x3d (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\nvar n \x3d cljs.core.bit_count(self__.bitmap);\nif((((2) * n) \x3c self__.arr.length)){\nvar editable \x3d inode.ensure_editable(edit__$1);\nvar earr \x3d editable.arr;\n(added_leaf_QMARK_.val \x3d true);\n\ncljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));\n\n(earr[((2) * idx)] \x3d key);\n\n(earr[(((2) * idx) + (1))] \x3d val);\n\n(editable.bitmap \x3d (editable.bitmap | bit));\n\nreturn editable;\n} else {\nif((n \x3e\x3d (16))){\nvar nodes \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\nvar jdx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\n(nodes[jdx] \x3d cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));\n\nvar i_13935 \x3d (0);\nvar j_13936 \x3d (0);\nwhile(true){\nif((i_13935 \x3c (32))){\nif((((self__.bitmap \x3e\x3e\x3e i_13935) \x26 (1)) \x3d\x3d\x3d (0))){\nvar G__13937 \x3d (i_13935 + (1));\nvar G__13938 \x3d j_13936;\ni_13935 \x3d G__13937;\nj_13936 \x3d G__13938;\ncontinue;\n} else {\n(nodes[i_13935] \x3d (((!(((self__.arr[j_13936]) \x3d\x3d null))))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_13936])),(self__.arr[j_13936]),(self__.arr[(j_13936 + (1))]),added_leaf_QMARK_):(self__.arr[(j_13936 + (1))])));\n\nvar G__13943 \x3d (i_13935 + (1));\nvar G__13944 \x3d (j_13936 + (2));\ni_13935 \x3d G__13943;\nj_13936 \x3d G__13944;\ncontinue;\n}\n} else {\n}\nbreak;\n}\n\nreturn (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));\n} else {\nvar new_arr \x3d (new Array(((2) * (n + (4)))));\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));\n\n(new_arr[((2) * idx)] \x3d key);\n\n(new_arr[(((2) * idx) + (1))] \x3d val);\n\ncljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));\n\n(added_leaf_QMARK_.val \x3d true);\n\nvar editable \x3d inode.ensure_editable(edit__$1);\n(editable.arr \x3d new_arr);\n\n(editable.bitmap \x3d (editable.bitmap | bit));\n\nreturn editable;\n\n}\n}\n} else {\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\nif((key_or_nil \x3d\x3d null)){\nvar n \x3d val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);\nif((n \x3d\x3d\x3d val_or_node)){\nreturn inode;\n} else {\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);\n}\n} else {\nif(cljs.core.key_test(key,key_or_nil)){\nif((val \x3d\x3d\x3d val_or_node)){\nreturn inode;\n} else {\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);\n}\n} else {\n(added_leaf_QMARK_.val \x3d true);\n\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10643 \x3d edit__$1;\nvar G__10644 \x3d (shift + (5));\nvar G__10645 \x3d key_or_nil;\nvar G__10646 \x3d val_or_node;\nvar G__10647 \x3d hash;\nvar G__10648 \x3d key;\nvar G__10649 \x3d val;\nreturn (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__10643,G__10644,G__10645,G__10646,G__10647,G__10648,G__10649) : cljs.core.create_node.call(null,G__10643,G__10644,G__10645,G__10646,G__10647,G__10648,G__10649));\n})());\n\n}\n}\n}\n}));\n\n(cljs.core.BitmapIndexedNode.prototype.inode_assoc \x3d (function (shift,hash,key,val,added_leaf_QMARK_){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\nvar n \x3d cljs.core.bit_count(self__.bitmap);\nif((n \x3e\x3d (16))){\nvar nodes \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\nvar jdx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\n(nodes[jdx] \x3d cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));\n\nvar i_13948 \x3d (0);\nvar j_13949 \x3d (0);\nwhile(true){\nif((i_13948 \x3c (32))){\nif((((self__.bitmap \x3e\x3e\x3e i_13948) \x26 (1)) \x3d\x3d\x3d (0))){\nvar G__13950 \x3d (i_13948 + (1));\nvar G__13951 \x3d j_13949;\ni_13948 \x3d G__13950;\nj_13949 \x3d G__13951;\ncontinue;\n} else {\n(nodes[i_13948] \x3d (((!(((self__.arr[j_13949]) \x3d\x3d null))))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_13949])),(self__.arr[j_13949]),(self__.arr[(j_13949 + (1))]),added_leaf_QMARK_):(self__.arr[(j_13949 + (1))])));\n\nvar G__13952 \x3d (i_13948 + (1));\nvar G__13953 \x3d (j_13949 + (2));\ni_13948 \x3d G__13952;\nj_13949 \x3d G__13953;\ncontinue;\n}\n} else {\n}\nbreak;\n}\n\nreturn (new cljs.core.ArrayNode(null,(n + (1)),nodes));\n} else {\nvar new_arr \x3d (new Array(((2) * (n + (1)))));\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));\n\n(new_arr[((2) * idx)] \x3d key);\n\n(new_arr[(((2) * idx) + (1))] \x3d val);\n\ncljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));\n\n(added_leaf_QMARK_.val \x3d true);\n\nreturn (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));\n}\n} else {\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\nif((key_or_nil \x3d\x3d null)){\nvar n \x3d val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);\nif((n \x3d\x3d\x3d val_or_node)){\nreturn inode;\n} else {\nreturn (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));\n}\n} else {\nif(cljs.core.key_test(key,key_or_nil)){\nif((val \x3d\x3d\x3d val_or_node)){\nreturn inode;\n} else {\nreturn (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));\n}\n} else {\n(added_leaf_QMARK_.val \x3d true);\n\nreturn (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__10650 \x3d (shift + (5));\nvar G__10651 \x3d key_or_nil;\nvar G__10652 \x3d val_or_node;\nvar G__10653 \x3d hash;\nvar G__10654 \x3d key;\nvar G__10655 \x3d val;\nreturn (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__10650,G__10651,G__10652,G__10653,G__10654,G__10655) : cljs.core.create_node.call(null,G__10650,G__10651,G__10652,G__10653,G__10654,G__10655));\n})())));\n\n}\n}\n}\n}));\n\n(cljs.core.BitmapIndexedNode.prototype.inode_find \x3d (function (shift,hash,key,not_found){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\nreturn not_found;\n} else {\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\nif((key_or_nil \x3d\x3d null)){\nreturn val_or_node.inode_find((shift + (5)),hash,key,not_found);\n} else {\nif(cljs.core.key_test(key,key_or_nil)){\nreturn (new cljs.core.MapEntry(key_or_nil,val_or_node,null));\n} else {\nreturn not_found;\n\n}\n}\n}\n}));\n\n(cljs.core.BitmapIndexedNode.prototype.inode_without \x3d (function (shift,hash,key){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar bit \x3d (1 \x3c\x3c ((hash \x3e\x3e\x3e shift) \x26 0x01f));\nif(((self__.bitmap \x26 bit) \x3d\x3d\x3d (0))){\nreturn inode;\n} else {\nvar idx \x3d cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);\nvar key_or_nil \x3d (self__.arr[((2) * idx)]);\nvar val_or_node \x3d (self__.arr[(((2) * idx) + (1))]);\nif((key_or_nil \x3d\x3d null)){\nvar n \x3d val_or_node.inode_without((shift + (5)),hash,key);\nif((n \x3d\x3d\x3d val_or_node)){\nreturn inode;\n} else {\nif((!((n \x3d\x3d null)))){\nreturn (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));\n} else {\nif((self__.bitmap \x3d\x3d\x3d bit)){\nreturn null;\n} else {\nreturn (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));\n\n}\n}\n}\n} else {\nif(cljs.core.key_test(key,key_or_nil)){\nif((self__.bitmap \x3d\x3d\x3d bit)){\nreturn null;\n} else {\nreturn (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));\n}\n} else {\nreturn inode;\n\n}\n}\n}\n}));\n\n(cljs.core.BitmapIndexedNode.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.NodeIterator(self__.arr,(0),null,null));\n}));\n\n(cljs.core.BitmapIndexedNode.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22edit\x22,\x22edit\x22,-1302639,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22bitmap\x22,\x22bitmap\x22,501334601,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.BitmapIndexedNode.cljs$lang$type \x3d true);\n\n(cljs.core.BitmapIndexedNode.cljs$lang$ctorStr \x3d \x22cljs.core/BitmapIndexedNode\x22);\n\n(cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/BitmapIndexedNode\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/BitmapIndexedNode.\n */\ncljs.core.__GT_BitmapIndexedNode \x3d (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){\nreturn (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));\n});\n\n(cljs.core.BitmapIndexedNode.EMPTY \x3d (new cljs.core.BitmapIndexedNode(null,(0),[])));\ncljs.core.pack_array_node \x3d (function cljs$core$pack_array_node(array_node,edit,idx){\nvar arr \x3d array_node.arr;\nvar len \x3d arr.length;\nvar new_arr \x3d (new Array(((2) * (array_node.cnt - (1)))));\nvar i \x3d (0);\nvar j \x3d (1);\nvar bitmap \x3d (0);\nwhile(true){\nif((i \x3c len)){\nif((((!((i \x3d\x3d\x3d idx)))) \x26\x26 ((!(((arr[i]) \x3d\x3d null)))))){\n(new_arr[j] \x3d (arr[i]));\n\nvar G__13967 \x3d (i + (1));\nvar G__13968 \x3d (j + (2));\nvar G__13969 \x3d (bitmap | ((1) \x3c\x3c i));\ni \x3d G__13967;\nj \x3d G__13968;\nbitmap \x3d G__13969;\ncontinue;\n} else {\nvar G__13970 \x3d (i + (1));\nvar G__13971 \x3d j;\nvar G__13972 \x3d bitmap;\ni \x3d G__13970;\nj \x3d G__13971;\nbitmap \x3d G__13972;\ncontinue;\n}\n} else {\nreturn (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));\n}\nbreak;\n}\n});\n\n/**\n* @constructor\n*/\ncljs.core.ArrayNodeIterator \x3d (function (arr,i,next_iter){\nthis.arr \x3d arr;\nthis.i \x3d i;\nthis.next_iter \x3d next_iter;\n});\n(cljs.core.ArrayNodeIterator.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar len \x3d self__.arr.length;\nwhile(true){\nif((!((((!((self__.next_iter \x3d\x3d null)))) \x26\x26 (self__.next_iter.hasNext()))))){\nif((self__.i \x3c len)){\nvar node \x3d (self__.arr[self__.i]);\n(self__.i \x3d (self__.i + (1)));\n\nif((!((node \x3d\x3d null)))){\n(self__.next_iter \x3d cljs.core._iterator(node));\n} else {\n}\n\ncontinue;\n} else {\nreturn false;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n}));\n\n(cljs.core.ArrayNodeIterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif(this$.hasNext()){\nreturn self__.next_iter.next();\n} else {\nthrow (new Error(\x22No such element\x22));\n}\n}));\n\n(cljs.core.ArrayNodeIterator.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.ArrayNodeIterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22next-iter\x22,\x22next-iter\x22,1526626239,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ArrayNodeIterator.cljs$lang$type \x3d true);\n\n(cljs.core.ArrayNodeIterator.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayNodeIterator\x22);\n\n(cljs.core.ArrayNodeIterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ArrayNodeIterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ArrayNodeIterator.\n */\ncljs.core.__GT_ArrayNodeIterator \x3d (function cljs$core$__GT_ArrayNodeIterator(arr,i,next_iter){\nreturn (new cljs.core.ArrayNodeIterator(arr,i,next_iter));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IIterable}\n*/\ncljs.core.ArrayNode \x3d (function (edit,cnt,arr){\nthis.edit \x3d edit;\nthis.cnt \x3d cnt;\nthis.arr \x3d arr;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 131072;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 0;\n});\n(cljs.core.ArrayNode.prototype.ensure_editable \x3d (function (e){\nvar self__ \x3d this;\nvar inode \x3d this;\nif((e \x3d\x3d\x3d self__.edit)){\nreturn inode;\n} else {\nreturn (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));\n}\n}));\n\n(cljs.core.ArrayNode.prototype.inode_without_BANG_ \x3d (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\nvar node \x3d (self__.arr[idx]);\nif((node \x3d\x3d null)){\nreturn inode;\n} else {\nvar n \x3d node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);\nif((n \x3d\x3d\x3d node)){\nreturn inode;\n} else {\nif((n \x3d\x3d null)){\nif((self__.cnt \x3c\x3d (8))){\nreturn cljs.core.pack_array_node(inode,edit__$1,idx);\n} else {\nvar editable \x3d cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);\n(editable.cnt \x3d (editable.cnt - (1)));\n\nreturn editable;\n}\n} else {\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);\n\n}\n}\n}\n}));\n\n(cljs.core.ArrayNode.prototype.inode_seq \x3d (function (){\nvar self__ \x3d this;\nvar inode \x3d this;\nreturn (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_array_node_seq.call(null,self__.arr));\n}));\n\n(cljs.core.ArrayNode.prototype.kv_reduce \x3d (function (f,init){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar len \x3d self__.arr.length;\nvar i \x3d (0);\nvar init__$1 \x3d init;\nwhile(true){\nif((i \x3c len)){\nvar node \x3d (self__.arr[i]);\nif((!((node \x3d\x3d null)))){\nvar init__$2 \x3d node.kv_reduce(f,init__$1);\nif(cljs.core.reduced_QMARK_(init__$2)){\nreturn init__$2;\n} else {\nvar G__13973 \x3d (i + (1));\nvar G__13974 \x3d init__$2;\ni \x3d G__13973;\ninit__$1 \x3d G__13974;\ncontinue;\n}\n} else {\nvar G__13975 \x3d (i + (1));\nvar G__13976 \x3d init__$1;\ni \x3d G__13975;\ninit__$1 \x3d G__13976;\ncontinue;\n}\n} else {\nreturn init__$1;\n}\nbreak;\n}\n}));\n\n(cljs.core.ArrayNode.prototype.inode_lookup \x3d (function (shift,hash,key,not_found){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\nvar node \x3d (self__.arr[idx]);\nif((!((node \x3d\x3d null)))){\nreturn node.inode_lookup((shift + (5)),hash,key,not_found);\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.ArrayNode.prototype.inode_assoc_BANG_ \x3d (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\nvar node \x3d (self__.arr[idx]);\nif((node \x3d\x3d null)){\nvar editable \x3d cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));\n(editable.cnt \x3d (editable.cnt + (1)));\n\nreturn editable;\n} else {\nvar n \x3d node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);\nif((n \x3d\x3d\x3d node)){\nreturn inode;\n} else {\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);\n}\n}\n}));\n\n(cljs.core.ArrayNode.prototype.inode_assoc \x3d (function (shift,hash,key,val,added_leaf_QMARK_){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\nvar node \x3d (self__.arr[idx]);\nif((node \x3d\x3d null)){\nreturn (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));\n} else {\nvar n \x3d node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);\nif((n \x3d\x3d\x3d node)){\nreturn inode;\n} else {\nreturn (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));\n}\n}\n}));\n\n(cljs.core.ArrayNode.prototype.inode_find \x3d (function (shift,hash,key,not_found){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\nvar node \x3d (self__.arr[idx]);\nif((!((node \x3d\x3d null)))){\nreturn node.inode_find((shift + (5)),hash,key,not_found);\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.ArrayNode.prototype.inode_without \x3d (function (shift,hash,key){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar idx \x3d ((hash \x3e\x3e\x3e shift) \x26 0x01f);\nvar node \x3d (self__.arr[idx]);\nif((!((node \x3d\x3d null)))){\nvar n \x3d node.inode_without((shift + (5)),hash,key);\nif((n \x3d\x3d\x3d node)){\nreturn inode;\n} else {\nif((n \x3d\x3d null)){\nif((self__.cnt \x3c\x3d (8))){\nreturn cljs.core.pack_array_node(inode,null,idx);\n} else {\nreturn (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));\n}\n} else {\nreturn (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));\n\n}\n}\n} else {\nreturn inode;\n}\n}));\n\n(cljs.core.ArrayNode.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.ArrayNodeIterator(self__.arr,(0),null));\n}));\n\n(cljs.core.ArrayNode.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22edit\x22,\x22edit\x22,-1302639,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ArrayNode.cljs$lang$type \x3d true);\n\n(cljs.core.ArrayNode.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayNode\x22);\n\n(cljs.core.ArrayNode.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ArrayNode\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ArrayNode.\n */\ncljs.core.__GT_ArrayNode \x3d (function cljs$core$__GT_ArrayNode(edit,cnt,arr){\nreturn (new cljs.core.ArrayNode(edit,cnt,arr));\n});\n\ncljs.core.hash_collision_node_find_index \x3d (function cljs$core$hash_collision_node_find_index(arr,cnt,key){\nvar lim \x3d ((2) * cnt);\nvar i \x3d (0);\nwhile(true){\nif((i \x3c lim)){\nif(cljs.core.key_test(key,(arr[i]))){\nreturn i;\n} else {\nvar G__13977 \x3d (i + (2));\ni \x3d G__13977;\ncontinue;\n}\n} else {\nreturn (-1);\n}\nbreak;\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IIterable}\n*/\ncljs.core.HashCollisionNode \x3d (function (edit,collision_hash,cnt,arr){\nthis.edit \x3d edit;\nthis.collision_hash \x3d collision_hash;\nthis.cnt \x3d cnt;\nthis.arr \x3d arr;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 131072;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 0;\n});\n(cljs.core.HashCollisionNode.prototype.ensure_editable \x3d (function (e){\nvar self__ \x3d this;\nvar inode \x3d this;\nif((e \x3d\x3d\x3d self__.edit)){\nreturn inode;\n} else {\nvar new_arr \x3d (new Array(((2) * (self__.cnt + (1)))));\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));\n\nreturn (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));\n}\n}));\n\n(cljs.core.HashCollisionNode.prototype.inode_without_BANG_ \x3d (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\nif((idx \x3d\x3d\x3d (-1))){\nreturn inode;\n} else {\n(removed_leaf_QMARK_.val \x3d true);\n\nif((self__.cnt \x3d\x3d\x3d (1))){\nreturn null;\n} else {\nvar editable \x3d inode.ensure_editable(edit__$1);\nvar earr \x3d editable.arr;\n(earr[idx] \x3d (earr[(((2) * self__.cnt) - (2))]));\n\n(earr[(idx + (1))] \x3d (earr[(((2) * self__.cnt) - (1))]));\n\n(earr[(((2) * self__.cnt) - (1))] \x3d null);\n\n(earr[(((2) * self__.cnt) - (2))] \x3d null);\n\n(editable.cnt \x3d (editable.cnt - (1)));\n\nreturn editable;\n}\n}\n}));\n\n(cljs.core.HashCollisionNode.prototype.inode_seq \x3d (function (){\nvar self__ \x3d this;\nvar inode \x3d this;\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(self__.arr) : cljs.core.create_inode_seq.call(null,self__.arr));\n}));\n\n(cljs.core.HashCollisionNode.prototype.kv_reduce \x3d (function (f,init){\nvar self__ \x3d this;\nvar inode \x3d this;\nreturn cljs.core.inode_kv_reduce(self__.arr,f,init);\n}));\n\n(cljs.core.HashCollisionNode.prototype.inode_lookup \x3d (function (shift,hash,key,not_found){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\nif((idx \x3c (0))){\nreturn not_found;\n} else {\nif(cljs.core.key_test(key,(self__.arr[idx]))){\nreturn (self__.arr[(idx + (1))]);\n} else {\nreturn not_found;\n\n}\n}\n}));\n\n(cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ \x3d (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){\nvar self__ \x3d this;\nvar inode \x3d this;\nif((hash \x3d\x3d\x3d self__.collision_hash)){\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\nif((idx \x3d\x3d\x3d (-1))){\nif((self__.arr.length \x3e ((2) * self__.cnt))){\nvar editable \x3d cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);\n(added_leaf_QMARK_.val \x3d true);\n\n(editable.cnt \x3d (editable.cnt + (1)));\n\nreturn editable;\n} else {\nvar len \x3d self__.arr.length;\nvar new_arr \x3d (new Array((len + (2))));\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),len);\n\n(new_arr[len] \x3d key);\n\n(new_arr[(len + (1))] \x3d val);\n\n(added_leaf_QMARK_.val \x3d true);\n\nreturn inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);\n}\n} else {\nif(((self__.arr[(idx + (1))]) \x3d\x3d\x3d val)){\nreturn inode;\n} else {\nreturn cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);\n}\n}\n} else {\nreturn (new cljs.core.BitmapIndexedNode(edit__$1,(1 \x3c\x3c ((self__.collision_hash \x3e\x3e\x3e shift) \x26 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);\n}\n}));\n\n(cljs.core.HashCollisionNode.prototype.inode_assoc \x3d (function (shift,hash,key,val,added_leaf_QMARK_){\nvar self__ \x3d this;\nvar inode \x3d this;\nif((hash \x3d\x3d\x3d self__.collision_hash)){\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\nif((idx \x3d\x3d\x3d (-1))){\nvar len \x3d ((2) * self__.cnt);\nvar new_arr \x3d (new Array((len + (2))));\ncljs.core.array_copy(self__.arr,(0),new_arr,(0),len);\n\n(new_arr[len] \x3d key);\n\n(new_arr[(len + (1))] \x3d val);\n\n(added_leaf_QMARK_.val \x3d true);\n\nreturn (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(idx + (1))]),val)){\nreturn inode;\n} else {\nreturn (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));\n}\n}\n} else {\nreturn (new cljs.core.BitmapIndexedNode(null,(1 \x3c\x3c ((self__.collision_hash \x3e\x3e\x3e shift) \x26 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);\n}\n}));\n\n(cljs.core.HashCollisionNode.prototype.ensure_editable_array \x3d (function (e,count,array){\nvar self__ \x3d this;\nvar inode \x3d this;\nif((e \x3d\x3d\x3d self__.edit)){\n(self__.arr \x3d array);\n\n(self__.cnt \x3d count);\n\nreturn inode;\n} else {\nreturn (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));\n}\n}));\n\n(cljs.core.HashCollisionNode.prototype.inode_find \x3d (function (shift,hash,key,not_found){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\nif((idx \x3c (0))){\nreturn not_found;\n} else {\nif(cljs.core.key_test(key,(self__.arr[idx]))){\nreturn (new cljs.core.MapEntry((self__.arr[idx]),(self__.arr[(idx + (1))]),null));\n} else {\nreturn not_found;\n\n}\n}\n}));\n\n(cljs.core.HashCollisionNode.prototype.inode_without \x3d (function (shift,hash,key){\nvar self__ \x3d this;\nvar inode \x3d this;\nvar idx \x3d cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);\nif((idx \x3d\x3d\x3d (-1))){\nreturn inode;\n} else {\nif((self__.cnt \x3d\x3d\x3d (1))){\nreturn null;\n} else {\nreturn (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));\n\n}\n}\n}));\n\n(cljs.core.HashCollisionNode.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.NodeIterator(self__.arr,(0),null,null));\n}));\n\n(cljs.core.HashCollisionNode.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22edit\x22,\x22edit\x22,-1302639,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22collision-hash\x22,\x22collision-hash\x22,-35831342,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.HashCollisionNode.cljs$lang$type \x3d true);\n\n(cljs.core.HashCollisionNode.cljs$lang$ctorStr \x3d \x22cljs.core/HashCollisionNode\x22);\n\n(cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/HashCollisionNode\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/HashCollisionNode.\n */\ncljs.core.__GT_HashCollisionNode \x3d (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){\nreturn (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));\n});\n\ncljs.core.create_node \x3d (function cljs$core$create_node(var_args){\nvar G__10657 \x3d arguments.length;\nswitch (G__10657) {\ncase 6:\nreturn cljs.core.create_node.cljs$core$IFn$_invoke$arity$6((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ncase 7:\nreturn cljs.core.create_node.cljs$core$IFn$_invoke$arity$7((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 \x3d (function (shift,key1,val1,key2hash,key2,val2){\nvar key1hash \x3d cljs.core.hash(key1);\nif((key1hash \x3d\x3d\x3d key2hash)){\nreturn (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));\n} else {\nvar added_leaf_QMARK_ \x3d (new cljs.core.Box(false));\nreturn cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);\n}\n}));\n\n(cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 \x3d (function (edit,shift,key1,val1,key2hash,key2,val2){\nvar key1hash \x3d cljs.core.hash(key1);\nif((key1hash \x3d\x3d\x3d key2hash)){\nreturn (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));\n} else {\nvar added_leaf_QMARK_ \x3d (new cljs.core.Box(false));\nreturn cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);\n}\n}));\n\n(cljs.core.create_node.cljs$lang$maxFixedArity \x3d 7);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.NodeSeq \x3d (function (meta,nodes,i,s,__hash){\nthis.meta \x3d meta;\nthis.nodes \x3d nodes;\nthis.i \x3d i;\nthis.s \x3d s;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.NodeSeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.NodeSeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.NodeSeq.prototype.indexOf \x3d (function() {\nvar G__13996 \x3d null;\nvar G__13996__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__13996__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__13996 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__13996__1.call(this,x);\ncase 2:\nreturn G__13996__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__13996.cljs$core$IFn$_invoke$arity$1 \x3d G__13996__1;\nG__13996.cljs$core$IFn$_invoke$arity$2 \x3d G__13996__2;\nreturn G__13996;\n})()\n);\n\n(cljs.core.NodeSeq.prototype.lastIndexOf \x3d (function() {\nvar G__14002 \x3d null;\nvar G__14002__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__14002__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14002 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14002__1.call(this,x);\ncase 2:\nreturn G__14002__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14002.cljs$core$IFn$_invoke$arity$1 \x3d G__14002__1;\nG__14002.cljs$core$IFn$_invoke$arity$2 \x3d G__14002__2;\nreturn G__14002;\n})()\n);\n\n(cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.s \x3d\x3d null)){\nvar G__10658 \x3d self__.nodes;\nvar G__10659 \x3d (self__.i + (2));\nvar G__10660 \x3d null;\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10658,G__10659,G__10660) : cljs.core.create_inode_seq.call(null,G__10658,G__10659,G__10660));\n} else {\nvar G__10661 \x3d self__.nodes;\nvar G__10662 \x3d self__.i;\nvar G__10663 \x3d cljs.core.next(self__.s);\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10661,G__10662,G__10663) : cljs.core.create_inode_seq.call(null,G__10661,G__10662,G__10663));\n}\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.s \x3d\x3d null)){\nreturn (new cljs.core.MapEntry((self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))]),null));\n} else {\nreturn cljs.core.first(self__.s);\n}\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar ret \x3d (((self__.s \x3d\x3d null))?(function (){var G__10664 \x3d self__.nodes;\nvar G__10665 \x3d (self__.i + (2));\nvar G__10666 \x3d null;\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10664,G__10665,G__10666) : cljs.core.create_inode_seq.call(null,G__10664,G__10665,G__10666));\n})():(function (){var G__10667 \x3d self__.nodes;\nvar G__10668 \x3d self__.i;\nvar G__10669 \x3d cljs.core.next(self__.s);\nreturn (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__10667,G__10668,G__10669) : cljs.core.create_inode_seq.call(null,G__10667,G__10668,G__10669));\n})());\nif((!((ret \x3d\x3d null)))){\nreturn ret;\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn this$__$1;\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.NodeSeq(new_meta,self__.nodes,self__.i,self__.s,self__.__hash));\n}\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.NodeSeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22nodes\x22,\x22nodes\x22,-459054278,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.NodeSeq.cljs$lang$type \x3d true);\n\n(cljs.core.NodeSeq.cljs$lang$ctorStr \x3d \x22cljs.core/NodeSeq\x22);\n\n(cljs.core.NodeSeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/NodeSeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/NodeSeq.\n */\ncljs.core.__GT_NodeSeq \x3d (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){\nreturn (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));\n});\n\n(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\ncljs.core.create_inode_seq \x3d (function cljs$core$create_inode_seq(var_args){\nvar G__10671 \x3d arguments.length;\nswitch (G__10671) {\ncase 1:\nreturn cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 3:\nreturn cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 \x3d (function (nodes){\nreturn cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);\n}));\n\n(cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 \x3d (function (nodes,i,s){\nif((s \x3d\x3d null)){\nvar len \x3d nodes.length;\nvar j \x3d i;\nwhile(true){\nif((j \x3c len)){\nif((!(((nodes[j]) \x3d\x3d null)))){\nreturn (new cljs.core.NodeSeq(null,nodes,j,null,null));\n} else {\nvar temp__5802__auto__ \x3d (nodes[(j + (1))]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar node \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d node.inode_seq();\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar node_seq \x3d temp__5802__auto____$1;\nreturn (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));\n} else {\nvar G__14008 \x3d (j + (2));\nj \x3d G__14008;\ncontinue;\n}\n} else {\nvar G__14009 \x3d (j + (2));\nj \x3d G__14009;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n} else {\nreturn (new cljs.core.NodeSeq(null,nodes,i,s,null));\n}\n}));\n\n(cljs.core.create_inode_seq.cljs$lang$maxFixedArity \x3d 3);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.ArrayNodeSeq \x3d (function (meta,nodes,i,s,__hash){\nthis.meta \x3d meta;\nthis.nodes \x3d nodes;\nthis.i \x3d i;\nthis.s \x3d s;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.ArrayNodeSeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.indexOf \x3d (function() {\nvar G__14010 \x3d null;\nvar G__14010__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__14010__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14010 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14010__1.call(this,x);\ncase 2:\nreturn G__14010__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14010.cljs$core$IFn$_invoke$arity$1 \x3d G__14010__1;\nG__14010.cljs$core$IFn$_invoke$arity$2 \x3d G__14010__2;\nreturn G__14010;\n})()\n);\n\n(cljs.core.ArrayNodeSeq.prototype.lastIndexOf \x3d (function() {\nvar G__14015 \x3d null;\nvar G__14015__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__14015__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14015 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14015__1.call(this,x);\ncase 2:\nreturn G__14015__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14015.cljs$core$IFn$_invoke$arity$1 \x3d G__14015__1;\nG__14015.cljs$core$IFn$_invoke$arity$2 \x3d G__14015__2;\nreturn G__14015;\n})()\n);\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar G__10672 \x3d self__.nodes;\nvar G__10673 \x3d self__.i;\nvar G__10674 \x3d cljs.core.next(self__.s);\nreturn (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(G__10672,G__10673,G__10674) : cljs.core.create_array_node_seq.call(null,G__10672,G__10673,G__10674));\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.first(self__.s);\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar ret \x3d (function (){var G__10675 \x3d self__.nodes;\nvar G__10676 \x3d self__.i;\nvar G__10677 \x3d cljs.core.next(self__.s);\nreturn (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(G__10675,G__10676,G__10677) : cljs.core.create_array_node_seq.call(null,G__10675,G__10676,G__10677));\n})();\nif((!((ret \x3d\x3d null)))){\nreturn ret;\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn this$__$1;\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.ArrayNodeSeq(new_meta,self__.nodes,self__.i,self__.s,self__.__hash));\n}\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.ArrayNodeSeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22nodes\x22,\x22nodes\x22,-459054278,null),new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.Symbol(null,\x22s\x22,\x22s\x22,-948495851,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ArrayNodeSeq.cljs$lang$type \x3d true);\n\n(cljs.core.ArrayNodeSeq.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayNodeSeq\x22);\n\n(cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ArrayNodeSeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ArrayNodeSeq.\n */\ncljs.core.__GT_ArrayNodeSeq \x3d (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){\nreturn (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));\n});\n\n(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\ncljs.core.create_array_node_seq \x3d (function cljs$core$create_array_node_seq(var_args){\nvar G__10679 \x3d arguments.length;\nswitch (G__10679) {\ncase 1:\nreturn cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 3:\nreturn cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 \x3d (function (nodes){\nreturn cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);\n}));\n\n(cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$3 \x3d (function (nodes,i,s){\nif((s \x3d\x3d null)){\nvar len \x3d nodes.length;\nvar j \x3d i;\nwhile(true){\nif((j \x3c len)){\nvar temp__5802__auto__ \x3d (nodes[j]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar nj \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d nj.inode_seq();\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar ns \x3d temp__5802__auto____$1;\nreturn (new cljs.core.ArrayNodeSeq(null,nodes,(j + (1)),ns,null));\n} else {\nvar G__14026 \x3d (j + (1));\nj \x3d G__14026;\ncontinue;\n}\n} else {\nvar G__14027 \x3d (j + (1));\nj \x3d G__14027;\ncontinue;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n} else {\nreturn (new cljs.core.ArrayNodeSeq(null,nodes,i,s,null));\n}\n}));\n\n(cljs.core.create_array_node_seq.cljs$lang$maxFixedArity \x3d 3);\n\n\n/**\n* @constructor\n*/\ncljs.core.HashMapIter \x3d (function (nil_val,root_iter,seen){\nthis.nil_val \x3d nil_val;\nthis.root_iter \x3d root_iter;\nthis.seen \x3d seen;\n});\n(cljs.core.HashMapIter.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (((!(self__.seen))) || (self__.root_iter.hasNext()));\n}));\n\n(cljs.core.HashMapIter.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nif((!(self__.seen))){\n(self__.seen \x3d true);\n\nreturn (new cljs.core.MapEntry(null,self__.nil_val,null));\n} else {\nreturn self__.root_iter.next();\n}\n}));\n\n(cljs.core.HashMapIter.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.HashMapIter.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22nil-val\x22,\x22nil-val\x22,-513933559,null),new cljs.core.Symbol(null,\x22root-iter\x22,\x22root-iter\x22,1974672108,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22seen\x22,\x22seen\x22,1121531738,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.HashMapIter.cljs$lang$type \x3d true);\n\n(cljs.core.HashMapIter.cljs$lang$ctorStr \x3d \x22cljs.core/HashMapIter\x22);\n\n(cljs.core.HashMapIter.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/HashMapIter\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/HashMapIter.\n */\ncljs.core.__GT_HashMapIter \x3d (function cljs$core$__GT_HashMapIter(nil_val,root_iter,seen){\nreturn (new cljs.core.HashMapIter(nil_val,root_iter,seen));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEditableCollection}\n * @implements {cljs.core.IFind}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.core.PersistentHashMap \x3d (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){\nthis.meta \x3d meta;\nthis.cnt \x3d cnt;\nthis.root \x3d root;\nthis.has_nil_QMARK_ \x3d has_nil_QMARK_;\nthis.nil_val \x3d nil_val;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 16123663;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139268;\n});\n(cljs.core.PersistentHashMap.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((k \x3d\x3d null)){\nif(self__.has_nil_QMARK_){\nreturn (new cljs.core.MapEntry(null,self__.nil_val,null));\n} else {\nreturn null;\n}\n} else {\nif((self__.root \x3d\x3d null)){\nreturn null;\n} else {\nreturn self__.root.inode_find((0),cljs.core.hash(k),k,null);\n\n}\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.PersistentHashMap.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.PersistentHashMap.prototype.keys \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_iterator((cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null,coll)));\n}));\n\n(cljs.core.PersistentHashMap.prototype.entries \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_entries_iterator(cljs.core.seq(coll));\n}));\n\n(cljs.core.PersistentHashMap.prototype.values \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_iterator((cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null,coll)));\n}));\n\n(cljs.core.PersistentHashMap.prototype.has \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.contains_QMARK_(coll,k);\n}));\n\n(cljs.core.PersistentHashMap.prototype.get \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n}));\n\n(cljs.core.PersistentHashMap.prototype.forEach \x3d (function (f){\nvar self__ \x3d this;\nvar coll \x3d this;\nvar seq__10681 \x3d cljs.core.seq(coll);\nvar chunk__10682 \x3d null;\nvar count__10683 \x3d (0);\nvar i__10684 \x3d (0);\nwhile(true){\nif((i__10684 \x3c count__10683)){\nvar vec__10691 \x3d chunk__10682.cljs$core$IIndexed$_nth$arity$2(null,i__10684);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10691,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10691,(1),null);\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\n\n\nvar G__14033 \x3d seq__10681;\nvar G__14034 \x3d chunk__10682;\nvar G__14035 \x3d count__10683;\nvar G__14036 \x3d (i__10684 + (1));\nseq__10681 \x3d G__14033;\nchunk__10682 \x3d G__14034;\ncount__10683 \x3d G__14035;\ni__10684 \x3d G__14036;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__10681);\nif(temp__5804__auto__){\nvar seq__10681__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__10681__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__10681__$1);\nvar G__14037 \x3d cljs.core.chunk_rest(seq__10681__$1);\nvar G__14038 \x3d c__5568__auto__;\nvar G__14039 \x3d cljs.core.count(c__5568__auto__);\nvar G__14040 \x3d (0);\nseq__10681 \x3d G__14037;\nchunk__10682 \x3d G__14038;\ncount__10683 \x3d G__14039;\ni__10684 \x3d G__14040;\ncontinue;\n} else {\nvar vec__10694 \x3d cljs.core.first(seq__10681__$1);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10694,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10694,(1),null);\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\n\n\nvar G__14041 \x3d cljs.core.next(seq__10681__$1);\nvar G__14042 \x3d null;\nvar G__14043 \x3d (0);\nvar G__14044 \x3d (0);\nseq__10681 \x3d G__14041;\nchunk__10682 \x3d G__14042;\ncount__10683 \x3d G__14043;\ni__10684 \x3d G__14044;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((k \x3d\x3d null)){\nif(self__.has_nil_QMARK_){\nreturn self__.nil_val;\n} else {\nreturn not_found;\n}\n} else {\nif((self__.root \x3d\x3d null)){\nreturn not_found;\n} else {\nreturn self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);\n\n}\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (coll,f,init){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar init__$1 \x3d ((self__.has_nil_QMARK_)?(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(init,null,self__.nil_val) : f.call(null,init,null,self__.nil_val)):init);\nif(cljs.core.reduced_QMARK_(init__$1)){\nreturn cljs.core.deref(init__$1);\n} else {\nif((!((self__.root \x3d\x3d null)))){\nreturn cljs.core.unreduced(self__.root.kv_reduce(f,init__$1));\n} else {\nreturn init__$1;\n\n}\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar root_iter \x3d ((self__.root)?cljs.core._iterator(self__.root):cljs.core.nil_iter());\nif(self__.has_nil_QMARK_){\nreturn (new cljs.core.HashMapIter(self__.nil_val,root_iter,false));\n} else {\nreturn root_iter;\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.cnt;\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_map(coll__$1,other);\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.TransientHashMap(({}),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((k \x3d\x3d null)){\nif(self__.has_nil_QMARK_){\nreturn (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));\n} else {\nreturn coll__$1;\n}\n} else {\nif((self__.root \x3d\x3d null)){\nreturn coll__$1;\n} else {\nvar new_root \x3d self__.root.inode_without((0),cljs.core.hash(k),k);\nif((new_root \x3d\x3d\x3d self__.root)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));\n}\n\n}\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,k,v){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((k \x3d\x3d null)){\nif(((self__.has_nil_QMARK_) \x26\x26 ((v \x3d\x3d\x3d self__.nil_val)))){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));\n}\n} else {\nvar added_leaf_QMARK_ \x3d (new cljs.core.Box(false));\nvar new_root \x3d (((self__.root \x3d\x3d null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);\nif((new_root \x3d\x3d\x3d self__.root)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));\n}\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((k \x3d\x3d null)){\nreturn self__.has_nil_QMARK_;\n} else {\nif((self__.root \x3d\x3d null)){\nreturn false;\n} else {\nreturn (!((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) \x3d\x3d\x3d cljs.core.lookup_sentinel)));\n\n}\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.cnt \x3e (0))){\nvar s \x3d (((!((self__.root \x3d\x3d null))))?self__.root.inode_seq():null);\nif(self__.has_nil_QMARK_){\nreturn cljs.core.cons((new cljs.core.MapEntry(null,self__.nil_val,null)),s);\n} else {\nreturn s;\n}\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentHashMap(new_meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,entry){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry)){\nreturn coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry,(0)),cljs.core._nth(entry,(1)));\n} else {\nvar ret \x3d coll__$1;\nvar es \x3d cljs.core.seq(entry);\nwhile(true){\nif((es \x3d\x3d null)){\nreturn ret;\n} else {\nvar e \x3d cljs.core.first(es);\nif(cljs.core.vector_QMARK_(e)){\nvar G__14053 \x3d cljs.core._assoc(ret,cljs.core._nth(e,(0)),cljs.core._nth(e,(1)));\nvar G__14054 \x3d cljs.core.next(es);\nret \x3d G__14053;\nes \x3d G__14054;\ncontinue;\n} else {\nthrow (new Error(\x22conj on a map takes map entries or seqables of map entries\x22));\n}\n}\nbreak;\n}\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10699 \x3d (arguments.length - (1));\nswitch (G__10699) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.PersistentHashMap.prototype.apply \x3d (function (self__,args10680){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10680)));\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n}));\n\n(cljs.core.PersistentHashMap.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.Symbol(null,\x22root\x22,\x22root\x22,1191874074,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22has-nil?\x22,\x22has-nil?\x22,825886722,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null)], null)),new cljs.core.Symbol(null,\x22nil-val\x22,\x22nil-val\x22,-513933559,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.PersistentHashMap.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentHashMap.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentHashMap\x22);\n\n(cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentHashMap\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentHashMap.\n */\ncljs.core.__GT_PersistentHashMap \x3d (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){\nreturn (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));\n});\n\n(cljs.core.PersistentHashMap.EMPTY \x3d (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash)));\n(cljs.core.PersistentHashMap.fromArray \x3d (function (arr,no_clone){\nvar arr__$1 \x3d ((no_clone)?arr:cljs.core.aclone(arr));\nvar len \x3d arr__$1.length;\nvar i \x3d (0);\nvar ret \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\nwhile(true){\nif((i \x3c len)){\nvar G__14061 \x3d (i + (2));\nvar G__14062 \x3d cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));\ni \x3d G__14061;\nret \x3d G__14062;\ncontinue;\n} else {\nreturn cljs.core._persistent_BANG_(ret);\n}\nbreak;\n}\n}));\n(cljs.core.PersistentHashMap.fromArrays \x3d (function (ks,vs){\nvar len \x3d ks.length;\nvar i \x3d (0);\nvar out \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\nwhile(true){\nif((i \x3c len)){\nif((vs.length \x3c\x3d i)){\nthrow (new Error([\x22No value supplied for key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((ks[i]))].join(\x27\x27)));\n} else {\nvar G__14063 \x3d (i + (1));\nvar G__14064 \x3d cljs.core._assoc_BANG_(out,(ks[i]),(vs[i]));\ni \x3d G__14063;\nout \x3d G__14064;\ncontinue;\n}\n} else {\nreturn cljs.core.persistent_BANG_(out);\n}\nbreak;\n}\n}));\n(cljs.core.PersistentHashMap.createWithCheck \x3d (function (arr){\nvar len \x3d arr.length;\nvar ret \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\nvar i_14065 \x3d (0);\nwhile(true){\nif((i_14065 \x3c len)){\ncljs.core._assoc_BANG_(ret,(arr[i_14065]),(arr[(i_14065 + (1))]));\n\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._count(ret),((i_14065 / (2)) + (1)))){\nthrow (new Error([\x22Duplicate key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arr[i_14065]))].join(\x27\x27)));\n} else {\nvar G__14066 \x3d (i_14065 + (2));\ni_14065 \x3d G__14066;\ncontinue;\n}\n} else {\n}\nbreak;\n}\n\nreturn cljs.core._persistent_BANG_(ret);\n}));\n(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n\n/**\n* @constructor\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ITransientMap}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ITransientCollection}\n * @implements {cljs.core.ITransientAssociative}\n * @implements {cljs.core.ILookup}\n*/\ncljs.core.TransientHashMap \x3d (function (edit,root,count,has_nil_QMARK_,nil_val){\nthis.edit \x3d edit;\nthis.root \x3d root;\nthis.count \x3d count;\nthis.has_nil_QMARK_ \x3d has_nil_QMARK_;\nthis.nil_val \x3d nil_val;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 259;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 56;\n});\n(cljs.core.TransientHashMap.prototype.conj_BANG_ \x3d (function (o){\nvar self__ \x3d this;\nvar tcoll \x3d this;\nif(self__.edit){\nif(cljs.core.map_entry_QMARK_(o)){\nreturn tcoll.assoc_BANG_((cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.key.call(null,o)),(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(o) : cljs.core.val.call(null,o)));\n} else {\nif(cljs.core.vector_QMARK_(o)){\nreturn tcoll.assoc_BANG_((o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1((0)) : o.call(null,(0))),(o.cljs$core$IFn$_invoke$arity$1 ? o.cljs$core$IFn$_invoke$arity$1((1)) : o.call(null,(1))));\n} else {\nvar es \x3d cljs.core.seq(o);\nvar tcoll__$1 \x3d tcoll;\nwhile(true){\nvar temp__5802__auto__ \x3d cljs.core.first(es);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar e \x3d temp__5802__auto__;\nvar G__14067 \x3d cljs.core.next(es);\nvar G__14068 \x3d tcoll__$1.assoc_BANG_((cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.key.call(null,e)),(cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(e) : cljs.core.val.call(null,e)));\nes \x3d G__14067;\ntcoll__$1 \x3d G__14068;\ncontinue;\n} else {\nreturn tcoll__$1;\n}\nbreak;\n}\n\n}\n}\n} else {\nthrow (new Error(\x22conj! after persistent\x22));\n}\n}));\n\n(cljs.core.TransientHashMap.prototype.assoc_BANG_ \x3d (function (k,v){\nvar self__ \x3d this;\nvar tcoll \x3d this;\nif(self__.edit){\nif((k \x3d\x3d null)){\nif((self__.nil_val \x3d\x3d\x3d v)){\n} else {\n(self__.nil_val \x3d v);\n}\n\nif(self__.has_nil_QMARK_){\n} else {\n(self__.count \x3d (self__.count + (1)));\n\n(self__.has_nil_QMARK_ \x3d true);\n}\n\nreturn tcoll;\n} else {\nvar added_leaf_QMARK_ \x3d (new cljs.core.Box(false));\nvar node \x3d (((self__.root \x3d\x3d null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);\nif((node \x3d\x3d\x3d self__.root)){\n} else {\n(self__.root \x3d node);\n}\n\nif(added_leaf_QMARK_.val){\n(self__.count \x3d (self__.count + (1)));\n} else {\n}\n\nreturn tcoll;\n}\n} else {\nthrow (new Error(\x22assoc! after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientHashMap.prototype.without_BANG_ \x3d (function (k){\nvar self__ \x3d this;\nvar tcoll \x3d this;\nif(self__.edit){\nif((k \x3d\x3d null)){\nif(self__.has_nil_QMARK_){\n(self__.has_nil_QMARK_ \x3d false);\n\n(self__.nil_val \x3d null);\n\n(self__.count \x3d (self__.count - (1)));\n\nreturn tcoll;\n} else {\nreturn tcoll;\n}\n} else {\nif((self__.root \x3d\x3d null)){\nreturn tcoll;\n} else {\nvar removed_leaf_QMARK_ \x3d (new cljs.core.Box(false));\nvar node \x3d self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);\nif((node \x3d\x3d\x3d self__.root)){\n} else {\n(self__.root \x3d node);\n}\n\nif(removed_leaf_QMARK_.val){\n(self__.count \x3d (self__.count - (1)));\n} else {\n}\n\nreturn tcoll;\n}\n}\n} else {\nthrow (new Error(\x22dissoc! after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientHashMap.prototype.persistent_BANG_ \x3d (function (){\nvar self__ \x3d this;\nvar tcoll \x3d this;\nif(self__.edit){\n(self__.edit \x3d null);\n\nreturn (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));\n} else {\nthrow (new Error(\x22persistent! called twice\x22));\n}\n}));\n\n(cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(self__.edit){\nreturn self__.count;\n} else {\nthrow (new Error(\x22count after persistent!\x22));\n}\n}));\n\n(cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (tcoll,k){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif((k \x3d\x3d null)){\nif(self__.has_nil_QMARK_){\nreturn self__.nil_val;\n} else {\nreturn null;\n}\n} else {\nif((self__.root \x3d\x3d null)){\nreturn null;\n} else {\nreturn self__.root.inode_lookup((0),cljs.core.hash(k),k);\n}\n}\n}));\n\n(cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (tcoll,k,not_found){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif((k \x3d\x3d null)){\nif(self__.has_nil_QMARK_){\nreturn self__.nil_val;\n} else {\nreturn not_found;\n}\n} else {\nif((self__.root \x3d\x3d null)){\nreturn not_found;\n} else {\nreturn self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);\n}\n}\n}));\n\n(cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 \x3d (function (tcoll,val){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nreturn tcoll__$1.conj_BANG_(val);\n}));\n\n(cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 \x3d (function (tcoll){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nreturn tcoll__$1.persistent_BANG_();\n}));\n\n(cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 \x3d (function (tcoll,key,val){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nreturn tcoll__$1.assoc_BANG_(key,val);\n}));\n\n(cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 \x3d (function (tcoll,key){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nreturn tcoll__$1.without_BANG_(key);\n}));\n\n(cljs.core.TransientHashMap.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10701 \x3d (arguments.length - (1));\nswitch (G__10701) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.TransientHashMap.prototype.apply \x3d (function (self__,args10700){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10700)));\n}));\n\n(cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (key){\nvar self__ \x3d this;\nvar tcoll \x3d this;\nreturn tcoll.cljs$core$ILookup$_lookup$arity$2(null,key);\n}));\n\n(cljs.core.TransientHashMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (key,not_found){\nvar self__ \x3d this;\nvar tcoll \x3d this;\nreturn tcoll.cljs$core$ILookup$_lookup$arity$3(null,key,not_found);\n}));\n\n(cljs.core.TransientHashMap.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22edit\x22,\x22edit\x22,-1302639,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22root\x22,\x22root\x22,1191874074,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22count\x22,\x22count\x22,-514511684,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22has-nil?\x22,\x22has-nil?\x22,825886722,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22nil-val\x22,\x22nil-val\x22,-513933559,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.TransientHashMap.cljs$lang$type \x3d true);\n\n(cljs.core.TransientHashMap.cljs$lang$ctorStr \x3d \x22cljs.core/TransientHashMap\x22);\n\n(cljs.core.TransientHashMap.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/TransientHashMap\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/TransientHashMap.\n */\ncljs.core.__GT_TransientHashMap \x3d (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){\nreturn (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));\n});\n\ncljs.core.tree_map_seq_push \x3d (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){\nvar t \x3d node;\nvar stack__$1 \x3d stack;\nwhile(true){\nif((!((t \x3d\x3d null)))){\nvar G__14074 \x3d ((ascending_QMARK_)?t.left:t.right);\nvar G__14075 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);\nt \x3d G__14074;\nstack__$1 \x3d G__14075;\ncontinue;\n} else {\nreturn stack__$1;\n}\nbreak;\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.PersistentTreeMapSeq \x3d (function (meta,stack,ascending_QMARK_,cnt,__hash){\nthis.meta \x3d meta;\nthis.stack \x3d stack;\nthis.ascending_QMARK_ \x3d ascending_QMARK_;\nthis.cnt \x3d cnt;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374990;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.PersistentTreeMapSeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.indexOf \x3d (function() {\nvar G__14076 \x3d null;\nvar G__14076__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__14076__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14076 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14076__1.call(this,x);\ncase 2:\nreturn G__14076__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14076.cljs$core$IFn$_invoke$arity$1 \x3d G__14076__1;\nG__14076.cljs$core$IFn$_invoke$arity$2 \x3d G__14076__2;\nreturn G__14076;\n})()\n);\n\n(cljs.core.PersistentTreeMapSeq.prototype.lastIndexOf \x3d (function() {\nvar G__14077 \x3d null;\nvar G__14077__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__14077__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14077 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14077__1.call(this,x);\ncase 2:\nreturn G__14077__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14077.cljs$core$IFn$_invoke$arity$1 \x3d G__14077__1;\nG__14077.cljs$core$IFn$_invoke$arity$2 \x3d G__14077__2;\nreturn G__14077;\n})()\n);\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar t \x3d cljs.core.first(self__.stack);\nvar next_stack \x3d cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);\nif((next_stack \x3d\x3d null)){\nreturn null;\n} else {\nreturn (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));\n}\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.cnt \x3c (0))){\nreturn (cljs.core.count(cljs.core.next(coll__$1)) + (1));\n} else {\nreturn self__.cnt;\n}\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn cljs.core.peek(self__.stack);\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar t \x3d cljs.core.first(self__.stack);\nvar next_stack \x3d cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);\nif((!((next_stack \x3d\x3d null)))){\nreturn (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn this$__$1;\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentTreeMapSeq(new_meta,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));\n}\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.PersistentTreeMapSeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22stack\x22,\x22stack\x22,847125597,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22ascending?\x22,\x22ascending?\x22,-1938452653,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null)], null)),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.PersistentTreeMapSeq.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentTreeMapSeq\x22);\n\n(cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentTreeMapSeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentTreeMapSeq.\n */\ncljs.core.__GT_PersistentTreeMapSeq \x3d (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){\nreturn (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));\n});\n\n(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\ncljs.core.create_tree_map_seq \x3d (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){\nreturn (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));\n});\n\ncljs.core.balance_left \x3d (function cljs$core$balance_left(key,val,ins,right){\nif((ins instanceof cljs.core.RedNode)){\nif((ins.left instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));\n} else {\nif((ins.right instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));\n} else {\nreturn (new cljs.core.BlackNode(key,val,ins,right,null));\n\n}\n}\n} else {\nreturn (new cljs.core.BlackNode(key,val,ins,right,null));\n}\n});\ncljs.core.balance_right \x3d (function cljs$core$balance_right(key,val,left,ins){\nif((ins instanceof cljs.core.RedNode)){\nif((ins.right instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));\n} else {\nif((ins.left instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));\n} else {\nreturn (new cljs.core.BlackNode(key,val,left,ins,null));\n\n}\n}\n} else {\nreturn (new cljs.core.BlackNode(key,val,left,ins,null));\n}\n});\ncljs.core.balance_left_del \x3d (function cljs$core$balance_left_del(key,val,del,right){\nif((del instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(key,val,del.blacken(),right,null));\n} else {\nif((right instanceof cljs.core.BlackNode)){\nreturn cljs.core.balance_right(key,val,del,right.redden());\n} else {\nif((((right instanceof cljs.core.RedNode)) \x26\x26 ((right.left instanceof cljs.core.BlackNode)))){\nreturn (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));\n} else {\nthrow (new Error(\x22red-black tree invariant violation\x22));\n\n}\n}\n}\n});\ncljs.core.balance_right_del \x3d (function cljs$core$balance_right_del(key,val,left,del){\nif((del instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(key,val,left,del.blacken(),null));\n} else {\nif((left instanceof cljs.core.BlackNode)){\nreturn cljs.core.balance_left(key,val,left.redden(),del);\n} else {\nif((((left instanceof cljs.core.RedNode)) \x26\x26 ((left.right instanceof cljs.core.BlackNode)))){\nreturn (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));\n} else {\nthrow (new Error(\x22red-black tree invariant violation\x22));\n\n}\n}\n}\n});\ncljs.core.tree_map_kv_reduce \x3d (function cljs$core$tree_map_kv_reduce(node,f,init){\nvar init__$1 \x3d (((!((node.left \x3d\x3d null))))?(function (){var G__10702 \x3d node.left;\nvar G__10703 \x3d f;\nvar G__10704 \x3d init;\nreturn (cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__10702,G__10703,G__10704) : cljs.core.tree_map_kv_reduce.call(null,G__10702,G__10703,G__10704));\n})():init);\nif(cljs.core.reduced_QMARK_(init__$1)){\nreturn init__$1;\n} else {\nvar init__$2 \x3d (function (){var G__10705 \x3d init__$1;\nvar G__10706 \x3d node.key;\nvar G__10707 \x3d node.val;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__10705,G__10706,G__10707) : f.call(null,G__10705,G__10706,G__10707));\n})();\nif(cljs.core.reduced_QMARK_(init__$2)){\nreturn init__$2;\n} else {\nif((!((node.right \x3d\x3d null)))){\nvar G__10708 \x3d node.right;\nvar G__10709 \x3d f;\nvar G__10710 \x3d init__$2;\nreturn (cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.tree_map_kv_reduce.cljs$core$IFn$_invoke$arity$3(G__10708,G__10709,G__10710) : cljs.core.tree_map_kv_reduce.call(null,G__10708,G__10709,G__10710));\n} else {\nreturn init__$2;\n}\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n * @implements {cljs.core.IVector}\n * @implements {cljs.core.IReversible}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IFind}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IStack}\n * @implements {cljs.core.IMapEntry}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.ILookup}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.BlackNode \x3d (function (key,val,left,right,__hash){\nthis.key \x3d key;\nthis.val \x3d val;\nthis.left \x3d left;\nthis.right \x3d right;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 166619935;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.BlackNode.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.BlackNode.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (node,k){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nvar G__10712 \x3d k;\nswitch (G__10712) {\ncase (0):\nreturn (new cljs.core.MapEntry((0),self__.key,null));\n\nbreak;\ncase (1):\nreturn (new cljs.core.MapEntry((1),self__.val,null));\n\nbreak;\ndefault:\nreturn null;\n\n}\n}));\n\n(cljs.core.BlackNode.prototype.lastIndexOf \x3d (function() {\nvar G__14085 \x3d null;\nvar G__14085__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__14085__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14085 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14085__1.call(this,x);\ncase 2:\nreturn G__14085__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14085.cljs$core$IFn$_invoke$arity$1 \x3d G__14085__1;\nG__14085.cljs$core$IFn$_invoke$arity$2 \x3d G__14085__2;\nreturn G__14085;\n})()\n);\n\n(cljs.core.BlackNode.prototype.indexOf \x3d (function() {\nvar G__14086 \x3d null;\nvar G__14086__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__14086__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14086 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14086__1.call(this,x);\ncase 2:\nreturn G__14086__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14086.cljs$core$IFn$_invoke$arity$1 \x3d G__14086__1;\nG__14086.cljs$core$IFn$_invoke$arity$2 \x3d G__14086__2;\nreturn G__14086;\n})()\n);\n\n(cljs.core.BlackNode.prototype.add_right \x3d (function (ins){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn ins.balance_right(node);\n}));\n\n(cljs.core.BlackNode.prototype.redden \x3d (function (){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));\n}));\n\n(cljs.core.BlackNode.prototype.blacken \x3d (function (){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn node;\n}));\n\n(cljs.core.BlackNode.prototype.add_left \x3d (function (ins){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn ins.balance_left(node);\n}));\n\n(cljs.core.BlackNode.prototype.replace \x3d (function (key__$1,val__$1,left__$1,right__$1){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));\n}));\n\n(cljs.core.BlackNode.prototype.balance_left \x3d (function (parent){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));\n}));\n\n(cljs.core.BlackNode.prototype.balance_right \x3d (function (parent){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));\n}));\n\n(cljs.core.BlackNode.prototype.remove_left \x3d (function (del){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);\n}));\n\n(cljs.core.BlackNode.prototype.kv_reduce \x3d (function (f,init){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn cljs.core.tree_map_kv_reduce(node,f,init);\n}));\n\n(cljs.core.BlackNode.prototype.remove_right \x3d (function (del){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (node,k){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,null);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (node,k,not_found){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (node,n){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nif((n \x3d\x3d\x3d (0))){\nreturn self__.key;\n} else {\nif((n \x3d\x3d\x3d (1))){\nreturn self__.val;\n} else {\nthrow (new Error(\x22Index out of bounds\x22));\n\n}\n}\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (node,n,not_found){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nif((n \x3d\x3d\x3d (0))){\nreturn self__.key;\n} else {\nif((n \x3d\x3d\x3d (1))){\nreturn self__.val;\n} else {\nreturn not_found;\n\n}\n}\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (node,n,v){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (2);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn self__.key;\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn self__.val;\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn self__.val;\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (new cljs.core.IndexedSeq([self__.val,self__.key],(0),null));\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (node,f){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (node,f,start){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (node,k,v){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (node,k){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (((k \x3d\x3d\x3d (0))) || ((k \x3d\x3d\x3d (1))));\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (new cljs.core.IndexedSeq([self__.key,self__.val],(0),null));\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (node,meta){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (node,o){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);\n}));\n\n(cljs.core.BlackNode.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10713 \x3d (arguments.length - (1));\nswitch (G__10713) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.BlackNode.prototype.apply \x3d (function (self__,args10711){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10711)));\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn node.cljs$core$IIndexed$_nth$arity$2(null,k);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\n}));\n\n(cljs.core.BlackNode.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22key\x22,\x22key\x22,124488940,null),new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),new cljs.core.Symbol(null,\x22left\x22,\x22left\x22,1241415590,null),new cljs.core.Symbol(null,\x22right\x22,\x22right\x22,1187949694,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.BlackNode.cljs$lang$type \x3d true);\n\n(cljs.core.BlackNode.cljs$lang$ctorStr \x3d \x22cljs.core/BlackNode\x22);\n\n(cljs.core.BlackNode.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/BlackNode\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/BlackNode.\n */\ncljs.core.__GT_BlackNode \x3d (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){\nreturn (new cljs.core.BlackNode(key,val,left,right,__hash));\n});\n\n(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n * @implements {cljs.core.IVector}\n * @implements {cljs.core.IReversible}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IFind}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IStack}\n * @implements {cljs.core.IMapEntry}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.ILookup}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.RedNode \x3d (function (key,val,left,right,__hash){\nthis.key \x3d key;\nthis.val \x3d val;\nthis.left \x3d left;\nthis.right \x3d right;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 166619935;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.RedNode.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.RedNode.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (node,k){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nvar G__10715 \x3d k;\nswitch (G__10715) {\ncase (0):\nreturn (new cljs.core.MapEntry((0),self__.key,null));\n\nbreak;\ncase (1):\nreturn (new cljs.core.MapEntry((1),self__.val,null));\n\nbreak;\ndefault:\nreturn null;\n\n}\n}));\n\n(cljs.core.RedNode.prototype.lastIndexOf \x3d (function() {\nvar G__14109 \x3d null;\nvar G__14109__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__14109__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14109 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14109__1.call(this,x);\ncase 2:\nreturn G__14109__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14109.cljs$core$IFn$_invoke$arity$1 \x3d G__14109__1;\nG__14109.cljs$core$IFn$_invoke$arity$2 \x3d G__14109__2;\nreturn G__14109;\n})()\n);\n\n(cljs.core.RedNode.prototype.indexOf \x3d (function() {\nvar G__14114 \x3d null;\nvar G__14114__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__14114__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14114 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14114__1.call(this,x);\ncase 2:\nreturn G__14114__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14114.cljs$core$IFn$_invoke$arity$1 \x3d G__14114__1;\nG__14114.cljs$core$IFn$_invoke$arity$2 \x3d G__14114__2;\nreturn G__14114;\n})()\n);\n\n(cljs.core.RedNode.prototype.add_right \x3d (function (ins){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));\n}));\n\n(cljs.core.RedNode.prototype.redden \x3d (function (){\nvar self__ \x3d this;\nvar node \x3d this;\nthrow (new Error(\x22red-black tree invariant violation\x22));\n}));\n\n(cljs.core.RedNode.prototype.blacken \x3d (function (){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));\n}));\n\n(cljs.core.RedNode.prototype.add_left \x3d (function (ins){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));\n}));\n\n(cljs.core.RedNode.prototype.replace \x3d (function (key__$1,val__$1,left__$1,right__$1){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));\n}));\n\n(cljs.core.RedNode.prototype.balance_left \x3d (function (parent){\nvar self__ \x3d this;\nvar node \x3d this;\nif((self__.left instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));\n} else {\nif((self__.right instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));\n} else {\nreturn (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));\n\n}\n}\n}));\n\n(cljs.core.RedNode.prototype.balance_right \x3d (function (parent){\nvar self__ \x3d this;\nvar node \x3d this;\nif((self__.right instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));\n} else {\nif((self__.left instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));\n} else {\nreturn (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));\n\n}\n}\n}));\n\n(cljs.core.RedNode.prototype.remove_left \x3d (function (del){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));\n}));\n\n(cljs.core.RedNode.prototype.kv_reduce \x3d (function (f,init){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn cljs.core.tree_map_kv_reduce(node,f,init);\n}));\n\n(cljs.core.RedNode.prototype.remove_right \x3d (function (del){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (node,k){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,null);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (node,k,not_found){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn node__$1.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (node,n){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nif((n \x3d\x3d\x3d (0))){\nreturn self__.key;\n} else {\nif((n \x3d\x3d\x3d (1))){\nreturn self__.val;\n} else {\nthrow (new Error(\x22Index out of bounds\x22));\n\n}\n}\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (node,n,not_found){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nif((n \x3d\x3d\x3d (0))){\nreturn self__.key;\n} else {\nif((n \x3d\x3d\x3d (1))){\nreturn self__.val;\n} else {\nreturn not_found;\n\n}\n}\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 \x3d (function (node,n,v){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (2);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn self__.key;\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn self__.val;\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn self__.val;\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (new cljs.core.IndexedSeq([self__.val,self__.key],(0),null));\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn null;\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (node,f){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (node,f,start){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (node,k,v){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (node,k){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (((k \x3d\x3d\x3d (0))) || ((k \x3d\x3d\x3d (1))));\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (node){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn (new cljs.core.IndexedSeq([self__.key,self__.val],(0),null));\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (node,meta){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn cljs.core._with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (node,o){\nvar self__ \x3d this;\nvar node__$1 \x3d this;\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);\n}));\n\n(cljs.core.RedNode.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10716 \x3d (arguments.length - (1));\nswitch (G__10716) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.RedNode.prototype.apply \x3d (function (self__,args10714){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10714)));\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn node.cljs$core$IIndexed$_nth$arity$2(null,k);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar node \x3d this;\nreturn node.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);\n}));\n\n(cljs.core.RedNode.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22key\x22,\x22key\x22,124488940,null),new cljs.core.Symbol(null,\x22val\x22,\x22val\x22,1769233139,null),new cljs.core.Symbol(null,\x22left\x22,\x22left\x22,1241415590,null),new cljs.core.Symbol(null,\x22right\x22,\x22right\x22,1187949694,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.RedNode.cljs$lang$type \x3d true);\n\n(cljs.core.RedNode.cljs$lang$ctorStr \x3d \x22cljs.core/RedNode\x22);\n\n(cljs.core.RedNode.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/RedNode\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/RedNode.\n */\ncljs.core.__GT_RedNode \x3d (function cljs$core$__GT_RedNode(key,val,left,right,__hash){\nreturn (new cljs.core.RedNode(key,val,left,right,__hash));\n});\n\n(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\ncljs.core.tree_map_add \x3d (function cljs$core$tree_map_add(comp,tree,k,v,found){\nif((tree \x3d\x3d null)){\nreturn (new cljs.core.RedNode(k,v,null,null,null));\n} else {\nvar c \x3d (function (){var G__10717 \x3d k;\nvar G__10718 \x3d tree.key;\nreturn (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10717,G__10718) : comp.call(null,G__10717,G__10718));\n})();\nif((c \x3d\x3d\x3d (0))){\n(found[(0)] \x3d tree);\n\nreturn null;\n} else {\nif((c \x3c (0))){\nvar ins \x3d (function (){var G__10719 \x3d comp;\nvar G__10720 \x3d tree.left;\nvar G__10721 \x3d k;\nvar G__10722 \x3d v;\nvar G__10723 \x3d found;\nreturn (cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__10719,G__10720,G__10721,G__10722,G__10723) : cljs.core.tree_map_add.call(null,G__10719,G__10720,G__10721,G__10722,G__10723));\n})();\nif((!((ins \x3d\x3d null)))){\nreturn tree.add_left(ins);\n} else {\nreturn null;\n}\n} else {\nvar ins \x3d (function (){var G__10724 \x3d comp;\nvar G__10725 \x3d tree.right;\nvar G__10726 \x3d k;\nvar G__10727 \x3d v;\nvar G__10728 \x3d found;\nreturn (cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5 ? cljs.core.tree_map_add.cljs$core$IFn$_invoke$arity$5(G__10724,G__10725,G__10726,G__10727,G__10728) : cljs.core.tree_map_add.call(null,G__10724,G__10725,G__10726,G__10727,G__10728));\n})();\nif((!((ins \x3d\x3d null)))){\nreturn tree.add_right(ins);\n} else {\nreturn null;\n}\n\n}\n}\n}\n});\ncljs.core.tree_map_append \x3d (function cljs$core$tree_map_append(left,right){\nif((left \x3d\x3d null)){\nreturn right;\n} else {\nif((right \x3d\x3d null)){\nreturn left;\n} else {\nif((left instanceof cljs.core.RedNode)){\nif((right instanceof cljs.core.RedNode)){\nvar app \x3d (function (){var G__10729 \x3d left.right;\nvar G__10730 \x3d right.left;\nreturn (cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__10729,G__10730) : cljs.core.tree_map_append.call(null,G__10729,G__10730));\n})();\nif((app instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));\n} else {\nreturn (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));\n}\n} else {\nreturn (new cljs.core.RedNode(left.key,left.val,left.left,(function (){var G__10731 \x3d left.right;\nvar G__10732 \x3d right;\nreturn (cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__10731,G__10732) : cljs.core.tree_map_append.call(null,G__10731,G__10732));\n})(),null));\n}\n} else {\nif((right instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(right.key,right.val,(function (){var G__10733 \x3d left;\nvar G__10734 \x3d right.left;\nreturn (cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__10733,G__10734) : cljs.core.tree_map_append.call(null,G__10733,G__10734));\n})(),right.right,null));\n} else {\nvar app \x3d (function (){var G__10735 \x3d left.right;\nvar G__10736 \x3d right.left;\nreturn (cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2 ? cljs.core.tree_map_append.cljs$core$IFn$_invoke$arity$2(G__10735,G__10736) : cljs.core.tree_map_append.call(null,G__10735,G__10736));\n})();\nif((app instanceof cljs.core.RedNode)){\nreturn (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));\n} else {\nreturn cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));\n}\n\n}\n}\n}\n}\n});\ncljs.core.tree_map_remove \x3d (function cljs$core$tree_map_remove(comp,tree,k,found){\nif((!((tree \x3d\x3d null)))){\nvar c \x3d (function (){var G__10737 \x3d k;\nvar G__10738 \x3d tree.key;\nreturn (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10737,G__10738) : comp.call(null,G__10737,G__10738));\n})();\nif((c \x3d\x3d\x3d (0))){\n(found[(0)] \x3d tree);\n\nreturn cljs.core.tree_map_append(tree.left,tree.right);\n} else {\nif((c \x3c (0))){\nvar del \x3d (function (){var G__10739 \x3d comp;\nvar G__10740 \x3d tree.left;\nvar G__10741 \x3d k;\nvar G__10742 \x3d found;\nreturn (cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__10739,G__10740,G__10741,G__10742) : cljs.core.tree_map_remove.call(null,G__10739,G__10740,G__10741,G__10742));\n})();\nif((((!((del \x3d\x3d null)))) || ((!(((found[(0)]) \x3d\x3d null)))))){\nif((tree.left instanceof cljs.core.BlackNode)){\nreturn cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);\n} else {\nreturn (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));\n}\n} else {\nreturn null;\n}\n} else {\nvar del \x3d (function (){var G__10743 \x3d comp;\nvar G__10744 \x3d tree.right;\nvar G__10745 \x3d k;\nvar G__10746 \x3d found;\nreturn (cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_remove.cljs$core$IFn$_invoke$arity$4(G__10743,G__10744,G__10745,G__10746) : cljs.core.tree_map_remove.call(null,G__10743,G__10744,G__10745,G__10746));\n})();\nif((((!((del \x3d\x3d null)))) || ((!(((found[(0)]) \x3d\x3d null)))))){\nif((tree.right instanceof cljs.core.BlackNode)){\nreturn cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);\n} else {\nreturn (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));\n}\n} else {\nreturn null;\n}\n\n}\n}\n} else {\nreturn null;\n}\n});\ncljs.core.tree_map_replace \x3d (function cljs$core$tree_map_replace(comp,tree,k,v){\nvar tk \x3d tree.key;\nvar c \x3d (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(k,tk) : comp.call(null,k,tk));\nif((c \x3d\x3d\x3d (0))){\nreturn tree.replace(tk,v,tree.left,tree.right);\n} else {\nif((c \x3c (0))){\nreturn tree.replace(tk,tree.val,(function (){var G__10747 \x3d comp;\nvar G__10748 \x3d tree.left;\nvar G__10749 \x3d k;\nvar G__10750 \x3d v;\nreturn (cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__10747,G__10748,G__10749,G__10750) : cljs.core.tree_map_replace.call(null,G__10747,G__10748,G__10749,G__10750));\n})(),tree.right);\n} else {\nreturn tree.replace(tk,tree.val,tree.left,(function (){var G__10751 \x3d comp;\nvar G__10752 \x3d tree.right;\nvar G__10753 \x3d k;\nvar G__10754 \x3d v;\nreturn (cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4 ? cljs.core.tree_map_replace.cljs$core$IFn$_invoke$arity$4(G__10751,G__10752,G__10753,G__10754) : cljs.core.tree_map_replace.call(null,G__10751,G__10752,G__10753,G__10754));\n})());\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IReversible}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IFind}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISorted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.core.PersistentTreeMap \x3d (function (comp,tree,cnt,meta,__hash){\nthis.comp \x3d comp;\nthis.tree \x3d tree;\nthis.cnt \x3d cnt;\nthis.meta \x3d meta;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 418776847;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\n});\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IFind$_find$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.entry_at(k);\n}));\n\n(cljs.core.PersistentTreeMap.prototype.forEach \x3d (function (f){\nvar self__ \x3d this;\nvar coll \x3d this;\nvar seq__10756 \x3d cljs.core.seq(coll);\nvar chunk__10757 \x3d null;\nvar count__10758 \x3d (0);\nvar i__10759 \x3d (0);\nwhile(true){\nif((i__10759 \x3c count__10758)){\nvar vec__10766 \x3d chunk__10757.cljs$core$IIndexed$_nth$arity$2(null,i__10759);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10766,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10766,(1),null);\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\n\n\nvar G__14117 \x3d seq__10756;\nvar G__14118 \x3d chunk__10757;\nvar G__14119 \x3d count__10758;\nvar G__14120 \x3d (i__10759 + (1));\nseq__10756 \x3d G__14117;\nchunk__10757 \x3d G__14118;\ncount__10758 \x3d G__14119;\ni__10759 \x3d G__14120;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__10756);\nif(temp__5804__auto__){\nvar seq__10756__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__10756__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__10756__$1);\nvar G__14125 \x3d cljs.core.chunk_rest(seq__10756__$1);\nvar G__14126 \x3d c__5568__auto__;\nvar G__14127 \x3d cljs.core.count(c__5568__auto__);\nvar G__14128 \x3d (0);\nseq__10756 \x3d G__14125;\nchunk__10757 \x3d G__14126;\ncount__10758 \x3d G__14127;\ni__10759 \x3d G__14128;\ncontinue;\n} else {\nvar vec__10769 \x3d cljs.core.first(seq__10756__$1);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10769,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10769,(1),null);\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\n\n\nvar G__14131 \x3d cljs.core.next(seq__10756__$1);\nvar G__14132 \x3d null;\nvar G__14133 \x3d (0);\nvar G__14134 \x3d (0);\nseq__10756 \x3d G__14131;\nchunk__10757 \x3d G__14132;\ncount__10758 \x3d G__14133;\ni__10759 \x3d G__14134;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.get \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n}));\n\n(cljs.core.PersistentTreeMap.prototype.entries \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_entries_iterator(cljs.core.seq(coll));\n}));\n\n(cljs.core.PersistentTreeMap.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.PersistentTreeMap.prototype.keys \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_iterator((cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.keys.call(null,coll)));\n}));\n\n(cljs.core.PersistentTreeMap.prototype.values \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_iterator((cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(coll) : cljs.core.vals.call(null,coll)));\n}));\n\n(cljs.core.PersistentTreeMap.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.PersistentTreeMap.prototype.entry_at \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nvar t \x3d self__.tree;\nwhile(true){\nif((!((t \x3d\x3d null)))){\nvar c \x3d (function (){var G__10772 \x3d k;\nvar G__10773 \x3d t.key;\nreturn (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10772,G__10773) : self__.comp.call(null,G__10772,G__10773));\n})();\nif((c \x3d\x3d\x3d (0))){\nreturn t;\n} else {\nif((c \x3c (0))){\nvar G__14138 \x3d t.left;\nt \x3d G__14138;\ncontinue;\n} else {\nvar G__14139 \x3d t.right;\nt \x3d G__14139;\ncontinue;\n\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.has \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.contains_QMARK_(coll,k);\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,k,null);\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,k,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar n \x3d coll__$1.entry_at(k);\nif((!((n \x3d\x3d null)))){\nreturn n.val;\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (coll,f,init){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((!((self__.tree \x3d\x3d null)))){\nreturn cljs.core.unreduced(cljs.core.tree_map_kv_reduce(self__.tree,f,init));\n} else {\nreturn init;\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.cnt;\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.cnt \x3e (0))){\nreturn cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_map(coll__$1,other);\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar found \x3d [null];\nvar t \x3d cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);\nif((t \x3d\x3d null)){\nif((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) \x3d\x3d null)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));\n}\n} else {\nreturn (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (coll,k,v){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar found \x3d [null];\nvar t \x3d cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);\nif((t \x3d\x3d null)){\nvar found_node \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));\n}\n} else {\nreturn (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (coll,k){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (!((coll__$1.entry_at(k) \x3d\x3d null)));\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.cnt \x3e (0))){\nreturn cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,new_meta,self__.__hash));\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,entry){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry)){\nreturn coll__$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry,(0)),cljs.core._nth(entry,(1)));\n} else {\nvar ret \x3d coll__$1;\nvar es \x3d cljs.core.seq(entry);\nwhile(true){\nif((es \x3d\x3d null)){\nreturn ret;\n} else {\nvar e \x3d cljs.core.first(es);\nif(cljs.core.vector_QMARK_(e)){\nvar G__14150 \x3d cljs.core._assoc(ret,cljs.core._nth(e,(0)),cljs.core._nth(e,(1)));\nvar G__14151 \x3d cljs.core.next(es);\nret \x3d G__14150;\nes \x3d G__14151;\ncontinue;\n} else {\nthrow (new Error(\x22conj on a map takes map entries or seqables of map entries\x22));\n}\n}\nbreak;\n}\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10774 \x3d (arguments.length - (1));\nswitch (G__10774) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.apply \x3d (function (self__,args10755){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10755)));\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 \x3d (function (coll,ascending_QMARK_){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.cnt \x3e (0))){\nreturn cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 \x3d (function (coll,k,ascending_QMARK_){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.cnt \x3e (0))){\nvar stack \x3d null;\nvar t \x3d self__.tree;\nwhile(true){\nif((!((t \x3d\x3d null)))){\nvar c \x3d (function (){var G__10777 \x3d k;\nvar G__10778 \x3d t.key;\nreturn (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__10777,G__10778) : self__.comp.call(null,G__10777,G__10778));\n})();\nif((c \x3d\x3d\x3d (0))){\nreturn (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));\n} else {\nif(cljs.core.truth_(ascending_QMARK_)){\nif((c \x3c (0))){\nvar G__14160 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);\nvar G__14161 \x3d t.left;\nstack \x3d G__14160;\nt \x3d G__14161;\ncontinue;\n} else {\nvar G__14162 \x3d stack;\nvar G__14163 \x3d t.right;\nstack \x3d G__14162;\nt \x3d G__14163;\ncontinue;\n}\n} else {\nif((c \x3e (0))){\nvar G__14165 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);\nvar G__14166 \x3d t.right;\nstack \x3d G__14165;\nt \x3d G__14166;\ncontinue;\n} else {\nvar G__14167 \x3d stack;\nvar G__14168 \x3d t.left;\nstack \x3d G__14167;\nt \x3d G__14168;\ncontinue;\n}\n\n}\n}\n} else {\nif((stack \x3d\x3d null)){\nreturn null;\n} else {\nreturn (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 \x3d (function (coll,entry){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(entry) : cljs.core.key.call(null,entry));\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.comp;\n}));\n\n(cljs.core.PersistentTreeMap.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22comp\x22,\x22comp\x22,-1462482139,null),new cljs.core.Symbol(null,\x22tree\x22,\x22tree\x22,1444219499,null),new cljs.core.Symbol(null,\x22cnt\x22,\x22cnt\x22,1924510325,null),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.PersistentTreeMap.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentTreeMap.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentTreeMap\x22);\n\n(cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentTreeMap\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentTreeMap.\n */\ncljs.core.__GT_PersistentTreeMap \x3d (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){\nreturn (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));\n});\n\n(cljs.core.PersistentTreeMap.EMPTY \x3d (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash)));\n(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n/**\n * keyval \x3d\x3e key val\n *   Returns a new hash map with supplied mappings.\n */\ncljs.core.hash_map \x3d (function cljs$core$hash_map(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14170 \x3d arguments.length;\nvar i__5770__auto___14171 \x3d (0);\nwhile(true){\nif((i__5770__auto___14171 \x3c len__5769__auto___14170)){\nargs__5775__auto__.push((arguments[i__5770__auto___14171]));\n\nvar G__14172 \x3d (i__5770__auto___14171 + (1));\ni__5770__auto___14171 \x3d G__14172;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.hash_map.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keyvals){\nvar in$ \x3d cljs.core.seq(keyvals);\nvar out \x3d cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);\nwhile(true){\nif(in$){\nvar in_SINGLEQUOTE_ \x3d cljs.core.next(in$);\nif((in_SINGLEQUOTE_ \x3d\x3d null)){\nthrow (new Error([\x22No value supplied for key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(in$))].join(\x27\x27)));\n} else {\nvar G__14173 \x3d cljs.core.next(in_SINGLEQUOTE_);\nvar G__14174 \x3d cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.first(in_SINGLEQUOTE_));\nin$ \x3d G__14173;\nout \x3d G__14174;\ncontinue;\n}\n} else {\nreturn cljs.core.persistent_BANG_(out);\n}\nbreak;\n}\n}));\n\n(cljs.core.hash_map.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.hash_map.cljs$lang$applyTo \x3d (function (seq10779){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10779));\n}));\n\n/**\n * keyval \x3d\x3e key val\n *   Returns a new array map with supplied mappings.\n */\ncljs.core.array_map \x3d (function cljs$core$array_map(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14176 \x3d arguments.length;\nvar i__5770__auto___14177 \x3d (0);\nwhile(true){\nif((i__5770__auto___14177 \x3c len__5769__auto___14176)){\nargs__5775__auto__.push((arguments[i__5770__auto___14177]));\n\nvar G__14178 \x3d (i__5770__auto___14177 + (1));\ni__5770__auto___14177 \x3d G__14178;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.array_map.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keyvals){\nvar arr \x3d (((((keyvals instanceof cljs.core.IndexedSeq)) \x26\x26 ((keyvals.i \x3d\x3d\x3d (0)))))?keyvals.arr:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(keyvals));\nif(cljs.core.odd_QMARK_(arr.length)){\nthrow (new Error([\x22No value supplied for key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(arr))].join(\x27\x27)));\n} else {\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc(arr);\n}\n}));\n\n(cljs.core.array_map.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.array_map.cljs$lang$applyTo \x3d (function (seq10780){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10780));\n}));\n\n/**\n * Builds a map from a seq as described in\n *   https://clojure.org/reference/special_forms#keyword-arguments\n */\ncljs.core.seq_to_map_for_destructuring \x3d (function cljs$core$seq_to_map_for_destructuring(s){\nif(cljs.core.next(s)){\nreturn cljs.core.PersistentArrayMap.createAsIfByAssoc(cljs.core.to_array(s));\n} else {\nif(cljs.core.seq(s)){\nreturn cljs.core.first(s);\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n}\n});\n/**\n * keyval \x3d\x3e key val\n *   Returns a new object map with supplied mappings.\n */\ncljs.core.obj_map \x3d (function cljs$core$obj_map(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14181 \x3d arguments.length;\nvar i__5770__auto___14182 \x3d (0);\nwhile(true){\nif((i__5770__auto___14182 \x3c len__5769__auto___14181)){\nargs__5775__auto__.push((arguments[i__5770__auto___14182]));\n\nvar G__14183 \x3d (i__5770__auto___14182 + (1));\ni__5770__auto___14182 \x3d G__14183;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.obj_map.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keyvals){\nvar ks \x3d [];\nvar obj \x3d ({});\nvar kvs \x3d cljs.core.seq(keyvals);\nwhile(true){\nif(kvs){\nks.push(cljs.core.first(kvs));\n\ncljs.core.goog$module$goog$object.set(obj,cljs.core.first(kvs),cljs.core.second(kvs));\n\nvar G__14186 \x3d cljs.core.nnext(kvs);\nkvs \x3d G__14186;\ncontinue;\n} else {\nreturn cljs.core.ObjMap.fromObject(ks,obj);\n}\nbreak;\n}\n}));\n\n(cljs.core.obj_map.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.obj_map.cljs$lang$applyTo \x3d (function (seq10781){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10781));\n}));\n\n/**\n * keyval \x3d\x3e key val\n *   Returns a new sorted map with supplied mappings.\n */\ncljs.core.sorted_map \x3d (function cljs$core$sorted_map(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14187 \x3d arguments.length;\nvar i__5770__auto___14188 \x3d (0);\nwhile(true){\nif((i__5770__auto___14188 \x3c len__5769__auto___14187)){\nargs__5775__auto__.push((arguments[i__5770__auto___14188]));\n\nvar G__14189 \x3d (i__5770__auto___14188 + (1));\ni__5770__auto___14188 \x3d G__14189;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.sorted_map.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keyvals){\nvar in$ \x3d cljs.core.seq(keyvals);\nvar out \x3d cljs.core.PersistentTreeMap.EMPTY;\nwhile(true){\nif(in$){\nvar G__14190 \x3d cljs.core.nnext(in$);\nvar G__14191 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));\nin$ \x3d G__14190;\nout \x3d G__14191;\ncontinue;\n} else {\nreturn out;\n}\nbreak;\n}\n}));\n\n(cljs.core.sorted_map.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.sorted_map.cljs$lang$applyTo \x3d (function (seq10784){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10784));\n}));\n\n/**\n * keyval \x3d\x3e key val\n *   Returns a new sorted map with supplied mappings, using the supplied comparator.\n */\ncljs.core.sorted_map_by \x3d (function cljs$core$sorted_map_by(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14192 \x3d arguments.length;\nvar i__5770__auto___14193 \x3d (0);\nwhile(true){\nif((i__5770__auto___14193 \x3c len__5769__auto___14192)){\nargs__5775__auto__.push((arguments[i__5770__auto___14193]));\n\nvar G__14194 \x3d (i__5770__auto___14193 + (1));\ni__5770__auto___14193 \x3d G__14194;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(cljs.core.sorted_map_by.cljs$core$IFn$_invoke$arity$variadic \x3d (function (comparator,keyvals){\nvar in$ \x3d cljs.core.seq(keyvals);\nvar out \x3d (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));\nwhile(true){\nif(in$){\nvar G__14196 \x3d cljs.core.nnext(in$);\nvar G__14197 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));\nin$ \x3d G__14196;\nout \x3d G__14197;\ncontinue;\n} else {\nreturn out;\n}\nbreak;\n}\n}));\n\n(cljs.core.sorted_map_by.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(cljs.core.sorted_map_by.cljs$lang$applyTo \x3d (function (seq10785){\nvar G__10786 \x3d cljs.core.first(seq10785);\nvar seq10785__$1 \x3d cljs.core.next(seq10785);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10786,seq10785__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.KeySeq \x3d (function (mseq,_meta){\nthis.mseq \x3d mseq;\nthis._meta \x3d _meta;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.KeySeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.KeySeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.KeySeq.prototype.indexOf \x3d (function() {\nvar G__14198 \x3d null;\nvar G__14198__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__14198__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14198 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14198__1.call(this,x);\ncase 2:\nreturn G__14198__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14198.cljs$core$IFn$_invoke$arity$1 \x3d G__14198__1;\nG__14198.cljs$core$IFn$_invoke$arity$2 \x3d G__14198__2;\nreturn G__14198;\n})()\n);\n\n(cljs.core.KeySeq.prototype.lastIndexOf \x3d (function() {\nvar G__14199 \x3d null;\nvar G__14199__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__14199__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14199 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14199__1.call(this,x);\ncase 2:\nreturn G__14199__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14199.cljs$core$IFn$_invoke$arity$1 \x3d G__14199__1;\nG__14199.cljs$core$IFn$_invoke$arity$2 \x3d G__14199__2;\nreturn G__14199;\n})()\n);\n\n(cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__._meta;\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar nseq \x3d (((((!((self__.mseq \x3d\x3d null))))?(((((self__.mseq.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.mseq.cljs$core$INext$))))?true:(((!self__.mseq.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false)):cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq)))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));\nif((nseq \x3d\x3d null)){\nreturn null;\n} else {\nreturn (new cljs.core.KeySeq(nseq,null));\n}\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.hash_ordered_coll(coll__$1);\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar me \x3d self__.mseq.cljs$core$ISeq$_first$arity$1(null);\nreturn me.cljs$core$IMapEntry$_key$arity$1(null);\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar nseq \x3d (((((!((self__.mseq \x3d\x3d null))))?(((((self__.mseq.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.mseq.cljs$core$INext$))))?true:(((!self__.mseq.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false)):cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq)))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));\nif((!((nseq \x3d\x3d null)))){\nreturn (new cljs.core.KeySeq(nseq,null));\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__._meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.KeySeq(self__.mseq,new_meta));\n}\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.KeySeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22mseq\x22,\x22mseq\x22,1602647196,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22not-native\x22,\x22not-native\x22,-236392494,null)], null)),new cljs.core.Symbol(null,\x22_meta\x22,\x22_meta\x22,-1716892533,null)], null);\n}));\n\n(cljs.core.KeySeq.cljs$lang$type \x3d true);\n\n(cljs.core.KeySeq.cljs$lang$ctorStr \x3d \x22cljs.core/KeySeq\x22);\n\n(cljs.core.KeySeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/KeySeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/KeySeq.\n */\ncljs.core.__GT_KeySeq \x3d (function cljs$core$__GT_KeySeq(mseq,_meta){\nreturn (new cljs.core.KeySeq(mseq,_meta));\n});\n\n(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n/**\n * Returns a sequence of the map\x27s keys, in the same order as (seq map).\n */\ncljs.core.keys \x3d (function cljs$core$keys(map){\nvar temp__5804__auto__ \x3d cljs.core.seq(map);\nif(temp__5804__auto__){\nvar mseq \x3d temp__5804__auto__;\nreturn (new cljs.core.KeySeq(mseq,null));\n} else {\nreturn null;\n}\n});\n/**\n * Returns the key of the map entry.\n */\ncljs.core.key \x3d (function cljs$core$key(map_entry){\nreturn cljs.core._key(map_entry);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.ValSeq \x3d (function (mseq,_meta){\nthis.mseq \x3d mseq;\nthis._meta \x3d _meta;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.ValSeq.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.ValSeq.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.ValSeq.prototype.indexOf \x3d (function() {\nvar G__14202 \x3d null;\nvar G__14202__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__14202__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14202 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14202__1.call(this,x);\ncase 2:\nreturn G__14202__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14202.cljs$core$IFn$_invoke$arity$1 \x3d G__14202__1;\nG__14202.cljs$core$IFn$_invoke$arity$2 \x3d G__14202__2;\nreturn G__14202;\n})()\n);\n\n(cljs.core.ValSeq.prototype.lastIndexOf \x3d (function() {\nvar G__14204 \x3d null;\nvar G__14204__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__14204__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start);\n});\nG__14204 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14204__1.call(this,x);\ncase 2:\nreturn G__14204__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14204.cljs$core$IFn$_invoke$arity$1 \x3d G__14204__1;\nG__14204.cljs$core$IFn$_invoke$arity$2 \x3d G__14204__2;\nreturn G__14204;\n})()\n);\n\n(cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__._meta;\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar nseq \x3d (((((!((self__.mseq \x3d\x3d null))))?(((((self__.mseq.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.mseq.cljs$core$INext$))))?true:(((!self__.mseq.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false)):cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq)))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));\nif((nseq \x3d\x3d null)){\nreturn null;\n} else {\nreturn (new cljs.core.ValSeq(nseq,null));\n}\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.hash_ordered_coll(coll__$1);\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.equiv_sequential(coll__$1,other);\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (coll,f){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (coll,f,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar me \x3d self__.mseq.cljs$core$ISeq$_first$arity$1(null);\nreturn me.cljs$core$IMapEntry$_val$arity$1(null);\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar nseq \x3d (((((!((self__.mseq \x3d\x3d null))))?(((((self__.mseq.cljs$lang$protocol_mask$partition0$ \x26 (128))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.mseq.cljs$core$INext$))))?true:(((!self__.mseq.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq):false)):cljs.core.native_satisfies_QMARK_(cljs.core.INext,self__.mseq)))?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));\nif((!((nseq \x3d\x3d null)))){\nreturn (new cljs.core.ValSeq(nseq,null));\n} else {\nreturn cljs.core.List.EMPTY;\n}\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1;\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__._meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.ValSeq(self__.mseq,new_meta));\n}\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.cons(o,coll__$1);\n}));\n\n(cljs.core.ValSeq.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22mseq\x22,\x22mseq\x22,1602647196,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22not-native\x22,\x22not-native\x22,-236392494,null)], null)),new cljs.core.Symbol(null,\x22_meta\x22,\x22_meta\x22,-1716892533,null)], null);\n}));\n\n(cljs.core.ValSeq.cljs$lang$type \x3d true);\n\n(cljs.core.ValSeq.cljs$lang$ctorStr \x3d \x22cljs.core/ValSeq\x22);\n\n(cljs.core.ValSeq.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ValSeq\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ValSeq.\n */\ncljs.core.__GT_ValSeq \x3d (function cljs$core$__GT_ValSeq(mseq,_meta){\nreturn (new cljs.core.ValSeq(mseq,_meta));\n});\n\n(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n/**\n * Returns a sequence of the map\x27s values, in the same order as (seq map).\n */\ncljs.core.vals \x3d (function cljs$core$vals(map){\nvar temp__5804__auto__ \x3d cljs.core.seq(map);\nif(temp__5804__auto__){\nvar mseq \x3d temp__5804__auto__;\nreturn (new cljs.core.ValSeq(mseq,null));\n} else {\nreturn null;\n}\n});\n/**\n * Returns the value in the map entry.\n */\ncljs.core.val \x3d (function cljs$core$val(map_entry){\nreturn cljs.core._val(map_entry);\n});\n/**\n * Returns a map that consists of the rest of the maps conj-ed onto\n *   the first.  If a key occurs in more than one map, the mapping from\n *   the latter (left-to-right) will be the mapping in the result.\n */\ncljs.core.merge \x3d (function cljs$core$merge(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14209 \x3d arguments.length;\nvar i__5770__auto___14210 \x3d (0);\nwhile(true){\nif((i__5770__auto___14210 \x3c len__5769__auto___14209)){\nargs__5775__auto__.push((arguments[i__5770__auto___14210]));\n\nvar G__14211 \x3d (i__5770__auto___14210 + (1));\ni__5770__auto___14210 \x3d G__14211;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic \x3d (function (maps){\nif(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__10791_SHARP_,p2__10792_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5045__auto__ \x3d p1__10791_SHARP_;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})(),p2__10792_SHARP_);\n}),maps);\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.merge.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.merge.cljs$lang$applyTo \x3d (function (seq10793){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10793));\n}));\n\n/**\n * Returns a map that consists of the rest of the maps conj-ed onto\n *   the first.  If a key occurs in more than one map, the mapping(s)\n *   from the latter (left-to-right) will be combined with the mapping in\n *   the result by calling (f val-in-result val-in-latter).\n */\ncljs.core.merge_with \x3d (function cljs$core$merge_with(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14212 \x3d arguments.length;\nvar i__5770__auto___14213 \x3d (0);\nwhile(true){\nif((i__5770__auto___14213 \x3c len__5769__auto___14212)){\nargs__5775__auto__.push((arguments[i__5770__auto___14213]));\n\nvar G__14214 \x3d (i__5770__auto___14213 + (1));\ni__5770__auto___14213 \x3d G__14214;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,maps){\nif(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){\nvar merge_entry \x3d (function (m,e){\nvar k \x3d cljs.core.key(e);\nvar v \x3d cljs.core.val(e);\nif(cljs.core.contains_QMARK_(m,k)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__10796 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nvar G__10797 \x3d v;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10796,G__10797) : f.call(null,G__10796,G__10797));\n})());\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);\n}\n});\nvar merge2 \x3d (function (m1,m2){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__5045__auto__ \x3d m1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n})(),cljs.core.seq(m2));\n});\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.merge_with.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(cljs.core.merge_with.cljs$lang$applyTo \x3d (function (seq10794){\nvar G__10795 \x3d cljs.core.first(seq10794);\nvar seq10794__$1 \x3d cljs.core.next(seq10794);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10795,seq10794__$1);\n}));\n\n/**\n * Returns a map containing only those entries in map whose key is in keys\n */\ncljs.core.select_keys \x3d (function cljs$core$select_keys(map,keyseq){\nvar ret \x3d cljs.core.PersistentArrayMap.EMPTY;\nvar keys \x3d cljs.core.seq(keyseq);\nwhile(true){\nif(keys){\nvar key \x3d cljs.core.first(keys);\nvar entry \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,new cljs.core.Keyword(\x22cljs.core\x22,\x22not-found\x22,\x22cljs.core/not-found\x22,-1572889185));\nvar G__14219 \x3d ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,new cljs.core.Keyword(\x22cljs.core\x22,\x22not-found\x22,\x22cljs.core/not-found\x22,-1572889185)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);\nvar G__14220 \x3d cljs.core.next(keys);\nret \x3d G__14219;\nkeys \x3d G__14220;\ncontinue;\n} else {\nreturn cljs.core._with_meta(ret,cljs.core.meta(map));\n}\nbreak;\n}\n});\n\n/**\n* @constructor\n*/\ncljs.core.HashSetIter \x3d (function (iter){\nthis.iter \x3d iter;\n});\n(cljs.core.HashSetIter.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn self__.iter.hasNext();\n}));\n\n(cljs.core.HashSetIter.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nif(self__.iter.hasNext()){\nreturn self__.iter.next().key;\n} else {\nthrow (new Error(\x22No such element\x22));\n}\n}));\n\n(cljs.core.HashSetIter.prototype.remove \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (new Error(\x22Unsupported operation\x22));\n}));\n\n(cljs.core.HashSetIter.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22iter\x22,\x22iter\x22,-1346195486,null)], null);\n}));\n\n(cljs.core.HashSetIter.cljs$lang$type \x3d true);\n\n(cljs.core.HashSetIter.cljs$lang$ctorStr \x3d \x22cljs.core/HashSetIter\x22);\n\n(cljs.core.HashSetIter.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/HashSetIter\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/HashSetIter.\n */\ncljs.core.__GT_HashSetIter \x3d (function cljs$core$__GT_HashSetIter(iter){\nreturn (new cljs.core.HashSetIter(iter));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IEditableCollection}\n * @implements {cljs.core.ISet}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.ILookup}\n*/\ncljs.core.PersistentHashSet \x3d (function (meta,hash_map,__hash){\nthis.meta \x3d meta;\nthis.hash_map \x3d hash_map;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 15077647;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139268;\n});\n(cljs.core.PersistentHashSet.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.PersistentHashSet.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.PersistentHashSet.prototype.keys \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_iterator(cljs.core.seq(coll));\n}));\n\n(cljs.core.PersistentHashSet.prototype.entries \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));\n}));\n\n(cljs.core.PersistentHashSet.prototype.values \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_iterator(cljs.core.seq(coll));\n}));\n\n(cljs.core.PersistentHashSet.prototype.has \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.contains_QMARK_(coll,k);\n}));\n\n(cljs.core.PersistentHashSet.prototype.forEach \x3d (function (f){\nvar self__ \x3d this;\nvar coll \x3d this;\nvar seq__10801 \x3d cljs.core.seq(coll);\nvar chunk__10802 \x3d null;\nvar count__10803 \x3d (0);\nvar i__10804 \x3d (0);\nwhile(true){\nif((i__10804 \x3c count__10803)){\nvar vec__10811 \x3d chunk__10802.cljs$core$IIndexed$_nth$arity$2(null,i__10804);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10811,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10811,(1),null);\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\n\n\nvar G__14225 \x3d seq__10801;\nvar G__14226 \x3d chunk__10802;\nvar G__14227 \x3d count__10803;\nvar G__14228 \x3d (i__10804 + (1));\nseq__10801 \x3d G__14225;\nchunk__10802 \x3d G__14226;\ncount__10803 \x3d G__14227;\ni__10804 \x3d G__14228;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__10801);\nif(temp__5804__auto__){\nvar seq__10801__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__10801__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__10801__$1);\nvar G__14229 \x3d cljs.core.chunk_rest(seq__10801__$1);\nvar G__14230 \x3d c__5568__auto__;\nvar G__14231 \x3d cljs.core.count(c__5568__auto__);\nvar G__14232 \x3d (0);\nseq__10801 \x3d G__14229;\nchunk__10802 \x3d G__14230;\ncount__10803 \x3d G__14231;\ni__10804 \x3d G__14232;\ncontinue;\n} else {\nvar vec__10814 \x3d cljs.core.first(seq__10801__$1);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10814,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10814,(1),null);\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\n\n\nvar G__14233 \x3d cljs.core.next(seq__10801__$1);\nvar G__14234 \x3d null;\nvar G__14235 \x3d (0);\nvar G__14236 \x3d (0);\nseq__10801 \x3d G__14233;\nchunk__10802 \x3d G__14234;\ncount__10803 \x3d G__14235;\ni__10804 \x3d G__14236;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,v){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null);\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,v,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar temp__5802__auto__ \x3d cljs.core._find(self__.hash_map,v);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar entry \x3d temp__5802__auto__;\nreturn cljs.core.key(entry);\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.HashSetIter(cljs.core._iterator(self__.hash_map)));\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._count(self__.hash_map);\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar and__5043__auto__ \x3d cljs.core.set_QMARK_(other);\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d (cljs.core.count(coll__$1) \x3d\x3d\x3d cljs.core.count(other));\nif(and__5043__auto____$1){\ntry{return cljs.core.reduce_kv((function (p1__10799_SHARP_,p2__10798_SHARP_){\nvar or__5045__auto__ \x3d cljs.core.contains_QMARK_(other,p2__10798_SHARP_);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.reduced(false);\n}\n}),true,self__.hash_map);\n}catch (e10817){if((e10817 instanceof Error)){\nvar ex \x3d e10817;\nreturn false;\n} else {\nthrow e10817;\n\n}\n}} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 \x3d (function (coll,v){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.keys(self__.hash_map);\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentHashSet(new_meta,self__.hash_map,self__.__hash));\n}\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));\n}));\n\n(cljs.core.PersistentHashSet.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10818 \x3d (arguments.length - (1));\nswitch (G__10818) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.PersistentHashSet.prototype.apply \x3d (function (self__,args10800){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10800)));\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n}));\n\n(cljs.core.PersistentHashSet.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22hash-map\x22,\x22hash-map\x22,-439030950,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.PersistentHashSet.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentHashSet.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentHashSet\x22);\n\n(cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentHashSet\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentHashSet.\n */\ncljs.core.__GT_PersistentHashSet \x3d (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){\nreturn (new cljs.core.PersistentHashSet(meta,hash_map,__hash));\n});\n\n(cljs.core.PersistentHashSet.EMPTY \x3d (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash)));\n(cljs.core.PersistentHashSet.fromArray \x3d (function (items,no_clone){\nvar len \x3d items.length;\nif((len \x3c\x3d cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){\nvar arr \x3d ((no_clone)?items:cljs.core.aclone(items));\nvar i \x3d (0);\nvar out \x3d cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);\nwhile(true){\nif((i \x3c len)){\nvar G__14244 \x3d (i + (1));\nvar G__14245 \x3d cljs.core._assoc_BANG_(out,(items[i]),null);\ni \x3d G__14244;\nout \x3d G__14245;\ncontinue;\n} else {\nreturn (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));\n}\nbreak;\n}\n} else {\nvar i \x3d (0);\nvar out \x3d cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);\nwhile(true){\nif((i \x3c len)){\nvar G__14246 \x3d (i + (1));\nvar G__14247 \x3d cljs.core._conj_BANG_(out,(items[i]));\ni \x3d G__14246;\nout \x3d G__14247;\ncontinue;\n} else {\nreturn cljs.core._persistent_BANG_(out);\n}\nbreak;\n}\n}\n}));\n(cljs.core.PersistentHashSet.createWithCheck \x3d (function (items){\nvar len \x3d items.length;\nvar t \x3d cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);\nvar n__5636__auto___14248 \x3d len;\nvar i_14249 \x3d (0);\nwhile(true){\nif((i_14249 \x3c n__5636__auto___14248)){\ncljs.core._conj_BANG_(t,(items[i_14249]));\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(t),(i_14249 + (1)))){\n} else {\nthrow (new Error([\x22Duplicate key: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((items[i_14249]))].join(\x27\x27)));\n}\n\nvar G__14250 \x3d (i_14249 + (1));\ni_14249 \x3d G__14250;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core._persistent_BANG_(t);\n}));\n(cljs.core.PersistentHashSet.createAsIfByAssoc \x3d (function (items){\nvar len \x3d items.length;\nvar t \x3d cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);\nvar n__5636__auto___14252 \x3d len;\nvar i_14253 \x3d (0);\nwhile(true){\nif((i_14253 \x3c n__5636__auto___14252)){\ncljs.core._conj_BANG_(t,(items[i_14253]));\n\nvar G__14254 \x3d (i_14253 + (1));\ni_14253 \x3d G__14254;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core._persistent_BANG_(t);\n}));\n(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n\n/**\n* @constructor\n * @implements {cljs.core.ITransientSet}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ITransientCollection}\n * @implements {cljs.core.ILookup}\n*/\ncljs.core.TransientHashSet \x3d (function (transient_map){\nthis.transient_map \x3d transient_map;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 136;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 259;\n});\n(cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 \x3d (function (tcoll,o){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\n(self__.transient_map \x3d cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null));\n\nreturn tcoll__$1;\n}));\n\n(cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 \x3d (function (tcoll){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nreturn (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));\n}));\n\n(cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 \x3d (function (tcoll,v){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\n(self__.transient_map \x3d cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v));\n\nreturn tcoll__$1;\n}));\n\n(cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (tcoll){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nreturn cljs.core.count(self__.transient_map);\n}));\n\n(cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (tcoll,v){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nreturn tcoll__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null);\n}));\n\n(cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (tcoll,v,not_found){\nvar self__ \x3d this;\nvar tcoll__$1 \x3d this;\nif((cljs.core._lookup(self__.transient_map,v,cljs.core.lookup_sentinel) \x3d\x3d\x3d cljs.core.lookup_sentinel)){\nreturn not_found;\n} else {\nreturn v;\n}\n}));\n\n(cljs.core.TransientHashSet.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10820 \x3d (arguments.length - (1));\nswitch (G__10820) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.TransientHashSet.prototype.apply \x3d (function (self__,args10819){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10819)));\n}));\n\n(cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar tcoll \x3d this;\nif((cljs.core._lookup(self__.transient_map,k,cljs.core.lookup_sentinel) \x3d\x3d\x3d cljs.core.lookup_sentinel)){\nreturn null;\n} else {\nreturn k;\n}\n}));\n\n(cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar tcoll \x3d this;\nif((cljs.core._lookup(self__.transient_map,k,cljs.core.lookup_sentinel) \x3d\x3d\x3d cljs.core.lookup_sentinel)){\nreturn not_found;\n} else {\nreturn k;\n}\n}));\n\n(cljs.core.TransientHashSet.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22transient-map\x22,\x22transient-map\x22,351764893,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.TransientHashSet.cljs$lang$type \x3d true);\n\n(cljs.core.TransientHashSet.cljs$lang$ctorStr \x3d \x22cljs.core/TransientHashSet\x22);\n\n(cljs.core.TransientHashSet.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/TransientHashSet\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/TransientHashSet.\n */\ncljs.core.__GT_TransientHashSet \x3d (function cljs$core$__GT_TransientHashSet(transient_map){\nreturn (new cljs.core.TransientHashSet(transient_map));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IReversible}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ISet}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISorted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.ILookup}\n*/\ncljs.core.PersistentTreeSet \x3d (function (meta,tree_map,__hash){\nthis.meta \x3d meta;\nthis.tree_map \x3d tree_map;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 417730831;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 8192;\n});\n(cljs.core.PersistentTreeSet.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.PersistentTreeSet.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.PersistentTreeSet.prototype.keys \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_iterator(cljs.core.seq(coll));\n}));\n\n(cljs.core.PersistentTreeSet.prototype.entries \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));\n}));\n\n(cljs.core.PersistentTreeSet.prototype.values \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.es6_iterator(cljs.core.seq(coll));\n}));\n\n(cljs.core.PersistentTreeSet.prototype.has \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.contains_QMARK_(coll,k);\n}));\n\n(cljs.core.PersistentTreeSet.prototype.forEach \x3d (function (f){\nvar self__ \x3d this;\nvar coll \x3d this;\nvar seq__10824 \x3d cljs.core.seq(coll);\nvar chunk__10825 \x3d null;\nvar count__10826 \x3d (0);\nvar i__10827 \x3d (0);\nwhile(true){\nif((i__10827 \x3c count__10826)){\nvar vec__10834 \x3d chunk__10825.cljs$core$IIndexed$_nth$arity$2(null,i__10827);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10834,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10834,(1),null);\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\n\n\nvar G__14258 \x3d seq__10824;\nvar G__14259 \x3d chunk__10825;\nvar G__14260 \x3d count__10826;\nvar G__14261 \x3d (i__10827 + (1));\nseq__10824 \x3d G__14258;\nchunk__10825 \x3d G__14259;\ncount__10826 \x3d G__14260;\ni__10827 \x3d G__14261;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__10824);\nif(temp__5804__auto__){\nvar seq__10824__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__10824__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__10824__$1);\nvar G__14262 \x3d cljs.core.chunk_rest(seq__10824__$1);\nvar G__14263 \x3d c__5568__auto__;\nvar G__14264 \x3d cljs.core.count(c__5568__auto__);\nvar G__14265 \x3d (0);\nseq__10824 \x3d G__14262;\nchunk__10825 \x3d G__14263;\ncount__10826 \x3d G__14264;\ni__10827 \x3d G__14265;\ncontinue;\n} else {\nvar vec__10837 \x3d cljs.core.first(seq__10824__$1);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10837,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10837,(1),null);\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(v,k) : f.call(null,v,k));\n\n\nvar G__14266 \x3d cljs.core.next(seq__10824__$1);\nvar G__14267 \x3d null;\nvar G__14268 \x3d (0);\nvar G__14269 \x3d (0);\nseq__10824 \x3d G__14266;\nchunk__10825 \x3d G__14267;\ncount__10826 \x3d G__14268;\ni__10827 \x3d G__14269;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (coll,v){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn coll__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null);\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (coll,v,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar n \x3d self__.tree_map.entry_at(v);\nif((!((n \x3d\x3d null)))){\nreturn n.key;\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.count(self__.tree_map);\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((cljs.core.count(self__.tree_map) \x3e (0))){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_unordered_coll(coll__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (coll,other){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nvar and__5043__auto__ \x3d cljs.core.set_QMARK_(other);\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d (cljs.core.count(coll__$1) \x3d\x3d\x3d cljs.core.count(other));\nif(and__5043__auto____$1){\ntry{return cljs.core.reduce_kv((function (p1__10822_SHARP_,p2__10821_SHARP_){\nvar or__5045__auto__ \x3d cljs.core.contains_QMARK_(other,p2__10821_SHARP_);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.reduced(false);\n}\n}),true,self__.tree_map);\n}catch (e10840){if((e10840 instanceof Error)){\nvar ex \x3d e10840;\nreturn false;\n} else {\nthrow e10840;\n\n}\n}} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 \x3d (function (coll,v){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.keys(self__.tree_map);\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (coll,new_meta){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn coll__$1;\n} else {\nreturn (new cljs.core.PersistentTreeSet(new_meta,self__.tree_map,self__.__hash));\n}\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (coll,o){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));\n}));\n\n(cljs.core.PersistentTreeSet.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__10841 \x3d (arguments.length - (1));\nswitch (G__10841) {\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.PersistentTreeSet.prototype.apply \x3d (function (self__,args10823){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args10823)));\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$2(null,k);\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,not_found){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 \x3d (function (coll,ascending_QMARK_){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 \x3d (function (coll,k,ascending_QMARK_){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 \x3d (function (coll,entry){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn entry;\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._comparator(self__.tree_map);\n}));\n\n(cljs.core.PersistentTreeSet.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22tree-map\x22,\x22tree-map\x22,1373073049,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.PersistentTreeSet.cljs$lang$type \x3d true);\n\n(cljs.core.PersistentTreeSet.cljs$lang$ctorStr \x3d \x22cljs.core/PersistentTreeSet\x22);\n\n(cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/PersistentTreeSet\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/PersistentTreeSet.\n */\ncljs.core.__GT_PersistentTreeSet \x3d (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){\nreturn (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));\n});\n\n(cljs.core.PersistentTreeSet.EMPTY \x3d (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash)));\n(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\ncljs.core.set_from_indexed_seq \x3d (function cljs$core$set_from_indexed_seq(iseq){\nvar arr \x3d iseq.arr;\nvar ret \x3d (function (){var a__5633__auto__ \x3d arr;\nvar l__5634__auto__ \x3d a__5633__auto__.length;\nvar i \x3d (0);\nvar res \x3d cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);\nwhile(true){\nif((i \x3c l__5634__auto__)){\nvar G__14281 \x3d (i + (1));\nvar G__14282 \x3d cljs.core._conj_BANG_(res,(arr[i]));\ni \x3d G__14281;\nres \x3d G__14282;\ncontinue;\n} else {\nreturn res;\n}\nbreak;\n}\n})();\nreturn ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);\n});\n/**\n * Returns a set of the distinct elements of coll.\n */\ncljs.core.set \x3d (function cljs$core$set(coll){\nif(cljs.core.set_QMARK_(coll)){\nreturn cljs.core.with_meta(coll,null);\n} else {\nvar in$ \x3d cljs.core.seq(coll);\nif((in$ \x3d\x3d null)){\nreturn cljs.core.PersistentHashSet.EMPTY;\n} else {\nif((((in$ instanceof cljs.core.IndexedSeq)) \x26\x26 ((in$.i \x3d\x3d\x3d (0))))){\nreturn cljs.core.PersistentHashSet.createAsIfByAssoc(in$.arr);\n} else {\nvar in$__$1 \x3d in$;\nvar out \x3d cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);\nwhile(true){\nif((!((in$__$1 \x3d\x3d null)))){\nvar G__14284 \x3d cljs.core.next(in$__$1);\nvar G__14285 \x3d cljs.core._conj_BANG_(out,cljs.core._first(in$__$1));\nin$__$1 \x3d G__14284;\nout \x3d G__14285;\ncontinue;\n} else {\nreturn cljs.core.persistent_BANG_(out);\n}\nbreak;\n}\n\n}\n}\n}\n});\n/**\n * Returns a new hash set with supplied keys.  Any equal keys are\n *   handled as if by repeated uses of conj.\n */\ncljs.core.hash_set \x3d (function cljs$core$hash_set(var_args){\nvar G__10844 \x3d arguments.length;\nswitch (G__10844) {\ncase 0:\nreturn cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___14287 \x3d arguments.length;\nvar i__5770__auto___14288 \x3d (0);\nwhile(true){\nif((i__5770__auto___14288 \x3c len__5769__auto___14287)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___14288]));\n\nvar G__14289 \x3d (i__5770__auto___14288 + (1));\ni__5770__auto___14288 \x3d G__14289;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((0)),(0),null));\nreturn cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.hash_set.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.PersistentHashSet.EMPTY;\n}));\n\n(cljs.core.hash_set.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keys){\nreturn cljs.core.set(keys);\n}));\n\n/** @this {Function} */\n(cljs.core.hash_set.cljs$lang$applyTo \x3d (function (seq10843){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10843));\n}));\n\n(cljs.core.hash_set.cljs$lang$maxFixedArity \x3d (0));\n\n/**\n * Returns a new sorted set with supplied keys.\n */\ncljs.core.sorted_set \x3d (function cljs$core$sorted_set(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14290 \x3d arguments.length;\nvar i__5770__auto___14291 \x3d (0);\nwhile(true){\nif((i__5770__auto___14291 \x3c len__5769__auto___14290)){\nargs__5775__auto__.push((arguments[i__5770__auto___14291]));\n\nvar G__14292 \x3d (i__5770__auto___14291 + (1));\ni__5770__auto___14291 \x3d G__14292;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.sorted_set.cljs$core$IFn$_invoke$arity$variadic \x3d (function (keys){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);\n}));\n\n(cljs.core.sorted_set.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.sorted_set.cljs$lang$applyTo \x3d (function (seq10845){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10845));\n}));\n\n/**\n * Returns a new sorted set with supplied keys, using the supplied comparator.\n */\ncljs.core.sorted_set_by \x3d (function cljs$core$sorted_set_by(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14293 \x3d arguments.length;\nvar i__5770__auto___14294 \x3d (0);\nwhile(true){\nif((i__5770__auto___14294 \x3c len__5769__auto___14293)){\nargs__5775__auto__.push((arguments[i__5770__auto___14294]));\n\nvar G__14295 \x3d (i__5770__auto___14294 + (1));\ni__5770__auto___14294 \x3d G__14295;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(cljs.core.sorted_set_by.cljs$core$IFn$_invoke$arity$variadic \x3d (function (comparator,keys){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);\n}));\n\n(cljs.core.sorted_set_by.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(cljs.core.sorted_set_by.cljs$lang$applyTo \x3d (function (seq10846){\nvar G__10847 \x3d cljs.core.first(seq10846);\nvar seq10846__$1 \x3d cljs.core.next(seq10846);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10847,seq10846__$1);\n}));\n\n/**\n * Given a map of replacement pairs and a vector/collection, returns a\n *   vector/seq with any elements \x3d a key in smap replaced with the\n *   corresponding val in smap.  Returns a transducer when no collection\n *   is provided.\n */\ncljs.core.replace \x3d (function cljs$core$replace(var_args){\nvar G__10851 \x3d arguments.length;\nswitch (G__10851) {\ncase 1:\nreturn cljs.core.replace.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.replace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.replace.cljs$core$IFn$_invoke$arity$1 \x3d (function (smap){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__10848_SHARP_){\nvar temp__5802__auto__ \x3d cljs.core.find(smap,p1__10848_SHARP_);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar e \x3d temp__5802__auto__;\nreturn cljs.core.val(e);\n} else {\nreturn p1__10848_SHARP_;\n}\n}));\n}));\n\n(cljs.core.replace.cljs$core$IFn$_invoke$arity$2 \x3d (function (smap,coll){\nif(cljs.core.vector_QMARK_(coll)){\nvar n \x3d cljs.core.count(coll);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,i){\nvar temp__5802__auto__ \x3d cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar e \x3d temp__5802__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));\n} else {\nreturn v;\n}\n}),coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));\n} else {\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__10849_SHARP_){\nvar temp__5802__auto__ \x3d cljs.core.find(smap,p1__10849_SHARP_);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar e \x3d temp__5802__auto__;\nreturn cljs.core.second(e);\n} else {\nreturn p1__10849_SHARP_;\n}\n}),coll);\n}\n}));\n\n(cljs.core.replace.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a lazy sequence of the elements of coll with duplicates removed.\n *   Returns a stateful transducer when no collection is provided.\n */\ncljs.core.distinct \x3d (function cljs$core$distinct(var_args){\nvar G__10853 \x3d arguments.length;\nswitch (G__10853) {\ncase 0:\nreturn cljs.core.distinct.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.distinct.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.distinct.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn (function (rf){\nvar seen \x3d cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);\nreturn (function() {\nvar G__14299 \x3d null;\nvar G__14299__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__14299__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__14299__2 \x3d (function (result,input){\nif(cljs.core.contains_QMARK_(cljs.core.deref(seen),input)){\nreturn result;\n} else {\nseen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));\n\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\n}\n});\nG__14299 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__14299__0.call(this);\ncase 1:\nreturn G__14299__1.call(this,result);\ncase 2:\nreturn G__14299__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14299.cljs$core$IFn$_invoke$arity$0 \x3d G__14299__0;\nG__14299.cljs$core$IFn$_invoke$arity$1 \x3d G__14299__1;\nG__14299.cljs$core$IFn$_invoke$arity$2 \x3d G__14299__2;\nreturn G__14299;\n})()\n});\n}));\n\n(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nvar step \x3d (function cljs$core$step(xs,seen){\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn (function (p__10854,seen__$1){\nwhile(true){\nvar vec__10855 \x3d p__10854;\nvar f \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10855,(0),null);\nvar xs__$1 \x3d vec__10855;\nvar temp__5804__auto__ \x3d cljs.core.seq(xs__$1);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nif(cljs.core.contains_QMARK_(seen__$1,f)){\nvar G__14305 \x3d cljs.core.rest(s);\nvar G__14306 \x3d seen__$1;\np__10854 \x3d G__14305;\nseen__$1 \x3d G__14306;\ncontinue;\n} else {\nreturn cljs.core.cons(f,cljs$core$step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n})(xs,seen);\n}),null,null));\n});\nreturn step(coll,cljs.core.PersistentHashSet.EMPTY);\n}));\n\n(cljs.core.distinct.cljs$lang$maxFixedArity \x3d 1);\n\n/**\n * Return a seq of all but the last item in coll, in linear time\n */\ncljs.core.butlast \x3d (function cljs$core$butlast(s){\nvar ret \x3d cljs.core.PersistentVector.EMPTY;\nvar s__$1 \x3d s;\nwhile(true){\nif(cljs.core.next(s__$1)){\nvar G__14308 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));\nvar G__14309 \x3d cljs.core.next(s__$1);\nret \x3d G__14308;\ns__$1 \x3d G__14309;\ncontinue;\n} else {\nreturn cljs.core.seq(ret);\n}\nbreak;\n}\n});\n/**\n * Returns the name String of a string, symbol or keyword.\n */\ncljs.core.name \x3d (function cljs$core$name(x){\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition1$ \x26 (4096))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$INamed$))))?true:false):false)){\nreturn x.cljs$core$INamed$_name$arity$1(null);\n} else {\nif(typeof x \x3d\x3d\x3d \x27string\x27){\nreturn x;\n} else {\nthrow (new Error([\x22Doesn\x27t support name: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x)].join(\x27\x27)));\n}\n}\n});\n/**\n * Returns a map with the keys mapped to the corresponding vals.\n */\ncljs.core.zipmap \x3d (function cljs$core$zipmap(keys,vals){\nvar map \x3d cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);\nvar ks \x3d cljs.core.seq(keys);\nvar vs \x3d cljs.core.seq(vals);\nwhile(true){\nif(((ks) \x26\x26 (vs))){\nvar G__14315 \x3d cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));\nvar G__14316 \x3d cljs.core.next(ks);\nvar G__14317 \x3d cljs.core.next(vs);\nmap \x3d G__14315;\nks \x3d G__14316;\nvs \x3d G__14317;\ncontinue;\n} else {\nreturn cljs.core.persistent_BANG_(map);\n}\nbreak;\n}\n});\n/**\n * Returns the x for which (k x), a number, is greatest.\n * \n *   If there are multiple such xs, the last one is returned.\n */\ncljs.core.max_key \x3d (function cljs$core$max_key(var_args){\nvar G__10866 \x3d arguments.length;\nswitch (G__10866) {\ncase 2:\nreturn cljs.core.max_key.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.max_key.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___14322 \x3d arguments.length;\nvar i__5770__auto___14323 \x3d (0);\nwhile(true){\nif((i__5770__auto___14323 \x3c len__5769__auto___14322)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___14323]));\n\nvar G__14325 \x3d (i__5770__auto___14323 + (1));\ni__5770__auto___14323 \x3d G__14325;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.max_key.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,x){\nreturn x;\n}));\n\n(cljs.core.max_key.cljs$core$IFn$_invoke$arity$3 \x3d (function (k,x,y){\nif(((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null,x)) \x3e (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null,y)))){\nreturn x;\n} else {\nreturn y;\n}\n}));\n\n(cljs.core.max_key.cljs$core$IFn$_invoke$arity$variadic \x3d (function (k,x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10859_SHARP_,p2__10860_SHARP_){\nreturn cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k,p1__10859_SHARP_,p2__10860_SHARP_);\n}),cljs.core.max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.max_key.cljs$lang$applyTo \x3d (function (seq10862){\nvar G__10863 \x3d cljs.core.first(seq10862);\nvar seq10862__$1 \x3d cljs.core.next(seq10862);\nvar G__10864 \x3d cljs.core.first(seq10862__$1);\nvar seq10862__$2 \x3d cljs.core.next(seq10862__$1);\nvar G__10865 \x3d cljs.core.first(seq10862__$2);\nvar seq10862__$3 \x3d cljs.core.next(seq10862__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10863,G__10864,G__10865,seq10862__$3);\n}));\n\n(cljs.core.max_key.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * Returns the x for which (k x), a number, is least.\n * \n *   If there are multiple such xs, the last one is returned.\n */\ncljs.core.min_key \x3d (function cljs$core$min_key(var_args){\nvar G__10874 \x3d arguments.length;\nswitch (G__10874) {\ncase 2:\nreturn cljs.core.min_key.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.min_key.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___14336 \x3d arguments.length;\nvar i__5770__auto___14338 \x3d (0);\nwhile(true){\nif((i__5770__auto___14338 \x3c len__5769__auto___14336)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___14338]));\n\nvar G__14339 \x3d (i__5770__auto___14338 + (1));\ni__5770__auto___14338 \x3d G__14339;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.min_key.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,x){\nreturn x;\n}));\n\n(cljs.core.min_key.cljs$core$IFn$_invoke$arity$3 \x3d (function (k,x,y){\nif(((k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(x) : k.call(null,x)) \x3c (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(y) : k.call(null,y)))){\nreturn x;\n} else {\nreturn y;\n}\n}));\n\n(cljs.core.min_key.cljs$core$IFn$_invoke$arity$variadic \x3d (function (k,x,y,more){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10867_SHARP_,p2__10868_SHARP_){\nreturn cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k,p1__10867_SHARP_,p2__10868_SHARP_);\n}),cljs.core.min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);\n}));\n\n/** @this {Function} */\n(cljs.core.min_key.cljs$lang$applyTo \x3d (function (seq10870){\nvar G__10871 \x3d cljs.core.first(seq10870);\nvar seq10870__$1 \x3d cljs.core.next(seq10870);\nvar G__10872 \x3d cljs.core.first(seq10870__$1);\nvar seq10870__$2 \x3d cljs.core.next(seq10870__$1);\nvar G__10873 \x3d cljs.core.first(seq10870__$2);\nvar seq10870__$3 \x3d cljs.core.next(seq10870__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10871,G__10872,G__10873,seq10870__$3);\n}));\n\n(cljs.core.min_key.cljs$lang$maxFixedArity \x3d (3));\n\n\n/**\n* @constructor\n*/\ncljs.core.ArrayList \x3d (function (arr){\nthis.arr \x3d arr;\n});\n(cljs.core.ArrayList.prototype.add \x3d (function (x){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn self__.arr.push(x);\n}));\n\n(cljs.core.ArrayList.prototype.size \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn self__.arr.length;\n}));\n\n(cljs.core.ArrayList.prototype.clear \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.arr \x3d []);\n}));\n\n(cljs.core.ArrayList.prototype.isEmpty \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.arr.length \x3d\x3d\x3d (0));\n}));\n\n(cljs.core.ArrayList.prototype.toArray \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn self__.arr;\n}));\n\n(cljs.core.ArrayList.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22arr\x22,\x22arr\x22,2115492975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.ArrayList.cljs$lang$type \x3d true);\n\n(cljs.core.ArrayList.cljs$lang$ctorStr \x3d \x22cljs.core/ArrayList\x22);\n\n(cljs.core.ArrayList.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/ArrayList\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/ArrayList.\n */\ncljs.core.__GT_ArrayList \x3d (function cljs$core$__GT_ArrayList(arr){\nreturn (new cljs.core.ArrayList(arr));\n});\n\ncljs.core.array_list \x3d (function cljs$core$array_list(){\nreturn (new cljs.core.ArrayList([]));\n});\n/**\n * Returns a lazy sequence of lists like partition, but may include\n *   partitions with fewer than n items at the end.  Returns a stateful\n *   transducer when no collection is provided.\n */\ncljs.core.partition_all \x3d (function cljs$core$partition_all(var_args){\nvar G__10876 \x3d arguments.length;\nswitch (G__10876) {\ncase 1:\nreturn cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.partition_all.cljs$core$IFn$_invoke$arity$1 \x3d (function (n){\nreturn (function (rf){\nvar a \x3d cljs.core.array_list();\nreturn (function() {\nvar G__14353 \x3d null;\nvar G__14353__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__14353__1 \x3d (function (result){\nvar result__$1 \x3d (cljs.core.truth_(a.isEmpty())?result:(function (){var v \x3d cljs.core.vec(a.toArray());\na.clear();\n\nreturn cljs.core.unreduced((rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v)));\n})());\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null,result__$1));\n});\nvar G__14353__2 \x3d (function (result,input){\na.add(input);\n\nif((n \x3d\x3d\x3d a.size())){\nvar v \x3d cljs.core.vec(a.toArray());\na.clear();\n\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v));\n} else {\nreturn result;\n}\n});\nG__14353 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__14353__0.call(this);\ncase 1:\nreturn G__14353__1.call(this,result);\ncase 2:\nreturn G__14353__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14353.cljs$core$IFn$_invoke$arity$0 \x3d G__14353__0;\nG__14353.cljs$core$IFn$_invoke$arity$1 \x3d G__14353__1;\nG__14353.cljs$core$IFn$_invoke$arity$2 \x3d G__14353__2;\nreturn G__14353;\n})()\n});\n}));\n\n(cljs.core.partition_all.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\nreturn cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);\n}));\n\n(cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3 \x3d (function (n,step,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nreturn cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs.core.partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.partition_all.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Returns a lazy sequence of successive items from coll while\n *   (pred item) returns logical true. pred must be free of side-effects.\n *   Returns a transducer when no collection is provided.\n */\ncljs.core.take_while \x3d (function cljs$core$take_while(var_args){\nvar G__10878 \x3d arguments.length;\nswitch (G__10878) {\ncase 1:\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.take_while.cljs$core$IFn$_invoke$arity$1 \x3d (function (pred){\nreturn (function (rf){\nreturn (function() {\nvar G__14359 \x3d null;\nvar G__14359__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__14359__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__14359__2 \x3d (function (result,input){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null,input)))){\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\n} else {\nreturn cljs.core.reduced(result);\n}\n});\nG__14359 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__14359__0.call(this);\ncase 1:\nreturn G__14359__1.call(this,result);\ncase 2:\nreturn G__14359__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14359.cljs$core$IFn$_invoke$arity$0 \x3d G__14359__0;\nG__14359.cljs$core$IFn$_invoke$arity$1 \x3d G__14359__1;\nG__14359.cljs$core$IFn$_invoke$arity$2 \x3d G__14359__2;\nreturn G__14359;\n})()\n});\n}));\n\n(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2 \x3d (function (pred,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nif(cljs.core.truth_((function (){var G__10879 \x3d cljs.core.first(s);\nreturn (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__10879) : pred.call(null,G__10879));\n})())){\nreturn cljs.core.cons(cljs.core.first(s),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.take_while.cljs$lang$maxFixedArity \x3d 2);\n\ncljs.core.mk_bound_fn \x3d (function cljs$core$mk_bound_fn(sc,test,key){\nreturn (function (e){\nvar comp \x3d cljs.core._comparator(sc);\nvar G__10880 \x3d (function (){var G__10882 \x3d cljs.core._entry_key(sc,e);\nvar G__10883 \x3d key;\nreturn (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__10882,G__10883) : comp.call(null,G__10882,G__10883));\n})();\nvar G__10881 \x3d (0);\nreturn (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__10880,G__10881) : test.call(null,G__10880,G__10881));\n});\n});\n/**\n * sc must be a sorted collection, test(s) one of \x3c, \x3c\x3d, \x3e or\n *   \x3e\x3d. Returns a seq of those entries with keys ek for\n *   which (test (.. sc comparator (compare ek key)) 0) is true\n */\ncljs.core.subseq \x3d (function cljs$core$subseq(var_args){\nvar G__10885 \x3d arguments.length;\nswitch (G__10885) {\ncase 3:\nreturn cljs.core.subseq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 5:\nreturn cljs.core.subseq.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.subseq.cljs$core$IFn$_invoke$arity$3 \x3d (function (sc,test,key){\nvar include \x3d cljs.core.mk_bound_fn(sc,test,key);\nif(cljs.core.truth_((function (){var fexpr__10886 \x3d cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._GT_,cljs.core._GT__EQ_]);\nreturn (fexpr__10886.cljs$core$IFn$_invoke$arity$1 ? fexpr__10886.cljs$core$IFn$_invoke$arity$1(test) : fexpr__10886.call(null,test));\n})())){\nvar temp__5804__auto__ \x3d cljs.core._sorted_seq_from(sc,key,true);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar vec__10887 \x3d temp__5804__auto__;\nvar e \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10887,(0),null);\nvar s \x3d vec__10887;\nif(cljs.core.truth_(include(e))){\nreturn s;\n} else {\nreturn cljs.core.next(s);\n}\n} else {\nreturn null;\n}\n} else {\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));\n}\n}));\n\n(cljs.core.subseq.cljs$core$IFn$_invoke$arity$5 \x3d (function (sc,start_test,start_key,end_test,end_key){\nvar temp__5804__auto__ \x3d cljs.core._sorted_seq_from(sc,start_key,true);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar vec__10890 \x3d temp__5804__auto__;\nvar e \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10890,(0),null);\nvar s \x3d vec__10890;\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key)(e))?s:cljs.core.next(s)));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.subseq.cljs$lang$maxFixedArity \x3d 5);\n\n/**\n * sc must be a sorted collection, test(s) one of \x3c, \x3c\x3d, \x3e or\n *   \x3e\x3d. Returns a reverse seq of those entries with keys ek for\n *   which (test (.. sc comparator (compare ek key)) 0) is true\n */\ncljs.core.rsubseq \x3d (function cljs$core$rsubseq(var_args){\nvar G__10894 \x3d arguments.length;\nswitch (G__10894) {\ncase 3:\nreturn cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 5:\nreturn cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$3 \x3d (function (sc,test,key){\nvar include \x3d cljs.core.mk_bound_fn(sc,test,key);\nif(cljs.core.truth_((function (){var fexpr__10895 \x3d cljs.core.PersistentHashSet.createAsIfByAssoc([cljs.core._LT_,cljs.core._LT__EQ_]);\nreturn (fexpr__10895.cljs$core$IFn$_invoke$arity$1 ? fexpr__10895.cljs$core$IFn$_invoke$arity$1(test) : fexpr__10895.call(null,test));\n})())){\nvar temp__5804__auto__ \x3d cljs.core._sorted_seq_from(sc,key,false);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar vec__10896 \x3d temp__5804__auto__;\nvar e \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10896,(0),null);\nvar s \x3d vec__10896;\nif(cljs.core.truth_(include(e))){\nreturn s;\n} else {\nreturn cljs.core.next(s);\n}\n} else {\nreturn null;\n}\n} else {\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));\n}\n}));\n\n(cljs.core.rsubseq.cljs$core$IFn$_invoke$arity$5 \x3d (function (sc,start_test,start_key,end_test,end_key){\nvar temp__5804__auto__ \x3d cljs.core._sorted_seq_from(sc,end_key,false);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar vec__10899 \x3d temp__5804__auto__;\nvar e \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10899,(0),null);\nvar s \x3d vec__10899;\nreturn cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key)(e))?s:cljs.core.next(s)));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.rsubseq.cljs$lang$maxFixedArity \x3d 5);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.IChunk}\n*/\ncljs.core.IntegerRangeChunk \x3d (function (start,step,count){\nthis.start \x3d start;\nthis.step \x3d step;\nthis.count \x3d count;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 82;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.count;\n}));\n\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn self__.start;\n}));\n\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (coll,i){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn (self__.start + (i * self__.step));\n}));\n\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (coll,i,not_found){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((((i \x3e\x3d (0))) \x26\x26 ((i \x3c self__.count)))){\nreturn (self__.start + (i * self__.step));\n} else {\nreturn not_found;\n}\n}));\n\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$IChunk$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.IntegerRangeChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 \x3d (function (coll){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nif((self__.count \x3c\x3d (1))){\nthrow (new Error(\x22-drop-first of empty chunk\x22));\n} else {\nreturn (new cljs.core.IntegerRangeChunk((self__.start + self__.step),self__.step,(self__.count - (1))));\n}\n}));\n\n(cljs.core.IntegerRangeChunk.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22start\x22,\x22start\x22,1285322546,null),new cljs.core.Symbol(null,\x22step\x22,\x22step\x22,-1365547645,null),new cljs.core.Symbol(null,\x22count\x22,\x22count\x22,-514511684,null)], null);\n}));\n\n(cljs.core.IntegerRangeChunk.cljs$lang$type \x3d true);\n\n(cljs.core.IntegerRangeChunk.cljs$lang$ctorStr \x3d \x22cljs.core/IntegerRangeChunk\x22);\n\n(cljs.core.IntegerRangeChunk.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/IntegerRangeChunk\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/IntegerRangeChunk.\n */\ncljs.core.__GT_IntegerRangeChunk \x3d (function cljs$core$__GT_IntegerRangeChunk(start,step,count){\nreturn (new cljs.core.IntegerRangeChunk(start,step,count));\n});\n\n\n/**\n* @constructor\n*/\ncljs.core.RangeIterator \x3d (function (i,end,step){\nthis.i \x3d i;\nthis.end \x3d end;\nthis.step \x3d step;\n});\n(cljs.core.RangeIterator.prototype.hasNext \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nif((self__.step \x3e (0))){\nreturn (self__.i \x3c self__.end);\n} else {\nreturn (self__.i \x3e self__.end);\n}\n}));\n\n(cljs.core.RangeIterator.prototype.next \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nvar ret \x3d self__.i;\n(self__.i \x3d (self__.i + self__.step));\n\nreturn ret;\n}));\n\n(cljs.core.RangeIterator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22i\x22,\x22i\x22,253690212,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null),new cljs.core.Symbol(null,\x22step\x22,\x22step\x22,-1365547645,null)], null);\n}));\n\n(cljs.core.RangeIterator.cljs$lang$type \x3d true);\n\n(cljs.core.RangeIterator.cljs$lang$ctorStr \x3d \x22cljs.core/RangeIterator\x22);\n\n(cljs.core.RangeIterator.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/RangeIterator\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/RangeIterator.\n */\ncljs.core.__GT_RangeIterator \x3d (function cljs$core$__GT_RangeIterator(i,end,step){\nreturn (new cljs.core.RangeIterator(i,end,step));\n});\n\n\n/**\n* @constructor\n * @implements {cljs.core.IIndexed}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IChunkedNext}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IChunkedSeq}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.IntegerRange \x3d (function (meta,start,end,step,chunk,chunk_next,__hash){\nthis.meta \x3d meta;\nthis.start \x3d start;\nthis.end \x3d end;\nthis.step \x3d step;\nthis.chunk \x3d chunk;\nthis.chunk_next \x3d chunk_next;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32375006;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 140800;\n});\n(cljs.core.IntegerRange.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.IntegerRange.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.IntegerRange.prototype.indexOf \x3d (function() {\nvar G__14370 \x3d null;\nvar G__14370__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__14370__2 \x3d (function (x,start__$1){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\n});\nG__14370 \x3d function(x,start__$1){\nswitch(arguments.length){\ncase 1:\nreturn G__14370__1.call(this,x);\ncase 2:\nreturn G__14370__2.call(this,x,start__$1);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14370.cljs$core$IFn$_invoke$arity$1 \x3d G__14370__1;\nG__14370.cljs$core$IFn$_invoke$arity$2 \x3d G__14370__2;\nreturn G__14370;\n})()\n);\n\n(cljs.core.IntegerRange.prototype.lastIndexOf \x3d (function() {\nvar G__14371 \x3d null;\nvar G__14371__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__14371__2 \x3d (function (x,start__$1){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\n});\nG__14371 \x3d function(x,start__$1){\nswitch(arguments.length){\ncase 1:\nreturn G__14371__1.call(this,x);\ncase 2:\nreturn G__14371__2.call(this,x,start__$1);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14371.cljs$core$IFn$_invoke$arity$1 \x3d G__14371__1;\nG__14371.cljs$core$IFn$_invoke$arity$2 \x3d G__14371__2;\nreturn G__14371;\n})()\n);\n\n(cljs.core.IntegerRange.prototype.forceChunk \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nif((self__.chunk \x3d\x3d null)){\nvar count \x3d coll.cljs$core$ICounted$_count$arity$1(null);\nif((count \x3e (32))){\n(self__.chunk_next \x3d (new cljs.core.IntegerRange(null,(self__.start + (self__.step * (32))),self__.end,self__.step,null,null,null)));\n\nreturn (self__.chunk \x3d (new cljs.core.IntegerRangeChunk(self__.start,self__.step,(32))));\n} else {\nreturn (self__.chunk \x3d (new cljs.core.IntegerRangeChunk(self__.start,self__.step,count)));\n}\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IIndexed$_nth$arity$2 \x3d (function (rng,n){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c rng__$1.cljs$core$ICounted$_count$arity$1(null))))){\nreturn (self__.start + (n * self__.step));\n} else {\nif(((((0) \x3c\x3d n)) \x26\x26 ((((self__.start \x3e self__.end)) \x26\x26 ((self__.step \x3d\x3d\x3d (0))))))){\nreturn self__.start;\n} else {\nthrow (new Error(\x22Index out of bounds\x22));\n}\n}\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IIndexed$_nth$arity$3 \x3d (function (rng,n,not_found){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nif(((((0) \x3c\x3d n)) \x26\x26 ((n \x3c rng__$1.cljs$core$ICounted$_count$arity$1(null))))){\nreturn (self__.start + (n * self__.step));\n} else {\nif(((((0) \x3c\x3d n)) \x26\x26 ((((self__.start \x3e self__.end)) \x26\x26 ((self__.step \x3d\x3d\x3d (0))))))){\nreturn self__.start;\n} else {\nreturn not_found;\n}\n}\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.IntegerRange(self__.meta,self__.start,self__.end,self__.step,self__.chunk,self__.chunk_next,self__.__hash));\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$INext$_next$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nif((self__.step \x3e (0))){\nif(((self__.start + self__.step) \x3c self__.end)){\nreturn (new cljs.core.IntegerRange(null,(self__.start + self__.step),self__.end,self__.step,null,null,null));\n} else {\nreturn null;\n}\n} else {\nif(((self__.start + self__.step) \x3e self__.end)){\nreturn (new cljs.core.IntegerRange(null,(self__.start + self__.step),self__.end,self__.step,null,null,null));\n} else {\nreturn null;\n}\n}\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn Math.ceil(((self__.end - self__.start) / self__.step));\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(rng__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (rng,other){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn cljs.core.equiv_sequential(rng__$1,other);\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (rng,f){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (rng,f,init){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nvar i \x3d self__.start;\nvar ret \x3d init;\nwhile(true){\nif((((self__.step \x3e (0)))?(i \x3c self__.end):(i \x3e self__.end))){\nvar ret__$1 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,i) : f.call(null,ret,i));\nif(cljs.core.reduced_QMARK_(ret__$1)){\nreturn cljs.core.deref(ret__$1);\n} else {\nvar G__14381 \x3d (i + self__.step);\nvar G__14382 \x3d ret__$1;\ni \x3d G__14381;\nret \x3d G__14382;\ncontinue;\n}\n} else {\nreturn ret;\n}\nbreak;\n}\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn self__.start;\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nvar s \x3d rng__$1.cljs$core$INext$_next$arity$1(null);\nif((s \x3d\x3d null)){\nreturn cljs.core.List.EMPTY;\n} else {\nreturn s;\n}\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn rng__$1;\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nrng__$1.forceChunk();\n\nreturn self__.chunk;\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nrng__$1.forceChunk();\n\nif((self__.chunk_next \x3d\x3d null)){\nreturn cljs.core.List.EMPTY;\n} else {\nreturn self__.chunk_next;\n}\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (rng,new_meta){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn rng__$1;\n} else {\nreturn (new cljs.core.IntegerRange(new_meta,self__.start,self__.end,self__.step,self__.chunk,self__.chunk_next,self__.__hash));\n}\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (rng,o){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn cljs.core.cons(o,rng__$1);\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));\n}));\n\n(cljs.core.IntegerRange.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22start\x22,\x22start\x22,1285322546,null),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null),new cljs.core.Symbol(null,\x22step\x22,\x22step\x22,-1365547645,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22chunk\x22,\x22chunk\x22,449371907,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22chunk-next\x22,\x22chunk-next\x22,-547810434,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.IntegerRange.cljs$lang$type \x3d true);\n\n(cljs.core.IntegerRange.cljs$lang$ctorStr \x3d \x22cljs.core/IntegerRange\x22);\n\n(cljs.core.IntegerRange.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/IntegerRange\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/IntegerRange.\n */\ncljs.core.__GT_IntegerRange \x3d (function cljs$core$__GT_IntegerRange(meta,start,end,step,chunk,chunk_next,__hash){\nreturn (new cljs.core.IntegerRange(meta,start,end,step,chunk,chunk_next,__hash));\n});\n\n(cljs.core.IntegerRange.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.IChunkedNext}\n * @implements {cljs.core.IEmptyableCollection}\n * @implements {cljs.core.ISeq}\n * @implements {cljs.core.INext}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IChunkedSeq}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.Range \x3d (function (meta,start,end,step,chunk,chunk_next,__hash){\nthis.meta \x3d meta;\nthis.start \x3d start;\nthis.end \x3d end;\nthis.step \x3d step;\nthis.chunk \x3d chunk;\nthis.chunk_next \x3d chunk_next;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 140800;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 32374988;\n});\n(cljs.core.Range.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.Range.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.Range.prototype.indexOf \x3d (function() {\nvar G__14391 \x3d null;\nvar G__14391__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,(0));\n});\nvar G__14391__2 \x3d (function (x,start__$1){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\n});\nG__14391 \x3d function(x,start__$1){\nswitch(arguments.length){\ncase 1:\nreturn G__14391__1.call(this,x);\ncase 2:\nreturn G__14391__2.call(this,x,start__$1);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14391.cljs$core$IFn$_invoke$arity$1 \x3d G__14391__1;\nG__14391.cljs$core$IFn$_invoke$arity$2 \x3d G__14391__2;\nreturn G__14391;\n})()\n);\n\n(cljs.core.Range.prototype.lastIndexOf \x3d (function() {\nvar G__14393 \x3d null;\nvar G__14393__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,cljs.core.count(coll));\n});\nvar G__14393__2 \x3d (function (x,start__$1){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll,x,start__$1);\n});\nG__14393 \x3d function(x,start__$1){\nswitch(arguments.length){\ncase 1:\nreturn G__14393__1.call(this,x);\ncase 2:\nreturn G__14393__2.call(this,x,start__$1);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14393.cljs$core$IFn$_invoke$arity$1 \x3d G__14393__1;\nG__14393.cljs$core$IFn$_invoke$arity$2 \x3d G__14393__2;\nreturn G__14393;\n})()\n);\n\n(cljs.core.Range.prototype.forceChunk \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nif((self__.chunk \x3d\x3d null)){\nvar arr \x3d [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\nvar val \x3d (function (){var n \x3d (0);\nvar val \x3d self__.start;\nwhile(true){\nif((n \x3c (32))){\n(arr[n] \x3d val);\n\nvar n__$1 \x3d (n + (1));\nvar val__$1 \x3d (val + self__.step);\nif((((self__.step \x3e (0)))?(val__$1 \x3c self__.end):(val__$1 \x3e self__.end))){\nvar G__14404 \x3d n__$1;\nvar G__14405 \x3d val__$1;\nn \x3d G__14404;\nval \x3d G__14405;\ncontinue;\n} else {\nreturn (self__.chunk \x3d cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr,(0),n__$1));\n}\n} else {\nreturn val;\n}\nbreak;\n}\n})();\nif((self__.chunk \x3d\x3d null)){\n(self__.chunk \x3d cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$3(arr,(0),(32)));\n\nif((((self__.step \x3e (0)))?(val \x3c self__.end):(val \x3e self__.end))){\nreturn (self__.chunk_next \x3d (new cljs.core.Range(null,val,self__.end,self__.step,null,null,null)));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));\n}));\n\n(cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn self__.meta;\n}));\n\n(cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.chunk,self__.chunk_next,self__.__hash));\n}));\n\n(cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nif((self__.step \x3e (0))){\nif(((self__.start + self__.step) \x3c self__.end)){\nreturn (new cljs.core.Range(null,(self__.start + self__.step),self__.end,self__.step,null,null,null));\n} else {\nreturn null;\n}\n} else {\nif(((self__.start + self__.step) \x3e self__.end)){\nreturn (new cljs.core.Range(null,(self__.start + self__.step),self__.end,self__.step,null,null,null));\n} else {\nreturn null;\n}\n}\n}));\n\n(cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d cljs.core.hash_ordered_coll(rng__$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (rng,other){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn cljs.core.equiv_sequential(rng__$1,other);\n}));\n\n(cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn cljs.core.List.EMPTY;\n}));\n\n(cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (rng,f){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,rng__$1);\n}));\n\n(cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (rng,f,init){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nvar i \x3d self__.start;\nvar ret \x3d init;\nwhile(true){\nif((((self__.step \x3e (0)))?(i \x3c self__.end):(i \x3e self__.end))){\nvar ret__$1 \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(ret,i) : f.call(null,ret,i));\nif(cljs.core.reduced_QMARK_(ret__$1)){\nreturn cljs.core.deref(ret__$1);\n} else {\nvar G__14411 \x3d (i + self__.step);\nvar G__14412 \x3d ret__$1;\ni \x3d G__14411;\nret \x3d G__14412;\ncontinue;\n}\n} else {\nreturn ret;\n}\nbreak;\n}\n}));\n\n(cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn self__.start;\n}));\n\n(cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nvar s \x3d rng__$1.cljs$core$INext$_next$arity$1(null);\nif((s \x3d\x3d null)){\nreturn cljs.core.List.EMPTY;\n} else {\nreturn s;\n}\n}));\n\n(cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn rng__$1;\n}));\n\n(cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nrng__$1.forceChunk();\n\nreturn self__.chunk;\n}));\n\n(cljs.core.Range.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nrng__$1.forceChunk();\n\nif((self__.chunk_next \x3d\x3d null)){\nreturn cljs.core.List.EMPTY;\n} else {\nreturn self__.chunk_next;\n}\n}));\n\n(cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (rng,new_meta){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nif((new_meta \x3d\x3d\x3d self__.meta)){\nreturn rng__$1;\n} else {\nreturn (new cljs.core.Range(new_meta,self__.start,self__.end,self__.step,self__.chunk,self__.chunk_next,self__.__hash));\n}\n}));\n\n(cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (rng,o){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn cljs.core.cons(o,rng__$1);\n}));\n\n(cljs.core.Range.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 \x3d (function (rng){\nvar self__ \x3d this;\nvar rng__$1 \x3d this;\nreturn cljs.core.seq(rng__$1.cljs$core$IChunkedSeq$_chunked_rest$arity$1(null));\n}));\n\n(cljs.core.Range.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22start\x22,\x22start\x22,1285322546,null),new cljs.core.Symbol(null,\x22end\x22,\x22end\x22,1372345569,null),new cljs.core.Symbol(null,\x22step\x22,\x22step\x22,-1365547645,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22chunk\x22,\x22chunk\x22,449371907,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22chunk-next\x22,\x22chunk-next\x22,-547810434,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Range.cljs$lang$type \x3d true);\n\n(cljs.core.Range.cljs$lang$ctorStr \x3d \x22cljs.core/Range\x22);\n\n(cljs.core.Range.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Range\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Range.\n */\ncljs.core.__GT_Range \x3d (function cljs$core$__GT_Range(meta,start,end,step,chunk,chunk_next,__hash){\nreturn (new cljs.core.Range(meta,start,end,step,chunk,chunk_next,__hash));\n});\n\n(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n/**\n * Returns a lazy seq of nums from start (inclusive) to end\n * (exclusive), by step, where start defaults to 0, step to 1,\n * and end to infinity.\n */\ncljs.core.range \x3d (function cljs$core$range(var_args){\nvar G__10903 \x3d arguments.length;\nswitch (G__10903) {\ncase 0:\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.range.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));\n}));\n\n(cljs.core.range.cljs$core$IFn$_invoke$arity$1 \x3d (function (end){\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$3((0),end,(1));\n}));\n\n(cljs.core.range.cljs$core$IFn$_invoke$arity$2 \x3d (function (start,end){\nreturn cljs.core.range.cljs$core$IFn$_invoke$arity$3(start,end,(1));\n}));\n\n(cljs.core.range.cljs$core$IFn$_invoke$arity$3 \x3d (function (start,end,step){\nif((step \x3e (0))){\nif((end \x3c\x3d start)){\nreturn cljs.core.List.EMPTY;\n} else {\nif(((cljs.core.integer_QMARK_(start)) \x26\x26 (((cljs.core.integer_QMARK_(end)) \x26\x26 (cljs.core.integer_QMARK_(step)))))){\nreturn (new cljs.core.IntegerRange(null,start,end,step,null,null,null));\n} else {\nreturn (new cljs.core.Range(null,start,end,step,null,null,null));\n}\n}\n} else {\nif((step \x3c (0))){\nif((end \x3e\x3d start)){\nreturn cljs.core.List.EMPTY;\n} else {\nif(((cljs.core.integer_QMARK_(start)) \x26\x26 (((cljs.core.integer_QMARK_(end)) \x26\x26 (cljs.core.integer_QMARK_(step)))))){\nreturn (new cljs.core.IntegerRange(null,start,end,step,null,null,null));\n} else {\nreturn (new cljs.core.Range(null,start,end,step,null,null,null));\n}\n}\n} else {\nif((end \x3d\x3d\x3d start)){\nreturn cljs.core.List.EMPTY;\n} else {\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(start);\n}\n\n}\n}\n}));\n\n(cljs.core.range.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Returns a lazy seq of every nth item in coll.  Returns a stateful\n *   transducer when no collection is provided.\n */\ncljs.core.take_nth \x3d (function cljs$core$take_nth(var_args){\nvar G__10905 \x3d arguments.length;\nswitch (G__10905) {\ncase 1:\nreturn cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.take_nth.cljs$core$IFn$_invoke$arity$1 \x3d (function (n){\nif(typeof n \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? n)\x22));\n}\n\nreturn (function (rf){\nvar ia \x3d cljs.core.volatile_BANG_((-1));\nreturn (function() {\nvar G__14417 \x3d null;\nvar G__14417__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__14417__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__14417__2 \x3d (function (result,input){\nvar i \x3d ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));\nif((cljs.core.rem(i,n) \x3d\x3d\x3d (0))){\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\n} else {\nreturn result;\n}\n});\nG__14417 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__14417__0.call(this);\ncase 1:\nreturn G__14417__1.call(this,result);\ncase 2:\nreturn G__14417__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14417.cljs$core$IFn$_invoke$arity$0 \x3d G__14417__0;\nG__14417.cljs$core$IFn$_invoke$arity$1 \x3d G__14417__1;\nG__14417.cljs$core$IFn$_invoke$arity$2 \x3d G__14417__2;\nreturn G__14417;\n})()\n});\n}));\n\n(cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\nif(typeof n \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? n)\x22));\n}\n\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nreturn cljs.core.cons(cljs.core.first(s),cljs.core.take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.take_nth.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a vector of [(take-while pred coll) (drop-while pred coll)]\n */\ncljs.core.split_with \x3d (function cljs$core$split_with(pred,coll){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);\n});\n/**\n * Applies f to each value in coll, splitting it each time f returns a\n * new value.  Returns a lazy seq of partitions.  Returns a stateful\n * transducer when no collection is provided.\n */\ncljs.core.partition_by \x3d (function cljs$core$partition_by(var_args){\nvar G__10908 \x3d arguments.length;\nswitch (G__10908) {\ncase 1:\nreturn cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.partition_by.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn (function (rf){\nvar a \x3d cljs.core.array_list();\nvar pa \x3d cljs.core.volatile_BANG_(new cljs.core.Keyword(\x22cljs.core\x22,\x22none\x22,\x22cljs.core/none\x22,926646439));\nreturn (function() {\nvar G__14423 \x3d null;\nvar G__14423__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__14423__1 \x3d (function (result){\nvar result__$1 \x3d (cljs.core.truth_(a.isEmpty())?result:(function (){var v \x3d cljs.core.vec(a.toArray());\na.clear();\n\nreturn cljs.core.unreduced((rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v)));\n})());\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result__$1) : rf.call(null,result__$1));\n});\nvar G__14423__2 \x3d (function (result,input){\nvar pval \x3d cljs.core.deref(pa);\nvar val \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(input) : f.call(null,input));\ncljs.core.vreset_BANG_(pa,val);\n\nif(((cljs.core.keyword_identical_QMARK_(pval,new cljs.core.Keyword(\x22cljs.core\x22,\x22none\x22,\x22cljs.core/none\x22,926646439))) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval)))){\na.add(input);\n\nreturn result;\n} else {\nvar v \x3d cljs.core.vec(a.toArray());\na.clear();\n\nvar ret \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,v) : rf.call(null,result,v));\nif(cljs.core.reduced_QMARK_(ret)){\n} else {\na.add(input);\n}\n\nreturn ret;\n}\n});\nG__14423 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__14423__0.call(this);\ncase 1:\nreturn G__14423__1.call(this,result);\ncase 2:\nreturn G__14423__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14423.cljs$core$IFn$_invoke$arity$0 \x3d G__14423__0;\nG__14423.cljs$core$IFn$_invoke$arity$1 \x3d G__14423__1;\nG__14423.cljs$core$IFn$_invoke$arity$2 \x3d G__14423__2;\nreturn G__14423;\n})()\n});\n}));\n\n(cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nvar fst \x3d cljs.core.first(s);\nvar fv \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(fst) : f.call(null,fst));\nvar run \x3d cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__10906_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(p1__10906_SHARP_) : f.call(null,p1__10906_SHARP_)));\n}),cljs.core.next(s)));\nreturn cljs.core.cons(run,cljs.core.partition_by.cljs$core$IFn$_invoke$arity$2(f,(new cljs.core.LazySeq(null,(function (){\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s);\n}),null,null))));\n} else {\nreturn null;\n}\n}),null,null));\n}));\n\n(cljs.core.partition_by.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a map from distinct items in coll to the number of times\n *   they appear.\n */\ncljs.core.frequencies \x3d (function cljs$core$frequencies(coll){\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));\n}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));\n});\n/**\n * Returns a lazy seq of the intermediate values of the reduction (as\n *   per reduce) of coll by f, starting with init.\n */\ncljs.core.reductions \x3d (function cljs$core$reductions(var_args){\nvar G__10910 \x3d arguments.length;\nswitch (G__10910) {\ncase 2:\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.reductions.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,coll){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5802__auto__ \x3d cljs.core.seq(coll);\nif(temp__5802__auto__){\nvar s \x3d temp__5802__auto__;\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));\n} else {\nreturn (new cljs.core.List(null,(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)),null,(1),null));\n}\n}),null,null));\n}));\n\n(cljs.core.reductions.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,init,coll){\nif(cljs.core.reduced_QMARK_(init)){\nreturn (new cljs.core.List(null,cljs.core.deref(init),null,(1),null));\n} else {\nreturn cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__10911 \x3d init;\nvar G__10912 \x3d cljs.core.first(s);\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10911,G__10912) : f.call(null,G__10911,G__10912));\n})(),cljs.core.rest(s));\n} else {\nreturn null;\n}\n}),null,null)));\n}\n}));\n\n(cljs.core.reductions.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Takes a set of functions and returns a fn that is the juxtaposition\n *   of those fns.  The returned fn takes a variable number of args, and\n *   returns a vector containing the result of applying each fn to the\n *   args (left-to-right).\n *   ((juxt a b c) x) \x3d\x3e [(a x) (b x) (c x)]\n */\ncljs.core.juxt \x3d (function cljs$core$juxt(var_args){\nvar G__10928 \x3d arguments.length;\nswitch (G__10928) {\ncase 1:\nreturn cljs.core.juxt.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.juxt.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.juxt.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___14453 \x3d arguments.length;\nvar i__5770__auto___14454 \x3d (0);\nwhile(true){\nif((i__5770__auto___14454 \x3c len__5769__auto___14453)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___14454]));\n\nvar G__14455 \x3d (i__5770__auto___14454 + (1));\ni__5770__auto___14454 \x3d G__14455;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.juxt.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn (function() {\nvar G__14456 \x3d null;\nvar G__14456__0 \x3d (function (){\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null))],null));\n});\nvar G__14456__1 \x3d (function (x){\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x))],null));\n});\nvar G__14456__2 \x3d (function (x,y){\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y))],null));\n});\nvar G__14456__3 \x3d (function (x,y,z){\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x,y,z) : f.call(null,x,y,z))],null));\n});\nvar G__14456__4 \x3d (function() { \nvar G__14457__delegate \x3d function (x,y,z,args){\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));\n};\nvar G__14457 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__14458__i \x3d 0, G__14458__a \x3d new Array(arguments.length -  3);\nwhile (G__14458__i \x3c G__14458__a.length) {G__14458__a[G__14458__i] \x3d arguments[G__14458__i + 3]; ++G__14458__i;}\n  args \x3d new cljs.core.IndexedSeq(G__14458__a,0,null);\n} \nreturn G__14457__delegate.call(this,x,y,z,args);};\nG__14457.cljs$lang$maxFixedArity \x3d 3;\nG__14457.cljs$lang$applyTo \x3d (function (arglist__14459){\nvar x \x3d cljs.core.first(arglist__14459);\narglist__14459 \x3d cljs.core.next(arglist__14459);\nvar y \x3d cljs.core.first(arglist__14459);\narglist__14459 \x3d cljs.core.next(arglist__14459);\nvar z \x3d cljs.core.first(arglist__14459);\nvar args \x3d cljs.core.rest(arglist__14459);\nreturn G__14457__delegate(x,y,z,args);\n});\nG__14457.cljs$core$IFn$_invoke$arity$variadic \x3d G__14457__delegate;\nreturn G__14457;\n})()\n;\nG__14456 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__14456__0.call(this);\ncase 1:\nreturn G__14456__1.call(this,x);\ncase 2:\nreturn G__14456__2.call(this,x,y);\ncase 3:\nreturn G__14456__3.call(this,x,y,z);\ndefault:\nvar G__14460 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__14461__i \x3d 0, G__14461__a \x3d new Array(arguments.length -  3);\nwhile (G__14461__i \x3c G__14461__a.length) {G__14461__a[G__14461__i] \x3d arguments[G__14461__i + 3]; ++G__14461__i;}\nG__14460 \x3d new cljs.core.IndexedSeq(G__14461__a,0,null);\n}\nreturn G__14456__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14460);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14456.cljs$lang$maxFixedArity \x3d 3;\nG__14456.cljs$lang$applyTo \x3d G__14456__4.cljs$lang$applyTo;\nG__14456.cljs$core$IFn$_invoke$arity$0 \x3d G__14456__0;\nG__14456.cljs$core$IFn$_invoke$arity$1 \x3d G__14456__1;\nG__14456.cljs$core$IFn$_invoke$arity$2 \x3d G__14456__2;\nG__14456.cljs$core$IFn$_invoke$arity$3 \x3d G__14456__3;\nG__14456.cljs$core$IFn$_invoke$arity$variadic \x3d G__14456__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__14456;\n})()\n}));\n\n(cljs.core.juxt.cljs$core$IFn$_invoke$arity$2 \x3d (function (f,g){\nreturn (function() {\nvar G__14463 \x3d null;\nvar G__14463__0 \x3d (function (){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)),(g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null))],null));\n});\nvar G__14463__1 \x3d (function (x){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x)),(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null,x))],null));\n});\nvar G__14463__2 \x3d (function (x,y){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y)),(g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x,y) : g.call(null,x,y))],null));\n});\nvar G__14463__3 \x3d (function (x,y,z){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x,y,z) : f.call(null,x,y,z)),(g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x,y,z) : g.call(null,x,y,z))],null));\n});\nvar G__14463__4 \x3d (function() { \nvar G__14465__delegate \x3d function (x,y,z,args){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));\n};\nvar G__14465 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__14467__i \x3d 0, G__14467__a \x3d new Array(arguments.length -  3);\nwhile (G__14467__i \x3c G__14467__a.length) {G__14467__a[G__14467__i] \x3d arguments[G__14467__i + 3]; ++G__14467__i;}\n  args \x3d new cljs.core.IndexedSeq(G__14467__a,0,null);\n} \nreturn G__14465__delegate.call(this,x,y,z,args);};\nG__14465.cljs$lang$maxFixedArity \x3d 3;\nG__14465.cljs$lang$applyTo \x3d (function (arglist__14468){\nvar x \x3d cljs.core.first(arglist__14468);\narglist__14468 \x3d cljs.core.next(arglist__14468);\nvar y \x3d cljs.core.first(arglist__14468);\narglist__14468 \x3d cljs.core.next(arglist__14468);\nvar z \x3d cljs.core.first(arglist__14468);\nvar args \x3d cljs.core.rest(arglist__14468);\nreturn G__14465__delegate(x,y,z,args);\n});\nG__14465.cljs$core$IFn$_invoke$arity$variadic \x3d G__14465__delegate;\nreturn G__14465;\n})()\n;\nG__14463 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__14463__0.call(this);\ncase 1:\nreturn G__14463__1.call(this,x);\ncase 2:\nreturn G__14463__2.call(this,x,y);\ncase 3:\nreturn G__14463__3.call(this,x,y,z);\ndefault:\nvar G__14470 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__14471__i \x3d 0, G__14471__a \x3d new Array(arguments.length -  3);\nwhile (G__14471__i \x3c G__14471__a.length) {G__14471__a[G__14471__i] \x3d arguments[G__14471__i + 3]; ++G__14471__i;}\nG__14470 \x3d new cljs.core.IndexedSeq(G__14471__a,0,null);\n}\nreturn G__14463__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14470);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14463.cljs$lang$maxFixedArity \x3d 3;\nG__14463.cljs$lang$applyTo \x3d G__14463__4.cljs$lang$applyTo;\nG__14463.cljs$core$IFn$_invoke$arity$0 \x3d G__14463__0;\nG__14463.cljs$core$IFn$_invoke$arity$1 \x3d G__14463__1;\nG__14463.cljs$core$IFn$_invoke$arity$2 \x3d G__14463__2;\nG__14463.cljs$core$IFn$_invoke$arity$3 \x3d G__14463__3;\nG__14463.cljs$core$IFn$_invoke$arity$variadic \x3d G__14463__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__14463;\n})()\n}));\n\n(cljs.core.juxt.cljs$core$IFn$_invoke$arity$3 \x3d (function (f,g,h){\nreturn (function() {\nvar G__14472 \x3d null;\nvar G__14472__0 \x3d (function (){\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null)),(g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null)),(h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null))],null));\n});\nvar G__14472__1 \x3d (function (x){\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x)),(g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(x) : g.call(null,x)),(h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(x) : h.call(null,x))],null));\n});\nvar G__14472__2 \x3d (function (x,y){\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(x,y) : f.call(null,x,y)),(g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(x,y) : g.call(null,x,y)),(h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(x,y) : h.call(null,x,y))],null));\n});\nvar G__14472__3 \x3d (function (x,y,z){\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(x,y,z) : f.call(null,x,y,z)),(g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(x,y,z) : g.call(null,x,y,z)),(h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(x,y,z) : h.call(null,x,y,z))],null));\n});\nvar G__14472__4 \x3d (function() { \nvar G__14478__delegate \x3d function (x,y,z,args){\nreturn (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));\n};\nvar G__14478 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__14479__i \x3d 0, G__14479__a \x3d new Array(arguments.length -  3);\nwhile (G__14479__i \x3c G__14479__a.length) {G__14479__a[G__14479__i] \x3d arguments[G__14479__i + 3]; ++G__14479__i;}\n  args \x3d new cljs.core.IndexedSeq(G__14479__a,0,null);\n} \nreturn G__14478__delegate.call(this,x,y,z,args);};\nG__14478.cljs$lang$maxFixedArity \x3d 3;\nG__14478.cljs$lang$applyTo \x3d (function (arglist__14480){\nvar x \x3d cljs.core.first(arglist__14480);\narglist__14480 \x3d cljs.core.next(arglist__14480);\nvar y \x3d cljs.core.first(arglist__14480);\narglist__14480 \x3d cljs.core.next(arglist__14480);\nvar z \x3d cljs.core.first(arglist__14480);\nvar args \x3d cljs.core.rest(arglist__14480);\nreturn G__14478__delegate(x,y,z,args);\n});\nG__14478.cljs$core$IFn$_invoke$arity$variadic \x3d G__14478__delegate;\nreturn G__14478;\n})()\n;\nG__14472 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__14472__0.call(this);\ncase 1:\nreturn G__14472__1.call(this,x);\ncase 2:\nreturn G__14472__2.call(this,x,y);\ncase 3:\nreturn G__14472__3.call(this,x,y,z);\ndefault:\nvar G__14483 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__14484__i \x3d 0, G__14484__a \x3d new Array(arguments.length -  3);\nwhile (G__14484__i \x3c G__14484__a.length) {G__14484__a[G__14484__i] \x3d arguments[G__14484__i + 3]; ++G__14484__i;}\nG__14483 \x3d new cljs.core.IndexedSeq(G__14484__a,0,null);\n}\nreturn G__14472__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14483);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14472.cljs$lang$maxFixedArity \x3d 3;\nG__14472.cljs$lang$applyTo \x3d G__14472__4.cljs$lang$applyTo;\nG__14472.cljs$core$IFn$_invoke$arity$0 \x3d G__14472__0;\nG__14472.cljs$core$IFn$_invoke$arity$1 \x3d G__14472__1;\nG__14472.cljs$core$IFn$_invoke$arity$2 \x3d G__14472__2;\nG__14472.cljs$core$IFn$_invoke$arity$3 \x3d G__14472__3;\nG__14472.cljs$core$IFn$_invoke$arity$variadic \x3d G__14472__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__14472;\n})()\n}));\n\n(cljs.core.juxt.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,g,h,fs){\nvar fs__$1 \x3d cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);\nreturn (function() {\nvar G__14485 \x3d null;\nvar G__14485__0 \x3d (function (){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10913_SHARP_,p2__10914_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10913_SHARP_,(p2__10914_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__10914_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__10914_SHARP_.call(null)));\n}),cljs.core.PersistentVector.EMPTY,fs__$1);\n});\nvar G__14485__1 \x3d (function (x){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10915_SHARP_,p2__10916_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10915_SHARP_,(p2__10916_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__10916_SHARP_.cljs$core$IFn$_invoke$arity$1(x) : p2__10916_SHARP_.call(null,x)));\n}),cljs.core.PersistentVector.EMPTY,fs__$1);\n});\nvar G__14485__2 \x3d (function (x,y){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10917_SHARP_,p2__10918_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10917_SHARP_,(p2__10918_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__10918_SHARP_.cljs$core$IFn$_invoke$arity$2(x,y) : p2__10918_SHARP_.call(null,x,y)));\n}),cljs.core.PersistentVector.EMPTY,fs__$1);\n});\nvar G__14485__3 \x3d (function (x,y,z){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10919_SHARP_,p2__10920_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10919_SHARP_,(p2__10920_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__10920_SHARP_.cljs$core$IFn$_invoke$arity$3(x,y,z) : p2__10920_SHARP_.call(null,x,y,z)));\n}),cljs.core.PersistentVector.EMPTY,fs__$1);\n});\nvar G__14485__4 \x3d (function() { \nvar G__14490__delegate \x3d function (x,y,z,args){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__10921_SHARP_,p2__10922_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__10921_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__10922_SHARP_,x,y,z,args));\n}),cljs.core.PersistentVector.EMPTY,fs__$1);\n};\nvar G__14490 \x3d function (x,y,z,var_args){\nvar args \x3d null;\nif (arguments.length \x3e 3) {\nvar G__14491__i \x3d 0, G__14491__a \x3d new Array(arguments.length -  3);\nwhile (G__14491__i \x3c G__14491__a.length) {G__14491__a[G__14491__i] \x3d arguments[G__14491__i + 3]; ++G__14491__i;}\n  args \x3d new cljs.core.IndexedSeq(G__14491__a,0,null);\n} \nreturn G__14490__delegate.call(this,x,y,z,args);};\nG__14490.cljs$lang$maxFixedArity \x3d 3;\nG__14490.cljs$lang$applyTo \x3d (function (arglist__14492){\nvar x \x3d cljs.core.first(arglist__14492);\narglist__14492 \x3d cljs.core.next(arglist__14492);\nvar y \x3d cljs.core.first(arglist__14492);\narglist__14492 \x3d cljs.core.next(arglist__14492);\nvar z \x3d cljs.core.first(arglist__14492);\nvar args \x3d cljs.core.rest(arglist__14492);\nreturn G__14490__delegate(x,y,z,args);\n});\nG__14490.cljs$core$IFn$_invoke$arity$variadic \x3d G__14490__delegate;\nreturn G__14490;\n})()\n;\nG__14485 \x3d function(x,y,z,var_args){\nvar args \x3d var_args;\nswitch(arguments.length){\ncase 0:\nreturn G__14485__0.call(this);\ncase 1:\nreturn G__14485__1.call(this,x);\ncase 2:\nreturn G__14485__2.call(this,x,y);\ncase 3:\nreturn G__14485__3.call(this,x,y,z);\ndefault:\nvar G__14494 \x3d null;\nif (arguments.length \x3e 3) {\nvar G__14495__i \x3d 0, G__14495__a \x3d new Array(arguments.length -  3);\nwhile (G__14495__i \x3c G__14495__a.length) {G__14495__a[G__14495__i] \x3d arguments[G__14495__i + 3]; ++G__14495__i;}\nG__14494 \x3d new cljs.core.IndexedSeq(G__14495__a,0,null);\n}\nreturn G__14485__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__14494);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14485.cljs$lang$maxFixedArity \x3d 3;\nG__14485.cljs$lang$applyTo \x3d G__14485__4.cljs$lang$applyTo;\nG__14485.cljs$core$IFn$_invoke$arity$0 \x3d G__14485__0;\nG__14485.cljs$core$IFn$_invoke$arity$1 \x3d G__14485__1;\nG__14485.cljs$core$IFn$_invoke$arity$2 \x3d G__14485__2;\nG__14485.cljs$core$IFn$_invoke$arity$3 \x3d G__14485__3;\nG__14485.cljs$core$IFn$_invoke$arity$variadic \x3d G__14485__4.cljs$core$IFn$_invoke$arity$variadic;\nreturn G__14485;\n})()\n}));\n\n/** @this {Function} */\n(cljs.core.juxt.cljs$lang$applyTo \x3d (function (seq10924){\nvar G__10925 \x3d cljs.core.first(seq10924);\nvar seq10924__$1 \x3d cljs.core.next(seq10924);\nvar G__10926 \x3d cljs.core.first(seq10924__$1);\nvar seq10924__$2 \x3d cljs.core.next(seq10924__$1);\nvar G__10927 \x3d cljs.core.first(seq10924__$2);\nvar seq10924__$3 \x3d cljs.core.next(seq10924__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10925,G__10926,G__10927,seq10924__$3);\n}));\n\n(cljs.core.juxt.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * When lazy sequences are produced via functions that have side\n *   effects, any effects other than those needed to produce the first\n *   element in the seq do not occur until the seq is consumed. dorun can\n *   be used to force any effects. Walks through the successive nexts of\n *   the seq, does not retain the head and returns nil.\n */\ncljs.core.dorun \x3d (function cljs$core$dorun(var_args){\nvar G__10930 \x3d arguments.length;\nswitch (G__10930) {\ncase 1:\nreturn cljs.core.dorun.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.dorun.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.dorun.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(coll);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nvar G__14497 \x3d cljs.core.next(s);\ncoll \x3d G__14497;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}));\n\n(cljs.core.dorun.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\nwhile(true){\nif(((cljs.core.seq(coll)) \x26\x26 ((n \x3e (0))))){\nvar G__14498 \x3d (n - (1));\nvar G__14499 \x3d cljs.core.next(coll);\nn \x3d G__14498;\ncoll \x3d G__14499;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}));\n\n(cljs.core.dorun.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * When lazy sequences are produced via functions that have side\n *   effects, any effects other than those needed to produce the first\n *   element in the seq do not occur until the seq is consumed. doall can\n *   be used to force any effects. Walks through the successive nexts of\n *   the seq, retains the head and returns it, thus causing the entire\n *   seq to reside in memory at one time.\n */\ncljs.core.doall \x3d (function cljs$core$doall(var_args){\nvar G__10932 \x3d arguments.length;\nswitch (G__10932) {\ncase 1:\nreturn cljs.core.doall.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.doall.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.doall.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\ncljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);\n\nreturn coll;\n}));\n\n(cljs.core.doall.cljs$core$IFn$_invoke$arity$2 \x3d (function (n,coll){\ncljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);\n\nreturn coll;\n}));\n\n(cljs.core.doall.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns true if x is a JavaScript RegExp instance.\n */\ncljs.core.regexp_QMARK_ \x3d (function cljs$core$regexp_QMARK_(x){\nreturn (x instanceof RegExp);\n});\n/**\n * Returns the result of (re-find re s) if re fully matches s.\n */\ncljs.core.re_matches \x3d (function cljs$core$re_matches(re,s){\nif(typeof s \x3d\x3d\x3d \x27string\x27){\nvar matches \x3d re.exec(s);\nif((((!((matches \x3d\x3d null)))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((matches[(0)]),s)))){\nif((((matches).length) \x3d\x3d\x3d (1))){\nreturn (matches[(0)]);\n} else {\nreturn cljs.core.vec(matches);\n}\n} else {\nreturn null;\n}\n} else {\nthrow (new TypeError(\x22re-matches must match against a string.\x22));\n}\n});\n/**\n * Returns the first regex match, if any, of s to re, using\n *   re.exec(s). Returns a vector, containing first the matching\n *   substring, then any capturing groups if the regular expression contains\n *   capturing groups.\n */\ncljs.core.re_find \x3d (function cljs$core$re_find(re,s){\nif(typeof s \x3d\x3d\x3d \x27string\x27){\nvar matches \x3d re.exec(s);\nif((matches \x3d\x3d null)){\nreturn null;\n} else {\nif((((matches).length) \x3d\x3d\x3d (1))){\nreturn (matches[(0)]);\n} else {\nreturn cljs.core.vec(matches);\n}\n}\n} else {\nthrow (new TypeError(\x22re-find must match against a string.\x22));\n}\n});\ncljs.core.re_seq_STAR_ \x3d (function cljs$core$re_seq_STAR_(re,s){\nvar temp__5808__auto__ \x3d re.exec(s);\nif((temp__5808__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar matches \x3d temp__5808__auto__;\nvar match_str \x3d (matches[(0)]);\nvar match_vals \x3d (((matches.length \x3d\x3d\x3d (1)))?match_str:cljs.core.vec(matches));\nreturn cljs.core.cons(match_vals,(new cljs.core.LazySeq(null,(function (){\nvar post_idx \x3d (matches.index + (function (){var x__5130__auto__ \x3d (1);\nvar y__5131__auto__ \x3d match_str.length;\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})());\nif((post_idx \x3c\x3d s.length)){\nvar G__10933 \x3d re;\nvar G__10934 \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,post_idx);\nreturn (cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2 ? cljs.core.re_seq_STAR_.cljs$core$IFn$_invoke$arity$2(G__10933,G__10934) : cljs.core.re_seq_STAR_.call(null,G__10933,G__10934));\n} else {\nreturn null;\n}\n}),null,null)));\n}\n});\n/**\n * Returns a lazy sequence of successive matches of re in s.\n */\ncljs.core.re_seq \x3d (function cljs$core$re_seq(re,s){\nif(typeof s \x3d\x3d\x3d \x27string\x27){\nreturn cljs.core.re_seq_STAR_(re,s);\n} else {\nthrow (new TypeError(\x22re-seq must match against a string.\x22));\n}\n});\n/**\n * Returns an instance of RegExp which has compiled the provided string.\n */\ncljs.core.re_pattern \x3d (function cljs$core$re_pattern(s){\nif((s instanceof RegExp)){\nreturn s;\n} else {\nvar vec__10935 \x3d cljs.core.re_find(/^\\(\\?([idmsux]*)\\)/,s);\nvar prefix \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10935,(0),null);\nvar flags \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10935,(1),null);\nvar pattern \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(((prefix \x3d\x3d null))?(0):((prefix).length)));\nreturn (new RegExp(pattern,(function (){var or__5045__auto__ \x3d flags;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \x22\x22;\n}\n})()));\n}\n});\ncljs.core.pr_sequential_writer \x3d (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){\nvar _STAR_print_level_STAR__orig_val__10938 \x3d cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__10939 \x3d (((cljs.core._STAR_print_level_STAR_ \x3d\x3d null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));\n(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__temp_val__10939);\n\ntry{if((((!((cljs.core._STAR_print_level_STAR_ \x3d\x3d null)))) \x26\x26 ((cljs.core._STAR_print_level_STAR_ \x3c (0))))){\nreturn cljs.core._write(writer,\x22#\x22);\n} else {\ncljs.core._write(writer,begin);\n\nif((new cljs.core.Keyword(null,\x22print-length\x22,\x22print-length\x22,1931866356).cljs$core$IFn$_invoke$arity$1(opts) \x3d\x3d\x3d (0))){\nif(cljs.core.seq(coll)){\ncljs.core._write(writer,(function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22more-marker\x22,\x22more-marker\x22,-14717935).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \x22...\x22;\n}\n})());\n} else {\n}\n} else {\nif(cljs.core.seq(coll)){\nvar G__10940_14515 \x3d cljs.core.first(coll);\nvar G__10941_14516 \x3d writer;\nvar G__10942_14517 \x3d opts;\n(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10940_14515,G__10941_14516,G__10942_14517) : print_one.call(null,G__10940_14515,G__10941_14516,G__10942_14517));\n} else {\n}\n\nvar coll_14518__$1 \x3d cljs.core.next(coll);\nvar n_14519 \x3d (new cljs.core.Keyword(null,\x22print-length\x22,\x22print-length\x22,1931866356).cljs$core$IFn$_invoke$arity$1(opts) - (1));\nwhile(true){\nif(((coll_14518__$1) \x26\x26 ((((n_14519 \x3d\x3d null)) || ((!((n_14519 \x3d\x3d\x3d (0))))))))){\ncljs.core._write(writer,sep);\n\nvar G__10943_14520 \x3d cljs.core.first(coll_14518__$1);\nvar G__10944_14521 \x3d writer;\nvar G__10945_14522 \x3d opts;\n(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__10943_14520,G__10944_14521,G__10945_14522) : print_one.call(null,G__10943_14520,G__10944_14521,G__10945_14522));\n\nvar G__14523 \x3d cljs.core.next(coll_14518__$1);\nvar G__14524 \x3d (n_14519 - (1));\ncoll_14518__$1 \x3d G__14523;\nn_14519 \x3d G__14524;\ncontinue;\n} else {\nif(((cljs.core.seq(coll_14518__$1)) \x26\x26 ((n_14519 \x3d\x3d\x3d (0))))){\ncljs.core._write(writer,sep);\n\ncljs.core._write(writer,(function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22more-marker\x22,\x22more-marker\x22,-14717935).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \x22...\x22;\n}\n})());\n} else {\n}\n}\nbreak;\n}\n}\n\nreturn cljs.core._write(writer,end);\n}\n}finally {(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__orig_val__10938);\n}});\ncljs.core.write_all \x3d (function cljs$core$write_all(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14528 \x3d arguments.length;\nvar i__5770__auto___14529 \x3d (0);\nwhile(true){\nif((i__5770__auto___14529 \x3c len__5769__auto___14528)){\nargs__5775__auto__.push((arguments[i__5770__auto___14529]));\n\nvar G__14530 \x3d (i__5770__auto___14529 + (1));\ni__5770__auto___14529 \x3d G__14530;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic \x3d (function (writer,ss){\nvar seq__10948 \x3d cljs.core.seq(ss);\nvar chunk__10949 \x3d null;\nvar count__10950 \x3d (0);\nvar i__10951 \x3d (0);\nwhile(true){\nif((i__10951 \x3c count__10950)){\nvar s \x3d chunk__10949.cljs$core$IIndexed$_nth$arity$2(null,i__10951);\ncljs.core._write(writer,s);\n\n\nvar G__14533 \x3d seq__10948;\nvar G__14534 \x3d chunk__10949;\nvar G__14535 \x3d count__10950;\nvar G__14536 \x3d (i__10951 + (1));\nseq__10948 \x3d G__14533;\nchunk__10949 \x3d G__14534;\ncount__10950 \x3d G__14535;\ni__10951 \x3d G__14536;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__10948);\nif(temp__5804__auto__){\nvar seq__10948__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__10948__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__10948__$1);\nvar G__14537 \x3d cljs.core.chunk_rest(seq__10948__$1);\nvar G__14538 \x3d c__5568__auto__;\nvar G__14539 \x3d cljs.core.count(c__5568__auto__);\nvar G__14540 \x3d (0);\nseq__10948 \x3d G__14537;\nchunk__10949 \x3d G__14538;\ncount__10950 \x3d G__14539;\ni__10951 \x3d G__14540;\ncontinue;\n} else {\nvar s \x3d cljs.core.first(seq__10948__$1);\ncljs.core._write(writer,s);\n\n\nvar G__14541 \x3d cljs.core.next(seq__10948__$1);\nvar G__14542 \x3d null;\nvar G__14543 \x3d (0);\nvar G__14544 \x3d (0);\nseq__10948 \x3d G__14541;\nchunk__10949 \x3d G__14542;\ncount__10950 \x3d G__14543;\ni__10951 \x3d G__14544;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(cljs.core.write_all.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(cljs.core.write_all.cljs$lang$applyTo \x3d (function (seq10946){\nvar G__10947 \x3d cljs.core.first(seq10946);\nvar seq10946__$1 \x3d cljs.core.next(seq10946);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__10947,seq10946__$1);\n}));\n\ncljs.core.string_print \x3d (function cljs$core$string_print(x){\nif((cljs.core._STAR_print_fn_STAR_ \x3d\x3d null)){\nthrow (new Error(\x22No *print-fn* fn set for evaluation environment\x22));\n} else {\n}\n\ncljs.core._STAR_print_fn_STAR_.call(null,x);\n\nreturn null;\n});\ncljs.core.flush \x3d (function cljs$core$flush(){\nreturn null;\n});\ncljs.core.char_escapes \x3d (function (){var obj10953 \x3d ({\x22\\\x22\x22:\x22\\\\\\\x22\x22,\x22\\\\\x22:\x22\\\\\\\\\x22,\x22\\b\x22:\x22\\\\b\x22,\x22\\f\x22:\x22\\\\f\x22,\x22\\n\x22:\x22\\\\n\x22,\x22\\r\x22:\x22\\\\r\x22,\x22\\t\x22:\x22\\\\t\x22});\nreturn obj10953;\n})();\ncljs.core.quote_string \x3d (function cljs$core$quote_string(s){\nreturn [\x22\\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(s.replace(RegExp(\x22[\\\\\\\\\\\x22\\b\\f\\n\\r\\t]\x22,\x22g\x22),(function (match){\nreturn (cljs.core.char_escapes[match]);\n}))),\x22\\\x22\x22].join(\x27\x27);\n});\ncljs.core.print_meta_QMARK_ \x3d (function cljs$core$print_meta_QMARK_(opts,obj){\nvar and__5043__auto__ \x3d cljs.core.boolean$(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964)));\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d (((!((obj \x3d\x3d null))))?(((((obj.cljs$lang$protocol_mask$partition0$ \x26 (131072))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.cljs$core$IMeta$))))?true:false):false);\nif(and__5043__auto____$1){\nreturn (!((cljs.core.meta(obj) \x3d\x3d null)));\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n});\ncljs.core.pr_writer_impl \x3d (function cljs$core$pr_writer_impl(obj,writer,opts){\nif((obj \x3d\x3d null)){\nreturn cljs.core._write(writer,\x22nil\x22);\n} else {\nif(cljs.core.print_meta_QMARK_(opts,obj)){\ncljs.core._write(writer,\x22^\x22);\n\nvar G__10955_14552 \x3d cljs.core.meta(obj);\nvar G__10956_14553 \x3d writer;\nvar G__10957_14554 \x3d opts;\n(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__10955_14552,G__10956_14553,G__10957_14554) : cljs.core.pr_writer.call(null,G__10955_14552,G__10956_14553,G__10957_14554));\n\ncljs.core._write(writer,\x22 \x22);\n} else {\n}\n\nif(obj.cljs$lang$type){\nreturn obj.cljs$lang$ctorPrWriter(obj,writer,opts);\n} else {\nif((((!((obj \x3d\x3d null))))?(((((obj.cljs$lang$protocol_mask$partition0$ \x26 (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.cljs$core$IPrintWithWriter$))))?true:(((!obj.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,obj):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,obj))){\nreturn cljs.core._pr_writer(obj,writer,opts);\n} else {\nif(((obj \x3d\x3d\x3d true) || (obj \x3d\x3d\x3d false))){\nreturn cljs.core._write(writer,cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj));\n} else {\nif(typeof obj \x3d\x3d\x3d \x27number\x27){\nreturn cljs.core._write(writer,((isNaN(obj))?\x22##NaN\x22:(((obj \x3d\x3d\x3d Number.POSITIVE_INFINITY))?\x22##Inf\x22:(((obj \x3d\x3d\x3d Number.NEGATIVE_INFINITY))?\x22##-Inf\x22:cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj)\n))));\n} else {\nif(cljs.core.object_QMARK_(obj)){\ncljs.core._write(writer,\x22#js \x22);\n\nvar G__10959 \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){\nreturn (new cljs.core.MapEntry((function (){var G__10963 \x3d k;\nif((!((cljs.core.re_matches(/[A-Za-z_\\*\\+\\?!\\-\x27][\\w\\*\\+\\?!\\-\x27]*/,k) \x3d\x3d null)))){\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(G__10963);\n} else {\nreturn G__10963;\n}\n})(),(obj[k]),null));\n}),cljs.core.js_keys(obj));\nvar G__10960 \x3d cljs.core.pr_writer;\nvar G__10961 \x3d writer;\nvar G__10962 \x3d opts;\nreturn (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__10959,G__10960,G__10961,G__10962) : cljs.core.print_map.call(null,G__10959,G__10960,G__10961,G__10962));\n} else {\nif(cljs.core.array_QMARK_(obj)){\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22#js [\x22,\x22 \x22,\x22]\x22,opts,obj);\n} else {\nif(typeof obj \x3d\x3d\x3d \x27string\x27){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760).cljs$core$IFn$_invoke$arity$1(opts))){\nreturn cljs.core._write(writer,cljs.core.quote_string(obj));\n} else {\nreturn cljs.core._write(writer,obj);\n}\n} else {\nif(typeof obj \x3d\x3d\x3d \x27function\x27){\nvar name \x3d obj.name;\nvar name__$1 \x3d (cljs.core.truth_((function (){var or__5045__auto__ \x3d (name \x3d\x3d null);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn goog.string.isEmpty(name);\n}\n})())?\x22Function\x22:name);\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#object[\x22,name__$1,(cljs.core.truth_(cljs.core._STAR_print_fn_bodies_STAR_)?[\x22 \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),\x22\\\x22\x22].join(\x27\x27):\x22\x22),\x22]\x22], 0));\n} else {\nif((obj instanceof Date)){\nvar normalize \x3d (function (n,len){\nvar ns \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(n);\nwhile(true){\nif((((ns).length) \x3c len)){\nvar G__14557 \x3d [\x220\x22,ns].join(\x27\x27);\nns \x3d G__14557;\ncontinue;\n} else {\nreturn ns;\n}\nbreak;\n}\n});\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#inst \\\x22\x22,normalize(obj.getUTCFullYear(),(4)),\x22-\x22,normalize((obj.getUTCMonth() + (1)),(2)),\x22-\x22,normalize(obj.getUTCDate(),(2)),\x22T\x22,normalize(obj.getUTCHours(),(2)),\x22:\x22,normalize(obj.getUTCMinutes(),(2)),\x22:\x22,normalize(obj.getUTCSeconds(),(2)),\x22.\x22,normalize(obj.getUTCMilliseconds(),(3)),\x22-\x22,\x2200:00\\\x22\x22], 0));\n} else {\nif(cljs.core.regexp_QMARK_(obj)){\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#\\\x22\x22,obj.source,\x22\\\x22\x22], 0));\n} else {\nif(cljs.core.js_symbol_QMARK_(obj)){\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#object[\x22,obj.toString(),\x22]\x22], 0));\n} else {\nif(cljs.core.truth_((function (){var G__10964 \x3d obj;\nvar G__10964__$1 \x3d (((G__10964 \x3d\x3d null))?null:G__10964.constructor);\nif((G__10964__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__10964__$1.cljs$lang$ctorStr;\n}\n})())){\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#object[\x22,obj.constructor.cljs$lang$ctorStr.replace((new RegExp(\x22/\x22,\x22g\x22)),\x22.\x22),\x22]\x22], 0));\n} else {\nvar name \x3d (function (){var G__10965 \x3d obj;\nvar G__10965__$1 \x3d (((G__10965 \x3d\x3d null))?null:G__10965.constructor);\nif((G__10965__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__10965__$1.name;\n}\n})();\nvar name__$1 \x3d (cljs.core.truth_((function (){var or__5045__auto__ \x3d (name \x3d\x3d null);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn goog.string.isEmpty(name);\n}\n})())?\x22Object\x22:name);\nif((obj.constructor \x3d\x3d null)){\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#object[\x22,name__$1,\x22]\x22], 0));\n} else {\nreturn cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22#object[\x22,name__$1,\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),\x22]\x22], 0));\n}\n}\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n\n}\n});\n/**\n * Prefer this to pr-seq, because it makes the printing function\n * configurable, allowing efficient implementations such as appending\n * to a StringBuffer.\n */\ncljs.core.pr_writer \x3d (function cljs$core$pr_writer(obj,writer,opts){\nvar temp__5802__auto__ \x3d new cljs.core.Keyword(null,\x22alt-impl\x22,\x22alt-impl\x22,670969595).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar alt_impl \x3d temp__5802__auto__;\nvar G__10966 \x3d obj;\nvar G__10967 \x3d writer;\nvar G__10968 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\x22fallback-impl\x22,\x22fallback-impl\x22,-1501286995),cljs.core.pr_writer_impl);\nreturn (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__10966,G__10967,G__10968) : alt_impl.call(null,G__10966,G__10967,G__10968));\n} else {\nreturn cljs.core.pr_writer_impl(obj,writer,opts);\n}\n});\ncljs.core.pr_seq_writer \x3d (function cljs$core$pr_seq_writer(objs,writer,opts){\ncljs.core.pr_writer(cljs.core.first(objs),writer,opts);\n\nvar seq__10969 \x3d cljs.core.seq(cljs.core.next(objs));\nvar chunk__10970 \x3d null;\nvar count__10971 \x3d (0);\nvar i__10972 \x3d (0);\nwhile(true){\nif((i__10972 \x3c count__10971)){\nvar obj \x3d chunk__10970.cljs$core$IIndexed$_nth$arity$2(null,i__10972);\ncljs.core._write(writer,\x22 \x22);\n\ncljs.core.pr_writer(obj,writer,opts);\n\n\nvar G__14565 \x3d seq__10969;\nvar G__14566 \x3d chunk__10970;\nvar G__14567 \x3d count__10971;\nvar G__14568 \x3d (i__10972 + (1));\nseq__10969 \x3d G__14565;\nchunk__10970 \x3d G__14566;\ncount__10971 \x3d G__14567;\ni__10972 \x3d G__14568;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__10969);\nif(temp__5804__auto__){\nvar seq__10969__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__10969__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__10969__$1);\nvar G__14569 \x3d cljs.core.chunk_rest(seq__10969__$1);\nvar G__14570 \x3d c__5568__auto__;\nvar G__14571 \x3d cljs.core.count(c__5568__auto__);\nvar G__14572 \x3d (0);\nseq__10969 \x3d G__14569;\nchunk__10970 \x3d G__14570;\ncount__10971 \x3d G__14571;\ni__10972 \x3d G__14572;\ncontinue;\n} else {\nvar obj \x3d cljs.core.first(seq__10969__$1);\ncljs.core._write(writer,\x22 \x22);\n\ncljs.core.pr_writer(obj,writer,opts);\n\n\nvar G__14573 \x3d cljs.core.next(seq__10969__$1);\nvar G__14574 \x3d null;\nvar G__14575 \x3d (0);\nvar G__14576 \x3d (0);\nseq__10969 \x3d G__14573;\nchunk__10970 \x3d G__14574;\ncount__10971 \x3d G__14575;\ni__10972 \x3d G__14576;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.core.pr_sb_with_opts \x3d (function cljs$core$pr_sb_with_opts(objs,opts){\nvar sb \x3d (new goog.string.StringBuffer());\nvar writer \x3d (new cljs.core.StringBufferWriter(sb));\ncljs.core.pr_seq_writer(objs,writer,opts);\n\nwriter.cljs$core$IWriter$_flush$arity$1(null);\n\nreturn sb;\n});\n/**\n * Prints a sequence of objects to a string, observing all the\n *   options given in opts\n */\ncljs.core.pr_str_with_opts \x3d (function cljs$core$pr_str_with_opts(objs,opts){\nif(cljs.core.empty_QMARK_(objs)){\nreturn \x22\x22;\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_sb_with_opts(objs,opts));\n}\n});\n/**\n * Same as pr-str-with-opts followed by (newline)\n */\ncljs.core.prn_str_with_opts \x3d (function cljs$core$prn_str_with_opts(objs,opts){\nif(cljs.core.empty_QMARK_(objs)){\nreturn \x22\\n\x22;\n} else {\nvar sb \x3d cljs.core.pr_sb_with_opts(objs,opts);\nsb.append(\x22\\n\x22);\n\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\n}\n});\n/**\n * Prints a sequence of objects using string-print, observing all\n *   the options given in opts\n */\ncljs.core.pr_with_opts \x3d (function cljs$core$pr_with_opts(objs,opts){\nreturn cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));\n});\n/**\n * Prints a newline using *print-fn*\n */\ncljs.core.newline \x3d (function cljs$core$newline(var_args){\nvar G__10974 \x3d arguments.length;\nswitch (G__10974) {\ncase 0:\nreturn cljs.core.newline.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.newline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.newline.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.newline.cljs$core$IFn$_invoke$arity$1(null);\n}));\n\n(cljs.core.newline.cljs$core$IFn$_invoke$arity$1 \x3d (function (opts){\ncljs.core.string_print(\x22\\n\x22);\n\nif(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,new cljs.core.Keyword(null,\x22flush-on-newline\x22,\x22flush-on-newline\x22,-151457939)))){\nreturn cljs.core.flush();\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.newline.cljs$lang$maxFixedArity \x3d 1);\n\n/**\n * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.\n */\ncljs.core.pr_str \x3d (function cljs$core$pr_str(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14578 \x3d arguments.length;\nvar i__5770__auto___14579 \x3d (0);\nwhile(true){\nif((i__5770__auto___14579 \x3c len__5769__auto___14578)){\nargs__5775__auto__.push((arguments[i__5770__auto___14579]));\n\nvar G__14580 \x3d (i__5770__auto___14579 + (1));\ni__5770__auto___14579 \x3d G__14580;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\nreturn cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());\n}));\n\n(cljs.core.pr_str.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.pr_str.cljs$lang$applyTo \x3d (function (seq10975){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10975));\n}));\n\n/**\n * Same as pr-str followed by (newline)\n */\ncljs.core.prn_str \x3d (function cljs$core$prn_str(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14581 \x3d arguments.length;\nvar i__5770__auto___14582 \x3d (0);\nwhile(true){\nif((i__5770__auto___14582 \x3c len__5769__auto___14581)){\nargs__5775__auto__.push((arguments[i__5770__auto___14582]));\n\nvar G__14583 \x3d (i__5770__auto___14582 + (1));\ni__5770__auto___14582 \x3d G__14583;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.prn_str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\nreturn cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());\n}));\n\n(cljs.core.prn_str.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.prn_str.cljs$lang$applyTo \x3d (function (seq10976){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10976));\n}));\n\n/**\n * Prints the object(s) using string-print.  Prints the\n *   object(s), separated by spaces if there is more than one.\n *   By default, pr and prn print in a way that objects can be\n *   read by the reader\n */\ncljs.core.pr \x3d (function cljs$core$pr(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14584 \x3d arguments.length;\nvar i__5770__auto___14585 \x3d (0);\nwhile(true){\nif((i__5770__auto___14585 \x3c len__5769__auto___14584)){\nargs__5775__auto__.push((arguments[i__5770__auto___14585]));\n\nvar G__14587 \x3d (i__5770__auto___14585 + (1));\ni__5770__auto___14585 \x3d G__14587;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.pr.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\nreturn cljs.core.pr_with_opts(objs,cljs.core.pr_opts());\n}));\n\n(cljs.core.pr.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.pr.cljs$lang$applyTo \x3d (function (seq10977){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10977));\n}));\n\n/**\n * Prints the object(s) using string-print.\n *   print and println produce output for human consumption.\n * @param {...*} var_args\n */\ncljs.core.print \x3d (function() { \nvar cljs$core$cljs_core_print__delegate \x3d function (objs){\nreturn cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760),false));\n};\nvar cljs$core$cljs_core_print \x3d function (var_args){\nvar objs \x3d null;\nif (arguments.length \x3e 0) {\nvar G__14590__i \x3d 0, G__14590__a \x3d new Array(arguments.length -  0);\nwhile (G__14590__i \x3c G__14590__a.length) {G__14590__a[G__14590__i] \x3d arguments[G__14590__i + 0]; ++G__14590__i;}\n  objs \x3d new cljs.core.IndexedSeq(G__14590__a,0,null);\n} \nreturn cljs$core$cljs_core_print__delegate.call(this,objs);};\ncljs$core$cljs_core_print.cljs$lang$maxFixedArity \x3d 0;\ncljs$core$cljs_core_print.cljs$lang$applyTo \x3d (function (arglist__14591){\nvar objs \x3d cljs.core.seq(arglist__14591);\nreturn cljs$core$cljs_core_print__delegate(objs);\n});\ncljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic \x3d cljs$core$cljs_core_print__delegate;\nreturn cljs$core$cljs_core_print;\n})()\n;\n/**\n * print to a string, returning it\n */\ncljs.core.print_str \x3d (function cljs$core$print_str(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14592 \x3d arguments.length;\nvar i__5770__auto___14593 \x3d (0);\nwhile(true){\nif((i__5770__auto___14593 \x3c len__5769__auto___14592)){\nargs__5775__auto__.push((arguments[i__5770__auto___14593]));\n\nvar G__14594 \x3d (i__5770__auto___14593 + (1));\ni__5770__auto___14593 \x3d G__14594;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\nreturn cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760),false));\n}));\n\n(cljs.core.print_str.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.print_str.cljs$lang$applyTo \x3d (function (seq10978){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10978));\n}));\n\n/**\n * Same as print followed by (newline)\n */\ncljs.core.println \x3d (function cljs$core$println(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14595 \x3d arguments.length;\nvar i__5770__auto___14596 \x3d (0);\nwhile(true){\nif((i__5770__auto___14596 \x3c len__5769__auto___14595)){\nargs__5775__auto__.push((arguments[i__5770__auto___14596]));\n\nvar G__14597 \x3d (i__5770__auto___14596 + (1));\ni__5770__auto___14596 \x3d G__14597;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.println.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\ncljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760),false));\n\nif(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){\nreturn cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.println.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.println.cljs$lang$applyTo \x3d (function (seq10979){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10979));\n}));\n\n/**\n * println to a string, returning it\n */\ncljs.core.println_str \x3d (function cljs$core$println_str(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14598 \x3d arguments.length;\nvar i__5770__auto___14599 \x3d (0);\nwhile(true){\nif((i__5770__auto___14599 \x3c len__5769__auto___14598)){\nargs__5775__auto__.push((arguments[i__5770__auto___14599]));\n\nvar G__14600 \x3d (i__5770__auto___14599 + (1));\ni__5770__auto___14599 \x3d G__14600;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.println_str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\nreturn cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760),false));\n}));\n\n(cljs.core.println_str.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.println_str.cljs$lang$applyTo \x3d (function (seq10980){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10980));\n}));\n\n/**\n * Same as pr followed by (newline).\n */\ncljs.core.prn \x3d (function cljs$core$prn(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14601 \x3d arguments.length;\nvar i__5770__auto___14602 \x3d (0);\nwhile(true){\nif((i__5770__auto___14602 \x3c len__5769__auto___14601)){\nargs__5775__auto__.push((arguments[i__5770__auto___14602]));\n\nvar G__14603 \x3d (i__5770__auto___14602 + (1));\ni__5770__auto___14602 \x3d G__14603;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.prn.cljs$core$IFn$_invoke$arity$variadic \x3d (function (objs){\ncljs.core.pr_with_opts(objs,cljs.core.pr_opts());\n\nif(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){\nreturn cljs.core.newline.cljs$core$IFn$_invoke$arity$1(cljs.core.pr_opts());\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.prn.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.prn.cljs$lang$applyTo \x3d (function (seq10981){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq10981));\n}));\n\ncljs.core.strip_ns \x3d (function cljs$core$strip_ns(named){\nif((named instanceof cljs.core.Symbol)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(null,cljs.core.name(named));\n} else {\nreturn cljs.core.keyword.cljs$core$IFn$_invoke$arity$2(null,cljs.core.name(named));\n}\n});\n/**\n * Returns [lifted-ns lifted-map] or nil if m can\x27t be lifted.\n */\ncljs.core.lift_ns \x3d (function cljs$core$lift_ns(m){\nif(cljs.core.truth_(cljs.core._STAR_print_namespace_maps_STAR_)){\nvar ns \x3d null;\nvar G__10988 \x3d cljs.core.seq(m);\nvar vec__10989 \x3d G__10988;\nvar seq__10990 \x3d cljs.core.seq(vec__10989);\nvar first__10991 \x3d cljs.core.first(seq__10990);\nvar seq__10990__$1 \x3d cljs.core.next(seq__10990);\nvar vec__10992 \x3d first__10991;\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10992,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__10992,(1),null);\nvar entry \x3d vec__10992;\nvar entries \x3d seq__10990__$1;\nvar lm \x3d cljs.core.empty(m);\nvar ns__$1 \x3d ns;\nvar G__10988__$1 \x3d G__10988;\nvar lm__$1 \x3d lm;\nwhile(true){\nvar ns__$2 \x3d ns__$1;\nvar vec__11001 \x3d G__10988__$1;\nvar seq__11002 \x3d cljs.core.seq(vec__11001);\nvar first__11003 \x3d cljs.core.first(seq__11002);\nvar seq__11002__$1 \x3d cljs.core.next(seq__11002);\nvar vec__11004 \x3d first__11003;\nvar k__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11004,(0),null);\nvar v__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11004,(1),null);\nvar entry__$1 \x3d vec__11004;\nvar entries__$1 \x3d seq__11002__$1;\nvar lm__$2 \x3d lm__$1;\nif(cljs.core.truth_(entry__$1)){\nif((((k__$1 instanceof cljs.core.Keyword)) || ((k__$1 instanceof cljs.core.Symbol)))){\nif(cljs.core.truth_(ns__$2)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(ns__$2,cljs.core.namespace(k__$1))){\nvar G__14605 \x3d ns__$2;\nvar G__14606 \x3d entries__$1;\nvar G__14607 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2,cljs.core.strip_ns(k__$1),v__$1);\nns__$1 \x3d G__14605;\nG__10988__$1 \x3d G__14606;\nlm__$1 \x3d G__14607;\ncontinue;\n} else {\nreturn null;\n}\n} else {\nvar temp__5804__auto__ \x3d cljs.core.namespace(k__$1);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar new_ns \x3d temp__5804__auto__;\nvar G__14608 \x3d new_ns;\nvar G__14609 \x3d entries__$1;\nvar G__14610 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(lm__$2,cljs.core.strip_ns(k__$1),v__$1);\nns__$1 \x3d G__14608;\nG__10988__$1 \x3d G__14609;\nlm__$1 \x3d G__14610;\ncontinue;\n} else {\nreturn null;\n}\n}\n} else {\nreturn null;\n}\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns__$2,lm__$2], null);\n}\nbreak;\n}\n} else {\nreturn null;\n}\n});\ncljs.core.print_prefix_map \x3d (function cljs$core$print_prefix_map(prefix,m,print_one,writer,opts){\nreturn cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){\nvar G__11007_14614 \x3d cljs.core.key(e);\nvar G__11008_14615 \x3d w;\nvar G__11009_14616 \x3d opts__$1;\n(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11007_14614,G__11008_14615,G__11009_14616) : print_one.call(null,G__11007_14614,G__11008_14615,G__11009_14616));\n\ncljs.core._write(w,\x22 \x22);\n\nvar G__11010 \x3d cljs.core.val(e);\nvar G__11011 \x3d w;\nvar G__11012 \x3d opts__$1;\nreturn (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__11010,G__11011,G__11012) : print_one.call(null,G__11010,G__11011,G__11012));\n}),[cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),\x22{\x22].join(\x27\x27),\x22, \x22,\x22}\x22,opts,cljs.core.seq(m));\n});\ncljs.core.print_map \x3d (function cljs$core$print_map(m,print_one,writer,opts){\nvar vec__11013 \x3d ((cljs.core.map_QMARK_(m))?cljs.core.lift_ns(m):null);\nvar ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11013,(0),null);\nvar lift_map \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11013,(1),null);\nif(cljs.core.truth_(ns)){\nreturn cljs.core.print_prefix_map([\x22#:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns)].join(\x27\x27),lift_map,print_one,writer,opts);\n} else {\nreturn cljs.core.print_prefix_map(null,m,print_one,writer,opts);\n}\n});\n(cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,writer,opts){\nvar a__$1 \x3d this;\ncljs.core._write(writer,\x22#object[cljs.core.Volatile \x22);\n\ncljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.state], null),writer,opts);\n\nreturn cljs.core._write(writer,\x22]\x22);\n}));\n\n(cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,writer,opts){\nvar a__$1 \x3d this;\ncljs.core._write(writer,\x22#\x27\x22);\n\nreturn cljs.core.pr_writer(a__$1.sym,writer,opts);\n}));\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.MapEntry.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22[\x22,\x22 \x22,\x22]\x22,opts,coll__$1);\n}));\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22[\x22,\x22 \x22,\x22]\x22,opts,coll__$1);\n}));\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22#{\x22,\x22 \x22,\x22}\x22,opts,coll__$1);\n}));\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);\n}));\n\n(cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Iterate.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.IntegerRange.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.IntegerRange.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);\n}));\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22[\x22,\x22 \x22,\x22]\x22,opts,coll__$1);\n}));\n\n(cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Cycle.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);\n}));\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22#{\x22,\x22 \x22,\x22}\x22,opts,coll__$1);\n}));\n\n(cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,writer,opts){\nvar a__$1 \x3d this;\ncljs.core._write(writer,\x22#object[cljs.core.Atom \x22);\n\ncljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.state], null),writer,opts);\n\nreturn cljs.core._write(writer,\x22]\x22);\n}));\n\n(cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22[\x22,\x22 \x22,\x22]\x22,opts,coll__$1);\n}));\n\n(cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Repeat.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22[\x22,\x22 \x22,\x22]\x22,opts,coll__$1);\n}));\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core._write(writer,\x22()\x22);\n}));\n\n(cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22#queue [\x22,\x22 \x22,\x22]\x22,opts,cljs.core.seq(coll__$1));\n}));\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);\n}));\n\n(cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.TransformerIterator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n\n(cljs.core.List.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll,writer,opts){\nvar coll__$1 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$1);\n}));\n(cljs.core.Symbol.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\nvar x__$1 \x3d this;\nif((y instanceof cljs.core.Symbol)){\nreturn cljs.core.compare_symbols(x__$1,y);\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\n}\n}));\n\n(cljs.core.Keyword.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\nvar x__$1 \x3d this;\nif((y instanceof cljs.core.Keyword)){\nreturn cljs.core.compare_keywords(x__$1,y);\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\n}\n}));\n\n(cljs.core.Subvec.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\nvar x__$1 \x3d this;\nif(cljs.core.vector_QMARK_(y)){\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\n}\n}));\n\n(cljs.core.PersistentVector.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\nvar x__$1 \x3d this;\nif(cljs.core.vector_QMARK_(y)){\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\n}\n}));\n\n(cljs.core.MapEntry.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.MapEntry.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\nvar x__$1 \x3d this;\nif(cljs.core.vector_QMARK_(y)){\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\n}\n}));\n\n(cljs.core.BlackNode.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.BlackNode.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\nvar x__$1 \x3d this;\nif(cljs.core.vector_QMARK_(y)){\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\n}\n}));\n\n(cljs.core.RedNode.prototype.cljs$core$IComparable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.RedNode.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (x,y){\nvar x__$1 \x3d this;\nif(cljs.core.vector_QMARK_(y)){\nreturn cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(y)].join(\x27\x27)));\n}\n}));\n/**\n * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:\n * \n *   (apply f its-current-meta args)\n * \n *   f must be free of side-effects\n */\ncljs.core.alter_meta_BANG_ \x3d (function cljs$core$alter_meta_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14728 \x3d arguments.length;\nvar i__5770__auto___14729 \x3d (0);\nwhile(true){\nif((i__5770__auto___14729 \x3c len__5769__auto___14728)){\nargs__5775__auto__.push((arguments[i__5770__auto___14729]));\n\nvar G__14730 \x3d (i__5770__auto___14729 + (1));\ni__5770__auto___14729 \x3d G__14730;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(cljs.core.alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (iref,f,args){\nreturn (iref.meta \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args));\n}));\n\n(cljs.core.alter_meta_BANG_.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(cljs.core.alter_meta_BANG_.cljs$lang$applyTo \x3d (function (seq11016){\nvar G__11017 \x3d cljs.core.first(seq11016);\nvar seq11016__$1 \x3d cljs.core.next(seq11016);\nvar G__11018 \x3d cljs.core.first(seq11016__$1);\nvar seq11016__$2 \x3d cljs.core.next(seq11016__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11017,G__11018,seq11016__$2);\n}));\n\n/**\n * Atomically resets the metadata for an atom\n */\ncljs.core.reset_meta_BANG_ \x3d (function cljs$core$reset_meta_BANG_(iref,m){\nreturn (iref.meta \x3d m);\n});\n/**\n * Adds a watch function to an atom reference. The watch fn must be a\n *   fn of 4 args: a key, the reference, its old-state, its\n *   new-state. Whenever the reference\x27s state might have been changed,\n *   any registered watches will have their functions called. The watch\n *   fn will be called synchronously. Note that an atom\x27s state\n *   may have changed again prior to the fn call, so use old/new-state\n *   rather than derefing the reference. Keys must be unique per\n *   reference, and can be used to remove the watch with remove-watch,\n *   but are otherwise considered opaque by the watch mechanism.  Bear in\n *   mind that regardless of the result or action of the watch fns the\n *   atom\x27s value will change.  Example:\n * \n *    (def a (atom 0))\n *    (add-watch a :inc (fn [k r o n] (assert (\x3d\x3d 0 n))))\n *    (swap! a inc)\n *    ;; Assertion Error\n *    (deref a)\n *    ;\x3d\x3e 1\n */\ncljs.core.add_watch \x3d (function cljs$core$add_watch(iref,key,f){\ncljs.core._add_watch(iref,key,f);\n\nreturn iref;\n});\n/**\n * Removes a watch (set by add-watch) from a reference\n */\ncljs.core.remove_watch \x3d (function cljs$core$remove_watch(iref,key){\ncljs.core._remove_watch(iref,key);\n\nreturn iref;\n});\n/**\n * @type {*}\n */\ncljs.core.gensym_counter \x3d null;\n/**\n * Returns a new symbol with a unique name. If a prefix string is\n *   supplied, the name is prefix# where # is some unique number. If\n *   prefix is not supplied, the prefix is \x27G__\x27.\n */\ncljs.core.gensym \x3d (function cljs$core$gensym(var_args){\nvar G__11020 \x3d arguments.length;\nswitch (G__11020) {\ncase 0:\nreturn cljs.core.gensym.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.gensym.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.gensym.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\x22G__\x22);\n}));\n\n(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1 \x3d (function (prefix_string){\nif((cljs.core.gensym_counter \x3d\x3d null)){\n(cljs.core.gensym_counter \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)));\n} else {\n}\n\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix_string),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(\x27\x27));\n}));\n\n(cljs.core.gensym.cljs$lang$maxFixedArity \x3d 1);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IPending}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\ncljs.core.Delay \x3d (function (f,value){\nthis.f \x3d f;\nthis.value \x3d value;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2147516416;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 1;\n});\n(cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nif(cljs.core.truth_(self__.f)){\n(self__.value \x3d (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\n(self__.f \x3d null);\n} else {\n}\n\nreturn self__.value;\n}));\n\n(cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 \x3d (function (x){\nvar self__ \x3d this;\nvar x__$1 \x3d this;\nreturn cljs.core.not(self__.f);\n}));\n\n(cljs.core.Delay.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (x,writer,opts){\nvar self__ \x3d this;\nvar x__$1 \x3d this;\ncljs.core._write(writer,\x22#object[cljs.core.Delay \x22);\n\ncljs.core.pr_writer(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22status\x22,\x22status\x22,-1997798413),(((self__.f \x3d\x3d null))?new cljs.core.Keyword(null,\x22ready\x22,\x22ready\x22,1086465795):new cljs.core.Keyword(null,\x22pending\x22,\x22pending\x22,-220036727)),new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),self__.value], null),writer,opts);\n\nreturn cljs.core._write(writer,\x22]\x22);\n}));\n\n(cljs.core.Delay.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22value\x22,\x22value\x22,1946509744,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.Delay.cljs$lang$type \x3d true);\n\n(cljs.core.Delay.cljs$lang$ctorStr \x3d \x22cljs.core/Delay\x22);\n\n(cljs.core.Delay.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Delay\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Delay.\n */\ncljs.core.__GT_Delay \x3d (function cljs$core$__GT_Delay(f,value){\nreturn (new cljs.core.Delay(f,value));\n});\n\n/**\n * returns true if x is a Delay created with delay\n */\ncljs.core.delay_QMARK_ \x3d (function cljs$core$delay_QMARK_(x){\nreturn (x instanceof cljs.core.Delay);\n});\n/**\n * If x is a Delay, returns the (possibly cached) value of its expression, else returns x\n */\ncljs.core.force \x3d (function cljs$core$force(x){\nif(cljs.core.delay_QMARK_(x)){\nreturn cljs.core.deref(x);\n} else {\nreturn x;\n}\n});\n/**\n * Returns true if a value has been produced for a delay or lazy sequence.\n */\ncljs.core.realized_QMARK_ \x3d (function cljs$core$realized_QMARK_(x){\nreturn cljs.core._realized_QMARK_(x);\n});\ncljs.core.preserving_reduced \x3d (function cljs$core$preserving_reduced(rf){\nreturn (function (p1__11021_SHARP_,p2__11022_SHARP_){\nvar ret \x3d (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(p1__11021_SHARP_,p2__11022_SHARP_) : rf.call(null,p1__11021_SHARP_,p2__11022_SHARP_));\nif(cljs.core.reduced_QMARK_(ret)){\nreturn cljs.core.reduced(ret);\n} else {\nreturn ret;\n}\n});\n});\n/**\n * A transducer which concatenates the contents of each input, which must be a\n *   collection, into the reduction.\n */\ncljs.core.cat \x3d (function cljs$core$cat(rf){\nvar rf1 \x3d cljs.core.preserving_reduced(rf);\nreturn (function() {\nvar G__14742 \x3d null;\nvar G__14742__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__14742__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__14742__2 \x3d (function (result,input){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);\n});\nG__14742 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__14742__0.call(this);\ncase 1:\nreturn G__14742__1.call(this,result);\ncase 2:\nreturn G__14742__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14742.cljs$core$IFn$_invoke$arity$0 \x3d G__14742__0;\nG__14742.cljs$core$IFn$_invoke$arity$1 \x3d G__14742__1;\nG__14742.cljs$core$IFn$_invoke$arity$2 \x3d G__14742__2;\nreturn G__14742;\n})()\n});\n/**\n * Returns a transducer that ends transduction when pred returns true\n *   for an input. When retf is supplied it must be a fn of 2 arguments -\n *   it will be passed the (completed) result so far and the input that\n *   triggered the predicate, and its return value (if it does not throw\n *   an exception) will be the return value of the transducer. If retf\n *   is not supplied, the input that triggered the predicate will be\n *   returned. If the predicate never returns true the transduction is\n *   unaffected.\n */\ncljs.core.halt_when \x3d (function cljs$core$halt_when(var_args){\nvar G__11024 \x3d arguments.length;\nswitch (G__11024) {\ncase 1:\nreturn cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.halt_when.cljs$core$IFn$_invoke$arity$1 \x3d (function (pred){\nreturn cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2(pred,null);\n}));\n\n(cljs.core.halt_when.cljs$core$IFn$_invoke$arity$2 \x3d (function (pred,retf){\nreturn (function (rf){\nreturn (function() {\nvar G__14750 \x3d null;\nvar G__14750__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__14750__1 \x3d (function (result){\nif(((cljs.core.map_QMARK_(result)) \x26\x26 (cljs.core.contains_QMARK_(result,new cljs.core.Keyword(\x22cljs.core\x22,\x22halt\x22,\x22cljs.core/halt\x22,-1049036715))))){\nreturn new cljs.core.Keyword(\x22cljs.core\x22,\x22halt\x22,\x22cljs.core/halt\x22,-1049036715).cljs$core$IFn$_invoke$arity$1(result);\n} else {\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n}\n});\nvar G__14750__2 \x3d (function (result,input){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(input) : pred.call(null,input)))){\nreturn cljs.core.reduced(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\x22cljs.core\x22,\x22halt\x22,\x22cljs.core/halt\x22,-1049036715),(cljs.core.truth_(retf)?(function (){var G__11025 \x3d (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\nvar G__11026 \x3d input;\nreturn (retf.cljs$core$IFn$_invoke$arity$2 ? retf.cljs$core$IFn$_invoke$arity$2(G__11025,G__11026) : retf.call(null,G__11025,G__11026));\n})():input)], null));\n} else {\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\n}\n});\nG__14750 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__14750__0.call(this);\ncase 1:\nreturn G__14750__1.call(this,result);\ncase 2:\nreturn G__14750__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14750.cljs$core$IFn$_invoke$arity$0 \x3d G__14750__0;\nG__14750.cljs$core$IFn$_invoke$arity$1 \x3d G__14750__1;\nG__14750.cljs$core$IFn$_invoke$arity$2 \x3d G__14750__2;\nreturn G__14750;\n})()\n});\n}));\n\n(cljs.core.halt_when.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a lazy sequence removing consecutive duplicates in coll.\n *   Returns a transducer when no collection is provided.\n */\ncljs.core.dedupe \x3d (function cljs$core$dedupe(var_args){\nvar G__11028 \x3d arguments.length;\nswitch (G__11028) {\ncase 0:\nreturn cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn (function (rf){\nvar pa \x3d cljs.core.volatile_BANG_(new cljs.core.Keyword(\x22cljs.core\x22,\x22none\x22,\x22cljs.core/none\x22,926646439));\nreturn (function() {\nvar G__14760 \x3d null;\nvar G__14760__0 \x3d (function (){\nreturn (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));\n});\nvar G__14760__1 \x3d (function (result){\nreturn (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(result) : rf.call(null,result));\n});\nvar G__14760__2 \x3d (function (result,input){\nvar prior \x3d cljs.core.deref(pa);\ncljs.core.vreset_BANG_(pa,input);\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){\nreturn result;\n} else {\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(result,input) : rf.call(null,result,input));\n}\n});\nG__14760 \x3d function(result,input){\nswitch(arguments.length){\ncase 0:\nreturn G__14760__0.call(this);\ncase 1:\nreturn G__14760__1.call(this,result);\ncase 2:\nreturn G__14760__2.call(this,result,input);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14760.cljs$core$IFn$_invoke$arity$0 \x3d G__14760__0;\nG__14760.cljs$core$IFn$_invoke$arity$1 \x3d G__14760__1;\nG__14760.cljs$core$IFn$_invoke$arity$2 \x3d G__14760__2;\nreturn G__14760;\n})()\n});\n}));\n\n(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs.core.dedupe.cljs$core$IFn$_invoke$arity$0(),coll);\n}));\n\n(cljs.core.dedupe.cljs$lang$maxFixedArity \x3d 1);\n\n/**\n * Returns items from coll with random probability of prob (0.0 -\n *   1.0).  Returns a transducer when no collection is provided.\n */\ncljs.core.random_sample \x3d (function cljs$core$random_sample(var_args){\nvar G__11030 \x3d arguments.length;\nswitch (G__11030) {\ncase 1:\nreturn cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.random_sample.cljs$core$IFn$_invoke$arity$1 \x3d (function (prob){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){\nreturn ((cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) \x3c prob);\n}));\n}));\n\n(cljs.core.random_sample.cljs$core$IFn$_invoke$arity$2 \x3d (function (prob,coll){\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){\nreturn ((cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null)) \x3c prob);\n}),coll);\n}));\n\n(cljs.core.random_sample.cljs$lang$maxFixedArity \x3d 2);\n\n\n/**\n* @constructor\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.ISequential}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.Eduction \x3d (function (xform,coll){\nthis.xform \x3d xform;\nthis.coll \x3d coll;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2173173760;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 131072;\n});\n(cljs.core.Eduction.prototype.indexOf \x3d (function() {\nvar G__14792 \x3d null;\nvar G__14792__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,(0));\n});\nvar G__14792__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._indexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,start);\n});\nG__14792 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14792__1.call(this,x);\ncase 2:\nreturn G__14792__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14792.cljs$core$IFn$_invoke$arity$1 \x3d G__14792__1;\nG__14792.cljs$core$IFn$_invoke$arity$2 \x3d G__14792__2;\nreturn G__14792;\n})()\n);\n\n(cljs.core.Eduction.prototype.lastIndexOf \x3d (function() {\nvar G__14793 \x3d null;\nvar G__14793__1 \x3d (function (x){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,cljs.core.count(coll__$1));\n});\nvar G__14793__2 \x3d (function (x,start){\nvar self__ \x3d this;\nvar coll__$1 \x3d this;\nreturn cljs.core._lastIndexOf.cljs$core$IFn$_invoke$arity$3(coll__$1,x,start);\n});\nG__14793 \x3d function(x,start){\nswitch(arguments.length){\ncase 1:\nreturn G__14793__1.call(this,x);\ncase 2:\nreturn G__14793__2.call(this,x,start);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__14793.cljs$core$IFn$_invoke$arity$1 \x3d G__14793__1;\nG__14793.cljs$core$IFn$_invoke$arity$2 \x3d G__14793__2;\nreturn G__14793;\n})()\n);\n\n(cljs.core.Eduction.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.TransformerIterator.create(self__.xform,cljs.core.iter(self__.coll));\n}));\n\n(cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));\n}));\n\n(cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$2 \x3d (function (_,f){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$3(self__.xform,cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f),self__.coll);\n}));\n\n(cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (_,f,init){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,cljs.core.completing.cljs$core$IFn$_invoke$arity$1(f),init,self__.coll);\n}));\n\n(cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (coll__$1,writer,opts){\nvar self__ \x3d this;\nvar coll__$2 \x3d this;\nreturn cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,\x22(\x22,\x22 \x22,\x22)\x22,opts,coll__$2);\n}));\n\n(cljs.core.Eduction.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22xform\x22,\x22xform\x22,-85179481,null),new cljs.core.Symbol(null,\x22coll\x22,\x22coll\x22,-1006698606,null)], null);\n}));\n\n(cljs.core.Eduction.cljs$lang$type \x3d true);\n\n(cljs.core.Eduction.cljs$lang$ctorStr \x3d \x22cljs.core/Eduction\x22);\n\n(cljs.core.Eduction.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Eduction\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Eduction.\n */\ncljs.core.__GT_Eduction \x3d (function cljs$core$__GT_Eduction(xform,coll){\nreturn (new cljs.core.Eduction(xform,coll));\n});\n\n(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] \x3d (function (){\nvar this__5698__auto__ \x3d this;\nreturn cljs.core.es6_iterator(this__5698__auto__);\n}));\n/**\n * Returns a reducible/iterable application of the transducers\n *   to the items in coll. Transducers are applied in order as if\n *   combined with comp. Note that these applications will be\n *   performed every time reduce/iterator is called.\n */\ncljs.core.eduction \x3d (function cljs$core$eduction(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14799 \x3d arguments.length;\nvar i__5770__auto___14800 \x3d (0);\nwhile(true){\nif((i__5770__auto___14800 \x3c len__5769__auto___14799)){\nargs__5775__auto__.push((arguments[i__5770__auto___14800]));\n\nvar G__14801 \x3d (i__5770__auto___14800 + (1));\ni__5770__auto___14800 \x3d G__14801;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.core.eduction.cljs$core$IFn$_invoke$arity$variadic \x3d (function (xforms){\nreturn (new cljs.core.Eduction(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.comp,cljs.core.butlast(xforms)),cljs.core.last(xforms)));\n}));\n\n(cljs.core.eduction.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.core.eduction.cljs$lang$applyTo \x3d (function (seq11031){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11031));\n}));\n\n/**\n * Runs the supplied procedure (via reduce), for purposes of side\n *   effects, on successive items in the collection. Returns nil\n */\ncljs.core.run_BANG_ \x3d (function cljs$core$run_BANG_(proc,coll){\ncljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11033_SHARP_,p2__11032_SHARP_){\nreturn (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(p2__11032_SHARP_) : proc.call(null,p2__11032_SHARP_));\n}),null,coll);\n\nreturn null;\n});\n/**\n * Creates a seqable/reducible via repeated calls to step,\n *   a function of some (continuation token) \x27k\x27. The first call to step\n *   will be passed initk, returning \x27ret\x27. Iff (somef ret) is true,\n *   (vf ret) will be included in the iteration, else iteration will\n *   terminate and vf/kf will not be called. If (kf ret) is non-nil it\n *   will be passed to the next step call, else iteration will terminate.\n *   This can be used e.g. to consume APIs that return paginated or batched data.\n * step - (possibly impure) fn of \x27k\x27 -\x3e \x27ret\x27\n * :somef - fn of \x27ret\x27 -\x3e logical true/false, default \x27some?\x27\n * :vf - fn of \x27ret\x27 -\x3e \x27v\x27, a value produced by the iteration, default \x27identity\x27\n * :kf - fn of \x27ret\x27 -\x3e \x27next-k\x27 or nil (signaling \x27do not continue\x27), default \x27identity\x27\n * :initk - the first value passed to step, default \x27nil\x27\n *   It is presumed that step with non-initk is unreproducible/non-idempotent.\n *   If step with initk is unreproducible it is on the consumer to not consume twice.\n */\ncljs.core.iteration \x3d (function cljs$core$iteration(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14804 \x3d arguments.length;\nvar i__5770__auto___14805 \x3d (0);\nwhile(true){\nif((i__5770__auto___14805 \x3c len__5769__auto___14804)){\nargs__5775__auto__.push((arguments[i__5770__auto___14805]));\n\nvar G__14806 \x3d (i__5770__auto___14805 + (1));\ni__5770__auto___14805 \x3d G__14806;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn cljs.core.iteration.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(cljs.core.iteration.cljs$core$IFn$_invoke$arity$variadic \x3d (function (step,p__11036){\nvar map__11037 \x3d p__11036;\nvar map__11037__$1 \x3d cljs.core.__destructure_map(map__11037);\nvar somef \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__11037__$1,new cljs.core.Keyword(null,\x22somef\x22,\x22somef\x22,-622590365),cljs.core.some_QMARK_);\nvar vf \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__11037__$1,new cljs.core.Keyword(null,\x22vf\x22,\x22vf\x22,-321423269),cljs.core.identity);\nvar kf \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__11037__$1,new cljs.core.Keyword(null,\x22kf\x22,\x22kf\x22,1608087589),cljs.core.identity);\nvar initk \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__11037__$1,new cljs.core.Keyword(null,\x22initk\x22,\x22initk\x22,-1693342987),null);\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core.t_cljs$core11038 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IReduce}\n*/\ncljs.core.t_cljs$core11038 \x3d (function (step,p__11036,map__11037,somef,vf,kf,initk,meta11039){\nthis.step \x3d step;\nthis.p__11036 \x3d p__11036;\nthis.map__11037 \x3d map__11037;\nthis.somef \x3d somef;\nthis.vf \x3d vf;\nthis.kf \x3d kf;\nthis.initk \x3d initk;\nthis.meta11039 \x3d meta11039;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 9306112;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.t_cljs$core11038.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_11040,meta11039__$1){\nvar self__ \x3d this;\nvar _11040__$1 \x3d this;\nreturn (new cljs.core.t_cljs$core11038(self__.step,self__.p__11036,self__.map__11037,self__.somef,self__.vf,self__.kf,self__.initk,meta11039__$1));\n}));\n\n(cljs.core.t_cljs$core11038.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_11040){\nvar self__ \x3d this;\nvar _11040__$1 \x3d this;\nreturn self__.meta11039;\n}));\n\n(cljs.core.t_cljs$core11038.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (function cljs$core$next(ret){\nif(cljs.core.truth_((self__.somef.cljs$core$IFn$_invoke$arity$1 ? self__.somef.cljs$core$IFn$_invoke$arity$1(ret) : self__.somef.call(null,ret)))){\nreturn cljs.core.cons((self__.vf.cljs$core$IFn$_invoke$arity$1 ? self__.vf.cljs$core$IFn$_invoke$arity$1(ret) : self__.vf.call(null,ret)),(function (){var temp__5808__auto__ \x3d (self__.kf.cljs$core$IFn$_invoke$arity$1 ? self__.kf.cljs$core$IFn$_invoke$arity$1(ret) : self__.kf.call(null,ret));\nif((temp__5808__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar k \x3d temp__5808__auto__;\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn cljs$core$next((self__.step.cljs$core$IFn$_invoke$arity$1 ? self__.step.cljs$core$IFn$_invoke$arity$1(k) : self__.step.call(null,k)));\n}),null,null));\n}\n})());\n} else {\nreturn null;\n}\n})((self__.step.cljs$core$IFn$_invoke$arity$1 ? self__.step.cljs$core$IFn$_invoke$arity$1(self__.initk) : self__.step.call(null,self__.initk)));\n}));\n\n(cljs.core.t_cljs$core11038.prototype.cljs$core$IReduce$_reduce$arity$3 \x3d (function (_,rf,init){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nvar acc \x3d init;\nvar ret \x3d (self__.step.cljs$core$IFn$_invoke$arity$1 ? self__.step.cljs$core$IFn$_invoke$arity$1(self__.initk) : self__.step.call(null,self__.initk));\nwhile(true){\nif(cljs.core.truth_((self__.somef.cljs$core$IFn$_invoke$arity$1 ? self__.somef.cljs$core$IFn$_invoke$arity$1(ret) : self__.somef.call(null,ret)))){\nvar acc__$1 \x3d (function (){var G__11041 \x3d acc;\nvar G__11042 \x3d (self__.vf.cljs$core$IFn$_invoke$arity$1 ? self__.vf.cljs$core$IFn$_invoke$arity$1(ret) : self__.vf.call(null,ret));\nreturn (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__11041,G__11042) : rf.call(null,G__11041,G__11042));\n})();\nif(cljs.core.reduced_QMARK_(acc__$1)){\nreturn cljs.core.deref(acc__$1);\n} else {\nvar temp__5806__auto__ \x3d (self__.kf.cljs$core$IFn$_invoke$arity$1 ? self__.kf.cljs$core$IFn$_invoke$arity$1(ret) : self__.kf.call(null,ret));\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn acc__$1;\n} else {\nvar k \x3d temp__5806__auto__;\nvar G__14814 \x3d acc__$1;\nvar G__14815 \x3d (self__.step.cljs$core$IFn$_invoke$arity$1 ? self__.step.cljs$core$IFn$_invoke$arity$1(k) : self__.step.call(null,k));\nacc \x3d G__14814;\nret \x3d G__14815;\ncontinue;\n}\n}\n} else {\nreturn acc;\n}\nbreak;\n}\n}));\n\n(cljs.core.t_cljs$core11038.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22step\x22,\x22step\x22,-1365547645,null),new cljs.core.Symbol(null,\x22p__11036\x22,\x22p__11036\x22,-1272035722,null),new cljs.core.Symbol(null,\x22map__11037\x22,\x22map__11037\x22,-1257666486,null),new cljs.core.Symbol(null,\x22somef\x22,\x22somef\x22,1017941162,null),new cljs.core.Symbol(null,\x22vf\x22,\x22vf\x22,1319108258,null),new cljs.core.Symbol(null,\x22kf\x22,\x22kf\x22,-1046348180,null),new cljs.core.Symbol(null,\x22initk\x22,\x22initk\x22,-52811460,null),new cljs.core.Symbol(null,\x22meta11039\x22,\x22meta11039\x22,1423100476,null)], null);\n}));\n\n(cljs.core.t_cljs$core11038.cljs$lang$type \x3d true);\n\n(cljs.core.t_cljs$core11038.cljs$lang$ctorStr \x3d \x22cljs.core/t_cljs$core11038\x22);\n\n(cljs.core.t_cljs$core11038.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/t_cljs$core11038\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/t_cljs$core11038.\n */\ncljs.core.__GT_t_cljs$core11038 \x3d (function cljs$core$__GT_t_cljs$core11038(step__$1,p__11036__$1,map__11037__$2,somef__$1,vf__$1,kf__$1,initk__$1,meta11039){\nreturn (new cljs.core.t_cljs$core11038(step__$1,p__11036__$1,map__11037__$2,somef__$1,vf__$1,kf__$1,initk__$1,meta11039));\n});\n\n}\n\nreturn (new cljs.core.t_cljs$core11038(step,p__11036,map__11037__$1,somef,vf,kf,initk,cljs.core.PersistentArrayMap.EMPTY));\n}));\n\n(cljs.core.iteration.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(cljs.core.iteration.cljs$lang$applyTo \x3d (function (seq11034){\nvar G__11035 \x3d cljs.core.first(seq11034);\nvar seq11034__$1 \x3d cljs.core.next(seq11034);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11035,seq11034__$1);\n}));\n\n\n/**\n * @interface\n */\ncljs.core.IEncodeJS \x3d function(){};\n\nvar cljs$core$IEncodeJS$_clj__GT_js$dyn_14822 \x3d (function (x){\nvar x__5393__auto__ \x3d (((x \x3d\x3d null))?null:x);\nvar m__5394__auto__ \x3d (cljs.core._clj__GT_js[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5394__auto__.call(null,x));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._clj__GT_js[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5392__auto__.call(null,x));\n} else {\nthrow cljs.core.missing_protocol(\x22IEncodeJS.-clj-\x3ejs\x22,x);\n}\n}\n});\n/**\n * Recursively transforms clj values to JavaScript\n */\ncljs.core._clj__GT_js \x3d (function cljs$core$_clj__GT_js(x){\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$IEncodeJS$_clj__GT_js$arity$1 \x3d\x3d null)))))){\nreturn x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);\n} else {\nreturn cljs$core$IEncodeJS$_clj__GT_js$dyn_14822(x);\n}\n});\n\nvar cljs$core$IEncodeJS$_key__GT_js$dyn_14825 \x3d (function (x){\nvar x__5393__auto__ \x3d (((x \x3d\x3d null))?null:x);\nvar m__5394__auto__ \x3d (cljs.core._key__GT_js[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5394__auto__.call(null,x));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._key__GT_js[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5392__auto__.call(null,x));\n} else {\nthrow cljs.core.missing_protocol(\x22IEncodeJS.-key-\x3ejs\x22,x);\n}\n}\n});\n/**\n * Transforms map keys to valid JavaScript keys. Arbitrary keys are\n *   encoded to their string representation via (pr-str x)\n */\ncljs.core._key__GT_js \x3d (function cljs$core$_key__GT_js(x){\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$IEncodeJS$_key__GT_js$arity$1 \x3d\x3d null)))))){\nreturn x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);\n} else {\nreturn cljs$core$IEncodeJS$_key__GT_js$dyn_14825(x);\n}\n});\n\ncljs.core.key__GT_js \x3d (function cljs$core$key__GT_js(var_args){\nvar G__11044 \x3d arguments.length;\nswitch (G__11044) {\ncase 1:\nreturn cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$1 \x3d (function (k){\nreturn cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k,cljs.core.clj__GT_js);\n}));\n\n(cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2 \x3d (function (k,primitive_fn){\nif((((!((k \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d k.cljs$core$IEncodeJS$))))?true:(((!k.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,k):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,k))){\nreturn cljs.core._clj__GT_js(k);\n} else {\nif(((typeof k \x3d\x3d\x3d \x27string\x27) || (((typeof k \x3d\x3d\x3d \x27number\x27) || ((((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol)))))))){\nreturn (primitive_fn.cljs$core$IFn$_invoke$arity$1 ? primitive_fn.cljs$core$IFn$_invoke$arity$1(k) : primitive_fn.call(null,k));\n} else {\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([k], 0));\n\n}\n}\n}));\n\n(cljs.core.key__GT_js.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Recursively transforms ClojureScript values to JavaScript.\n *   sets/vectors/lists become Arrays, Keywords and Symbol become Strings,\n *   Maps become Objects. Arbitrary keys are encoded to by `key-\x3ejs`.\n *   Options is a key-value pair, where the only valid key is\n *   :keyword-fn, which should point to a single-argument function to be\n *   called on keyword keys. Default to `name`.\n */\ncljs.core.clj__GT_js \x3d (function cljs$core$clj__GT_js(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14834 \x3d arguments.length;\nvar i__5770__auto___14835 \x3d (0);\nwhile(true){\nif((i__5770__auto___14835 \x3c len__5769__auto___14834)){\nargs__5775__auto__.push((arguments[i__5770__auto___14835]));\n\nvar G__14836 \x3d (i__5770__auto___14835 + (1));\ni__5770__auto___14835 \x3d G__14836;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,p__11048){\nvar map__11049 \x3d p__11048;\nvar map__11049__$1 \x3d cljs.core.__destructure_map(map__11049);\nvar options \x3d map__11049__$1;\nvar keyword_fn \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(map__11049__$1,new cljs.core.Keyword(null,\x22keyword-fn\x22,\x22keyword-fn\x22,-64566675),cljs.core.name);\nvar keyfn \x3d (function cljs$core$keyfn(k){\nreturn cljs.core.key__GT_js.cljs$core$IFn$_invoke$arity$2(k,thisfn);\n});\nvar thisfn \x3d (function cljs$core$thisfn(x__$1){\nif((x__$1 \x3d\x3d null)){\nreturn null;\n} else {\nif((((!((x__$1 \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x__$1.cljs$core$IEncodeJS$))))?true:(((!x__$1.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,x__$1):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,x__$1))){\nreturn cljs.core._clj__GT_js(x__$1);\n} else {\nif((x__$1 instanceof cljs.core.Keyword)){\nreturn (keyword_fn.cljs$core$IFn$_invoke$arity$1 ? keyword_fn.cljs$core$IFn$_invoke$arity$1(x__$1) : keyword_fn.call(null,x__$1));\n} else {\nif((x__$1 instanceof cljs.core.Symbol)){\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(x__$1);\n} else {\nif(cljs.core.map_QMARK_(x__$1)){\nvar m \x3d ({});\nvar seq__11076_14839 \x3d cljs.core.seq(x__$1);\nvar chunk__11077_14840 \x3d null;\nvar count__11078_14841 \x3d (0);\nvar i__11079_14842 \x3d (0);\nwhile(true){\nif((i__11079_14842 \x3c count__11078_14841)){\nvar vec__11086_14843 \x3d chunk__11077_14840.cljs$core$IIndexed$_nth$arity$2(null,i__11079_14842);\nvar k_14844 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11086_14843,(0),null);\nvar v_14845 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11086_14843,(1),null);\ncljs.core.goog$module$goog$object.set(m,keyfn(k_14844),cljs$core$thisfn(v_14845));\n\n\nvar G__14846 \x3d seq__11076_14839;\nvar G__14847 \x3d chunk__11077_14840;\nvar G__14848 \x3d count__11078_14841;\nvar G__14849 \x3d (i__11079_14842 + (1));\nseq__11076_14839 \x3d G__14846;\nchunk__11077_14840 \x3d G__14847;\ncount__11078_14841 \x3d G__14848;\ni__11079_14842 \x3d G__14849;\ncontinue;\n} else {\nvar temp__5804__auto___14850 \x3d cljs.core.seq(seq__11076_14839);\nif(temp__5804__auto___14850){\nvar seq__11076_14852__$1 \x3d temp__5804__auto___14850;\nif(cljs.core.chunked_seq_QMARK_(seq__11076_14852__$1)){\nvar c__5568__auto___14856 \x3d cljs.core.chunk_first(seq__11076_14852__$1);\nvar G__14857 \x3d cljs.core.chunk_rest(seq__11076_14852__$1);\nvar G__14858 \x3d c__5568__auto___14856;\nvar G__14859 \x3d cljs.core.count(c__5568__auto___14856);\nvar G__14860 \x3d (0);\nseq__11076_14839 \x3d G__14857;\nchunk__11077_14840 \x3d G__14858;\ncount__11078_14841 \x3d G__14859;\ni__11079_14842 \x3d G__14860;\ncontinue;\n} else {\nvar vec__11089_14861 \x3d cljs.core.first(seq__11076_14852__$1);\nvar k_14862 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11089_14861,(0),null);\nvar v_14863 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11089_14861,(1),null);\ncljs.core.goog$module$goog$object.set(m,keyfn(k_14862),cljs$core$thisfn(v_14863));\n\n\nvar G__14867 \x3d cljs.core.next(seq__11076_14852__$1);\nvar G__14868 \x3d null;\nvar G__14869 \x3d (0);\nvar G__14870 \x3d (0);\nseq__11076_14839 \x3d G__14867;\nchunk__11077_14840 \x3d G__14868;\ncount__11078_14841 \x3d G__14869;\ni__11079_14842 \x3d G__14870;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn m;\n} else {\nif(cljs.core.coll_QMARK_(x__$1)){\nvar arr \x3d [];\nvar seq__11092_14871 \x3d cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn,x__$1));\nvar chunk__11093_14872 \x3d null;\nvar count__11094_14873 \x3d (0);\nvar i__11095_14874 \x3d (0);\nwhile(true){\nif((i__11095_14874 \x3c count__11094_14873)){\nvar x_14875__$2 \x3d chunk__11093_14872.cljs$core$IIndexed$_nth$arity$2(null,i__11095_14874);\narr.push(x_14875__$2);\n\n\nvar G__14876 \x3d seq__11092_14871;\nvar G__14877 \x3d chunk__11093_14872;\nvar G__14878 \x3d count__11094_14873;\nvar G__14879 \x3d (i__11095_14874 + (1));\nseq__11092_14871 \x3d G__14876;\nchunk__11093_14872 \x3d G__14877;\ncount__11094_14873 \x3d G__14878;\ni__11095_14874 \x3d G__14879;\ncontinue;\n} else {\nvar temp__5804__auto___14880 \x3d cljs.core.seq(seq__11092_14871);\nif(temp__5804__auto___14880){\nvar seq__11092_14881__$1 \x3d temp__5804__auto___14880;\nif(cljs.core.chunked_seq_QMARK_(seq__11092_14881__$1)){\nvar c__5568__auto___14882 \x3d cljs.core.chunk_first(seq__11092_14881__$1);\nvar G__14883 \x3d cljs.core.chunk_rest(seq__11092_14881__$1);\nvar G__14884 \x3d c__5568__auto___14882;\nvar G__14885 \x3d cljs.core.count(c__5568__auto___14882);\nvar G__14886 \x3d (0);\nseq__11092_14871 \x3d G__14883;\nchunk__11093_14872 \x3d G__14884;\ncount__11094_14873 \x3d G__14885;\ni__11095_14874 \x3d G__14886;\ncontinue;\n} else {\nvar x_14887__$2 \x3d cljs.core.first(seq__11092_14881__$1);\narr.push(x_14887__$2);\n\n\nvar G__14888 \x3d cljs.core.next(seq__11092_14881__$1);\nvar G__14889 \x3d null;\nvar G__14890 \x3d (0);\nvar G__14891 \x3d (0);\nseq__11092_14871 \x3d G__14888;\nchunk__11093_14872 \x3d G__14889;\ncount__11094_14873 \x3d G__14890;\ni__11095_14874 \x3d G__14891;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn arr;\n} else {\nreturn x__$1;\n\n}\n}\n}\n}\n}\n}\n});\nreturn thisfn(x);\n}));\n\n(cljs.core.clj__GT_js.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(cljs.core.clj__GT_js.cljs$lang$applyTo \x3d (function (seq11046){\nvar G__11047 \x3d cljs.core.first(seq11046);\nvar seq11046__$1 \x3d cljs.core.next(seq11046);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11047,seq11046__$1);\n}));\n\n\n/**\n * @interface\n */\ncljs.core.IEncodeClojure \x3d function(){};\n\nvar cljs$core$IEncodeClojure$_js__GT_clj$dyn_14894 \x3d (function (x,options){\nvar x__5393__auto__ \x3d (((x \x3d\x3d null))?null:x);\nvar m__5394__auto__ \x3d (cljs.core._js__GT_clj[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(x,options) : m__5394__auto__.call(null,x,options));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._js__GT_clj[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(x,options) : m__5392__auto__.call(null,x,options));\n} else {\nthrow cljs.core.missing_protocol(\x22IEncodeClojure.-js-\x3eclj\x22,x);\n}\n}\n});\n/**\n * Transforms JavaScript values to Clojure\n */\ncljs.core._js__GT_clj \x3d (function cljs$core$_js__GT_clj(x,options){\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2 \x3d\x3d null)))))){\nreturn x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);\n} else {\nreturn cljs$core$IEncodeClojure$_js__GT_clj$dyn_14894(x,options);\n}\n});\n\n/**\n * Recursively transforms JavaScript arrays into ClojureScript\n *   vectors, and JavaScript objects into ClojureScript maps.  With\n *   option \x27:keywordize-keys true\x27 will convert object fields from\n *   strings to keywords.\n */\ncljs.core.js__GT_clj \x3d (function cljs$core$js__GT_clj(var_args){\nvar G__11101 \x3d arguments.length;\nswitch (G__11101) {\ncase 1:\nreturn cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___14906 \x3d arguments.length;\nvar i__5770__auto___14907 \x3d (0);\nwhile(true){\nif((i__5770__auto___14907 \x3c len__5769__auto___14906)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___14907]));\n\nvar G__14908 \x3d (i__5770__auto___14907 + (1));\ni__5770__auto___14907 \x3d G__14908;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((1)),(0),null));\nreturn cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22keywordize-keys\x22,\x22keywordize-keys\x22,1310784252),false], 0));\n}));\n\n(cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,opts){\nvar map__11102 \x3d opts;\nvar map__11102__$1 \x3d cljs.core.__destructure_map(map__11102);\nvar keywordize_keys \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11102__$1,new cljs.core.Keyword(null,\x22keywordize-keys\x22,\x22keywordize-keys\x22,1310784252));\nvar keyfn \x3d (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);\nvar f \x3d (function cljs$core$thisfn(x__$1){\nif((((!((x__$1 \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x__$1.cljs$core$IEncodeClojure$))))?true:(((!x__$1.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,x__$1):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,x__$1))){\nreturn cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));\n} else {\nif(cljs.core.seq_QMARK_(x__$1)){\nreturn cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$thisfn,x__$1));\n} else {\nif(cljs.core.map_entry_QMARK_(x__$1)){\nreturn (new cljs.core.MapEntry(cljs$core$thisfn(cljs.core.key(x__$1)),cljs$core$thisfn(cljs.core.val(x__$1)),null));\n} else {\nif(cljs.core.coll_QMARK_(x__$1)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$1(cljs$core$thisfn),x__$1);\n} else {\nif(cljs.core.array_QMARK_(x__$1)){\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11096_SHARP_,p2__11097_SHARP_){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(p1__11096_SHARP_,cljs$core$thisfn(p2__11097_SHARP_));\n}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),x__$1));\n} else {\nif((cljs.core.type(x__$1) \x3d\x3d\x3d Object)){\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (r,k){\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(r,(keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(k) : keyfn.call(null,k)),cljs$core$thisfn(cljs.core.goog$module$goog$object.get(x__$1,k)));\n}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),cljs.core.js_keys(x__$1)));\n} else {\nreturn x__$1;\n\n}\n}\n}\n}\n}\n}\n});\nreturn f(x);\n}));\n\n/** @this {Function} */\n(cljs.core.js__GT_clj.cljs$lang$applyTo \x3d (function (seq11099){\nvar G__11100 \x3d cljs.core.first(seq11099);\nvar seq11099__$1 \x3d cljs.core.next(seq11099);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11100,seq11099__$1);\n}));\n\n(cljs.core.js__GT_clj.cljs$lang$maxFixedArity \x3d (1));\n\n/**\n * Returns a memoized version of a referentially transparent function. The\n *   memoized version of the function keeps a cache of the mapping from arguments\n *   to results and, when calls with the same arguments are repeated often, has\n *   higher performance at the expense of higher memory use.\n */\ncljs.core.memoize \x3d (function cljs$core$memoize(f){\nvar mem \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nreturn (function() { \nvar G__14915__delegate \x3d function (args){\nvar v \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(mem),args,cljs.core.lookup_sentinel);\nif((v \x3d\x3d\x3d cljs.core.lookup_sentinel)){\nvar ret \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);\n\nreturn ret;\n} else {\nreturn v;\n}\n};\nvar G__14915 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__14920__i \x3d 0, G__14920__a \x3d new Array(arguments.length -  0);\nwhile (G__14920__i \x3c G__14920__a.length) {G__14920__a[G__14920__i] \x3d arguments[G__14920__i + 0]; ++G__14920__i;}\n  args \x3d new cljs.core.IndexedSeq(G__14920__a,0,null);\n} \nreturn G__14915__delegate.call(this,args);};\nG__14915.cljs$lang$maxFixedArity \x3d 0;\nG__14915.cljs$lang$applyTo \x3d (function (arglist__14921){\nvar args \x3d cljs.core.seq(arglist__14921);\nreturn G__14915__delegate(args);\n});\nG__14915.cljs$core$IFn$_invoke$arity$variadic \x3d G__14915__delegate;\nreturn G__14915;\n})()\n;\n});\n/**\n * trampoline can be used to convert algorithms requiring mutual\n *   recursion without stack consumption. Calls f with supplied args, if\n *   any. If f returns a fn, calls that fn with no arguments, and\n *   continues to repeat, until the return value is not a fn, then\n *   returns that non-fn value. Note that if you want to return a fn as a\n *   final value, you must wrap it in some data structure and unpack it\n *   after trampoline returns.\n */\ncljs.core.trampoline \x3d (function cljs$core$trampoline(var_args){\nvar G__11107 \x3d arguments.length;\nswitch (G__11107) {\ncase 1:\nreturn cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___14923 \x3d arguments.length;\nvar i__5770__auto___14924 \x3d (0);\nwhile(true){\nif((i__5770__auto___14924 \x3c len__5769__auto___14923)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___14924]));\n\nvar G__14925 \x3d (i__5770__auto___14924 + (1));\ni__5770__auto___14924 \x3d G__14925;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((1)),(0),null));\nreturn cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5795__auto__);\n\n}\n});\n\n(cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nwhile(true){\nvar ret \x3d (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\nif(cljs.core.fn_QMARK_(ret)){\nvar G__14926 \x3d ret;\nf \x3d G__14926;\ncontinue;\n} else {\nreturn ret;\n}\nbreak;\n}\n}));\n\n(cljs.core.trampoline.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nreturn cljs.core.trampoline.cljs$core$IFn$_invoke$arity$1((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);\n}));\n}));\n\n/** @this {Function} */\n(cljs.core.trampoline.cljs$lang$applyTo \x3d (function (seq11105){\nvar G__11106 \x3d cljs.core.first(seq11105);\nvar seq11105__$1 \x3d cljs.core.next(seq11105);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11106,seq11105__$1);\n}));\n\n(cljs.core.trampoline.cljs$lang$maxFixedArity \x3d (1));\n\n/**\n * Returns a random floating point number between 0 (inclusive) and\n *   n (default 1) (exclusive).\n */\ncljs.core.rand \x3d (function cljs$core$rand(var_args){\nvar G__11109 \x3d arguments.length;\nswitch (G__11109) {\ncase 0:\nreturn cljs.core.rand.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn cljs.core.rand.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.rand.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.rand.cljs$core$IFn$_invoke$arity$1((1));\n}));\n\n(cljs.core.rand.cljs$core$IFn$_invoke$arity$1 \x3d (function (n){\nreturn (Math.random() * n);\n}));\n\n(cljs.core.rand.cljs$lang$maxFixedArity \x3d 1);\n\n/**\n * Returns a random integer between 0 (inclusive) and n (exclusive).\n */\ncljs.core.rand_int \x3d (function cljs$core$rand_int(n){\nreturn Math.floor((Math.random() * n));\n});\n/**\n * Return a random element of the (sequential) collection. Will have\n *   the same performance characteristics as nth for the given\n *   collection.\n */\ncljs.core.rand_nth \x3d (function cljs$core$rand_nth(coll){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));\n});\n/**\n * Returns a map of the elements of coll keyed by the result of\n *   f on each element. The value at each key will be a vector of the\n *   corresponding elements, in the order they appeared in coll.\n */\ncljs.core.group_by \x3d (function cljs$core$group_by(f,coll){\nreturn cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){\nvar k \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(x) : f.call(null,x));\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));\n}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));\n});\n/**\n * Creates a hierarchy object for use with derive, isa? etc.\n */\ncljs.core.make_hierarchy \x3d (function cljs$core$make_hierarchy(){\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22descendants\x22,\x22descendants\x22,1824886031),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424),cljs.core.PersistentArrayMap.EMPTY], null);\n});\n/**\n * @type {*}\n */\ncljs.core._global_hierarchy \x3d null;\ncljs.core.get_global_hierarchy \x3d (function cljs$core$get_global_hierarchy(){\nif((cljs.core._global_hierarchy \x3d\x3d null)){\n(cljs.core._global_hierarchy \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.make_hierarchy()));\n} else {\n}\n\nreturn cljs.core._global_hierarchy;\n});\ncljs.core.swap_global_hierarchy_BANG_ \x3d (function cljs$core$swap_global_hierarchy_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14936 \x3d arguments.length;\nvar i__5770__auto___14937 \x3d (0);\nwhile(true){\nif((i__5770__auto___14937 \x3c len__5769__auto___14936)){\nargs__5775__auto__.push((arguments[i__5770__auto___14937]));\n\nvar G__14938 \x3d (i__5770__auto___14937 + (1));\ni__5770__auto___14937 \x3d G__14938;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);\n}));\n\n(cljs.core.swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(cljs.core.swap_global_hierarchy_BANG_.cljs$lang$applyTo \x3d (function (seq11110){\nvar G__11111 \x3d cljs.core.first(seq11110);\nvar seq11110__$1 \x3d cljs.core.next(seq11110);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11111,seq11110__$1);\n}));\n\n/**\n * Returns true if (\x3d child parent), or child is directly or indirectly derived from\n *   parent, either via a JavaScript type inheritance relationship or a\n *   relationship established via derive. h must be a hierarchy obtained\n *   from make-hierarchy, if not supplied defaults to the global\n *   hierarchy\n */\ncljs.core.isa_QMARK_ \x3d (function cljs$core$isa_QMARK_(var_args){\nvar G__11113 \x3d arguments.length;\nswitch (G__11113) {\ncase 2:\nreturn cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2 \x3d (function (child,parent){\nreturn cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(cljs.core.get_global_hierarchy()),child,parent);\n}));\n\n(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3 \x3d (function (h,child,parent){\nvar or__5045__auto__ \x3d cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d cljs.core.contains_QMARK_((function (){var fexpr__11114 \x3d new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424).cljs$core$IFn$_invoke$arity$1(h);\nreturn (fexpr__11114.cljs$core$IFn$_invoke$arity$1 ? fexpr__11114.cljs$core$IFn$_invoke$arity$1(child) : fexpr__11114.call(null,child));\n})(),parent);\nif(or__5045__auto____$1){\nreturn or__5045__auto____$1;\n} else {\nvar and__5043__auto__ \x3d cljs.core.vector_QMARK_(parent);\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d cljs.core.vector_QMARK_(child);\nif(and__5043__auto____$1){\nvar and__5043__auto____$2 \x3d (cljs.core.count(parent) \x3d\x3d\x3d cljs.core.count(child));\nif(and__5043__auto____$2){\nvar ret \x3d true;\nvar i \x3d (0);\nwhile(true){\nif((((!(ret))) || ((i \x3d\x3d\x3d cljs.core.count(parent))))){\nreturn ret;\n} else {\nvar G__14943 \x3d cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(i) : child.call(null,i)),(parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(i) : parent.call(null,i)));\nvar G__14944 \x3d (i + (1));\nret \x3d G__14943;\ni \x3d G__14944;\ncontinue;\n}\nbreak;\n}\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n}\n}\n}));\n\n(cljs.core.isa_QMARK_.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Returns the immediate parents of tag, either via a JavaScript type\n *   inheritance relationship or a relationship established via derive. h\n *   must be a hierarchy obtained from make-hierarchy, if not supplied\n *   defaults to the global hierarchy\n */\ncljs.core.parents \x3d (function cljs$core$parents(var_args){\nvar G__11116 \x3d arguments.length;\nswitch (G__11116) {\ncase 1:\nreturn cljs.core.parents.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.parents.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.parents.cljs$core$IFn$_invoke$arity$1 \x3d (function (tag){\nreturn cljs.core.parents.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()),tag);\n}));\n\n(cljs.core.parents.cljs$core$IFn$_invoke$arity$2 \x3d (function (h,tag){\nreturn cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag));\n}));\n\n(cljs.core.parents.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns the immediate and indirect parents of tag, either via a JavaScript type\n *   inheritance relationship or a relationship established via derive. h\n *   must be a hierarchy obtained from make-hierarchy, if not supplied\n *   defaults to the global hierarchy\n */\ncljs.core.ancestors \x3d (function cljs$core$ancestors(var_args){\nvar G__11118 \x3d arguments.length;\nswitch (G__11118) {\ncase 1:\nreturn cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.ancestors.cljs$core$IFn$_invoke$arity$1 \x3d (function (tag){\nreturn cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()),tag);\n}));\n\n(cljs.core.ancestors.cljs$core$IFn$_invoke$arity$2 \x3d (function (h,tag){\nreturn cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424).cljs$core$IFn$_invoke$arity$1(h),tag));\n}));\n\n(cljs.core.ancestors.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns the immediate and indirect children of tag, through a\n *   relationship established via derive. h must be a hierarchy obtained\n *   from make-hierarchy, if not supplied defaults to the global\n *   hierarchy. Note: does not work on JavaScript type inheritance\n *   relationships.\n */\ncljs.core.descendants \x3d (function cljs$core$descendants(var_args){\nvar G__11120 \x3d arguments.length;\nswitch (G__11120) {\ncase 1:\nreturn cljs.core.descendants.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.descendants.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.descendants.cljs$core$IFn$_invoke$arity$1 \x3d (function (tag){\nreturn cljs.core.descendants.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.get_global_hierarchy()),tag);\n}));\n\n(cljs.core.descendants.cljs$core$IFn$_invoke$arity$2 \x3d (function (h,tag){\nreturn cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22descendants\x22,\x22descendants\x22,1824886031).cljs$core$IFn$_invoke$arity$1(h),tag));\n}));\n\n(cljs.core.descendants.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Establishes a parent/child relationship between parent and\n *   tag. Parent must be a namespace-qualified symbol or keyword and\n *   child can be either a namespace-qualified symbol or keyword or a\n *   class. h must be a hierarchy obtained from make-hierarchy, if not\n *   supplied defaults to, and modifies, the global hierarchy.\n */\ncljs.core.derive \x3d (function cljs$core$derive(var_args){\nvar G__11122 \x3d arguments.length;\nswitch (G__11122) {\ncase 2:\nreturn cljs.core.derive.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.derive.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.derive.cljs$core$IFn$_invoke$arity$2 \x3d (function (tag,parent){\nif(cljs.core.truth_(cljs.core.namespace(parent))){\n} else {\nthrow (new Error(\x22Assert failed: (namespace parent)\x22));\n}\n\ncljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.derive,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag,parent], 0));\n\nreturn null;\n}));\n\n(cljs.core.derive.cljs$core$IFn$_invoke$arity$3 \x3d (function (h,tag,parent){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){\n} else {\nthrow (new Error(\x22Assert failed: (not\x3d tag parent)\x22));\n}\n\nvar tp \x3d new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891).cljs$core$IFn$_invoke$arity$1(h);\nvar td \x3d new cljs.core.Keyword(null,\x22descendants\x22,\x22descendants\x22,1824886031).cljs$core$IFn$_invoke$arity$1(h);\nvar ta \x3d new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424).cljs$core$IFn$_invoke$arity$1(h);\nvar tf \x3d (function (m,source,sources,target,targets){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,k){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(target) : targets.call(null,target)))));\n}),m,cljs.core.cons(source,(sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(source) : sources.call(null,source))));\n});\nvar or__5045__auto__ \x3d ((cljs.core.contains_QMARK_((tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(tag) : tp.call(null,tag)),parent))?null:(function (){\nif(cljs.core.contains_QMARK_((ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(tag) : ta.call(null,tag)),parent)){\nthrow (new Error([cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag),\x22already has\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent),\x22as ancestor\x22].join(\x27\x27)));\n} else {\n}\n\nif(cljs.core.contains_QMARK_((ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(parent) : ta.call(null,parent)),tag)){\nthrow (new Error([\x22Cyclic derivation:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(parent),\x22has\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(tag),\x22as ancestor\x22].join(\x27\x27)));\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891).cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424),tf(new cljs.core.Keyword(null,\x22ancestors\x22,\x22ancestors\x22,-776045424).cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),new cljs.core.Keyword(null,\x22descendants\x22,\x22descendants\x22,1824886031),tf(new cljs.core.Keyword(null,\x22descendants\x22,\x22descendants\x22,1824886031).cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);\n})()\n);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn h;\n}\n}));\n\n(cljs.core.derive.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Removes a parent/child relationship between parent and\n *   tag. h must be a hierarchy obtained from make-hierarchy, if not\n *   supplied defaults to, and modifies, the global hierarchy.\n */\ncljs.core.underive \x3d (function cljs$core$underive(var_args){\nvar G__11127 \x3d arguments.length;\nswitch (G__11127) {\ncase 2:\nreturn cljs.core.underive.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.underive.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.underive.cljs$core$IFn$_invoke$arity$2 \x3d (function (tag,parent){\ncljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.underive,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([tag,parent], 0));\n\nreturn null;\n}));\n\n(cljs.core.underive.cljs$core$IFn$_invoke$arity$3 \x3d (function (h,tag,parent){\nvar parentMap \x3d new cljs.core.Keyword(null,\x22parents\x22,\x22parents\x22,-2027538891).cljs$core$IFn$_invoke$arity$1(h);\nvar childsParents \x3d (cljs.core.truth_((parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null,tag)))?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null,tag)),parent):cljs.core.PersistentHashSet.EMPTY);\nvar newParents \x3d (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));\nvar deriv_seq \x3d cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11123_SHARP_){\nreturn cljs.core.cons(cljs.core.first(p1__11123_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__11123_SHARP_),cljs.core.second(p1__11123_SHARP_)));\n}),cljs.core.seq(newParents)));\nif(cljs.core.contains_QMARK_((parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(tag) : parentMap.call(null,tag)),parent)){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11124_SHARP_,p2__11125_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__11124_SHARP_,p2__11125_SHARP_);\n}),cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));\n} else {\nreturn h;\n}\n}));\n\n(cljs.core.underive.cljs$lang$maxFixedArity \x3d 3);\n\ncljs.core.reset_cache \x3d (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){\nreturn cljs.core.deref(method_table);\n}));\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){\nreturn cljs.core.deref(hierarchy);\n}));\n});\ncljs.core.prefers_STAR_ \x3d (function cljs$core$prefers_STAR_(x,y,prefer_table){\nvar xprefs \x3d (function (){var fexpr__11128 \x3d cljs.core.deref(prefer_table);\nreturn (fexpr__11128.cljs$core$IFn$_invoke$arity$1 ? fexpr__11128.cljs$core$IFn$_invoke$arity$1(x) : fexpr__11128.call(null,x));\n})();\nvar or__5045__auto__ \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d xprefs;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(y) : xprefs.call(null,y));\n} else {\nreturn and__5043__auto__;\n}\n})())?true:null);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (function (){var ps \x3d cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);\nwhile(true){\nif((cljs.core.count(ps) \x3e (0))){\nif(cljs.core.truth_((function (){var G__11129 \x3d x;\nvar G__11130 \x3d cljs.core.first(ps);\nvar G__11131 \x3d prefer_table;\nreturn (cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__11129,G__11130,G__11131) : cljs.core.prefers_STAR_.call(null,G__11129,G__11130,G__11131));\n})())){\n} else {\n}\n\nvar G__14971 \x3d cljs.core.rest(ps);\nps \x3d G__14971;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n})();\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 \x3d (function (){var ps \x3d cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);\nwhile(true){\nif((cljs.core.count(ps) \x3e (0))){\nif(cljs.core.truth_((function (){var G__11132 \x3d cljs.core.first(ps);\nvar G__11133 \x3d y;\nvar G__11134 \x3d prefer_table;\nreturn (cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3 ? cljs.core.prefers_STAR_.cljs$core$IFn$_invoke$arity$3(G__11132,G__11133,G__11134) : cljs.core.prefers_STAR_.call(null,G__11132,G__11133,G__11134));\n})())){\n} else {\n}\n\nvar G__14972 \x3d cljs.core.rest(ps);\nps \x3d G__14972;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n})();\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nreturn false;\n}\n}\n}\n});\ncljs.core.dominates \x3d (function cljs$core$dominates(x,y,prefer_table,hierarchy){\nvar or__5045__auto__ \x3d cljs.core.prefers_STAR_(x,y,prefer_table);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(hierarchy,x,y);\n}\n});\ncljs.core.find_and_cache_best_method \x3d (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy,default_dispatch_val){\nvar best_entry \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__11135){\nvar vec__11136 \x3d p__11135;\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11136,(0),null);\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11136,(1),null);\nvar e \x3d vec__11136;\nif(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(cljs.core.deref(hierarchy),dispatch_val,k)){\nvar be2 \x3d (((((be \x3d\x3d null)) || (cljs.core.dominates(k,cljs.core.first(be),prefer_table,cljs.core.deref(hierarchy)))))?e:be);\nif(cljs.core.dominates(cljs.core.first(be2),k,prefer_table,cljs.core.deref(hierarchy))){\n} else {\nthrow (new Error([\x22Multiple methods in multimethod \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\x22\x27 match dispatch value: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val),\x22 -\x3e \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(k),\x22 and \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(be2)),\x22, and neither is preferred\x22].join(\x27\x27)));\n}\n\nreturn be2;\n} else {\nreturn be;\n}\n}),null,cljs.core.deref(method_table));\nvar best_entry__$1 \x3d (function (){var temp__5802__auto__ \x3d (function (){var and__5043__auto__ \x3d (best_entry \x3d\x3d null);\nif(and__5043__auto__){\nvar fexpr__11139 \x3d cljs.core.deref(method_table);\nreturn (fexpr__11139.cljs$core$IFn$_invoke$arity$1 ? fexpr__11139.cljs$core$IFn$_invoke$arity$1(default_dispatch_val) : fexpr__11139.call(null,default_dispatch_val));\n} else {\nreturn and__5043__auto__;\n}\n})();\nif(cljs.core.truth_(temp__5802__auto__)){\nvar entry \x3d temp__5802__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default_dispatch_val,entry], null);\n} else {\nreturn best_entry;\n}\n})();\nif(cljs.core.truth_(best_entry__$1)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cached_hierarchy),cljs.core.deref(hierarchy))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry__$1));\n\nreturn cljs.core.second(best_entry__$1);\n} else {\ncljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);\n\nreturn (cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8 ? cljs.core.find_and_cache_best_method.cljs$core$IFn$_invoke$arity$8(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy,default_dispatch_val) : cljs.core.find_and_cache_best_method.call(null,name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy,default_dispatch_val));\n}\n} else {\nreturn null;\n}\n});\n\n/**\n * @interface\n */\ncljs.core.IMultiFn \x3d function(){};\n\nvar cljs$core$IMultiFn$_reset$dyn_14974 \x3d (function (mf){\nvar x__5393__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\nvar m__5394__auto__ \x3d (cljs.core._reset[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5394__auto__.call(null,mf));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._reset[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5392__auto__.call(null,mf));\n} else {\nthrow cljs.core.missing_protocol(\x22IMultiFn.-reset\x22,mf);\n}\n}\n});\ncljs.core._reset \x3d (function cljs$core$_reset(mf){\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_reset$arity$1 \x3d\x3d null)))))){\nreturn mf.cljs$core$IMultiFn$_reset$arity$1(mf);\n} else {\nreturn cljs$core$IMultiFn$_reset$dyn_14974(mf);\n}\n});\n\nvar cljs$core$IMultiFn$_add_method$dyn_14975 \x3d (function (mf,dispatch_val,method){\nvar x__5393__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\nvar m__5394__auto__ \x3d (cljs.core._add_method[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,method) : m__5394__auto__.call(null,mf,dispatch_val,method));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._add_method[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,method) : m__5392__auto__.call(null,mf,dispatch_val,method));\n} else {\nthrow cljs.core.missing_protocol(\x22IMultiFn.-add-method\x22,mf);\n}\n}\n});\ncljs.core._add_method \x3d (function cljs$core$_add_method(mf,dispatch_val,method){\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_add_method$arity$3 \x3d\x3d null)))))){\nreturn mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);\n} else {\nreturn cljs$core$IMultiFn$_add_method$dyn_14975(mf,dispatch_val,method);\n}\n});\n\nvar cljs$core$IMultiFn$_remove_method$dyn_14980 \x3d (function (mf,dispatch_val){\nvar x__5393__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\nvar m__5394__auto__ \x3d (cljs.core._remove_method[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val) : m__5394__auto__.call(null,mf,dispatch_val));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._remove_method[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val) : m__5392__auto__.call(null,mf,dispatch_val));\n} else {\nthrow cljs.core.missing_protocol(\x22IMultiFn.-remove-method\x22,mf);\n}\n}\n});\ncljs.core._remove_method \x3d (function cljs$core$_remove_method(mf,dispatch_val){\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_remove_method$arity$2 \x3d\x3d null)))))){\nreturn mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);\n} else {\nreturn cljs$core$IMultiFn$_remove_method$dyn_14980(mf,dispatch_val);\n}\n});\n\nvar cljs$core$IMultiFn$_prefer_method$dyn_14981 \x3d (function (mf,dispatch_val,dispatch_val_y){\nvar x__5393__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\nvar m__5394__auto__ \x3d (cljs.core._prefer_method[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,dispatch_val_y) : m__5394__auto__.call(null,mf,dispatch_val,dispatch_val_y));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._prefer_method[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(mf,dispatch_val,dispatch_val_y) : m__5392__auto__.call(null,mf,dispatch_val,dispatch_val_y));\n} else {\nthrow cljs.core.missing_protocol(\x22IMultiFn.-prefer-method\x22,mf);\n}\n}\n});\ncljs.core._prefer_method \x3d (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_prefer_method$arity$3 \x3d\x3d null)))))){\nreturn mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);\n} else {\nreturn cljs$core$IMultiFn$_prefer_method$dyn_14981(mf,dispatch_val,dispatch_val_y);\n}\n});\n\nvar cljs$core$IMultiFn$_get_method$dyn_14984 \x3d (function (mf,dispatch_val){\nvar x__5393__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\nvar m__5394__auto__ \x3d (cljs.core._get_method[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val) : m__5394__auto__.call(null,mf,dispatch_val));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._get_method[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(mf,dispatch_val) : m__5392__auto__.call(null,mf,dispatch_val));\n} else {\nthrow cljs.core.missing_protocol(\x22IMultiFn.-get-method\x22,mf);\n}\n}\n});\ncljs.core._get_method \x3d (function cljs$core$_get_method(mf,dispatch_val){\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_get_method$arity$2 \x3d\x3d null)))))){\nreturn mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);\n} else {\nreturn cljs$core$IMultiFn$_get_method$dyn_14984(mf,dispatch_val);\n}\n});\n\nvar cljs$core$IMultiFn$_methods$dyn_14985 \x3d (function (mf){\nvar x__5393__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\nvar m__5394__auto__ \x3d (cljs.core._methods[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5394__auto__.call(null,mf));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._methods[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5392__auto__.call(null,mf));\n} else {\nthrow cljs.core.missing_protocol(\x22IMultiFn.-methods\x22,mf);\n}\n}\n});\ncljs.core._methods \x3d (function cljs$core$_methods(mf){\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_methods$arity$1 \x3d\x3d null)))))){\nreturn mf.cljs$core$IMultiFn$_methods$arity$1(mf);\n} else {\nreturn cljs$core$IMultiFn$_methods$dyn_14985(mf);\n}\n});\n\nvar cljs$core$IMultiFn$_prefers$dyn_14986 \x3d (function (mf){\nvar x__5393__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\nvar m__5394__auto__ \x3d (cljs.core._prefers[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5394__auto__.call(null,mf));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._prefers[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5392__auto__.call(null,mf));\n} else {\nthrow cljs.core.missing_protocol(\x22IMultiFn.-prefers\x22,mf);\n}\n}\n});\ncljs.core._prefers \x3d (function cljs$core$_prefers(mf){\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_prefers$arity$1 \x3d\x3d null)))))){\nreturn mf.cljs$core$IMultiFn$_prefers$arity$1(mf);\n} else {\nreturn cljs$core$IMultiFn$_prefers$dyn_14986(mf);\n}\n});\n\nvar cljs$core$IMultiFn$_default_dispatch_val$dyn_14990 \x3d (function (mf){\nvar x__5393__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\nvar m__5394__auto__ \x3d (cljs.core._default_dispatch_val[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5394__auto__.call(null,mf));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._default_dispatch_val[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5392__auto__.call(null,mf));\n} else {\nthrow cljs.core.missing_protocol(\x22IMultiFn.-default-dispatch-val\x22,mf);\n}\n}\n});\ncljs.core._default_dispatch_val \x3d (function cljs$core$_default_dispatch_val(mf){\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1 \x3d\x3d null)))))){\nreturn mf.cljs$core$IMultiFn$_default_dispatch_val$arity$1(mf);\n} else {\nreturn cljs$core$IMultiFn$_default_dispatch_val$dyn_14990(mf);\n}\n});\n\nvar cljs$core$IMultiFn$_dispatch_fn$dyn_14997 \x3d (function (mf){\nvar x__5393__auto__ \x3d (((mf \x3d\x3d null))?null:mf);\nvar m__5394__auto__ \x3d (cljs.core._dispatch_fn[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5394__auto__.call(null,mf));\n} else {\nvar m__5392__auto__ \x3d (cljs.core._dispatch_fn[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(mf) : m__5392__auto__.call(null,mf));\n} else {\nthrow cljs.core.missing_protocol(\x22IMultiFn.-dispatch-fn\x22,mf);\n}\n}\n});\ncljs.core._dispatch_fn \x3d (function cljs$core$_dispatch_fn(mf){\nif((((!((mf \x3d\x3d null)))) \x26\x26 ((!((mf.cljs$core$IMultiFn$_dispatch_fn$arity$1 \x3d\x3d null)))))){\nreturn mf.cljs$core$IMultiFn$_dispatch_fn$arity$1(mf);\n} else {\nreturn cljs$core$IMultiFn$_dispatch_fn$dyn_14997(mf);\n}\n});\n\ncljs.core.throw_no_method_error \x3d (function cljs$core$throw_no_method_error(name,dispatch_val){\nthrow (new Error([\x22No method in multimethod \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\x22\x27 for dispatch value: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val)].join(\x27\x27)));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.IMultiFn}\n * @implements {cljs.core.INamed}\n*/\ncljs.core.MultiFn \x3d (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){\nthis.name \x3d name;\nthis.dispatch_fn \x3d dispatch_fn;\nthis.default_dispatch_val \x3d default_dispatch_val;\nthis.hierarchy \x3d hierarchy;\nthis.method_table \x3d method_table;\nthis.prefer_table \x3d prefer_table;\nthis.method_cache \x3d method_cache;\nthis.cached_hierarchy \x3d cached_hierarchy;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 4194305;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 4352;\n});\n(cljs.core.MultiFn.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__11141 \x3d (arguments.length - (1));\nswitch (G__11141) {\ncase (0):\nreturn self__.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase (3):\nreturn self__.cljs$core$IFn$_invoke$arity$3((arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase (4):\nreturn self__.cljs$core$IFn$_invoke$arity$4((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase (5):\nreturn self__.cljs$core$IFn$_invoke$arity$5((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ncase (6):\nreturn self__.cljs$core$IFn$_invoke$arity$6((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\n\nbreak;\ncase (7):\nreturn self__.cljs$core$IFn$_invoke$arity$7((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\n\nbreak;\ncase (8):\nreturn self__.cljs$core$IFn$_invoke$arity$8((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\n\nbreak;\ncase (9):\nreturn self__.cljs$core$IFn$_invoke$arity$9((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\n\nbreak;\ncase (10):\nreturn self__.cljs$core$IFn$_invoke$arity$10((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\n\nbreak;\ncase (11):\nreturn self__.cljs$core$IFn$_invoke$arity$11((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\n\nbreak;\ncase (12):\nreturn self__.cljs$core$IFn$_invoke$arity$12((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));\n\nbreak;\ncase (13):\nreturn self__.cljs$core$IFn$_invoke$arity$13((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\n\nbreak;\ncase (14):\nreturn self__.cljs$core$IFn$_invoke$arity$14((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));\n\nbreak;\ncase (15):\nreturn self__.cljs$core$IFn$_invoke$arity$15((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\n\nbreak;\ncase (16):\nreturn self__.cljs$core$IFn$_invoke$arity$16((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));\n\nbreak;\ncase (17):\nreturn self__.cljs$core$IFn$_invoke$arity$17((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\n\nbreak;\ncase (18):\nreturn self__.cljs$core$IFn$_invoke$arity$18((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));\n\nbreak;\ncase (19):\nreturn self__.cljs$core$IFn$_invoke$arity$19((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\n\nbreak;\ncase (20):\nreturn self__.cljs$core$IFn$_invoke$arity$20((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));\n\nbreak;\ncase (21):\nreturn self__.cljs$core$IFn$_invoke$arity$21((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(cljs.core.MultiFn.prototype.apply \x3d (function (self__,args11140){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args11140)));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (a){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(a) : self__.dispatch_fn.call(null,a));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(a) : target_fn.call(null,a));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(a,b) : self__.dispatch_fn.call(null,a,b));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(a,b) : target_fn.call(null,a,b));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,c){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(a,b,c) : self__.dispatch_fn.call(null,a,b,c));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(a,b,c) : target_fn.call(null,a,b,c));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,b,c,d){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(a,b,c,d) : self__.dispatch_fn.call(null,a,b,c,d));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(a,b,c,d) : target_fn.call(null,a,b,c,d));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 \x3d (function (a,b,c,d,e){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e) : self__.dispatch_fn.call(null,a,b,c,d,e));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e) : target_fn.call(null,a,b,c,d,e));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 \x3d (function (a,b,c,d,e,f){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f) : self__.dispatch_fn.call(null,a,b,c,d,e,f));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f) : target_fn.call(null,a,b,c,d,e,f));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 \x3d (function (a,b,c,d,e,f,g){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f,g) : target_fn.call(null,a,b,c,d,e,f,g));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 \x3d (function (a,b,c,d,e,f,g,h){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f,g,h) : target_fn.call(null,a,b,c,d,e,f,g,h));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 \x3d (function (a,b,c,d,e,f,g,h,i){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f,g,h,i) : target_fn.call(null,a,b,c,d,e,f,g,h,i));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 \x3d (function (a,b,c,d,e,f,g,h,i,j){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f,g,h,i,j) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 \x3d (function (a,b,c,d,e,f,g,h,i,j,k){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f,g,h,i,j,k) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f,g,h,i,j,k,l) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f,g,h,i,j,k,l,m) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f,g,h,i,j,k,l,m,n) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : self__.dispatch_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : target_fn.call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 \x3d (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\nvar self__ \x3d this;\nvar mf \x3d this;\nvar dispatch_val \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));\nvar target_fn \x3d mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);\nif(cljs.core.truth_(target_fn)){\n} else {\ncljs.core.throw_no_method_error(self__.name,dispatch_val);\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 \x3d (function (mf,dispatch_val_x,dispatch_val_y){\nvar self__ \x3d this;\nvar mf__$1 \x3d this;\nif(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_y,dispatch_val_x,self__.prefer_table))){\nthrow (new Error([\x22Preference conflict in multimethod \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name),\x22\x27: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_y),\x22 is already preferred to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(dispatch_val_x)].join(\x27\x27)));\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,(function (old){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));\n}));\n\nreturn cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_default_dispatch_val$arity$1 \x3d (function (mf){\nvar self__ \x3d this;\nvar mf__$1 \x3d this;\nreturn self__.default_dispatch_val;\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 \x3d (function (mf,dispatch_val){\nvar self__ \x3d this;\nvar mf__$1 \x3d this;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);\n\ncljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);\n\nreturn mf__$1;\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 \x3d (function (mf){\nvar self__ \x3d this;\nvar mf__$1 \x3d this;\nreturn cljs.core.deref(self__.method_table);\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 \x3d (function (mf){\nvar self__ \x3d this;\nvar mf__$1 \x3d this;\nreturn cljs.core.deref(self__.prefer_table);\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch_fn$arity$1 \x3d (function (mf){\nvar self__ \x3d this;\nvar mf__$1 \x3d this;\nreturn self__.dispatch_fn;\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 \x3d (function (mf,dispatch_val,method){\nvar self__ \x3d this;\nvar mf__$1 \x3d this;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);\n\ncljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);\n\nreturn mf__$1;\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 \x3d (function (mf){\nvar self__ \x3d this;\nvar mf__$1 \x3d this;\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,(function (mf__$2){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}));\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,(function (mf__$2){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}));\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,(function (mf__$2){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}));\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,(function (mf__$2){\nreturn null;\n}));\n\nreturn mf__$1;\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 \x3d (function (mf,dispatch_val){\nvar self__ \x3d this;\nvar mf__$1 \x3d this;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.cached_hierarchy),cljs.core.deref(self__.hierarchy))){\n} else {\ncljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);\n}\n\nvar temp__5802__auto__ \x3d (function (){var fexpr__11142 \x3d cljs.core.deref(self__.method_cache);\nreturn (fexpr__11142.cljs$core$IFn$_invoke$arity$1 ? fexpr__11142.cljs$core$IFn$_invoke$arity$1(dispatch_val) : fexpr__11142.call(null,dispatch_val));\n})();\nif(cljs.core.truth_(temp__5802__auto__)){\nvar target_fn \x3d temp__5802__auto__;\nreturn target_fn;\n} else {\nreturn cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy,self__.default_dispatch_val);\n}\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn cljs.core._name(self__.name);\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn cljs.core._namespace(self__.name);\n}));\n\n(cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn goog.getUid(this$__$1);\n}));\n\n(cljs.core.MultiFn.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22name\x22,\x22name\x22,-810760592,null),new cljs.core.Symbol(null,\x22dispatch-fn\x22,\x22dispatch-fn\x22,-1401088155,null),new cljs.core.Symbol(null,\x22default-dispatch-val\x22,\x22default-dispatch-val\x22,-1231201266,null),new cljs.core.Symbol(null,\x22hierarchy\x22,\x22hierarchy\x22,587061186,null),new cljs.core.Symbol(null,\x22method-table\x22,\x22method-table\x22,-1878263165,null),new cljs.core.Symbol(null,\x22prefer-table\x22,\x22prefer-table\x22,462168584,null),new cljs.core.Symbol(null,\x22method-cache\x22,\x22method-cache\x22,1230193905,null),new cljs.core.Symbol(null,\x22cached-hierarchy\x22,\x22cached-hierarchy\x22,-1085460203,null)], null);\n}));\n\n(cljs.core.MultiFn.cljs$lang$type \x3d true);\n\n(cljs.core.MultiFn.cljs$lang$ctorStr \x3d \x22cljs.core/MultiFn\x22);\n\n(cljs.core.MultiFn.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/MultiFn\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/MultiFn.\n */\ncljs.core.__GT_MultiFn \x3d (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){\nreturn (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));\n});\n\n/**\n * Removes all of the methods of multimethod.\n */\ncljs.core.remove_all_methods \x3d (function cljs$core$remove_all_methods(multifn){\nreturn cljs.core._reset(multifn);\n});\n/**\n * Removes the method of multimethod associated with dispatch-value.\n */\ncljs.core.remove_method \x3d (function cljs$core$remove_method(multifn,dispatch_val){\nreturn cljs.core._remove_method(multifn,dispatch_val);\n});\n/**\n * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y\n * when there is a conflict\n */\ncljs.core.prefer_method \x3d (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){\nreturn cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);\n});\n/**\n * Given a multimethod, returns a map of dispatch values -\x3e dispatch fns\n */\ncljs.core.methods$ \x3d (function cljs$core$methods(multifn){\nreturn cljs.core._methods(multifn);\n});\n/**\n * Given a multimethod and a dispatch value, returns the dispatch fn\n *   that would apply to that value, or nil if none apply and no default\n */\ncljs.core.get_method \x3d (function cljs$core$get_method(multifn,dispatch_val){\nreturn cljs.core._get_method(multifn,dispatch_val);\n});\n/**\n * Given a multimethod, returns a map of preferred value -\x3e set of other values\n */\ncljs.core.prefers \x3d (function cljs$core$prefers(multifn){\nreturn cljs.core._prefers(multifn);\n});\n/**\n * Given a multimethod, return its default-dispatch-val.\n */\ncljs.core.default_dispatch_val \x3d (function cljs$core$default_dispatch_val(multifn){\nreturn cljs.core._default_dispatch_val(multifn);\n});\n/**\n * Given a multimethod, return its dispatch-fn.\n */\ncljs.core.dispatch_fn \x3d (function cljs$core$dispatch_fn(multifn){\nreturn cljs.core._dispatch_fn(multifn);\n});\n\n/**\n * A marker protocol for UUIDs\n * @interface\n */\ncljs.core.IUUID \x3d function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IComparable}\n * @implements {cljs.core.IUUID}\n*/\ncljs.core.UUID \x3d (function (uuid,__hash){\nthis.uuid \x3d uuid;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153775104;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 2048;\n});\n(cljs.core.UUID.prototype.cljs$core$IUUID$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.UUID.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn self__.uuid;\n}));\n\n(cljs.core.UUID.prototype.equiv \x3d (function (other){\nvar self__ \x3d this;\nvar this$ \x3d this;\nreturn this$.cljs$core$IEquiv$_equiv$arity$2(null,other);\n}));\n\n(cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nvar and__5043__auto__ \x3d (((!((other \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d other.cljs$core$IUUID$))))?true:false):false);\nif(and__5043__auto__){\nreturn (self__.uuid \x3d\x3d\x3d other.uuid);\n} else {\nreturn and__5043__auto__;\n}\n}));\n\n(cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (_,writer,___$1){\nvar self__ \x3d this;\nvar ___$2 \x3d this;\nreturn cljs.core._write(writer,[\x22#uuid \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.uuid),\x22\\\x22\x22].join(\x27\x27));\n}));\n\n(cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nif((self__.__hash \x3d\x3d null)){\n(self__.__hash \x3d cljs.core.hash(self__.uuid));\n} else {\n}\n\nreturn self__.__hash;\n}));\n\n(cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 \x3d (function (this$,other){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nif((other instanceof cljs.core.UUID)){\nreturn cljs.core.goog$module$goog$array.defaultCompare(self__.uuid,other.uuid);\n} else {\nthrow (new Error([\x22Cannot compare \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$__$1),\x22 to \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(other)].join(\x27\x27)));\n}\n}));\n\n(cljs.core.UUID.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22uuid\x22,\x22uuid\x22,-504564192,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22__hash\x22,\x22__hash\x22,-1328796629,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(cljs.core.UUID.cljs$lang$type \x3d true);\n\n(cljs.core.UUID.cljs$lang$ctorStr \x3d \x22cljs.core/UUID\x22);\n\n(cljs.core.UUID.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/UUID\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/UUID.\n */\ncljs.core.__GT_UUID \x3d (function cljs$core$__GT_UUID(uuid,__hash){\nreturn (new cljs.core.UUID(uuid,__hash));\n});\n\n/**\n * Returns a UUID consistent with the string s.\n */\ncljs.core.uuid \x3d (function cljs$core$uuid(s){\nif(typeof s \x3d\x3d\x3d \x27string\x27){\n} else {\nthrow (new Error(\x22Assert failed: (string? s)\x22));\n}\n\nreturn (new cljs.core.UUID(s.toLowerCase(),null));\n});\n/**\n * Returns a pseudo-randomly generated UUID instance (i.e. type 4).\n */\ncljs.core.random_uuid \x3d (function cljs$core$random_uuid(){\nvar hex \x3d (function cljs$core$random_uuid_$_hex(){\nreturn cljs.core.rand_int((16)).toString((16));\n});\nvar rhex \x3d ((8) | ((3) \x26 cljs.core.rand_int((16)))).toString((16));\nreturn cljs.core.uuid([cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),\x22-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),\x22-\x22,\x224\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),\x22-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(rhex),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),\x22-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex()),cljs.core.str.cljs$core$IFn$_invoke$arity$1(hex())].join(\x27\x27));\n});\n/**\n * Return true if x is a UUID.\n */\ncljs.core.uuid_QMARK_ \x3d (function cljs$core$uuid_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IUUID$)))){\nreturn true;\n} else {\nreturn false;\n}\n} else {\nreturn false;\n}\n});\ncljs.core.pr_writer_ex_info \x3d (function cljs$core$pr_writer_ex_info(obj,writer,opts){\ncljs.core._write(writer,\x22#error {:message \x22);\n\ncljs.core.pr_writer(obj.message,writer,opts);\n\nif(cljs.core.truth_(obj.data)){\ncljs.core._write(writer,\x22, :data \x22);\n\ncljs.core.pr_writer(obj.data,writer,opts);\n} else {\n}\n\nif(cljs.core.truth_(obj.cause)){\ncljs.core._write(writer,\x22, :cause \x22);\n\ncljs.core.pr_writer(obj.cause,writer,opts);\n} else {\n}\n\nreturn cljs.core._write(writer,\x22}\x22);\n});\n/**\n * @constructor\n */\ncljs.core.ExceptionInfo \x3d (function cljs$core$ExceptionInfo(message,data,cause){\nvar e \x3d (new Error(message));\nvar this$ \x3d this;\n(this$.message \x3d message);\n\n(this$.data \x3d data);\n\n(this$.cause \x3d cause);\n\n(this$.name \x3d e.name);\n\n(this$.description \x3d e.description);\n\n(this$.number \x3d e.number);\n\n(this$.fileName \x3d e.fileName);\n\n(this$.lineNumber \x3d e.lineNumber);\n\n(this$.columnNumber \x3d e.columnNumber);\n\n(this$.stack \x3d e.stack);\n\nreturn this$;\n});\n(cljs.core.ExceptionInfo.prototype.__proto__ \x3d Error.prototype);\n(cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (obj,writer,opts){\nvar obj__$1 \x3d this;\nreturn cljs.core.pr_writer_ex_info(obj__$1,writer,opts);\n}));\n(cljs.core.ExceptionInfo.prototype.toString \x3d (function (){\nvar this$ \x3d this;\nreturn cljs.core.pr_str_STAR_(this$);\n}));\n/**\n * Create an instance of ExceptionInfo, an Error type that carries a\n *   map of additional data.\n */\ncljs.core.ex_info \x3d (function cljs$core$ex_info(var_args){\nvar G__11146 \x3d arguments.length;\nswitch (G__11146) {\ncase 2:\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2 \x3d (function (msg,data){\nreturn cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);\n}));\n\n(cljs.core.ex_info.cljs$core$IFn$_invoke$arity$3 \x3d (function (msg,data,cause){\nreturn (new cljs.core.ExceptionInfo(msg,data,cause));\n}));\n\n(cljs.core.ex_info.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Returns exception data (a map) if ex is an ExceptionInfo.\n *   Otherwise returns nil.\n */\ncljs.core.ex_data \x3d (function cljs$core$ex_data(ex){\nif((ex instanceof cljs.core.ExceptionInfo)){\nreturn ex.data;\n} else {\nreturn null;\n}\n});\n/**\n * Returns the message attached to the given Error / ExceptionInfo object.\n *   For non-Errors returns nil.\n */\ncljs.core.ex_message \x3d (function cljs$core$ex_message(ex){\nif((ex instanceof Error)){\nreturn ex.message;\n} else {\nreturn null;\n}\n});\n/**\n * Returns exception cause (an Error / ExceptionInfo) if ex is an\n *   ExceptionInfo.\n *   Otherwise returns nil.\n */\ncljs.core.ex_cause \x3d (function cljs$core$ex_cause(ex){\nif((ex instanceof cljs.core.ExceptionInfo)){\nreturn ex.cause;\n} else {\nreturn null;\n}\n});\n/**\n * Returns an JavaScript compatible comparator based upon pred.\n */\ncljs.core.comparator \x3d (function cljs$core$comparator(pred){\nreturn (function (x,y){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(x,y) : pred.call(null,x,y)))){\nreturn (-1);\n} else {\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(y,x) : pred.call(null,y,x)))){\nreturn (1);\n} else {\nreturn (0);\n\n}\n}\n});\n});\n/**\n * Returns true if x names a special form\n */\ncljs.core.special_symbol_QMARK_ \x3d (function cljs$core$special_symbol_QMARK_(x){\nreturn cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 24, [new cljs.core.Symbol(null,\x22\x26\x22,\x22\x26\x22,-2144855648,null),\x22null\x22,new cljs.core.Symbol(null,\x22case*\x22,\x22case*\x22,-1938255072,null),\x22null\x22,new cljs.core.Symbol(null,\x22defrecord*\x22,\x22defrecord*\x22,-1936366207,null),\x22null\x22,new cljs.core.Symbol(null,\x22try\x22,\x22try\x22,-1273693247,null),\x22null\x22,new cljs.core.Symbol(null,\x22ns*\x22,\x22ns*\x22,1840949383,null),\x22null\x22,new cljs.core.Symbol(null,\x22finally\x22,\x22finally\x22,-1065347064,null),\x22null\x22,new cljs.core.Symbol(null,\x22loop*\x22,\x22loop*\x22,615029416,null),\x22null\x22,new cljs.core.Symbol(null,\x22do\x22,\x22do\x22,1686842252,null),\x22null\x22,new cljs.core.Symbol(null,\x22letfn*\x22,\x22letfn*\x22,-110097810,null),\x22null\x22,new cljs.core.Symbol(null,\x22if\x22,\x22if\x22,1181717262,null),\x22null\x22,new cljs.core.Symbol(null,\x22new\x22,\x22new\x22,-444906321,null),\x22null\x22,new cljs.core.Symbol(null,\x22ns\x22,\x22ns\x22,2082130287,null),\x22null\x22,new cljs.core.Symbol(null,\x22deftype*\x22,\x22deftype*\x22,962659890,null),\x22null\x22,new cljs.core.Symbol(null,\x22let*\x22,\x22let*\x22,1920721458,null),\x22null\x22,new cljs.core.Symbol(null,\x22js*\x22,\x22js*\x22,-1134233646,null),\x22null\x22,new cljs.core.Symbol(null,\x22fn*\x22,\x22fn*\x22,-752876845,null),\x22null\x22,new cljs.core.Symbol(null,\x22recur\x22,\x22recur\x22,1202958259,null),\x22null\x22,new cljs.core.Symbol(null,\x22set!\x22,\x22set!\x22,250714521,null),\x22null\x22,new cljs.core.Symbol(null,\x22.\x22,\x22.\x22,1975675962,null),\x22null\x22,new cljs.core.Symbol(null,\x22var\x22,\x22var\x22,870848730,null),\x22null\x22,new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),\x22null\x22,new cljs.core.Symbol(null,\x22catch\x22,\x22catch\x22,-1616370245,null),\x22null\x22,new cljs.core.Symbol(null,\x22throw\x22,\x22throw\x22,595905694,null),\x22null\x22,new cljs.core.Symbol(null,\x22def\x22,\x22def\x22,597100991,null),\x22null\x22], null), null),x);\n});\n/**\n * test [v] finds fn at key :test in var metadata and calls it,\n *   presuming failure will throw exception\n */\ncljs.core.test \x3d (function cljs$core$test(v){\nvar f \x3d v.cljs$lang$test;\nif(cljs.core.truth_(f)){\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n\nreturn new cljs.core.Keyword(null,\x22ok\x22,\x22ok\x22,967785236);\n} else {\nreturn new cljs.core.Keyword(null,\x22no-test\x22,\x22no-test\x22,-1679482642);\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.ILookup}\n*/\ncljs.core.TaggedLiteral \x3d (function (tag,form){\nthis.tag \x3d tag;\nthis.form \x3d form;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153775360;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.TaggedLiteral.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar coll \x3d this;\nreturn cljs.core.pr_str_STAR_(coll);\n}));\n\n(cljs.core.TaggedLiteral.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this$,other){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn (((other instanceof cljs.core.TaggedLiteral)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.tag,other.tag)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.form,other.form)))));\n}));\n\n(cljs.core.TaggedLiteral.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn (((31) * cljs.core.hash(self__.tag)) + cljs.core.hash(self__.form));\n}));\n\n(cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this$,v){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn this$__$1.cljs$core$ILookup$_lookup$arity$3(null,v,null);\n}));\n\n(cljs.core.TaggedLiteral.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this$,v,not_found){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar G__11147 \x3d v;\nvar G__11147__$1 \x3d (((G__11147 instanceof cljs.core.Keyword))?G__11147.fqn:null);\nswitch (G__11147__$1) {\ncase \x22tag\x22:\nreturn self__.tag;\n\nbreak;\ncase \x22form\x22:\nreturn self__.form;\n\nbreak;\ndefault:\nreturn not_found;\n\n}\n}));\n\n(cljs.core.TaggedLiteral.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (o,writer,opts){\nvar self__ \x3d this;\nvar o__$1 \x3d this;\ncljs.core._write(writer,[\x22#\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.tag),\x22 \x22].join(\x27\x27));\n\nreturn cljs.core.pr_writer(self__.form,writer,opts);\n}));\n\n(cljs.core.TaggedLiteral.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22tag\x22,\x22tag\x22,350170304,null),new cljs.core.Symbol(null,\x22form\x22,\x22form\x22,16469056,null)], null);\n}));\n\n(cljs.core.TaggedLiteral.cljs$lang$type \x3d true);\n\n(cljs.core.TaggedLiteral.cljs$lang$ctorStr \x3d \x22cljs.core/TaggedLiteral\x22);\n\n(cljs.core.TaggedLiteral.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/TaggedLiteral\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/TaggedLiteral.\n */\ncljs.core.__GT_TaggedLiteral \x3d (function cljs$core$__GT_TaggedLiteral(tag,form){\nreturn (new cljs.core.TaggedLiteral(tag,form));\n});\n\n/**\n * Return true if the value is the data representation of a tagged literal\n */\ncljs.core.tagged_literal_QMARK_ \x3d (function cljs$core$tagged_literal_QMARK_(value){\nreturn (value instanceof cljs.core.TaggedLiteral);\n});\n/**\n * Construct a data representation of a tagged literal from a\n *   tag symbol and a form.\n */\ncljs.core.tagged_literal \x3d (function cljs$core$tagged_literal(tag,form){\nif((tag instanceof cljs.core.Symbol)){\n} else {\nthrow (new Error(\x22Assert failed: (symbol? tag)\x22));\n}\n\nreturn (new cljs.core.TaggedLiteral(tag,form));\n});\n/**\n * @type {*}\n */\ncljs.core.js_reserved_arr \x3d [\x22arguments\x22,\x22abstract\x22,\x22await\x22,\x22boolean\x22,\x22break\x22,\x22byte\x22,\x22case\x22,\x22catch\x22,\x22char\x22,\x22class\x22,\x22const\x22,\x22continue\x22,\x22debugger\x22,\x22default\x22,\x22delete\x22,\x22do\x22,\x22double\x22,\x22else\x22,\x22enum\x22,\x22export\x22,\x22extends\x22,\x22final\x22,\x22finally\x22,\x22float\x22,\x22for\x22,\x22function\x22,\x22goto\x22,\x22if\x22,\x22implements\x22,\x22import\x22,\x22in\x22,\x22instanceof\x22,\x22int\x22,\x22interface\x22,\x22let\x22,\x22long\x22,\x22native\x22,\x22new\x22,\x22package\x22,\x22private\x22,\x22protected\x22,\x22public\x22,\x22return\x22,\x22short\x22,\x22static\x22,\x22super\x22,\x22switch\x22,\x22synchronized\x22,\x22this\x22,\x22throw\x22,\x22throws\x22,\x22transient\x22,\x22try\x22,\x22typeof\x22,\x22var\x22,\x22void\x22,\x22volatile\x22,\x22while\x22,\x22with\x22,\x22yield\x22,\x22methods\x22,\x22null\x22,\x22constructor\x22];\n/**\n * @type {null|Object}\n */\ncljs.core.js_reserved \x3d null;\ncljs.core.js_reserved_QMARK_ \x3d (function cljs$core$js_reserved_QMARK_(x){\nif((cljs.core.js_reserved \x3d\x3d null)){\n(cljs.core.js_reserved \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11148_SHARP_,p2__11149_SHARP_){\ncljs.core.goog$module$goog$object.set(p1__11148_SHARP_,p2__11149_SHARP_,true);\n\nreturn p1__11148_SHARP_;\n}),({}),cljs.core.js_reserved_arr));\n} else {\n}\n\nreturn cljs.core.js_reserved.hasOwnProperty(x);\n});\ncljs.core.demunge_pattern \x3d (function cljs$core$demunge_pattern(){\nif(cljs.core.truth_(cljs.core.DEMUNGE_PATTERN)){\n} else {\n(cljs.core.DEMUNGE_PATTERN \x3d (function (){var ks \x3d cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (a,b){\nreturn (b.length - a.length);\n}),cljs.core.js_keys(cljs.core.DEMUNGE_MAP));\nvar ks__$1 \x3d ks;\nvar ret \x3d \x22\x22;\nwhile(true){\nif(cljs.core.seq(ks__$1)){\nvar G__15064 \x3d cljs.core.next(ks__$1);\nvar G__15065 \x3d [(function (){var G__11153 \x3d ret;\nif((!((ret \x3d\x3d\x3d \x22\x22)))){\nreturn [G__11153,\x22|\x22].join(\x27\x27);\n} else {\nreturn G__11153;\n}\n})(),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(ks__$1))].join(\x27\x27);\nks__$1 \x3d G__15064;\nret \x3d G__15065;\ncontinue;\n} else {\nreturn [ret,\x22|\\\\$\x22].join(\x27\x27);\n}\nbreak;\n}\n})());\n}\n\nreturn cljs.core.DEMUNGE_PATTERN;\n});\ncljs.core.munge_str \x3d (function cljs$core$munge_str(name){\nvar sb \x3d (new goog.string.StringBuffer());\nvar i_15066 \x3d (0);\nwhile(true){\nif((i_15066 \x3c name.length)){\nvar c_15067 \x3d name.charAt(i_15066);\nvar sub_15068 \x3d cljs.core.goog$module$goog$object.get(cljs.core.CHAR_MAP,c_15067);\nif((!((sub_15068 \x3d\x3d null)))){\nsb.append(sub_15068);\n} else {\nsb.append(c_15067);\n}\n\nvar G__15069 \x3d (i_15066 + (1));\ni_15066 \x3d G__15069;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn sb.toString();\n});\ncljs.core.munge \x3d (function cljs$core$munge(name){\nvar name_SINGLEQUOTE_ \x3d cljs.core.munge_str(cljs.core.str.cljs$core$IFn$_invoke$arity$1(name));\nvar name_SINGLEQUOTE___$1 \x3d (((name_SINGLEQUOTE_ \x3d\x3d\x3d \x22..\x22))?\x22_DOT__DOT_\x22:(cljs.core.truth_(cljs.core.js_reserved_QMARK_(name_SINGLEQUOTE_))?[name_SINGLEQUOTE_,\x22$\x22].join(\x27\x27):name_SINGLEQUOTE_\n));\nif((name instanceof cljs.core.Symbol)){\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(name_SINGLEQUOTE___$1);\n} else {\nreturn name_SINGLEQUOTE___$1;\n}\n});\ncljs.core.demunge_str \x3d (function cljs$core$demunge_str(munged_name){\nvar r \x3d (new RegExp(cljs.core.demunge_pattern(),\x22g\x22));\nvar munged_name__$1 \x3d (cljs.core.truth_(goog.string.endsWith(munged_name,\x22$\x22))?munged_name.substring((0),(munged_name.length - (1))):munged_name);\nvar ret \x3d \x22\x22;\nvar last_match_end \x3d (0);\nwhile(true){\nvar temp__5802__auto__ \x3d r.exec(munged_name__$1);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar match \x3d temp__5802__auto__;\nvar vec__11157 \x3d match;\nvar x \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11157,(0),null);\nvar G__15077 \x3d [ret,cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end,(r.lastIndex - x.length))),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((x \x3d\x3d\x3d \x22$\x22))?\x22/\x22:cljs.core.goog$module$goog$object.get(cljs.core.DEMUNGE_MAP,x)))].join(\x27\x27);\nvar G__15078 \x3d r.lastIndex;\nret \x3d G__15077;\nlast_match_end \x3d G__15078;\ncontinue;\n} else {\nreturn [ret,cljs.core.str.cljs$core$IFn$_invoke$arity$1(munged_name__$1.substring(last_match_end,munged_name__$1.length))].join(\x27\x27);\n}\nbreak;\n}\n});\ncljs.core.demunge \x3d (function cljs$core$demunge(name){\nvar G__11161 \x3d (function (){var name_SINGLEQUOTE_ \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(name);\nif((name_SINGLEQUOTE_ \x3d\x3d\x3d \x22_DOT__DOT_\x22)){\nreturn \x22..\x22;\n} else {\nreturn cljs.core.demunge_str(name_SINGLEQUOTE_);\n}\n})();\nvar fexpr__11160 \x3d (((name instanceof cljs.core.Symbol))?cljs.core.symbol:cljs.core.str);\nreturn (fexpr__11160.cljs$core$IFn$_invoke$arity$1 ? fexpr__11160.cljs$core$IFn$_invoke$arity$1(G__11161) : fexpr__11160.call(null,G__11161));\n});\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core.tapset !\x3d\x3d \x27undefined\x27)){\n} else {\n/**\n * @type {*}\n */\ncljs.core.tapset \x3d null;\n}\ncljs.core.maybe_init_tapset \x3d (function cljs$core$maybe_init_tapset(){\nif((cljs.core.tapset \x3d\x3d null)){\nreturn (cljs.core.tapset \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashSet.EMPTY));\n} else {\nreturn null;\n}\n});\n/**\n * Adds f, a fn of one argument, to the tap set. This function will be called with\n *   anything sent via tap\x3e. Remember f in order to remove-tap\n */\ncljs.core.add_tap \x3d (function cljs$core$add_tap(f){\ncljs.core.maybe_init_tapset();\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset,cljs.core.conj,f);\n\nreturn null;\n});\n/**\n * Remove f from the tap set.\n */\ncljs.core.remove_tap \x3d (function cljs$core$remove_tap(f){\ncljs.core.maybe_init_tapset();\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(cljs.core.tapset,cljs.core.disj,f);\n\nreturn null;\n});\n/**\n * Sends x to any taps. Returns the result of *exec-tap-fn*, a Boolean value.\n */\ncljs.core.tap_GT_ \x3d (function cljs$core$tap_GT_(x){\ncljs.core.maybe_init_tapset();\n\nreturn cljs.core._STAR_exec_tap_fn_STAR_.call(null,(function (){\nvar seq__11162 \x3d cljs.core.seq(cljs.core.deref(cljs.core.tapset));\nvar chunk__11163 \x3d null;\nvar count__11164 \x3d (0);\nvar i__11165 \x3d (0);\nwhile(true){\nif((i__11165 \x3c count__11164)){\nvar tap \x3d chunk__11163.cljs$core$IIndexed$_nth$arity$2(null,i__11165);\ntry{(tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null,x));\n}catch (e11168){if((e11168 instanceof Error)){\nvar ex_15098 \x3d e11168;\n} else {\nthrow e11168;\n\n}\n}\n\nvar G__15099 \x3d seq__11162;\nvar G__15100 \x3d chunk__11163;\nvar G__15101 \x3d count__11164;\nvar G__15102 \x3d (i__11165 + (1));\nseq__11162 \x3d G__15099;\nchunk__11163 \x3d G__15100;\ncount__11164 \x3d G__15101;\ni__11165 \x3d G__15102;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__11162);\nif(temp__5804__auto__){\nvar seq__11162__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__11162__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__11162__$1);\nvar G__15103 \x3d cljs.core.chunk_rest(seq__11162__$1);\nvar G__15104 \x3d c__5568__auto__;\nvar G__15105 \x3d cljs.core.count(c__5568__auto__);\nvar G__15106 \x3d (0);\nseq__11162 \x3d G__15103;\nchunk__11163 \x3d G__15104;\ncount__11164 \x3d G__15105;\ni__11165 \x3d G__15106;\ncontinue;\n} else {\nvar tap \x3d cljs.core.first(seq__11162__$1);\ntry{(tap.cljs$core$IFn$_invoke$arity$1 ? tap.cljs$core$IFn$_invoke$arity$1(x) : tap.call(null,x));\n}catch (e11169){if((e11169 instanceof Error)){\nvar ex_15110 \x3d e11169;\n} else {\nthrow e11169;\n\n}\n}\n\nvar G__15111 \x3d cljs.core.next(seq__11162__$1);\nvar G__15112 \x3d null;\nvar G__15113 \x3d (0);\nvar G__15114 \x3d (0);\nseq__11162 \x3d G__15111;\nchunk__11163 \x3d G__15112;\ncount__11164 \x3d G__15113;\ni__11165 \x3d G__15114;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n});\n/**\n * m f \x3d\x3e {k (f v) ...}\n *   Given a map m and a function f of 1-argument, returns a new map where the keys of m\n *   are mapped to result of applying f to the corresponding values of m.\n */\ncljs.core.update_vals \x3d (function cljs$core$update_vals(m,f){\nreturn cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce_kv((function (acc,k,v){\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(acc,k,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(v) : f.call(null,v)));\n}),(((((!((m \x3d\x3d null))))?(((((m.cljs$lang$protocol_mask$partition1$ \x26 (4))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d m.cljs$core$IEditableCollection$))))?true:false):false))?cljs.core.transient$(m):cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY)),m)),cljs.core.meta(m));\n});\n/**\n * m f \x3d\x3e {(f k) v ...}\n *   Given a map m and a function f of 1-argument, returns a new map whose\n *   keys are the result of applying f to the keys of m, mapped to the\n *   corresponding values of m.\n *   f must return a unique key for each key of m, else the behavior is undefined.\n */\ncljs.core.update_keys \x3d (function cljs$core$update_keys(m,f){\nvar ret \x3d cljs.core.persistent_BANG_(cljs.core.reduce_kv((function (acc,k,v){\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(acc,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(k) : f.call(null,k)),v);\n}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),m));\nreturn cljs.core.with_meta(ret,cljs.core.meta(m));\n});\n/**\n * Bootstrap only.\n */\ncljs.core.ns_lookup \x3d (function cljs$core$ns_lookup(ns_obj,k){\nreturn (function (){\nreturn cljs.core.goog$module$goog$object.get(ns_obj,k);\n});\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n*/\ncljs.core.Namespace \x3d (function (obj,name){\nthis.obj \x3d obj;\nthis.name \x3d name;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 6291456;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.core.Namespace.prototype.findInternedVar \x3d (function (sym){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar k \x3d cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));\nif(cljs.core.goog$module$goog$object.containsKey(self__.obj,k)){\nvar var_sym \x3d cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym));\nvar var_meta \x3d new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22ns\x22,\x22ns\x22,441598760),this$], null);\nreturn (new cljs.core.Var(cljs.core.ns_lookup(self__.obj,k),var_sym,var_meta));\n} else {\nreturn null;\n}\n}));\n\n(cljs.core.Namespace.prototype.getName \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn self__.name;\n}));\n\n(cljs.core.Namespace.prototype.toString \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.name);\n}));\n\n(cljs.core.Namespace.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nif((other instanceof cljs.core.Namespace)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.name,other.name);\n} else {\nreturn false;\n}\n}));\n\n(cljs.core.Namespace.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.hash(self__.name);\n}));\n\n(cljs.core.Namespace.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22obj\x22,\x22obj\x22,-1672671807,null),new cljs.core.Symbol(null,\x22name\x22,\x22name\x22,-810760592,null)], null);\n}));\n\n(cljs.core.Namespace.cljs$lang$type \x3d true);\n\n(cljs.core.Namespace.cljs$lang$ctorStr \x3d \x22cljs.core/Namespace\x22);\n\n(cljs.core.Namespace.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.core/Namespace\x22);\n}));\n\n/**\n * Positional factory function for cljs.core/Namespace.\n */\ncljs.core.__GT_Namespace \x3d (function cljs$core$__GT_Namespace(obj,name){\nreturn (new cljs.core.Namespace(obj,name));\n});\n\n/**\n * Bootstrap only.\n * @type {*}\n */\ncljs.core.NS_CACHE \x3d null;\n/**\n * Bootstrap only.\n */\ncljs.core.find_ns_obj_STAR_ \x3d (function cljs$core$find_ns_obj_STAR_(ctxt,xs){\nwhile(true){\nif((ctxt \x3d\x3d null)){\nreturn null;\n} else {\nif((xs \x3d\x3d null)){\nreturn ctxt;\n} else {\nvar G__15134 \x3d cljs.core.goog$module$goog$object.get(ctxt,cljs.core.first(xs));\nvar G__15135 \x3d cljs.core.next(xs);\nctxt \x3d G__15134;\nxs \x3d G__15135;\ncontinue;\n\n}\n}\nbreak;\n}\n});\n/**\n * Bootstrap only.\n */\ncljs.core.find_ns_obj \x3d (function cljs$core$find_ns_obj(ns){\nvar munged_ns \x3d cljs.core.munge(cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns));\nvar segs \x3d munged_ns.split(\x22.\x22);\nvar G__11171 \x3d cljs.core._STAR_target_STAR_;\nswitch (G__11171) {\ncase \x22nodejs\x22:\nif(COMPILED){\nreturn cljs.core.find_ns_obj_STAR_((function (){try{var ctxt \x3d eval(cljs.core.first(segs));\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d ctxt;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core.object_QMARK_(ctxt);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn ctxt;\n} else {\nreturn null;\n}\n}catch (e11172){if((e11172 instanceof ReferenceError)){\nvar e \x3d e11172;\nreturn null;\n} else {\nthrow e11172;\n\n}\n}})(),cljs.core.next(segs));\n} else {\nreturn cljs.core.find_ns_obj_STAR_(goog.global,segs);\n}\n\nbreak;\ncase \x22default\x22:\ncase \x22webworker\x22:\nreturn cljs.core.find_ns_obj_STAR_(goog.global,segs);\n\nbreak;\ndefault:\nthrow (new Error([\x22find-ns-obj not supported for target \x22,cljs.core._STAR_target_STAR_].join(\x27\x27)));\n\n}\n});\n/**\n * Returns a map of the intern mappings for the namespace.\n *   Bootstrap only.\n */\ncljs.core.ns_interns_STAR_ \x3d (function cljs$core$ns_interns_STAR_(sym){\nvar ns_obj \x3d cljs.core.find_ns_obj(sym);\nvar ns \x3d (new cljs.core.Namespace(ns_obj,sym));\nvar step \x3d (function cljs$core$ns_interns_STAR__$_step(ret,k){\nvar var_sym \x3d cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.demunge(k));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,var_sym,(new cljs.core.Var((function (){\nreturn cljs.core.goog$module$goog$object.get(ns_obj,k);\n}),cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym),cljs.core.str.cljs$core$IFn$_invoke$arity$1(var_sym)),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22ns\x22,\x22ns\x22,441598760),ns], null))));\n});\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(step,cljs.core.PersistentArrayMap.EMPTY,cljs.core.js_keys(ns_obj));\n});\n/**\n * Create a new namespace named by the symbol. Bootstrap only.\n */\ncljs.core.create_ns \x3d (function cljs$core$create_ns(var_args){\nvar G__11174 \x3d arguments.length;\nswitch (G__11174) {\ncase 1:\nreturn cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.core.create_ns.cljs$core$IFn$_invoke$arity$1 \x3d (function (sym){\nreturn cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(sym,cljs.core.find_ns_obj(sym));\n}));\n\n(cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2 \x3d (function (sym,ns_obj){\nreturn (new cljs.core.Namespace(ns_obj,sym));\n}));\n\n(cljs.core.create_ns.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns the namespace named by the symbol or nil if it doesn\x27t exist.\n *   Bootstrap only.\n */\ncljs.core.find_ns \x3d (function cljs$core$find_ns(ns){\nif((cljs.core.NS_CACHE \x3d\x3d null)){\n(cljs.core.NS_CACHE \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));\n} else {\n}\n\nvar the_ns \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE),ns);\nif((!((the_ns \x3d\x3d null)))){\nreturn the_ns;\n} else {\nvar ns_obj \x3d cljs.core.find_ns_obj(ns);\nif((ns_obj \x3d\x3d null)){\nreturn null;\n} else {\nvar new_ns \x3d cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns,ns_obj);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE,cljs.core.assoc,ns,new_ns);\n\nreturn new_ns;\n}\n}\n});\n/**\n * Returns the macros namespace named by the symbol or nil if it doesn\x27t exist.\n *   Bootstrap only.\n */\ncljs.core.find_macros_ns \x3d (function cljs$core$find_macros_ns(ns){\nif((cljs.core.NS_CACHE \x3d\x3d null)){\n(cljs.core.NS_CACHE \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY));\n} else {\n}\n\nvar ns_str \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns);\nvar ns__$1 \x3d (((!(goog.string.contains(ns_str,\x22$macros\x22))))?cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([ns_str,\x22$macros\x22].join(\x27\x27)):ns);\nvar the_ns \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(cljs.core.NS_CACHE),ns__$1);\nif((!((the_ns \x3d\x3d null)))){\nreturn the_ns;\n} else {\nvar ns_obj \x3d cljs.core.find_ns_obj(ns__$1);\nif((ns_obj \x3d\x3d null)){\nreturn null;\n} else {\nvar new_ns \x3d cljs.core.create_ns.cljs$core$IFn$_invoke$arity$2(ns__$1,ns_obj);\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.NS_CACHE,cljs.core.assoc,ns__$1,new_ns);\n\nreturn new_ns;\n}\n}\n});\n/**\n * Returns the name of the namespace, a Namespace object.\n *   Bootstrap only.\n */\ncljs.core.ns_name \x3d (function cljs$core$ns_name(ns_obj){\nreturn ns_obj.name;\n});\n/**\n * Returns true x is a goog.Uri instance.\n */\ncljs.core.uri_QMARK_ \x3d (function cljs$core$uri_QMARK_(x){\nreturn (x instanceof goog.Uri);\n});\n/**\n * Returns true if num is NaN, else false\n */\ncljs.core.NaN_QMARK_ \x3d (function cljs$core$NaN_QMARK_(val){\nreturn isNaN(val);\n});\n/**\n * Construct message for parsing for non-string parsing error\n */\ncljs.core.parsing_err \x3d (function cljs$core$parsing_err(val){\nreturn [\x22Expected string, got: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((((val \x3d\x3d null))?\x22nil\x22:goog.typeOf(val)))].join(\x27\x27);\n});\n/**\n * Parse string of decimal digits with optional leading -/+ and return an\n *   integer value, or nil if parse fails\n */\ncljs.core.parse_long \x3d (function cljs$core$parse_long(s){\nif(typeof s \x3d\x3d\x3d \x27string\x27){\nvar and__5043__auto__ \x3d cljs.core.re_matches(/[+-]?\\d+/,s);\nif(cljs.core.truth_(and__5043__auto__)){\nvar i \x3d parseInt(s);\nif((((i \x3c\x3d Number.MAX_SAFE_INTEGER)) \x26\x26 ((i \x3e\x3d Number.MIN_SAFE_INTEGER)))){\nreturn i;\n} else {\nreturn null;\n}\n} else {\nreturn and__5043__auto__;\n}\n} else {\nthrow (new Error(cljs.core.parsing_err(s)));\n}\n});\n/**\n * Parse string with floating point components and return a floating point value,\n *   or nil if parse fails.\n *   Grammar: https://docs.oracle.com/javase/8/docs/api/java/lang/Double.html#valueOf-java.lang.String-\n */\ncljs.core.parse_double \x3d (function cljs$core$parse_double(s){\nif(typeof s \x3d\x3d\x3d \x27string\x27){\nif(cljs.core.re_matches(/[\\x00-\\x20]*[+-]?NaN[\\x00-\\x20]*/,s)){\nreturn NaN;\n} else {\nif(cljs.core.re_matches(/[\\x00-\\x20]*[+-]?(Infinity|((\\d+\\.?\\d*|\\.\\d+)([eE][+-]?\\d+)?)[dDfF]?)[\\x00-\\x20]*/,s)){\nreturn parseFloat(s);\n} else {\nreturn null;\n\n}\n}\n} else {\nthrow (new Error(cljs.core.parsing_err(s)));\n}\n});\ncljs.core.uuid_regex \x3d /^[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]-[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]-[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]-[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]-[0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F][0-9a-fA-F]$/;\n/**\n * Parse a string representing a UUID and return a UUID instance,\n *   or nil if parse fails.\n *   Grammar: https://docs.oracle.com/javase/8/docs/api/java/util/UUID.html#toString--\n */\ncljs.core.parse_uuid \x3d (function cljs$core$parse_uuid(s){\nif(typeof s \x3d\x3d\x3d \x27string\x27){\nif(cljs.core.re_matches(cljs.core.uuid_regex,s)){\nreturn cljs.core.uuid(s);\n} else {\nreturn null;\n}\n} else {\nthrow (new Error(cljs.core.parsing_err(s)));\n}\n});\n/**\n * Parse strings \x22true\x22 or \x22false\x22 and return a boolean, or nil if invalid. Note that this explicitly\n *   excludes strings with different cases, or space characters.\n */\ncljs.core.parse_boolean \x3d (function cljs$core$parse_boolean(s){\nif(typeof s \x3d\x3d\x3d \x27string\x27){\nvar G__11175 \x3d s;\nswitch (G__11175) {\ncase \x22true\x22:\nreturn true;\n\nbreak;\ncase \x22false\x22:\nreturn false;\n\nbreak;\ndefault:\nreturn null;\n\n}\n} else {\nthrow (new Error(cljs.core.parsing_err(s)));\n}\n});\ncljs.core.maybe_enable_print_BANG_ \x3d (function cljs$core$maybe_enable_print_BANG_(){\nif((typeof console !\x3d\x3d \x27undefined\x27)){\nreturn cljs.core.enable_console_print_BANG_();\n} else {\nif((((cljs.core._STAR_target_STAR_ \x3d\x3d\x3d \x22nashorn\x22)) || ((cljs.core._STAR_target_STAR_ \x3d\x3d\x3d \x22graaljs\x22)))){\nvar system \x3d Java.type(\x22java.lang.System\x22);\n(cljs.core._STAR_print_newline_STAR_ \x3d false);\n\ncljs.core.set_print_fn_BANG_((function (){\nvar xs \x3d arguments;\nvar s \x3d cljs.core.goog$module$goog$array.clone(xs).join(\x22\x22);\nreturn system.out.println(s);\n}));\n\nreturn cljs.core.set_print_err_fn_BANG_((function (){\nvar xs \x3d arguments;\nvar s \x3d cljs.core.goog$module$goog$array.clone(xs).join(\x22\x22);\nreturn system.error.println(s);\n}));\n} else {\nreturn null;\n}\n}\n});\ncljs.core.maybe_enable_print_BANG_();\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.core._STAR_eval_STAR_ !\x3d\x3d \x27undefined\x27)){\n} else {\n/**\n * Runtime environments may provide a way to evaluate ClojureScript\n *   forms. Whatever function *eval* is bound to will be passed any forms which\n *   should be evaluated.\n */\ncljs.core._STAR_eval_STAR_ \x3d (function cljs$core$_STAR_eval_STAR_(_){\nthrow (new Error(\x22cljs.core/*eval* not bound\x22));\n});\n}\n/**\n * Evaluates the form data structure (not text!) and returns the result.\n *   Delegates to cljs.core/*eval*. Intended for use in self-hosted ClojureScript,\n *   which sets up an implementation of cljs.core/*eval* for that environment.\n */\ncljs.core.eval \x3d (function cljs$core$eval(form){\nreturn cljs.core._STAR_eval_STAR_.call(null,form);\n});\nif(COMPILED){\nif((\x22nodejs\x22 \x3d\x3d\x3d cljs.core._STAR_target_STAR_)){\n(goog.global \x3d global);\n} else {\n}\n\nif((\x22window\x22 \x3d\x3d\x3d cljs.core._STAR_global_STAR_)){\n(goog.global \x3d window);\n} else {\nif((\x22self\x22 \x3d\x3d\x3d cljs.core._STAR_global_STAR_)){\n(goog.global \x3d self);\n} else {\nif((\x22global\x22 \x3d\x3d\x3d cljs.core._STAR_global_STAR_)){\n(goog.global \x3d global);\n} else {\n}\n}\n}\n} else {\n}\n\ncljs.core.enable_console_print_BANG_();\n");
SHADOW_ENV.evalLoad("devtools.defaults.js", true , "goog.provide(\x27devtools.defaults\x27);\ndevtools.defaults.known_features \x3d (new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22formatters\x22,\x22formatters\x22,-1875637118),new cljs.core.Keyword(null,\x22hints\x22,\x22hints\x22,-991113151),new cljs.core.Keyword(null,\x22async\x22,\x22async\x22,1050769601)], null);\n}),null));\ndevtools.defaults.default_features \x3d (new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22formatters\x22,\x22formatters\x22,-1875637118)], null);\n}),null));\ndevtools.defaults.feature_groups \x3d (new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22all\x22,\x22all\x22,892129742),cljs.core.deref(devtools.defaults.known_features),new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),cljs.core.deref(devtools.defaults.default_features)], null);\n}),null));\ndevtools.defaults.config \x3d (new cljs.core.Delay((function (){\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22standalone-type-style\x22,\x22standalone-type-style\x22,601522528),new cljs.core.Keyword(null,\x22bypass-availability-checks\x22,\x22bypass-availability-checks\x22,1934691680),new cljs.core.Keyword(null,\x22max-number-body-items\x22,\x22max-number-body-items\x22,299914624),new cljs.core.Keyword(null,\x22symbol-style\x22,\x22symbol-style\x22,1022654848),new cljs.core.Keyword(null,\x22meta-reference-tag\x22,\x22meta-reference-tag\x22,914791936),new cljs.core.Keyword(null,\x22nil-style\x22,\x22nil-style\x22,-1505044832),new cljs.core.Keyword(null,\x22instance-custom-printing-tag\x22,\x22instance-custom-printing-tag\x22,-67034432),new cljs.core.Keyword(null,\x22type-header-background\x22,\x22type-header-background\x22,-810861696),new cljs.core.Keyword(null,\x22instance-value-separator\x22,\x22instance-value-separator\x22,658858944),new cljs.core.Keyword(null,\x22body-pre-handler\x22,\x22body-pre-handler\x22,1211926529),new cljs.core.Keyword(null,\x22initial-hierarchy-depth-budget\x22,\x22initial-hierarchy-depth-budget\x22,-482715807),new cljs.core.Keyword(null,\x22body-items-more-tag\x22,\x22body-items-more-tag\x22,867141569),new cljs.core.Keyword(null,\x22line-index-separator\x22,\x22line-index-separator\x22,-1735989246),new cljs.core.Keyword(null,\x22suppress-preload-install\x22,\x22suppress-preload-install\x22,1724845090),new cljs.core.Keyword(null,\x22new-line-string-replacer\x22,\x22new-line-string-replacer\x22,-753206206),new cljs.core.Keyword(null,\x22body-field-td3-style\x22,\x22body-field-td3-style\x22,53039394),new cljs.core.Keyword(null,\x22more-fields-symbol\x22,\x22more-fields-symbol\x22,720022882),new cljs.core.Keyword(null,\x22body-field-value-spacer\x22,\x22body-field-value-spacer\x22,1279911362),new cljs.core.Keyword(null,\x22meta-reference-style\x22,\x22meta-reference-style\x22,-1930118462),new cljs.core.Keyword(null,\x22protocol-background\x22,\x22protocol-background\x22,1111513794),new cljs.core.Keyword(null,\x22protocols-icon\x22,\x22protocols-icon\x22,-517302494),new cljs.core.Keyword(null,\x22standard-ol-no-margin-tag\x22,\x22standard-ol-no-margin-tag\x22,583023747),new cljs.core.Keyword(null,\x22symbol-tag\x22,\x22symbol-tag\x22,-100807517),new cljs.core.Keyword(null,\x22render-keywords\x22,\x22render-keywords\x22,1200455875),new cljs.core.Keyword(null,\x22fn-header-tag\x22,\x22fn-header-tag\x22,-1262068349),new cljs.core.Keyword(null,\x22keyword-tag\x22,\x22keyword-tag\x22,1587228387),new cljs.core.Keyword(null,\x22header-style\x22,\x22header-style\x22,-2122121341),new cljs.core.Keyword(null,\x22render-metas\x22,\x22render-metas\x22,1141294116),new cljs.core.Keyword(null,\x22fields-header-tag\x22,\x22fields-header-tag\x22,1339134308),new cljs.core.Keyword(null,\x22fn-args-style\x22,\x22fn-args-style\x22,-2141623900),new cljs.core.Keyword(null,\x22max-instance-custom-printing-level\x22,\x22max-instance-custom-printing-level\x22,1876300228),new cljs.core.Keyword(null,\x22expandable-inner-style\x22,\x22expandable-inner-style\x22,-1596774780),new cljs.core.Keyword(null,\x22table\x22,\x22table\x22,-564943036),new cljs.core.Keyword(null,\x22fn-header-style\x22,\x22fn-header-style\x22,985447749),new cljs.core.Keyword(null,\x22body-items-more-label\x22,\x22body-items-more-label\x22,-1561152123),new cljs.core.Keyword(null,\x22fn-name-style\x22,\x22fn-name-style\x22,-573451611),new cljs.core.Keyword(null,\x22nil-tag\x22,\x22nil-tag\x22,-1587449115),new cljs.core.Keyword(null,\x22instance-header-style\x22,\x22instance-header-style\x22,-373071866),new cljs.core.Keyword(null,\x22float-tag\x22,\x22float-tag\x22,-390834106),new cljs.core.Keyword(null,\x22protocol-ns-name-tag\x22,\x22protocol-ns-name-tag\x22,1832081510),new cljs.core.Keyword(null,\x22fast-protocol-style\x22,\x22fast-protocol-style\x22,-1668076410),new cljs.core.Keyword(null,\x22protocol-method-arities-more-symbol\x22,\x22protocol-method-arities-more-symbol\x22,-477018522),new cljs.core.Keyword(null,\x22has-body-pre-handler\x22,\x22has-body-pre-handler\x22,1787020038),new cljs.core.Keyword(null,\x22index-tag\x22,\x22index-tag\x22,693492486),new cljs.core.Keyword(null,\x22rest-symbol\x22,\x22rest-symbol\x22,1021371174),new cljs.core.Keyword(null,\x22protocol-name-tag\x22,\x22protocol-name-tag\x22,1508238310),new cljs.core.Keyword(null,\x22float-infinity-tag\x22,\x22float-infinity-tag\x22,-289254297),new cljs.core.Keyword(null,\x22instance-header-background\x22,\x22instance-header-background\x22,1510357287),new cljs.core.Keyword(null,\x22body-tag\x22,\x22body-tag\x22,433527431),new cljs.core.Keyword(null,\x22cljs-land-tag\x22,\x22cljs-land-tag\x22,-7524377),new cljs.core.Keyword(null,\x22max-list-protocols\x22,\x22max-list-protocols\x22,-537135129),new cljs.core.Keyword(null,\x22string-abbreviation-marker\x22,\x22string-abbreviation-marker\x22,-347785112),new cljs.core.Keyword(null,\x22max-header-elements\x22,\x22max-header-elements\x22,713629864),new cljs.core.Keyword(null,\x22native-icon\x22,\x22native-icon\x22,-126040824),new cljs.core.Keyword(null,\x22instance-body-fields-table-tag\x22,\x22instance-body-fields-table-tag\x22,1306340776),new cljs.core.Keyword(null,\x22render-symbols\x22,\x22render-symbols\x22,-887705016),new cljs.core.Keyword(null,\x22protocol-method-name-style\x22,\x22protocol-method-name-style\x22,-718367832),new cljs.core.Keyword(null,\x22type-name-tag\x22,\x22type-name-tag\x22,-1317275511),new cljs.core.Keyword(null,\x22list-separator\x22,\x22list-separator\x22,900562185),new cljs.core.Keyword(null,\x22td\x22,\x22td\x22,1479933353),new cljs.core.Keyword(null,\x22header-field-value-spacer\x22,\x22header-field-value-spacer\x22,-1210630679),new cljs.core.Keyword(null,\x22li\x22,\x22li\x22,723558921),new cljs.core.Keyword(null,\x22fast-protocol-tag\x22,\x22fast-protocol-tag\x22,2066025065),new cljs.core.Keyword(null,\x22render-strings\x22,\x22render-strings\x22,-1497177335),new cljs.core.Keyword(null,\x22standalone-type-tag\x22,\x22standalone-type-tag\x22,-1677164791),new cljs.core.Keyword(null,\x22protocol-ns-name-style\x22,\x22protocol-ns-name-style\x22,2075298601),new cljs.core.Keyword(null,\x22type-header-tag\x22,\x22type-header-tag\x22,1645372265),new cljs.core.Keyword(null,\x22cljs-land-style\x22,\x22cljs-land-style\x22,278325097),new cljs.core.Keyword(null,\x22lambda-icon\x22,\x22lambda-icon\x22,980753546),new cljs.core.Keyword(null,\x22list-style\x22,\x22list-style\x22,-809622358),new cljs.core.Keyword(null,\x22sanity-hint-min-length\x22,\x22sanity-hint-min-length\x22,104958154),new cljs.core.Keyword(null,\x22render-functions\x22,\x22render-functions\x22,1273333002),new cljs.core.Keyword(null,\x22fields-header-open-symbol\x22,\x22fields-header-open-symbol\x22,-26243798),new cljs.core.Keyword(null,\x22body-field-value-style\x22,\x22body-field-value-style\x22,752084266),new cljs.core.Keyword(null,\x22header-post-handler\x22,\x22header-post-handler\x22,514828618),new cljs.core.Keyword(null,\x22header-pre-handler\x22,\x22header-pre-handler\x22,-1997722262),new cljs.core.Keyword(null,\x22tr\x22,\x22tr\x22,-1424774646),new cljs.core.Keyword(null,\x22body-items-more-style\x22,\x22body-items-more-style\x22,1518949066),new cljs.core.Keyword(null,\x22plus-symbol\x22,\x22plus-symbol\x22,-1984915189),new cljs.core.Keyword(null,\x22fn-prefix-style\x22,\x22fn-prefix-style\x22,991677739),new cljs.core.Keyword(null,\x22args-open-symbol\x22,\x22args-open-symbol\x22,-1336957557),new cljs.core.Keyword(null,\x22expanded-string-style\x22,\x22expanded-string-style\x22,-543781397),new cljs.core.Keyword(null,\x22fn-name-tag\x22,\x22fn-name-tag\x22,555823755),new cljs.core.Keyword(null,\x22header-field-value-tag\x22,\x22header-field-value-tag\x22,-1708691701),new cljs.core.Keyword(null,\x22standard-li-style\x22,\x22standard-li-style\x22,413442955),new cljs.core.Keyword(null,\x22fields-icon\x22,\x22fields-icon\x22,-436030420),new cljs.core.Keyword(null,\x22body-style\x22,\x22body-style\x22,1462943820),new cljs.core.Keyword(null,\x22type-wrapper-tag\x22,\x22type-wrapper-tag\x22,-1732366004),new cljs.core.Keyword(null,\x22standard-li-tag\x22,\x22standard-li-tag\x22,-932749876),new cljs.core.Keyword(null,\x22type-wrapper-style\x22,\x22type-wrapper-style\x22,-922880468),new cljs.core.Keyword(null,\x22render-bools\x22,\x22render-bools\x22,1793659724),new cljs.core.Keyword(null,\x22dq\x22,\x22dq\x22,-1690275860),new cljs.core.Keyword(null,\x22fields-header-no-fields-symbol\x22,\x22fields-header-no-fields-symbol\x22,-1749204979),new cljs.core.Keyword(null,\x22nil-label\x22,\x22nil-label\x22,-587789203),new cljs.core.Keyword(null,\x22list-open-symbol\x22,\x22list-open-symbol\x22,-1162287443),new cljs.core.Keyword(null,\x22body-field-td2-style\x22,\x22body-field-td2-style\x22,-278192403),new cljs.core.Keyword(null,\x22type-header-style\x22,\x22type-header-style\x22,1821477837),new cljs.core.Keyword(null,\x22header-field-separator\x22,\x22header-field-separator\x22,-774444018),new cljs.core.Keyword(null,\x22body-field-td3-tag\x22,\x22body-field-td3-tag\x22,-803119922),new cljs.core.Keyword(null,\x22standard-ol-no-margin-style\x22,\x22standard-ol-no-margin-style\x22,-1701969586),new cljs.core.Keyword(null,\x22instance-custom-printing-wrapper-style\x22,\x22instance-custom-printing-wrapper-style\x22,374945134),new cljs.core.Keyword(null,\x22more-symbol\x22,\x22more-symbol\x22,-2139760242),new cljs.core.Keyword(null,\x22string-tag\x22,\x22string-tag\x22,1639024494),new cljs.core.Keyword(null,\x22meta-wrapper-tag\x22,\x22meta-wrapper-tag\x22,1927429038),new cljs.core.Keyword(null,\x22method-icon\x22,\x22method-icon\x22,-1678775281),new cljs.core.Keyword(null,\x22max-protocol-method-arities-list\x22,\x22max-protocol-method-arities-list\x22,-45936465),new cljs.core.Keyword(null,\x22min-expandable-sequable-count-for-well-known-types\x22,\x22min-expandable-sequable-count-for-well-known-types\x22,-1879576081),new cljs.core.Keyword(null,\x22basis-icon\x22,\x22basis-icon\x22,1917779567),new cljs.core.Keyword(null,\x22fn-args-tag\x22,\x22fn-args-tag\x22,549126831),new cljs.core.Keyword(null,\x22standard-ol-style\x22,\x22standard-ol-style\x22,2143825615),new cljs.core.Keyword(null,\x22file-reader\x22,\x22file-reader\x22,-450847664),new cljs.core.Keyword(null,\x22bool-tag\x22,\x22bool-tag\x22,-10409808),new cljs.core.Keyword(null,\x22expandable-inner-tag\x22,\x22expandable-inner-tag\x22,-799648560),new cljs.core.Keyword(null,\x22fn-prefix-tag\x22,\x22fn-prefix-tag\x22,1947411856),new cljs.core.Keyword(null,\x22float-style\x22,\x22float-style\x22,705926672),new cljs.core.Keyword(null,\x22type-basis-item-tag\x22,\x22type-basis-item-tag\x22,50612816),new cljs.core.Keyword(null,\x22type-basis-item-style\x22,\x22type-basis-item-style\x22,-1744400688),new cljs.core.Keyword(null,\x22div\x22,\x22div\x22,1057191632),new cljs.core.Keyword(null,\x22fn-ns-name-tag\x22,\x22fn-ns-name-tag\x22,-900073712),new cljs.core.Keyword(null,\x22body-post-handler\x22,\x22body-post-handler\x22,-1040905424),new cljs.core.Keyword(null,\x22more-marker\x22,\x22more-marker\x22,-14717935),new cljs.core.Keyword(null,\x22header-tag\x22,\x22header-tag\x22,1594852433),new cljs.core.Keyword(null,\x22body-field-name-tag\x22,\x22body-field-name-tag\x22,917867601),new cljs.core.Keyword(null,\x22expanded-string-tag\x22,\x22expanded-string-tag\x22,-2125162127),new cljs.core.Keyword(null,\x22bool-style\x22,\x22bool-style\x22,-1275737743),new cljs.core.Keyword(null,\x22default-envelope-style\x22,\x22default-envelope-style\x22,-1676750479),new cljs.core.Keyword(null,\x22protocol-more-tag\x22,\x22protocol-more-tag\x22,2098702865),new cljs.core.Keyword(null,\x22string-style\x22,\x22string-style\x22,744195825),new cljs.core.Keyword(null,\x22body-field-name-style\x22,\x22body-field-name-style\x22,1518272241),new cljs.core.Keyword(null,\x22meta-body-tag\x22,\x22meta-body-tag\x22,1689183121),new cljs.core.Keyword(null,\x22instance-custom-printing-background\x22,\x22instance-custom-printing-background\x22,-248433646),new cljs.core.Keyword(null,\x22integer-style\x22,\x22integer-style\x22,1568434578),new cljs.core.Keyword(null,\x22native-reference-background\x22,\x22native-reference-background\x22,-286129550),new cljs.core.Keyword(null,\x22header-field-name-style\x22,\x22header-field-name-style\x22,-804007278),new cljs.core.Keyword(null,\x22default-envelope-header\x22,\x22default-envelope-header\x22,-90723598),new cljs.core.Keyword(null,\x22instance-type-header-style\x22,\x22instance-type-header-style\x22,1601743858),new cljs.core.Keyword(null,\x22ol\x22,\x22ol\x22,932524051),new cljs.core.Keyword(null,\x22instance-custom-printing-style\x22,\x22instance-custom-printing-style\x22,-716263405),new cljs.core.Keyword(null,\x22float-nan-style\x22,\x22float-nan-style\x22,967384179),new cljs.core.Keyword(null,\x22float-nan-tag\x22,\x22float-nan-tag\x22,557403379),new cljs.core.Keyword(null,\x22min-expandable-sequable-count\x22,\x22min-expandable-sequable-count\x22,63566227),new cljs.core.Keyword(null,\x22fields-header-style\x22,\x22fields-header-style\x22,-25300493),new cljs.core.Keyword(null,\x22instance-type-header-tag\x22,\x22instance-type-header-tag\x22,-1015702989),new cljs.core.Keyword(null,\x22spacer\x22,\x22spacer\x22,2067425139),new cljs.core.Keyword(null,\x22body-field-td1-style\x22,\x22body-field-td1-style\x22,988760979),new cljs.core.Keyword(null,\x22body-field-tr-tag\x22,\x22body-field-tr-tag\x22,37280691),new cljs.core.Keyword(null,\x22header-field-name-tag\x22,\x22header-field-name-tag\x22,82291956),new cljs.core.Keyword(null,\x22type-name-style\x22,\x22type-name-style\x22,652886356),new cljs.core.Keyword(null,\x22float-infinity-style\x22,\x22float-infinity-style\x22,-476570060),new cljs.core.Keyword(null,\x22standard-li-no-margin-tag\x22,\x22standard-li-no-margin-tag\x22,-844555468),new cljs.core.Keyword(null,\x22list-tag\x22,\x22list-tag\x22,1555796884),new cljs.core.Keyword(null,\x22instance-body-fields-table-style\x22,\x22instance-body-fields-table-style\x22,-1457745996),new cljs.core.Keyword(null,\x22body-field-td1-tag\x22,\x22body-field-td1-tag\x22,256357429),new cljs.core.Keyword(null,\x22disable-advanced-mode-check\x22,\x22disable-advanced-mode-check\x22,-968346539),new cljs.core.Keyword(null,\x22standard-li-no-margin-style\x22,\x22standard-li-no-margin-style\x22,87138485),new cljs.core.Keyword(null,\x22slow-protocol-style\x22,\x22slow-protocol-style\x22,-714284811),new cljs.core.Keyword(null,\x22render-types\x22,\x22render-types\x22,-129927851),new cljs.core.Keyword(null,\x22args-close-symbol\x22,\x22args-close-symbol\x22,777697973),new cljs.core.Keyword(null,\x22string-postfix-limit\x22,\x22string-postfix-limit\x22,-1282205963),new cljs.core.Keyword(null,\x22disable-cljs-fn-formatting\x22,\x22disable-cljs-fn-formatting\x22,1903786837),new cljs.core.Keyword(null,\x22item-style\x22,\x22item-style\x22,-188747722),new cljs.core.Keyword(null,\x22protocol-method-arities-list-header-separator\x22,\x22protocol-method-arities-list-header-separator\x22,-115158954),new cljs.core.Keyword(null,\x22protocol-method-tag\x22,\x22protocol-method-tag\x22,2032279830),new cljs.core.Keyword(null,\x22index-style\x22,\x22index-style\x22,93813430),new cljs.core.Keyword(null,\x22list-close-symbol\x22,\x22list-close-symbol\x22,-1120016586),new cljs.core.Keyword(null,\x22render-numbers\x22,\x22render-numbers\x22,-1385392009),new cljs.core.Keyword(null,\x22body-field-value-tag\x22,\x22body-field-value-tag\x22,800789079),new cljs.core.Keyword(null,\x22empty-basis-symbol\x22,\x22empty-basis-symbol\x22,-1971559593),new cljs.core.Keyword(null,\x22fn-icon\x22,\x22fn-icon\x22,-1412665288),new cljs.core.Keyword(null,\x22integer-tag\x22,\x22integer-tag\x22,698000472),new cljs.core.Keyword(null,\x22protocols-header-tag\x22,\x22protocols-header-tag\x22,-734413384),new cljs.core.Keyword(null,\x22protocol-method-name-tag\x22,\x22protocol-method-name-tag\x22,-1030376744),new cljs.core.Keyword(null,\x22item-tag\x22,\x22item-tag\x22,-988763304),new cljs.core.Keyword(null,\x22instance-value-tag\x22,\x22instance-value-tag\x22,-1739593896),new cljs.core.Keyword(null,\x22expandable-wrapper-style\x22,\x22expandable-wrapper-style\x22,-491294888),new cljs.core.Keyword(null,\x22expandable-style\x22,\x22expandable-style\x22,-501370920),new cljs.core.Keyword(null,\x22well-known-types\x22,\x22well-known-types\x22,70638649),new cljs.core.Keyword(null,\x22fn-multi-arity-args-indent-style\x22,\x22fn-multi-arity-args-indent-style\x22,-1170401159),new cljs.core.Keyword(null,\x22type-ref-style\x22,\x22type-ref-style\x22,-1940011911),new cljs.core.Keyword(null,\x22circular-ref-icon\x22,\x22circular-ref-icon\x22,-2087682919),new cljs.core.Keyword(null,\x22type-basis-style\x22,\x22type-basis-style\x22,-1272137383),new cljs.core.Keyword(null,\x22standard-ol-tag\x22,\x22standard-ol-tag\x22,1120081433),new cljs.core.Keyword(null,\x22fn-ns-name-style\x22,\x22fn-ns-name-style\x22,-21387751),new cljs.core.Keyword(null,\x22circular-reference-body-tag\x22,\x22circular-reference-body-tag\x22,-1301830023),new cljs.core.Keyword(null,\x22has-body-post-handler\x22,\x22has-body-post-handler\x22,-863451271),new cljs.core.Keyword(null,\x22native-reference-tag\x22,\x22native-reference-tag\x22,-1516119079),new cljs.core.Keyword(null,\x22aligned-li-tag\x22,\x22aligned-li-tag\x22,1727029722),new cljs.core.Keyword(null,\x22native-reference-wrapper-style\x22,\x22native-reference-wrapper-style\x22,578741818),new cljs.core.Keyword(null,\x22render-instances\x22,\x22render-instances\x22,-1803579686),new cljs.core.Keyword(null,\x22expandable-symbol\x22,\x22expandable-symbol\x22,1644611290),new cljs.core.Keyword(null,\x22fn-multi-arity-args-indent-tag\x22,\x22fn-multi-arity-args-indent-tag\x22,-1931373734),new cljs.core.Keyword(null,\x22expandable-tag\x22,\x22expandable-tag\x22,151027578),new cljs.core.Keyword(null,\x22protocol-method-arities-header-tag\x22,\x22protocol-method-arities-header-tag\x22,734407707),new cljs.core.Keyword(null,\x22max-instance-header-fields\x22,\x22max-instance-header-fields\x22,-126007269),new cljs.core.Keyword(null,\x22type-ref-tag\x22,\x22type-ref-tag\x22,2126727355),new cljs.core.Keyword(null,\x22max-print-level\x22,\x22max-print-level\x22,-462237413),new cljs.core.Keyword(null,\x22meta-wrapper-style\x22,\x22meta-wrapper-style\x22,-1627075237),new cljs.core.Keyword(null,\x22multi-arity-symbol\x22,\x22multi-arity-symbol\x22,-420139653),new cljs.core.Keyword(null,\x22render-nils\x22,\x22render-nils\x22,1360008699),new cljs.core.Keyword(null,\x22meta-header-tag\x22,\x22meta-header-tag\x22,-1207812581),new cljs.core.Keyword(null,\x22print-config-overrides\x22,\x22print-config-overrides\x22,-274716965),new cljs.core.Keyword(null,\x22slow-protocol-tag\x22,\x22slow-protocol-tag\x22,2061129467),new cljs.core.Keyword(null,\x22header-field-tag\x22,\x22header-field-tag\x22,-1403476101),new cljs.core.Keyword(null,\x22meta-body-style\x22,\x22meta-body-style\x22,-1858094980),new cljs.core.Keyword(null,\x22native-reference-wrapper-tag\x22,\x22native-reference-wrapper-tag\x22,2047690940),new cljs.core.Keyword(null,\x22fields-header-close-symbol\x22,\x22fields-header-close-symbol\x22,1615181116),new cljs.core.Keyword(null,\x22string-prefix-limit\x22,\x22string-prefix-limit\x22,1256106332),new cljs.core.Keyword(null,\x22native-reference-style\x22,\x22native-reference-style\x22,-1773393444),new cljs.core.Keyword(null,\x22instance-custom-printing-wrapper-tag\x22,\x22instance-custom-printing-wrapper-tag\x22,1461890684),new cljs.core.Keyword(null,\x22body-field-td2-tag\x22,\x22body-field-td2-tag\x22,94501500),new cljs.core.Keyword(null,\x22type-basis-tag\x22,\x22type-basis-tag\x22,-2122159204),new cljs.core.Keyword(null,\x22features-to-install\x22,\x22features-to-install\x22,102899261),new cljs.core.Keyword(null,\x22aligned-li-style\x22,\x22aligned-li-style\x22,43721341),new cljs.core.Keyword(null,\x22default-envelope-tag\x22,\x22default-envelope-tag\x22,1882840861),new cljs.core.Keyword(null,\x22protocol-more-style\x22,\x22protocol-more-style\x22,-870041570),new cljs.core.Keyword(null,\x22instance-header-tag\x22,\x22instance-header-tag\x22,903623870),new cljs.core.Keyword(null,\x22ns-icon\x22,\x22ns-icon\x22,725601214),new cljs.core.Keyword(null,\x22protocol-name-style\x22,\x22protocol-name-style\x22,-1291847714),new cljs.core.Keyword(null,\x22body-line-max-print-level\x22,\x22body-line-max-print-level\x22,571158623),new cljs.core.Keyword(null,\x22circular-reference-tag\x22,\x22circular-reference-tag\x22,858973471),new cljs.core.Keyword(null,\x22keyword-style\x22,\x22keyword-style\x22,-780643937),new cljs.core.Keyword(null,\x22header-expander-symbol\x22,\x22header-expander-symbol\x22,907531743),new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22meta-style\x22,\x22meta-style\x22,1528213407)],[\x22box-shadow:0px 0px 0px 1px rgba(0,160,220,0.5) inset;margin-top:1px;border-radius:2px;\x22,false,(100),\x22color:rgba(0,0,0,1);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22meta-reference-style\x22,\x22meta-reference-style\x22,-1930118462)], null),\x22color:rgba(128,128,128,1);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22instance-custom-printing-style\x22,\x22instance-custom-printing-style\x22,-716263405)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(0,160,220,0.5);position:absolute;top:1px;right:1px;bottom:1px;left:1px;border-radius:1px;\x22], null)], null),\x22\x22,null,((20) - (1)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22body-items-more-style\x22,\x22body-items-more-style\x22,1518949066)], null),\x22\x22,false,\x22\\u21B5\x22,\x22vertical-align:top;padding:0;\x22,\x22\\u2026\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22color:rgba(204,204,204,1);\x22], null),\x22\x3d\x22], null),\x22background-color:rgba(255,102,0,1);border-radius:0 2px 2px 0;\x22,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(41,59,163,0.5);position:absolute;top:1px;right:1px;bottom:1px;left:1px;border-radius:1px;\x22], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(41,59,163,1);color:#fff;width:20px;display:inline-block;text-align:center;font-size:8px;opacity:0.5;vertical-align:top;position:relative;margin-right:3px;border-radius:2px;-webkit-user-select:none;padding:1px 4px;top:1px;\x22], null),\x22\\u22A2\x22], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22ol\x22,\x22ol\x22,932524051),new cljs.core.Keyword(null,\x22standard-ol-no-margin-style\x22,\x22standard-ol-no-margin-style\x22,-1701969586)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22symbol-style\x22,\x22symbol-style\x22,1022654848)], null),true,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22fn-header-style\x22,\x22fn-header-style\x22,985447749)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22keyword-style\x22,\x22keyword-style\x22,-780643937)], null),\x22white-space:nowrap;\x22,true,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22fields-header-style\x22,\x22fields-header-style\x22,-25300493)], null),\x22color:rgba(170,130,20,1);\x22,(2),\x22margin-left:-3px;\x22,\x22table\x22,null,\x22more\\u2026\x22,\x22color:rgba(30,130,30,1);margin-right:2px;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22nil-style\x22,\x22nil-style\x22,-1505044832)], null),\x22box-shadow:0px 0px 0px 1px rgba(0,160,220,0.5) inset;margin-top:1px;border-radius:2px;position:relative;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22float-style\x22,\x22float-style\x22,705926672)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22protocol-ns-name-style\x22,\x22protocol-ns-name-style\x22,2075298601)], null),\x22position:relative;padding:0px 4px;border-radius:2px;-webkit-user-select:none;color:rgba(255,255,170,1);\x22,\x22\\u2026\x22,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22index-style\x22,\x22index-style\x22,93813430)], null),\x22 \x26 \x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22protocol-name-style\x22,\x22protocol-name-style\x22,-1291847714)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22float-infinity-style\x22,\x22float-infinity-style\x22,-476570060)], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22body-style\x22,\x22body-style\x22,1462943820)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22cljs-land-style\x22,\x22cljs-land-style\x22,278325097)], null),(5),\x22 \\u2026 \x22,(5),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(255,0,255,1);color:#fff;width:20px;display:inline-block;text-align:center;font-size:8px;opacity:0.5;vertical-align:top;position:relative;margin-right:3px;border-radius:2px;-webkit-user-select:none;padding:1px 4px;top:1px;\x22], null),\x22js\x22], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22table\x22,\x22table\x22,-564943036),new cljs.core.Keyword(null,\x22instance-body-fields-table-style\x22,\x22instance-body-fields-table-style\x22,-1457745996)], null),true,\x22margin-right:6px;color:rgba(41,59,163,1) ;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22type-name-style\x22,\x22type-name-style\x22,652886356)], null),\x22 \x22,\x22td\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22color:rgba(204,204,204,1);\x22], null),\x22\x3d\x22], null),\x22li\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22fast-protocol-style\x22,\x22fast-protocol-style\x22,-1668076410)], null),true,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22standalone-type-style\x22,\x22standalone-type-style\x22,601522528)], null),\x22color:rgba(150,150,150,1);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22type-header-style\x22,\x22type-header-style\x22,1821477837)], null),\x22background-color:rgba(100,255,100,0.08);color:rgba(0,0,0,1);border-radius:2px;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(30,130,30,1);color:#fff;width:20px;display:inline-block;text-align:center;font-size:8px;opacity:0.5;vertical-align:top;position:relative;margin-right:3px;border-radius:2px;-webkit-user-select:none;padding:1px 4px;top:1px;\x22], null),\x22\\u03BB\x22], null),null,(128),true,\x22\x22,\x22margin-left:6px;\x22,null,null,\x22tr\x22,\x22background-color:rgba(153,153,153,1);min-width:50px;display:inline-block;color:rgba(255,255,255,1);cursor:pointer;line-height:14px;font-size:10px;border-radius:2px;padding:0px 4px 0px 4px;margin:1px 0px 0px 0px;-webkit-user-select:none;\x22,\x22+\x22,null,\x22[\x22,\x22padding:0px 12px 0px 12px;color:rgba(196,26,22,1);white-space:pre;border-top:1px solid rgba(255,100,100,0.4);border-radius:1px;margin:0px 0px 2px 0px;background-color:rgba(255,100,100,0.08);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22fn-name-style\x22,\x22fn-name-style\x22,-573451611)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22header-field-value-style\x22,\x22header-field-value-style\x22,-980761419)], null),\x22margin-left:0px;min-height:14px;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(0,160,220,1);color:#fff;width:20px;display:inline-block;text-align:center;font-size:8px;opacity:0.5;vertical-align:top;position:relative;margin-right:3px;border-radius:2px;-webkit-user-select:none;padding:1px 4px;top:1px;\x22], null),\x22\\u220B\x22], null),\x22display:inline-block;padding:3px 12px;border-top:2px solid rgba(60,90,60,0.1);margin:1px;margin-top:0px;background-color:rgba(100,255,100,0.08);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22type-wrapper-style\x22,\x22type-wrapper-style\x22,-922880468)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22li\x22,\x22li\x22,723558921),new cljs.core.Keyword(null,\x22standard-li-style\x22,\x22standard-li-style\x22,413442955)], null),\x22position:relative;padding-left:1px;border-radius:2px;\x22,true,\x22\\\x22\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22header-field-name-style\x22,\x22header-field-name-style\x22,-804007278)], null),\x22\\u2205\x22], null),\x22nil\x22,\x22\x22,\x22vertical-align:top;padding:0;\x22,\x22color:rgba(238,238,355,1);padding:0px 2px 0px 2px;-webkit-user-select:none;border-radius:2px;\x22,\x22 \x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22td\x22,\x22td\x22,1479933353),new cljs.core.Keyword(null,\x22body-field-td3-style\x22,\x22body-field-td3-style\x22,53039394)], null),\x22list-style-type:none;padding-left:0px;margin-top:0px;margin-bottom:0px;margin-left:0px;\x22,\x22position:relative;border-radius:2px;\x22,\x22\\u2026\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22string-style\x22,\x22string-style\x22,744195825)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22meta-wrapper-style\x22,\x22meta-wrapper-style\x22,-1627075237)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(41,59,163,1);color:#fff;width:20px;display:inline-block;text-align:center;font-size:8px;opacity:0.5;vertical-align:top;position:relative;margin-right:3px;border-radius:2px;-webkit-user-select:none;padding:1px 4px;top:1px;\x22], null),\x22m\x22], null),(3),(4),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(0,160,220,1);color:#fff;width:20px;display:inline-block;text-align:center;font-size:8px;opacity:0.5;vertical-align:top;position:relative;margin-right:3px;border-radius:2px;-webkit-user-select:none;padding:1px 4px;top:1px;\x22], null),\x22\\u03B2\x22], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22fn-args-style\x22,\x22fn-args-style\x22,-2141623900)], null),\x22list-style-type:none;padding-left:0px;margin-top:0px;margin-bottom:0px;margin-left:0px;\x22,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22bool-style\x22,\x22bool-style\x22,-1275737743)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22expandable-inner-style\x22,\x22expandable-inner-style\x22,-1596774780)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22fn-prefix-style\x22,\x22fn-prefix-style\x22,991677739)], null),\x22color:rgba(28,136,207,1);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22type-basis-item-style\x22,\x22type-basis-item-style\x22,-1744400688)], null),\x22color:rgba(0,160,220,1);margin-right:6px;\x22,\x22div\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22fn-ns-name-style\x22,\x22fn-ns-name-style\x22,-21387751)], null),null,\x22\\u2026\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22header-style\x22,\x22header-style\x22,-2122121341)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22body-field-name-style\x22,\x22body-field-name-style\x22,1518272241)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22expanded-string-style\x22,\x22expanded-string-style\x22,-543781397)], null),\x22color:rgba(0,153,153,1);\x22,null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22protocol-more-style\x22,\x22protocol-more-style\x22,-870041570)], null),\x22color:rgba(196,26,22,1);\x22,\x22color:rgba(0,160,220,1);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22meta-body-style\x22,\x22meta-body-style\x22,-1858094980)], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(255,255,200,1);position:absolute;top:1px;right:1px;bottom:1px;left:1px;border-radius:1px;border-radius:0 1px 1px 0;\x22], null)], null),\x22color:rgba(28,0,207,1);\x22,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(255,255,255,1);position:absolute;top:1px;right:1px;bottom:1px;left:1px;border-radius:1px;\x22], null)], null),\x22color:rgba(0,160,220,1);\x22,\x22\\uD83D\\uDCE8\x22,\x22color:rgba(238,238,355,1);padding:0px 2px 0px 2px;-webkit-user-select:none;border-radius:2px 0 0 2px;\x22,\x22ol\x22,\x22position:relative;padding:0 2px 0 4px;\x22,\x22color:rgba(213,60,27,1);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22float-nan-style\x22,\x22float-nan-style\x22,967384179)], null),(0),\x22padding:0px 3px;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22instance-type-header-style\x22,\x22instance-type-header-style\x22,1601743858)], null),\x22 \x22,\x22vertical-align:top;padding:0;padding-right:4px;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22tr\x22,\x22tr\x22,-1424774646),new cljs.core.Keyword(null,\x22body-field-tr-style\x22,\x22body-field-tr-style\x22,1067836596)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22header-field-name-style\x22,\x22header-field-name-style\x22,-804007278)], null),\x22padding-right:4px;\x22,\x22color:rgba(28,80,207,1);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22li\x22,\x22li\x22,723558921),new cljs.core.Keyword(null,\x22standard-li-no-margin-style\x22,\x22standard-li-no-margin-style\x22,87138485)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22list-style\x22,\x22list-style\x22,-809622358)], null),\x22border-spacing:0;border-collapse:collapse;margin-bottom:-2px;display:inline-block;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22td\x22,\x22td\x22,1479933353),new cljs.core.Keyword(null,\x22body-field-td1-style\x22,\x22body-field-td1-style\x22,988760979)], null),false,\x22margin-left:0px;min-height:14px;\x22,\x22position:relative;padding:0px 4px;border-radius:2px;-webkit-user-select:none;color:rgba(238,238,238,1);\x22,true,\x22]\x22,(20),false,\x22display:inline-block;white-space:nowrap;border-left:2px solid rgba(100,100,100,0.2);padding:0px 4px 0px 4px;margin:1px 0px 0px 0px;\x22,\x22 \x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22protocol-method-style\x22,\x22protocol-method-style\x22,-1740943941)], null),\x22min-width:50px;display:inline-block;text-align:right;vertical-align:top;background-color:rgba(221,221,221,1);color:rgba(0,0,0,1);opacity:0.5;margin-right:3px;padding:0px 4px 0px 4px;margin:1px 0px 0px 0px;-webkit-user-select:none;\x22,\x22\x22,true,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22body-field-value-style\x22,\x22body-field-value-style\x22,752084266)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),null], null),new cljs.core.Keyword(null,\x22basis-icon\x22,\x22basis-icon\x22,1917779567),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22type-basis-item-style\x22,\x22type-basis-item-style\x22,-1744400688)], null),\x22\\u2205\x22], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(30,130,30,1);color:#fff;width:20px;display:inline-block;text-align:center;font-size:8px;opacity:0.5;vertical-align:top;position:relative;margin-right:3px;border-radius:2px;-webkit-user-select:none;padding:1px 4px;top:1px;\x22], null),\x22fn\x22], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22integer-style\x22,\x22integer-style\x22,1568434578)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22protocols-header-style\x22,\x22protocols-header-style\x22,22379790)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22protocol-method-name-style\x22,\x22protocol-method-name-style\x22,-718367832)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22item-style\x22,\x22item-style\x22,-188747722)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22instance-value-style\x22,\x22instance-value-style\x22,1340189507)], null),null,\x22white-space:nowrap;padding-left:3px;\x22,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 36, [\x22cljs.core/ValSeq\x22,null,\x22cljs.core/ArrayNodeSeq\x22,null,\x22cljs.core/Cons\x22,null,\x22cljs.core/ES6IteratorSeq\x22,null,\x22cljs.core/IntegerRange\x22,null,\x22cljs.core/List\x22,null,\x22cljs.core/PersistentArrayMapSeq\x22,null,\x22cljs.core/Symbol\x22,null,\x22cljs.core/PersistentHashMap\x22,null,\x22cljs.core/Subvec\x22,null,\x22cljs.core/EmptyList\x22,null,\x22cljs.core/BlackNode\x22,null,\x22cljs.core/PersistentArrayMap\x22,null,\x22cljs.core/LazyTransformer\x22,null,\x22cljs.core/PersistentTreeMapSeq\x22,null,\x22cljs.core/MapEntry\x22,null,\x22cljs.core/PersistentQueueSeq\x22,null,\x22cljs.core/Keyword\x22,null,\x22cljs.core/Range\x22,null,\x22cljs.core/UUID\x22,null,\x22cljs.core/IndexedSeq\x22,null,\x22cljs.core/KeySeq\x22,null,\x22cljs.core/RSeq\x22,null,\x22cljs.core/ObjMap\x22,null,\x22cljs.core/PersistentVector\x22,null,\x22cljs.core/PersistentTreeSet\x22,null,\x22cljs.core/Eduction\x22,null,\x22cljs.core/NodeSeq\x22,null,\x22cljs.core/RedNode\x22,null,\x22cljs.core/ExceptionInfo\x22,null,\x22cljs.core/PersistentHashSet\x22,null,\x22cljs.core/PersistentTreeMap\x22,null,\x22cljs.core/LazySeq\x22,null,\x22cljs.core/ChunkedSeq\x22,null,\x22cljs.core/ChunkedCons\x22,null,\x22cljs.core/TaggedLiteral\x22,null], null), null),\x22visibility:hidden;\x22,\x22position:relative;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(255,0,0,1);color:#fff;width:20px;display:inline-block;text-align:center;font-size:8px;opacity:0.5;vertical-align:top;position:relative;margin-right:3px;border-radius:2px;-webkit-user-select:none;padding:0px 4px;top:2px;\x22], null),\x22\\u221E\x22], null),\x22margin-right:3px;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22ol\x22,\x22ol\x22,932524051),new cljs.core.Keyword(null,\x22standard-ol-style\x22,\x22standard-ol-style\x22,2143825615)], null),\x22color:rgba(150,150,150,1);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22circular-reference-body-style\x22,\x22circular-reference-body-style\x22,314341165)], null),null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22native-reference-style\x22,\x22native-reference-style\x22,-1773393444)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22li\x22,\x22li\x22,723558921),new cljs.core.Keyword(null,\x22aligned-li-style\x22,\x22aligned-li-style\x22,43721341)], null),\x22position:relative;display:inline-flex;\x22,true,\x22\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22fn-multi-arity-args-indent-style\x22,\x22fn-multi-arity-args-indent-style\x22,-1170401159)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22expandable-style\x22,\x22expandable-style\x22,-501370920)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22protocol-method-arities-header-style\x22,\x22protocol-method-arities-header-style\x22,-2088352156)], null),(3),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22type-ref-style\x22,\x22type-ref-style\x22,-1940011911)], null),(2),\x22box-shadow:0px 0px 0px 1px rgba(255,102,0,1) inset;margin-top:1px;border-radius:2px;\x22,\x22\\u2026\x22,true,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22meta-style\x22,\x22meta-style\x22,1528213407)], null),false,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22slow-protocol-style\x22,\x22slow-protocol-style\x22,-714284811)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22header-field-style\x22,\x22header-field-style\x22,-1193742102)], null),\x22background-color:rgba(255,102,0,0.1);box-shadow:0px 0px 0px 1px rgba(255,102,0,1) inset;position:relative;top:-1px;padding:3px 12px;border-bottom-right-radius:2px;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22native-reference-wrapper-style\x22,\x22native-reference-wrapper-style\x22,578741818)], null),\x22\x22,(20),\x22padding:0px 3px;margin:-4px 0px -2px;position:relative;top:1px;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22instance-custom-printing-wrapper-style\x22,\x22instance-custom-printing-wrapper-style\x22,374945134)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22td\x22,\x22td\x22,1479933353),new cljs.core.Keyword(null,\x22body-field-td2-style\x22,\x22body-field-td2-style\x22,-278192403)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22type-basis-style\x22,\x22type-basis-style\x22,-1272137383)], null),new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),\x22margin-left:0px;min-height:14px;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22default-envelope-style\x22,\x22default-envelope-style\x22,-1676750479)], null),\x22font-size:8px;position:relative;\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22instance-header-style\x22,\x22instance-header-style\x22,-373071866)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),\x22background-color:rgba(150,150,150,1);color:#fff;width:20px;display:inline-block;text-align:center;font-size:8px;opacity:0.5;vertical-align:top;position:relative;margin-right:3px;border-radius:2px;-webkit-user-select:none;padding:1px 4px;top:1px;\x22], null),\x22in\x22], null),\x22position:relative;\x22,(3),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22circular-reference-wrapper-style\x22,\x22circular-reference-wrapper-style\x22,-329208502)], null),\x22color:rgba(136,19,145,1);\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),null], null),\x22~\x22], null),\x22span\x22,\x22color:rgba(238,238,238,1);padding:0px 3px;-webkit-user-select:none;\x22]);\n}),null));\n");
SHADOW_ENV.evalLoad("devtools.prefs.js", true , "goog.provide(\x27devtools.prefs\x27);\ndevtools.prefs.default_config \x3d (new cljs.core.Delay((function (){\nreturn cljs.core.deref(devtools.defaults.config);\n}),null));\ndevtools.prefs.external_config \x3d (new cljs.core.Delay((function (){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}),null));\ndevtools.prefs.initial_config \x3d (new cljs.core.Delay((function (){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.deref(devtools.prefs.default_config),cljs.core.deref(devtools.prefs.external_config)], 0));\n}),null));\ndevtools.prefs._STAR_current_config_STAR_ \x3d (new cljs.core.Delay((function (){\nreturn cljs.core.deref(devtools.prefs.initial_config);\n}),null));\ndevtools.prefs.set_prefs_BANG_ \x3d (function devtools$prefs$set_prefs_BANG_(new_prefs){\nreturn (devtools.prefs._STAR_current_config_STAR_ \x3d new_prefs);\n});\ndevtools.prefs.get_prefs \x3d (function devtools$prefs$get_prefs(){\nif(cljs.core.delay_QMARK_(devtools.prefs._STAR_current_config_STAR_)){\ndevtools.prefs.set_prefs_BANG_(cljs.core.deref(devtools.prefs._STAR_current_config_STAR_));\n} else {\n}\n\nreturn devtools.prefs._STAR_current_config_STAR_;\n});\ndevtools.prefs.pref \x3d (function devtools$prefs$pref(key){\nvar G__12369 \x3d devtools.prefs.get_prefs();\nreturn (key.cljs$core$IFn$_invoke$arity$1 ? key.cljs$core$IFn$_invoke$arity$1(G__12369) : key.call(null,G__12369));\n});\ndevtools.prefs.set_pref_BANG_ \x3d (function devtools$prefs$set_pref_BANG_(key,val){\nreturn devtools.prefs.set_prefs_BANG_(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(devtools.prefs.get_prefs(),key,val));\n});\ndevtools.prefs.merge_prefs_BANG_ \x3d (function devtools$prefs$merge_prefs_BANG_(m){\nreturn devtools.prefs.set_prefs_BANG_(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.prefs.get_prefs(),m], 0)));\n});\ndevtools.prefs.update_pref_BANG_ \x3d (function devtools$prefs$update_pref_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12435 \x3d arguments.length;\nvar i__5770__auto___12437 \x3d (0);\nwhile(true){\nif((i__5770__auto___12437 \x3c len__5769__auto___12435)){\nargs__5775__auto__.push((arguments[i__5770__auto___12437]));\n\nvar G__12438 \x3d (i__5770__auto___12437 + (1));\ni__5770__auto___12437 \x3d G__12438;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.prefs.update_pref_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.prefs.update_pref_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (key,f,args){\nvar new_val \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,devtools.prefs.pref(key),args);\nreturn devtools.prefs.set_pref_BANG_(key,new_val);\n}));\n\n(devtools.prefs.update_pref_BANG_.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(devtools.prefs.update_pref_BANG_.cljs$lang$applyTo \x3d (function (seq12375){\nvar G__12376 \x3d cljs.core.first(seq12375);\nvar seq12375__$1 \x3d cljs.core.next(seq12375);\nvar G__12377 \x3d cljs.core.first(seq12375__$1);\nvar seq12375__$2 \x3d cljs.core.next(seq12375__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12376,G__12377,seq12375__$2);\n}));\n\n");
SHADOW_ENV.evalLoad("devtools.context.js", true , "goog.provide(\x27devtools.context\x27);\ndevtools.context.get_root \x3d (function devtools$context$get_root(){\nreturn goog.global;\n});\ndevtools.context.get_console \x3d (function devtools$context$get_console(){\nreturn devtools.context.get_root.call(null).console;\n});\n");
SHADOW_ENV.evalLoad("clojure.string.js", true , "goog.provide(\x27clojure.string\x27);\nclojure.string.seq_reverse \x3d (function clojure$string$seq_reverse(coll){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);\n});\nclojure.string.re_surrogate_pair \x3d (new RegExp(\x22([\\\\uD800-\\\\uDBFF])([\\\\uDC00-\\\\uDFFF])\x22,\x22g\x22));\n/**\n * Returns s with its characters reversed.\n */\nclojure.string.reverse \x3d (function clojure$string$reverse(s){\nreturn s.replace(clojure.string.re_surrogate_pair,\x22$2$1\x22).split(\x22\x22).reverse().join(\x22\x22);\n});\nclojure.string.replace_all \x3d (function clojure$string$replace_all(s,re,replacement){\nvar r \x3d (new RegExp(re.source,(function (){var G__11465 \x3d \x22g\x22;\nvar G__11465__$1 \x3d (cljs.core.truth_(re.ignoreCase)?[G__11465,\x22i\x22].join(\x27\x27):G__11465);\nvar G__11465__$2 \x3d (cljs.core.truth_(re.multiline)?[G__11465__$1,\x22m\x22].join(\x27\x27):G__11465__$1);\nif(cljs.core.truth_(re.unicode)){\nreturn [G__11465__$2,\x22u\x22].join(\x27\x27);\n} else {\nreturn G__11465__$2;\n}\n})()));\nreturn s.replace(r,replacement);\n});\nclojure.string.replace_with \x3d (function clojure$string$replace_with(f){\nreturn (function() { \nvar G__11624__delegate \x3d function (args){\nvar matches \x3d cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((2),args);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(matches),(1))){\nvar G__11469 \x3d cljs.core.first(matches);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11469) : f.call(null,G__11469));\n} else {\nvar G__11470 \x3d cljs.core.vec(matches);\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11470) : f.call(null,G__11470));\n}\n};\nvar G__11624 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__11630__i \x3d 0, G__11630__a \x3d new Array(arguments.length -  0);\nwhile (G__11630__i \x3c G__11630__a.length) {G__11630__a[G__11630__i] \x3d arguments[G__11630__i + 0]; ++G__11630__i;}\n  args \x3d new cljs.core.IndexedSeq(G__11630__a,0,null);\n} \nreturn G__11624__delegate.call(this,args);};\nG__11624.cljs$lang$maxFixedArity \x3d 0;\nG__11624.cljs$lang$applyTo \x3d (function (arglist__11632){\nvar args \x3d cljs.core.seq(arglist__11632);\nreturn G__11624__delegate(args);\n});\nG__11624.cljs$core$IFn$_invoke$arity$variadic \x3d G__11624__delegate;\nreturn G__11624;\n})()\n;\n});\n/**\n * Replaces all instance of match with replacement in s.\n * \n * match/replacement can be:\n * \n * string / string\n * pattern / (string or function of match).\n * \n * See also replace-first.\n * \n * The replacement is literal (i.e. none of its characters are treated\n * specially) for all cases above except pattern / string.\n * \n * For pattern / string, $1, $2, etc. in the replacement string are\n * substituted with the string that matched the corresponding\n * parenthesized group in the pattern.\n * \n * Example:\n * (clojure.string/replace \x22Almost Pig Latin\x22 #\x22\\b(\\w)(\\w+)\\b\x22 \x22$2$1ay\x22)\n * -\x3e \x22lmostAay igPay atinLay\x22\n */\nclojure.string.replace \x3d (function clojure$string$replace(s,match,replacement){\nif(typeof match \x3d\x3d\x3d \x27string\x27){\nreturn s.replace((new RegExp(goog.string.regExpEscape(match),\x22g\x22)),replacement);\n} else {\nif((match instanceof RegExp)){\nif(typeof replacement \x3d\x3d\x3d \x27string\x27){\nreturn clojure.string.replace_all(s,match,replacement);\n} else {\nreturn clojure.string.replace_all(s,match,clojure.string.replace_with(replacement));\n}\n} else {\nthrow [\x22Invalid match arg: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(match)].join(\x27\x27);\n\n}\n}\n});\n/**\n * Replaces the first instance of match with replacement in s.\n * \n * match/replacement can be:\n * \n * string / string\n * pattern / (string or function of match).\n * \n * See also replace.\n * \n * The replacement is literal (i.e. none of its characters are treated\n * specially) for all cases above except pattern / string.\n * \n * For pattern / string, $1, $2, etc. in the replacement string are\n * substituted with the string that matched the corresponding\n * parenthesized group in the pattern.\n * \n * Example:\n * (clojure.string/replace-first \x22swap first two words\x22\n *                               #\x22(\\w+)(\\s+)(\\w+)\x22 \x22$3$2$1\x22)\n * -\x3e \x22first swap two words\x22\n */\nclojure.string.replace_first \x3d (function clojure$string$replace_first(s,match,replacement){\nreturn s.replace(match,replacement);\n});\n/**\n * Returns a string of all elements in coll, as returned by (seq coll),\n *   separated by an optional separator.\n */\nclojure.string.join \x3d (function clojure$string$join(var_args){\nvar G__11482 \x3d arguments.length;\nswitch (G__11482) {\ncase 1:\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(clojure.string.join.cljs$core$IFn$_invoke$arity$1 \x3d (function (coll){\nvar sb \x3d (new goog.string.StringBuffer());\nvar coll__$1 \x3d cljs.core.seq(coll);\nwhile(true){\nif((!((coll__$1 \x3d\x3d null)))){\nvar G__11653 \x3d sb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll__$1)));\nvar G__11654 \x3d cljs.core.next(coll__$1);\nsb \x3d G__11653;\ncoll__$1 \x3d G__11654;\ncontinue;\n} else {\nreturn sb.toString();\n}\nbreak;\n}\n}));\n\n(clojure.string.join.cljs$core$IFn$_invoke$arity$2 \x3d (function (separator,coll){\nvar sb \x3d (new goog.string.StringBuffer());\nvar coll__$1 \x3d cljs.core.seq(coll);\nwhile(true){\nif((!((coll__$1 \x3d\x3d null)))){\nsb.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(coll__$1)));\n\nvar coll__$2 \x3d cljs.core.next(coll__$1);\nif((coll__$2 \x3d\x3d null)){\n} else {\nsb.append(separator);\n}\n\nvar G__11660 \x3d sb;\nvar G__11661 \x3d coll__$2;\nsb \x3d G__11660;\ncoll__$1 \x3d G__11661;\ncontinue;\n} else {\nreturn sb.toString();\n}\nbreak;\n}\n}));\n\n(clojure.string.join.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Converts string to all upper-case.\n */\nclojure.string.upper_case \x3d (function clojure$string$upper_case(s){\nreturn s.toUpperCase();\n});\n/**\n * Converts string to all lower-case.\n */\nclojure.string.lower_case \x3d (function clojure$string$lower_case(s){\nreturn s.toLowerCase();\n});\n/**\n * Converts first character of the string to upper-case, all other\n *   characters to lower-case.\n */\nclojure.string.capitalize \x3d (function clojure$string$capitalize(s){\nreturn goog.string.capitalize(s);\n});\nclojure.string.pop_last_while_empty \x3d (function clojure$string$pop_last_while_empty(v){\nvar v__$1 \x3d v;\nwhile(true){\nif((\x22\x22 \x3d\x3d\x3d cljs.core.peek(v__$1))){\nvar G__11670 \x3d cljs.core.pop(v__$1);\nv__$1 \x3d G__11670;\ncontinue;\n} else {\nreturn v__$1;\n}\nbreak;\n}\n});\nclojure.string.discard_trailing_if_needed \x3d (function clojure$string$discard_trailing_if_needed(limit,v){\nif(((((0) \x3d\x3d\x3d limit)) \x26\x26 (((1) \x3c cljs.core.count(v))))){\nreturn clojure.string.pop_last_while_empty(v);\n} else {\nreturn v;\n}\n});\nclojure.string.split_with_empty_regex \x3d (function clojure$string$split_with_empty_regex(s,limit){\nif((((limit \x3c\x3d (0))) || ((limit \x3e\x3d ((2) + cljs.core.count(s)))))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons(\x22\x22,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.seq(s)))),\x22\x22);\n} else {\nvar pred__11514 \x3d cljs.core._EQ__EQ_;\nvar expr__11515 \x3d limit;\nif(cljs.core.truth_((pred__11514.cljs$core$IFn$_invoke$arity$2 ? pred__11514.cljs$core$IFn$_invoke$arity$2((1),expr__11515) : pred__11514.call(null,(1),expr__11515)))){\nreturn (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[s],null));\n} else {\nif(cljs.core.truth_((pred__11514.cljs$core$IFn$_invoke$arity$2 ? pred__11514.cljs$core$IFn$_invoke$arity$2((2),expr__11515) : pred__11514.call(null,(2),expr__11515)))){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[\x22\x22,s],null));\n} else {\nvar c \x3d (limit - (2));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(cljs.core.cons(\x22\x22,cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.seq(s))),(0),c))),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,c));\n}\n}\n}\n});\n/**\n * Splits string on a regular expression. Optional argument limit is\n *   the maximum number of parts. Not lazy. Returns vector of the parts.\n *   Trailing empty strings are not returned - pass limit of -1 to return all.\n */\nclojure.string.split \x3d (function clojure$string$split(var_args){\nvar G__11527 \x3d arguments.length;\nswitch (G__11527) {\ncase 2:\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(clojure.string.split.cljs$core$IFn$_invoke$arity$2 \x3d (function (s,re){\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$3(s,re,(0));\n}));\n\n(clojure.string.split.cljs$core$IFn$_invoke$arity$3 \x3d (function (s,re,limit){\nreturn clojure.string.discard_trailing_if_needed(limit,(((\x22/(?:)/\x22 \x3d\x3d\x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(re)))?clojure.string.split_with_empty_regex(s,limit):(((limit \x3c (1)))?cljs.core.vec(cljs.core.str.cljs$core$IFn$_invoke$arity$1(s).split(re)):(function (){var s__$1 \x3d s;\nvar limit__$1 \x3d limit;\nvar parts \x3d cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(((1) \x3d\x3d\x3d limit__$1)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts,s__$1);\n} else {\nvar m \x3d cljs.core.re_find(re,s__$1);\nif((!((m \x3d\x3d null)))){\nvar index \x3d s__$1.indexOf(m);\nvar G__11688 \x3d s__$1.substring((index + cljs.core.count(m)));\nvar G__11689 \x3d (limit__$1 - (1));\nvar G__11690 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts,s__$1.substring((0),index));\ns__$1 \x3d G__11688;\nlimit__$1 \x3d G__11689;\nparts \x3d G__11690;\ncontinue;\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(parts,s__$1);\n}\n}\nbreak;\n}\n})())));\n}));\n\n(clojure.string.split.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Splits s on \\n or \\r\\n. Trailing empty lines are not returned.\n */\nclojure.string.split_lines \x3d (function clojure$string$split_lines(s){\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$2(s,/\\n|\\r\\n/);\n});\n/**\n * Removes whitespace from both ends of string.\n */\nclojure.string.trim \x3d (function clojure$string$trim(s){\nreturn goog.string.trim(s);\n});\n/**\n * Removes whitespace from the left side of string.\n */\nclojure.string.triml \x3d (function clojure$string$triml(s){\nreturn goog.string.trimLeft(s);\n});\n/**\n * Removes whitespace from the right side of string.\n */\nclojure.string.trimr \x3d (function clojure$string$trimr(s){\nreturn goog.string.trimRight(s);\n});\n/**\n * Removes all trailing newline \\n or return \\r characters from\n *   string.  Similar to Perl\x27s chomp.\n */\nclojure.string.trim_newline \x3d (function clojure$string$trim_newline(s){\nvar index \x3d s.length;\nwhile(true){\nif((index \x3d\x3d\x3d (0))){\nreturn \x22\x22;\n} else {\nvar ch \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(s,(index - (1)));\nif((((\x22\\n\x22 \x3d\x3d\x3d ch)) || ((\x22\\r\x22 \x3d\x3d\x3d ch)))){\nvar G__11700 \x3d (index - (1));\nindex \x3d G__11700;\ncontinue;\n} else {\nreturn s.substring((0),index);\n}\n}\nbreak;\n}\n});\n/**\n * True is s is nil, empty, or contains only whitespace.\n */\nclojure.string.blank_QMARK_ \x3d (function clojure$string$blank_QMARK_(s){\nreturn goog.string.isEmptyOrWhitespace(goog.string.makeSafe(s));\n});\n/**\n * Return a new string, using cmap to escape each character ch\n * from s as follows:\n * \n * If (cmap ch) is nil, append ch to the new string.\n * If (cmap ch) is non-nil, append (str (cmap ch)) instead.\n */\nclojure.string.escape \x3d (function clojure$string$escape(s,cmap){\nvar buffer \x3d (new goog.string.StringBuffer());\nvar length \x3d s.length;\nvar index \x3d (0);\nwhile(true){\nif((length \x3d\x3d\x3d index)){\nreturn buffer.toString();\n} else {\nvar ch \x3d s.charAt(index);\nvar replacement \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cmap,ch);\nif((!((replacement \x3d\x3d null)))){\nbuffer.append(cljs.core.str.cljs$core$IFn$_invoke$arity$1(replacement));\n} else {\nbuffer.append(ch);\n}\n\nvar G__11721 \x3d (index + (1));\nindex \x3d G__11721;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Return index of value (string or char) in s, optionally searching\n *   forward from from-index or nil if not found.\n */\nclojure.string.index_of \x3d (function clojure$string$index_of(var_args){\nvar G__11587 \x3d arguments.length;\nswitch (G__11587) {\ncase 2:\nreturn clojure.string.index_of.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn clojure.string.index_of.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(clojure.string.index_of.cljs$core$IFn$_invoke$arity$2 \x3d (function (s,value){\nvar result \x3d s.indexOf(value);\nif((result \x3c (0))){\nreturn null;\n} else {\nreturn result;\n}\n}));\n\n(clojure.string.index_of.cljs$core$IFn$_invoke$arity$3 \x3d (function (s,value,from_index){\nvar result \x3d s.indexOf(value,from_index);\nif((result \x3c (0))){\nreturn null;\n} else {\nreturn result;\n}\n}));\n\n(clojure.string.index_of.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Return last index of value (string or char) in s, optionally\n *   searching backward from from-index or nil if not found.\n */\nclojure.string.last_index_of \x3d (function clojure$string$last_index_of(var_args){\nvar G__11599 \x3d arguments.length;\nswitch (G__11599) {\ncase 2:\nreturn clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$2 \x3d (function (s,value){\nvar result \x3d s.lastIndexOf(value);\nif((result \x3c (0))){\nreturn null;\n} else {\nreturn result;\n}\n}));\n\n(clojure.string.last_index_of.cljs$core$IFn$_invoke$arity$3 \x3d (function (s,value,from_index){\nvar result \x3d s.lastIndexOf(value,from_index);\nif((result \x3c (0))){\nreturn null;\n} else {\nreturn result;\n}\n}));\n\n(clojure.string.last_index_of.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * True if s starts with substr.\n */\nclojure.string.starts_with_QMARK_ \x3d (function clojure$string$starts_with_QMARK_(s,substr){\nreturn goog.string.startsWith(s,substr);\n});\n/**\n * True if s ends with substr.\n */\nclojure.string.ends_with_QMARK_ \x3d (function clojure$string$ends_with_QMARK_(s,substr){\nreturn goog.string.endsWith(s,substr);\n});\n/**\n * True if s includes substr.\n */\nclojure.string.includes_QMARK_ \x3d (function clojure$string$includes_QMARK_(s,substr){\nreturn goog.string.contains(s,substr);\n});\n");
SHADOW_ENV.evalLoad("cljs.stacktrace.js", true , "goog.provide(\x27cljs.stacktrace\x27);\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.stacktrace !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.stacktrace.parse_stacktrace !\x3d\x3d \x27undefined\x27)){\n} else {\n/**\n * Parse a JavaScript stacktrace string into a canonical data form. The\n *   arguments:\n * \n *   repl-env - the repl environment, an optional map with :host and :port keys\n *           if the stacktrace includes url, not file references\n *   st       - the original stacktrace string to parse\n *   err      - an error map. :ua-product key defines the type of stacktrace parser\n *           to use, for example :chrome\n *   opts     - additional options. :output-dir maybe given in this argument if\n *           :host and :port do not apply, for example, a file path\n * \n *   The canonical stacktrace representation can easily be mapped to a\n *   ClojureScript one see mapped-stacktrace and mapped-stacktrace-str\n */\ncljs.stacktrace.parse_stacktrace \x3d (function (){var method_table__5642__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__5643__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__5644__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__5645__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__5646__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22hierarchy\x22,\x22hierarchy\x22,-1053470341),(function (){var fexpr__11667 \x3d cljs.core.get_global_hierarchy;\nreturn (fexpr__11667.cljs$core$IFn$_invoke$arity$0 ? fexpr__11667.cljs$core$IFn$_invoke$arity$0() : fexpr__11667.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\x22cljs.stacktrace\x22,\x22parse-stacktrace\x22),(function (repl_env,st,err,opts){\nreturn new cljs.core.Keyword(null,\x22ua-product\x22,\x22ua-product\x22,938384227).cljs$core$IFn$_invoke$arity$1(err);\n}),new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),hierarchy__5646__auto__,method_table__5642__auto__,prefer_table__5643__auto__,method_cache__5644__auto__,cached_hierarchy__5645__auto__));\n})();\n}\ncljs.stacktrace.parse_int \x3d (function cljs$stacktrace$parse_int(s){\nreturn parseInt(s,(10));\n});\ncljs.stacktrace.starts_with_QMARK_ \x3d (function cljs$stacktrace$starts_with_QMARK_(s0,s1){\nreturn goog.string.startsWith(s0,s1);\n});\ncljs.stacktrace.ends_with_QMARK_ \x3d (function cljs$stacktrace$ends_with_QMARK_(s0,s1){\nreturn goog.string.endsWith(s0,s1);\n});\ncljs.stacktrace.string__GT_regex \x3d (function cljs$stacktrace$string__GT_regex(s){\nreturn (new RegExp(s));\n});\ncljs.stacktrace.output_directory \x3d (function cljs$stacktrace$output_directory(opts){\nvar or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22output-dir\x22,\x22output-dir\x22,-290956991).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \x22out\x22;\n}\n});\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),(function (repl_env,st,err,opts){\nreturn st;\n}));\ncljs.stacktrace.parse_file_line_column \x3d (function cljs$stacktrace$parse_file_line_column(flc){\nif(cljs.core.not(cljs.core.re_find(/:/,flc))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [flc,null,null], null);\n} else {\nvar xs \x3d clojure.string.split.cljs$core$IFn$_invoke$arity$2(flc,/:/);\nvar vec__11702 \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p__11710,p__11711){\nvar vec__11713 \x3d p__11710;\nvar pre \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11713,(0),null);\nvar post \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11713,(1),null);\nvar vec__11716 \x3d p__11711;\nvar x \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11716,(0),null);\nvar i \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11716,(1),null);\nif((i \x3c\x3d (2))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(post,x)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.conj.cljs$core$IFn$_invoke$arity$2(pre,x),post], null);\n}\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentVector.EMPTY,cljs.core.PersistentVector.EMPTY], null),cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,xs,cljs.core.range.cljs$core$IFn$_invoke$arity$3(cljs.core.count(xs),(0),(-1))));\nvar pre \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11702,(0),null);\nvar vec__11705 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11702,(1),null);\nvar line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11705,(0),null);\nvar column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11705,(1),null);\nvar file \x3d clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22:\x22,pre);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__11727 \x3d file;\nif(cljs.stacktrace.starts_with_QMARK_(file,\x22(\x22)){\nreturn clojure.string.replace(G__11727,\x22(\x22,\x22\x22);\n} else {\nreturn G__11727;\n}\n})(),cljs.stacktrace.parse_int((function (){var G__11730 \x3d line;\nif(cljs.stacktrace.ends_with_QMARK_(line,\x22)\x22)){\nreturn clojure.string.replace(G__11730,\x22)\x22,\x22\x22);\n} else {\nreturn G__11730;\n}\n})()),cljs.stacktrace.parse_int((function (){var G__11732 \x3d column;\nif(cljs.stacktrace.ends_with_QMARK_(column,\x22)\x22)){\nreturn clojure.string.replace(G__11732,\x22)\x22,\x22\x22);\n} else {\nreturn G__11732;\n}\n})())], null);\n}\n});\n/**\n * Given a browser file url convert it into a relative path that can be used\n * to locate the original source.\n */\ncljs.stacktrace.parse_file \x3d (function cljs$stacktrace$parse_file(p__11738,file,p__11739){\nvar map__11740 \x3d p__11738;\nvar map__11740__$1 \x3d cljs.core.__destructure_map(map__11740);\nvar repl_env \x3d map__11740__$1;\nvar host \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11740__$1,new cljs.core.Keyword(null,\x22host\x22,\x22host\x22,-1558485167));\nvar host_port \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11740__$1,new cljs.core.Keyword(null,\x22host-port\x22,\x22host-port\x22,1956551772));\nvar port \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11740__$1,new cljs.core.Keyword(null,\x22port\x22,\x22port\x22,1534937262));\nvar map__11741 \x3d p__11739;\nvar map__11741__$1 \x3d cljs.core.__destructure_map(map__11741);\nvar opts \x3d map__11741__$1;\nvar asset_path \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11741__$1,new cljs.core.Keyword(null,\x22asset-path\x22,\x22asset-path\x22,1500889617));\nvar urlpat \x3d (cljs.core.truth_(host)?cljs.stacktrace.string__GT_regex([\x22http://\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(host),\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ \x3d host_port;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn port;\n}\n})()),\x22/\x22].join(\x27\x27)):\x22\x22);\nvar match \x3d (cljs.core.truth_(host)?cljs.core.re_find(urlpat,file):cljs.core.contains_QMARK_(opts,new cljs.core.Keyword(null,\x22output-dir\x22,\x22output-dir\x22,-290956991)));\nif(cljs.core.truth_(match)){\nreturn clojure.string.replace(clojure.string.replace(file,urlpat,\x22\x22),cljs.stacktrace.string__GT_regex([\x22^\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ \x3d (function (){var and__5043__auto__ \x3d asset_path;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn clojure.string.replace(asset_path,/^\\//,\x22\x22);\n} else {\nreturn and__5043__auto__;\n}\n})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.stacktrace.output_directory(opts);\n}\n})()),\x22/\x22].join(\x27\x27)),\x22\x22);\n} else {\nvar temp__5802__auto__ \x3d new cljs.core.Keyword(null,\x22asset-root\x22,\x22asset-root\x22,1771735072).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar asset_root \x3d temp__5802__auto__;\nreturn clojure.string.replace(file,asset_root,\x22\x22);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\x22Could not relativize URL \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(file)].join(\x27\x27),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22parse-stacktrace\x22,\x22parse-stacktrace\x22,-38208461),new cljs.core.Keyword(null,\x22reason\x22,\x22reason\x22,-2070751759),new cljs.core.Keyword(null,\x22relativize-url\x22,\x22relativize-url\x22,621482324)], null));\n}\n}\n});\ncljs.stacktrace.chrome_st_el__GT_frame \x3d (function cljs$stacktrace$chrome_st_el__GT_frame(repl_env,st_el,opts){\nvar xs \x3d clojure.string.split.cljs$core$IFn$_invoke$arity$2(clojure.string.replace(st_el,/\\s+at\\s+/,\x22\x22),/\\s+/);\nvar vec__11758 \x3d ((((1) \x3d\x3d\x3d cljs.core.count(xs)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,cljs.core.first(xs)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(xs),cljs.core.last(xs)], null));\nvar function$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11758,(0),null);\nvar flc \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11758,(1),null);\nvar vec__11761 \x3d cljs.stacktrace.parse_file_line_column(flc);\nvar file \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11761,(0),null);\nvar line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11761,(1),null);\nvar column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11761,(2),null);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d file;\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d function$;\nif(cljs.core.truth_(and__5043__auto____$1)){\nvar and__5043__auto____$2 \x3d line;\nif(cljs.core.truth_(and__5043__auto____$2)){\nreturn column;\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),cljs.stacktrace.parse_file(repl_env,file,opts),new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473),clojure.string.replace(function$,/Object\\./,\x22\x22),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),line,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),column], null);\n} else {\nif(clojure.string.blank_QMARK_(function$)){\nreturn null;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),null,new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473),clojure.string.replace(function$,/Object\\./,\x22\x22),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),null,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),null], null);\n}\n}\n});\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22chrome\x22,\x22chrome\x22,1718738387),(function (repl_env,st,err,opts){\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11779_SHARP_){\nreturn cljs.stacktrace.chrome_st_el__GT_frame(repl_env,p1__11779_SHARP_,opts);\n}),cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__11778_SHARP_){\nreturn (!(cljs.stacktrace.starts_with_QMARK_(p1__11778_SHARP_,\x22    at eval\x22)));\n}),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((function (p1__11776_SHARP_){\nreturn cljs.stacktrace.starts_with_QMARK_(p1__11776_SHARP_,\x22Error\x22);\n}),clojure.string.split_lines(st))))));\n}));\ncljs.stacktrace.safari_st_el__GT_frame \x3d (function cljs$stacktrace$safari_st_el__GT_frame(repl_env,st_el,opts){\nvar vec__11801 \x3d (cljs.core.truth_(cljs.core.re_find(/@/,st_el))?clojure.string.split.cljs$core$IFn$_invoke$arity$2(st_el,/@/):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,st_el], null));\nvar function$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11801,(0),null);\nvar flc \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11801,(1),null);\nvar vec__11804 \x3d cljs.stacktrace.parse_file_line_column(flc);\nvar file \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11804,(0),null);\nvar line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11804,(1),null);\nvar column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11804,(2),null);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d file;\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d function$;\nif(cljs.core.truth_(and__5043__auto____$1)){\nvar and__5043__auto____$2 \x3d line;\nif(cljs.core.truth_(and__5043__auto____$2)){\nreturn column;\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),cljs.stacktrace.parse_file(repl_env,file,opts),new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473),clojure.string.trim(function$),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),line,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),column], null);\n} else {\nif(clojure.string.blank_QMARK_(function$)){\nreturn null;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),null,new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473),clojure.string.trim(function$),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),null,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),null], null);\n}\n}\n});\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22safari\x22,\x22safari\x22,497115653),(function (repl_env,st,err,opts){\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11823_SHARP_){\nreturn cljs.stacktrace.safari_st_el__GT_frame(repl_env,p1__11823_SHARP_,opts);\n}),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(clojure.string.blank_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__11822_SHARP_){\nreturn (!(cljs.stacktrace.starts_with_QMARK_(p1__11822_SHARP_,\x22eval code\x22)));\n}),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((function (p1__11821_SHARP_){\nreturn cljs.stacktrace.starts_with_QMARK_(p1__11821_SHARP_,\x22Error\x22);\n}),clojure.string.split_lines(st)))))));\n}));\ncljs.stacktrace.firefox_clean_function \x3d (function cljs$stacktrace$firefox_clean_function(f){\nvar f__$1 \x3d f;\nvar f__$2 \x3d ((clojure.string.blank_QMARK_(f__$1))?null:((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(f__$1.indexOf(\x22\x3c/\x22),(-1)))?(function (){var idx \x3d f__$1.indexOf(\x22\x3c/\x22);\nreturn f__$1.substring((idx + (2)));\n})():f__$1\n));\nreturn clojure.string.replace(clojure.string.replace(f__$2,/\x3c/,\x22\x22),(new RegExp(\x22\\\\/\x22)),\x22\x22);\n});\ncljs.stacktrace.firefox_st_el__GT_frame \x3d (function cljs$stacktrace$firefox_st_el__GT_frame(repl_env,st_el,opts){\nvar vec__11856 \x3d (cljs.core.truth_(cljs.core.re_find(/@/,st_el))?clojure.string.split.cljs$core$IFn$_invoke$arity$2(st_el,/@/):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,st_el], null));\nvar function$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11856,(0),null);\nvar flc \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11856,(1),null);\nvar vec__11859 \x3d cljs.stacktrace.parse_file_line_column(flc);\nvar file \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11859,(0),null);\nvar line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11859,(1),null);\nvar column \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11859,(2),null);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d file;\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d function$;\nif(cljs.core.truth_(and__5043__auto____$1)){\nvar and__5043__auto____$2 \x3d line;\nif(cljs.core.truth_(and__5043__auto____$2)){\nreturn column;\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),cljs.stacktrace.parse_file(repl_env,file,opts),new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473),cljs.stacktrace.firefox_clean_function(function$),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),line,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),column], null);\n} else {\nif(clojure.string.blank_QMARK_(function$)){\nreturn null;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),null,new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473),cljs.stacktrace.firefox_clean_function(function$),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),null,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),null], null);\n}\n}\n});\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22firefox\x22,\x22firefox\x22,1283768880),(function (repl_env,st,err,opts){\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11878_SHARP_){\nreturn cljs.stacktrace.firefox_st_el__GT_frame(repl_env,p1__11878_SHARP_,opts);\n}),cljs.core.remove.cljs$core$IFn$_invoke$arity$2(clojure.string.blank_QMARK_,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__11877_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__11877_SHARP_.indexOf(\x22\x3e eval\x22),(-1));\n}),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2((function (p1__11876_SHARP_){\nreturn cljs.stacktrace.starts_with_QMARK_(p1__11876_SHARP_,\x22Error\x22);\n}),clojure.string.split_lines(st)))))));\n}));\ncljs.stacktrace.parse_stacktrace.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22nodejs\x22,\x22nodejs\x22,321212524),(function (repl_env,st,err,p__11903){\nvar map__11905 \x3d p__11903;\nvar map__11905__$1 \x3d cljs.core.__destructure_map(map__11905);\nvar opts \x3d map__11905__$1;\nvar output_dir \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__11905__$1,new cljs.core.Keyword(null,\x22output-dir\x22,\x22output-dir\x22,-290956991));\nvar parse_source_loc_info \x3d (function cljs$stacktrace$parse_source_loc_info(x){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d x;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (!(clojure.string.blank_QMARK_(x)));\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn cljs.stacktrace.parse_int(x);\n} else {\nreturn null;\n}\n});\nvar process_frame \x3d (function cljs$stacktrace$process_frame(frame_str){\nif(((clojure.string.blank_QMARK_(frame_str)) || ((cljs.core.re_find(/^\\s+at/,frame_str) \x3d\x3d null)))){\nreturn null;\n} else {\nvar frame_str__$1 \x3d clojure.string.replace(frame_str,/\\s+at\\s+/,\x22\x22);\nif(clojure.string.starts_with_QMARK_(frame_str__$1,\x22repl:\x22)){\nreturn null;\n} else {\nvar parts \x3d clojure.string.split.cljs$core$IFn$_invoke$arity$2(frame_str__$1,/\\s+/);\nvar vec__11949 \x3d ((((2) \x3d\x3d\x3d cljs.core.count(parts)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(parts),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(cljs.core.second(parts),(1),(cljs.core.count(cljs.core.second(parts)) - (1)))], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,cljs.core.first(parts)], null));\nvar function$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11949,(0),null);\nvar file_AMPERSAND_line \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11949,(1),null);\nvar vec__11952 \x3d clojure.string.split.cljs$core$IFn$_invoke$arity$2(file_AMPERSAND_line,/:/);\nvar file_part \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11952,(0),null);\nvar line_part \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11952,(1),null);\nvar col_part \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11952,(2),null);\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),(cljs.core.truth_(function$)?(function (){var G__11968 \x3d file_part;\nif(cljs.core.truth_(output_dir)){\nreturn clojure.string.replace(G__11968,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(output_dir),\x22/\x22].join(\x27\x27),\x22\x22);\n} else {\nreturn G__11968;\n}\n})():file_part),new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473),function$,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),parse_source_loc_info(line_part),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),parse_source_loc_info(col_part)], null);\n}\n}\n});\nreturn cljs.core.vec(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(process_frame,clojure.string.split.cljs$core$IFn$_invoke$arity$2(st,/\\n/))));\n}));\ncljs.stacktrace.remove_ext \x3d (function cljs$stacktrace$remove_ext(file){\nreturn clojure.string.replace(clojure.string.replace(clojure.string.replace(clojure.string.replace(file,/\\.js$/,\x22\x22),/\\.cljs$/,\x22\x22),/\\.cljc$/,\x22\x22),/\\.clj$/,\x22\x22);\n});\n/**\n * Given a cljs.source-map source map data structure map a generated line\n * and column back to the original line, column, and function called.\n */\ncljs.stacktrace.mapped_line_column_call \x3d (function cljs$stacktrace$mapped_line_column_call(sms,file,line,column){\nvar source_map \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(sms,cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(clojure.string.replace(cljs.stacktrace.remove_ext(file),\x22/\x22,\x22.\x22)));\nvar get_best_column \x3d (function cljs$stacktrace$mapped_line_column_call_$_get_best_column(columns,column__$1){\nreturn cljs.core.last((function (){var or__5045__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(columns,cljs.core.last(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__11986_SHARP_){\nreturn (p1__11986_SHARP_ \x3c\x3d (column__$1 - (1)));\n}),cljs.core.sort.cljs$core$IFn$_invoke$arity$1(cljs.core.keys(columns)))));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.second(cljs.core.first(columns));\n}\n})());\n});\nvar adjust \x3d (function cljs$stacktrace$mapped_line_column_call_$_adjust(mapped){\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__11988_SHARP_,p2__11989_SHARP_){\nreturn (p1__11988_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__11988_SHARP_.cljs$core$IFn$_invoke$arity$1(p2__11989_SHARP_) : p1__11988_SHARP_.call(null,p2__11989_SHARP_));\n}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.inc,cljs.core.inc,cljs.core.identity], null),mapped));\n});\nvar default$ \x3d new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [line,column,null], null);\nvar temp__5802__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(source_map,(line - (1)));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar columns \x3d temp__5802__auto__;\nreturn adjust(cljs.core.map.cljs$core$IFn$_invoke$arity$2(get_best_column(columns,column),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),new cljs.core.Keyword(null,\x22col\x22,\x22col\x22,-1959363084),new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177)], null)));\n} else {\nreturn default$;\n}\n});\n/**\n * Given opts and a canonicalized JavaScript stacktrace frame, return the\n *   ClojureScript frame.\n */\ncljs.stacktrace.mapped_frame \x3d (function cljs$stacktrace$mapped_frame(p__12024,sms,opts){\nvar map__12026 \x3d p__12024;\nvar map__12026__$1 \x3d cljs.core.__destructure_map(map__12026);\nvar function$ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12026__$1,new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473));\nvar file \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12026__$1,new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878));\nvar line \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12026__$1,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235));\nvar column \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12026__$1,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095));\nvar no_source_file_QMARK_ \x3d ((cljs.core.not(file))?true:cljs.stacktrace.starts_with_QMARK_(file,\x22\x3c\x22));\nvar vec__12032 \x3d ((no_source_file_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [line,column,null], null):cljs.stacktrace.mapped_line_column_call(sms,file,line,column));\nvar line_SINGLEQUOTE_ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12032,(0),null);\nvar column_SINGLEQUOTE_ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12032,(1),null);\nvar call \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12032,(2),null);\nvar file_SINGLEQUOTE_ \x3d ((no_source_file_QMARK_)?null:((cljs.stacktrace.ends_with_QMARK_(file,\x22.js\x22))?[cljs.core.subs.cljs$core$IFn$_invoke$arity$3(file,(0),(cljs.core.count(file) - (3))),\x22.cljs\x22].join(\x27\x27):file));\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473),function$,new cljs.core.Keyword(null,\x22call\x22,\x22call\x22,-519999866),call,new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),((no_source_file_QMARK_)?[\x22NO_SOURCE_FILE\x22,(cljs.core.truth_(file)?[\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(file)].join(\x27\x27):null)].join(\x27\x27):file_SINGLEQUOTE_),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),line_SINGLEQUOTE_,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),column_SINGLEQUOTE_], null);\n});\n/**\n * Given a vector representing the canonicalized JavaScript stacktrace\n * return the ClojureScript stacktrace. The canonical stacktrace must be\n * in the form:\n * \n *  [{:file \x3cstring\x3e\n *    :function \x3cstring\x3e\n *    :line \x3cinteger\x3e\n *    :column \x3cinteger\x3e}*]\n * \n * :file must be a URL path (without protocol) relative to :output-dir or a\n * identifier delimited by angle brackets. The returned mapped stacktrace will\n * also contain :url entries to the original sources if it can be determined\n * from the classpath.\n */\ncljs.stacktrace.mapped_stacktrace \x3d (function cljs$stacktrace$mapped_stacktrace(var_args){\nvar G__12056 \x3d arguments.length;\nswitch (G__12056) {\ncase 2:\nreturn cljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$2 \x3d (function (stacktrace,sms){\nreturn cljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$3(stacktrace,sms,null);\n}));\n\n(cljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$3 \x3d (function (stacktrace,sms,opts){\nvar call__GT_function \x3d (function cljs$stacktrace$call__GT_function(x){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22call\x22,\x22call\x22,-519999866).cljs$core$IFn$_invoke$arity$1(x))){\nreturn cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473)],[new cljs.core.Keyword(null,\x22call\x22,\x22call\x22,-519999866).cljs$core$IFn$_invoke$arity$1(x)]);\n} else {\nreturn cljs.core.PersistentArrayMap.EMPTY;\n}\n});\nvar call_merge \x3d (function cljs$stacktrace$call_merge(function$,call){\nreturn cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic((function (munged_fn_name,unmunged_call_name){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(munged_fn_name,clojure.string.replace(cljs.core.munge(unmunged_call_name),\x22.\x22,\x22$\x22))){\nreturn unmunged_call_name;\n} else {\nreturn munged_fn_name;\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([function$,call], 0));\n});\nvar mapped_frames \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.memoize((function (p1__12050_SHARP_){\nreturn cljs.stacktrace.mapped_frame(p1__12050_SHARP_,sms,opts);\n})),stacktrace);\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$3(call_merge,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__12051_SHARP_){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(p1__12051_SHARP_,new cljs.core.Keyword(null,\x22call\x22,\x22call\x22,-519999866));\n}),mapped_frames),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(cljs.core.map.cljs$core$IFn$_invoke$arity$2(call__GT_function,mapped_frames)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.PersistentArrayMap.EMPTY], null))));\n}));\n\n(cljs.stacktrace.mapped_stacktrace.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Given a vector representing the canonicalized JavaScript stacktrace and a map\n *   of library names to decoded source maps, print the ClojureScript stacktrace .\n *   See mapped-stacktrace.\n */\ncljs.stacktrace.mapped_stacktrace_str \x3d (function cljs$stacktrace$mapped_stacktrace_str(var_args){\nvar G__12149 \x3d arguments.length;\nswitch (G__12149) {\ncase 2:\nreturn cljs.stacktrace.mapped_stacktrace_str.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn cljs.stacktrace.mapped_stacktrace_str.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.stacktrace.mapped_stacktrace_str.cljs$core$IFn$_invoke$arity$2 \x3d (function (stacktrace,sms){\nreturn cljs.stacktrace.mapped_stacktrace_str.cljs$core$IFn$_invoke$arity$3(stacktrace,sms,null);\n}));\n\n(cljs.stacktrace.mapped_stacktrace_str.cljs$core$IFn$_invoke$arity$3 \x3d (function (stacktrace,sms,opts){\nvar sb__5690__auto__ \x3d (new goog.string.StringBuffer());\nvar _STAR_print_newline_STAR__orig_val__12165_12379 \x3d cljs.core._STAR_print_newline_STAR_;\nvar _STAR_print_fn_STAR__orig_val__12166_12380 \x3d cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_newline_STAR__temp_val__12167_12381 \x3d true;\nvar _STAR_print_fn_STAR__temp_val__12168_12382 \x3d (function (x__5691__auto__){\nreturn sb__5690__auto__.append(x__5691__auto__);\n});\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__temp_val__12167_12381);\n\n(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__temp_val__12168_12382);\n\ntry{var seq__12172_12387 \x3d cljs.core.seq(cljs.stacktrace.mapped_stacktrace.cljs$core$IFn$_invoke$arity$3(stacktrace,sms,opts));\nvar chunk__12173_12388 \x3d null;\nvar count__12174_12389 \x3d (0);\nvar i__12175_12390 \x3d (0);\nwhile(true){\nif((i__12175_12390 \x3c count__12174_12389)){\nvar map__12223_12392 \x3d chunk__12173_12388.cljs$core$IIndexed$_nth$arity$2(null,i__12175_12390);\nvar map__12223_12393__$1 \x3d cljs.core.__destructure_map(map__12223_12392);\nvar function_12394 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12223_12393__$1,new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473));\nvar file_12395 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12223_12393__$1,new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878));\nvar line_12396 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12223_12393__$1,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235));\nvar column_12397 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12223_12393__$1,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095));\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22\\t\x22,[(cljs.core.truth_(function_12394)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(function_12394),\x22 \x22].join(\x27\x27):null),\x22(\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(file_12395),(cljs.core.truth_(line_12396)?[\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(line_12396)].join(\x27\x27):null),(cljs.core.truth_(column_12397)?[\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(column_12397)].join(\x27\x27):null),\x22)\x22].join(\x27\x27)], 0));\n\n\nvar G__12398 \x3d seq__12172_12387;\nvar G__12399 \x3d chunk__12173_12388;\nvar G__12400 \x3d count__12174_12389;\nvar G__12401 \x3d (i__12175_12390 + (1));\nseq__12172_12387 \x3d G__12398;\nchunk__12173_12388 \x3d G__12399;\ncount__12174_12389 \x3d G__12400;\ni__12175_12390 \x3d G__12401;\ncontinue;\n} else {\nvar temp__5804__auto___12411 \x3d cljs.core.seq(seq__12172_12387);\nif(temp__5804__auto___12411){\nvar seq__12172_12412__$1 \x3d temp__5804__auto___12411;\nif(cljs.core.chunked_seq_QMARK_(seq__12172_12412__$1)){\nvar c__5568__auto___12413 \x3d cljs.core.chunk_first(seq__12172_12412__$1);\nvar G__12414 \x3d cljs.core.chunk_rest(seq__12172_12412__$1);\nvar G__12415 \x3d c__5568__auto___12413;\nvar G__12416 \x3d cljs.core.count(c__5568__auto___12413);\nvar G__12417 \x3d (0);\nseq__12172_12387 \x3d G__12414;\nchunk__12173_12388 \x3d G__12415;\ncount__12174_12389 \x3d G__12416;\ni__12175_12390 \x3d G__12417;\ncontinue;\n} else {\nvar map__12244_12418 \x3d cljs.core.first(seq__12172_12412__$1);\nvar map__12244_12419__$1 \x3d cljs.core.__destructure_map(map__12244_12418);\nvar function_12420 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12244_12419__$1,new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473));\nvar file_12421 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12244_12419__$1,new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878));\nvar line_12422 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12244_12419__$1,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235));\nvar column_12423 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12244_12419__$1,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095));\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22\\t\x22,[(cljs.core.truth_(function_12420)?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(function_12420),\x22 \x22].join(\x27\x27):null),\x22(\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(file_12421),(cljs.core.truth_(line_12422)?[\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(line_12422)].join(\x27\x27):null),(cljs.core.truth_(column_12423)?[\x22:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(column_12423)].join(\x27\x27):null),\x22)\x22].join(\x27\x27)], 0));\n\n\nvar G__12426 \x3d cljs.core.next(seq__12172_12412__$1);\nvar G__12427 \x3d null;\nvar G__12428 \x3d (0);\nvar G__12429 \x3d (0);\nseq__12172_12387 \x3d G__12426;\nchunk__12173_12388 \x3d G__12427;\ncount__12174_12389 \x3d G__12428;\ni__12175_12390 \x3d G__12429;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n}finally {(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__orig_val__12166_12380);\n\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__orig_val__12165_12379);\n}\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__5690__auto__);\n}));\n\n(cljs.stacktrace.mapped_stacktrace_str.cljs$lang$maxFixedArity \x3d 3);\n\n");
SHADOW_ENV.evalLoad("devtools.hints.js", true , "goog.provide(\x27devtools.hints\x27);\ndevtools.hints.available_QMARK_ \x3d (function devtools$hints$available_QMARK_(){\nreturn true;\n});\ndevtools.hints._STAR_installed_STAR_ \x3d false;\ndevtools.hints._STAR_original_global_error_handler_STAR_ \x3d null;\ndevtools.hints._STAR_original_type_error_prototype_to_string_STAR_ \x3d null;\ndevtools.hints.processed_errors \x3d cljs.core.volatile_BANG_(null);\ndevtools.hints.set_processed_errors_BANG_ \x3d (function devtools$hints$set_processed_errors_BANG_(val){\nreturn cljs.core.vreset_BANG_(devtools.hints.processed_errors,val);\n});\ndevtools.hints.get_processed_errors_BANG_ \x3d (function devtools$hints$get_processed_errors_BANG_(){\nvar temp__5802__auto__ \x3d cljs.core.deref(devtools.hints.processed_errors);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar val \x3d temp__5802__auto__;\nreturn val;\n} else {\nif((typeof WeakSet !\x3d\x3d \x27undefined\x27)){\nreturn devtools.hints.set_processed_errors_BANG_((new WeakSet()));\n} else {\nreturn null;\n}\n}\n});\ndevtools.hints.empty_as_nil \x3d (function devtools$hints$empty_as_nil(str){\nif(cljs.core.empty_QMARK_(str)){\nreturn null;\n} else {\nreturn str;\n}\n});\ndevtools.hints.ajax_reader \x3d (function devtools$hints$ajax_reader(url){\nvar xhr \x3d (new XMLHttpRequest());\nxhr.open(\x22GET\x22,url,false);\n\nxhr.send();\n\nreturn devtools.hints.empty_as_nil(xhr.responseText);\n});\ndevtools.hints.retrieve_javascript_source \x3d (function devtools$hints$retrieve_javascript_source(where){\nvar reader \x3d (function (){var or__5045__auto__ \x3d devtools.prefs.pref(new cljs.core.Keyword(null,\x22file-reader\x22,\x22file-reader\x22,-450847664));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.hints.ajax_reader;\n}\n})();\nreturn (reader.cljs$core$IFn$_invoke$arity$1 ? reader.cljs$core$IFn$_invoke$arity$1(where) : reader.call(null,where));\n});\ndevtools.hints.get_line \x3d (function devtools$hints$get_line(lines,line_number){\nreturn (lines[(line_number - (1))]);\n});\ndevtools.hints.extend_content \x3d (function devtools$hints$extend_content(content,lines,line_number,min_length){\nif((((cljs.core.count(content) \x3e min_length)) || ((!((line_number \x3e (0))))))){\nreturn content;\n} else {\nvar prev_line_number \x3d (line_number - (1));\nvar prev_line \x3d devtools.hints.get_line(lines,prev_line_number);\nvar new_content \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prev_line),\x22\\n\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(content)].join(\x27\x27);\nreturn (devtools.hints.extend_content.cljs$core$IFn$_invoke$arity$4 ? devtools.hints.extend_content.cljs$core$IFn$_invoke$arity$4(new_content,lines,prev_line_number,min_length) : devtools.hints.extend_content.call(null,new_content,lines,prev_line_number,min_length));\n}\n});\ndevtools.hints.mark_call_closed_at_column \x3d (function devtools$hints$mark_call_closed_at_column(line,column){\nvar n \x3d (column - (1));\nvar prefix \x3d line.substring((0),n);\nvar postfix \x3d line.substring(n);\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),\x22 \x3c\x3c\x3c \\u2622 NULL \\u2622 \x3c\x3c\x3c \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(postfix)].join(\x27\x27);\n});\ndevtools.hints.mark_null_call_site_location \x3d (function devtools$hints$mark_null_call_site_location(file,line_number,column){\nvar content \x3d devtools.hints.retrieve_javascript_source(file);\nvar lines \x3d content.split(\x22\\n\x22);\nvar line \x3d devtools.hints.get_line(lines,line_number);\nvar marked_line \x3d devtools.hints.mark_call_closed_at_column(line,column);\nvar min_length \x3d (function (){var or__5045__auto__ \x3d devtools.prefs.pref(new cljs.core.Keyword(null,\x22sanity-hint-min-length\x22,\x22sanity-hint-min-length\x22,104958154));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (128);\n}\n})();\nreturn devtools.hints.extend_content(marked_line,lines,line_number,min_length);\n});\ndevtools.hints.make_sense_of_the_error \x3d (function devtools$hints$make_sense_of_the_error(message,file,line_number,column){\nif(cljs.core.truth_(cljs.core.re_matches(/Cannot read property \x27call\x27 of.*/,message))){\nreturn devtools.hints.mark_null_call_site_location(file,line_number,column);\n} else {\nreturn null;\n\n}\n});\ndevtools.hints.parse_stacktrace \x3d (function devtools$hints$parse_stacktrace(native_stack_trace){\nreturn cljs.stacktrace.parse_stacktrace.cljs$core$IFn$_invoke$arity$4(cljs.core.PersistentArrayMap.EMPTY,native_stack_trace,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22ua-product\x22,\x22ua-product\x22,938384227),new cljs.core.Keyword(null,\x22chrome\x22,\x22chrome\x22,1718738387)], null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22asset-root\x22,\x22asset-root\x22,1771735072),\x22\x22], null));\n});\ndevtools.hints.error_object_sense \x3d (function devtools$hints$error_object_sense(error){\ntry{var native_stack_trace \x3d error.stack;\nvar stack_trace \x3d devtools.hints.parse_stacktrace(native_stack_trace);\nvar top_item \x3d cljs.core.second(stack_trace);\nvar map__12540 \x3d top_item;\nvar map__12540__$1 \x3d cljs.core.__destructure_map(map__12540);\nvar file \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12540__$1,new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878));\nvar line \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12540__$1,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235));\nvar column \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12540__$1,new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095));\nreturn devtools.hints.make_sense_of_the_error(error.message,file,line,column);\n}catch (e12539){var _e \x3d e12539;\nreturn false;\n}});\ndevtools.hints.type_error_to_string \x3d (function devtools$hints$type_error_to_string(self){\nvar temp__5802__auto___12557 \x3d devtools.hints.get_processed_errors_BANG_();\nif(cljs.core.truth_(temp__5802__auto___12557)){\nvar seen_errors_12558 \x3d temp__5802__auto___12557;\nif(cljs.core.truth_(seen_errors_12558.has(self))){\n} else {\nseen_errors_12558.add(self);\n\nvar temp__5804__auto___12559 \x3d devtools.hints.error_object_sense(self);\nif(cljs.core.truth_(temp__5804__auto___12559)){\nvar sense_12560 \x3d temp__5804__auto___12559;\n(self.message \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(self.message),\x22, a sanity hint:\\n\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(sense_12560)].join(\x27\x27));\n} else {\n}\n}\n} else {\n}\n\nreturn devtools.hints._STAR_original_type_error_prototype_to_string_STAR_.call(self);\n});\ndevtools.hints.global_error_handler \x3d (function devtools$hints$global_error_handler(message,url,line,column,error){\nvar res \x3d (cljs.core.truth_(devtools.hints._STAR_original_global_error_handler_STAR_)?devtools.hints._STAR_original_global_error_handler_STAR_.call(null,message,url,line,column,error):null);\nif(cljs.core.not(res)){\nvar temp__5804__auto__ \x3d devtools.hints.error_object_sense(error);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar sense \x3d temp__5804__auto__;\ndevtools.context.get_console.call(null).info(\x22A sanity hint for incoming uncaught error:\\n\x22,sense);\n\nreturn false;\n} else {\nreturn null;\n}\n} else {\nreturn true;\n}\n});\ndevtools.hints.install_type_error_enhancer \x3d (function devtools$hints$install_type_error_enhancer(){\n(devtools.hints._STAR_original_global_error_handler_STAR_ \x3d devtools.context.get_root.call(null).onerror);\n\n(devtools.context.get_root.call(null).onerror \x3d devtools.hints.global_error_handler);\n\nvar prototype \x3d TypeError.prototype;\n(devtools.hints._STAR_original_type_error_prototype_to_string_STAR_ \x3d prototype.toString);\n\nreturn (prototype.toString \x3d (function (){\nvar self \x3d this;\nreturn devtools.hints.type_error_to_string(self);\n}));\n});\ndevtools.hints.installed_QMARK_ \x3d (function devtools$hints$installed_QMARK_(){\nreturn devtools.hints._STAR_installed_STAR_;\n});\ndevtools.hints.install_BANG_ \x3d (function devtools$hints$install_BANG_(){\nif(cljs.core.truth_(devtools.hints._STAR_installed_STAR_)){\nreturn null;\n} else {\n(devtools.hints._STAR_installed_STAR_ \x3d true);\n\ndevtools.hints.install_type_error_enhancer();\n\nreturn true;\n}\n});\ndevtools.hints.uninstall_BANG_ \x3d (function devtools$hints$uninstall_BANG_(){\nif(cljs.core.truth_(devtools.hints._STAR_installed_STAR_)){\n(devtools.hints._STAR_installed_STAR_ \x3d false);\n\nif(cljs.core.truth_(devtools.hints._STAR_original_type_error_prototype_to_string_STAR_)){\n} else {\nthrow (new Error(\x22Assert failed: *original-type-error-prototype-to-string*\x22));\n}\n\n(devtools.context.get_root.call(null).onerror \x3d devtools.hints._STAR_original_global_error_handler_STAR_);\n\nvar prototype \x3d TypeError.prototype;\nreturn (prototype.toString \x3d devtools.hints._STAR_original_type_error_prototype_to_string_STAR_);\n} else {\nreturn null;\n}\n});\n");
SHADOW_ENV.evalLoad("goog.labs.useragent.engine.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.labs.userAgent.engine\x22);\n  goog.module.declareLegacyNamespace();\n  const googArray \x3d goog.require(\x22goog.array\x22);\n  const googString \x3d goog.require(\x22goog.string.internal\x22);\n  const util \x3d goog.require(\x22goog.labs.userAgent.util\x22);\n  function isPresto() {\n    return util.matchUserAgent(\x22Presto\x22);\n  }\n  function isTrident() {\n    return util.matchUserAgent(\x22Trident\x22) || util.matchUserAgent(\x22MSIE\x22);\n  }\n  function isEdge() {\n    return util.matchUserAgent(\x22Edge\x22);\n  }\n  function isWebKit() {\n    return util.matchUserAgentIgnoreCase(\x22WebKit\x22) \x26\x26 !isEdge();\n  }\n  function isGecko() {\n    return util.matchUserAgent(\x22Gecko\x22) \x26\x26 !isWebKit() \x26\x26 !isTrident() \x26\x26 !isEdge();\n  }\n  function getVersion() {\n    const userAgentString \x3d util.getUserAgent();\n    if (userAgentString) {\n      const tuples \x3d util.extractVersionTuples(userAgentString);\n      const engineTuple \x3d getEngineTuple(tuples);\n      if (engineTuple) {\n        if (engineTuple[0] \x3d\x3d \x22Gecko\x22) {\n          return getVersionForKey(tuples, \x22Firefox\x22);\n        }\n        return engineTuple[1];\n      }\n      const browserTuple \x3d tuples[0];\n      let info;\n      if (browserTuple \x26\x26 (info \x3d browserTuple[2])) {\n        const match \x3d /Trident\\/([^\\s;]+)/.exec(info);\n        if (match) {\n          return match[1];\n        }\n      }\n    }\n    return \x22\x22;\n  }\n  function getEngineTuple(tuples) {\n    if (!isEdge()) {\n      return tuples[1];\n    }\n    for (let i \x3d 0; i \x3c tuples.length; i++) {\n      const tuple \x3d tuples[i];\n      if (tuple[0] \x3d\x3d \x22Edge\x22) {\n        return tuple;\n      }\n    }\n  }\n  function isVersionOrHigher(version) {\n    return googString.compareVersions(getVersion(), version) \x3e\x3d 0;\n  }\n  function getVersionForKey(tuples, key) {\n    const pair \x3d googArray.find(tuples, function(pair) {\n      return key \x3d\x3d pair[0];\n    });\n    return pair \x26\x26 pair[1] || \x22\x22;\n  }\n  exports \x3d {getVersion, isEdge, isGecko, isPresto, isTrident, isVersionOrHigher, isWebKit,};\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.labs.useragent.platform.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.labs.userAgent.platform\x22);\n  goog.module.declareLegacyNamespace();\n  const googString \x3d goog.require(\x22goog.string.internal\x22);\n  const util \x3d goog.require(\x22goog.labs.userAgent.util\x22);\n  function isAndroid() {\n    return util.matchUserAgent(\x22Android\x22);\n  }\n  function isIpod() {\n    return util.matchUserAgent(\x22iPod\x22);\n  }\n  function isIphone() {\n    return util.matchUserAgent(\x22iPhone\x22) \x26\x26 !util.matchUserAgent(\x22iPod\x22) \x26\x26 !util.matchUserAgent(\x22iPad\x22);\n  }\n  function isIpad() {\n    return util.matchUserAgent(\x22iPad\x22);\n  }\n  function isIos() {\n    return isIphone() || isIpad() || isIpod();\n  }\n  function isMacintosh() {\n    return util.matchUserAgent(\x22Macintosh\x22);\n  }\n  function isLinux() {\n    return util.matchUserAgent(\x22Linux\x22);\n  }\n  function isWindows() {\n    return util.matchUserAgent(\x22Windows\x22);\n  }\n  function isChromeOS() {\n    return util.matchUserAgent(\x22CrOS\x22);\n  }\n  function isChromecast() {\n    return util.matchUserAgent(\x22CrKey\x22);\n  }\n  function isKaiOS() {\n    return util.matchUserAgentIgnoreCase(\x22KaiOS\x22);\n  }\n  function getVersion() {\n    const userAgentString \x3d util.getUserAgent();\n    let version \x3d \x22\x22, re;\n    if (isWindows()) {\n      re \x3d /Windows (?:NT|Phone) ([0-9.]+)/;\n      const match \x3d re.exec(userAgentString);\n      if (match) {\n        version \x3d match[1];\n      } else {\n        version \x3d \x220.0\x22;\n      }\n    } else if (isIos()) {\n      re \x3d /(?:iPhone|iPod|iPad|CPU)\\s+OS\\s+(\\S+)/;\n      const match \x3d re.exec(userAgentString);\n      version \x3d match \x26\x26 match[1].replace(/_/g, \x22.\x22);\n    } else if (isMacintosh()) {\n      re \x3d /Mac OS X ([0-9_.]+)/;\n      const match \x3d re.exec(userAgentString);\n      version \x3d match ? match[1].replace(/_/g, \x22.\x22) : \x2210\x22;\n    } else if (isKaiOS()) {\n      re \x3d /(?:KaiOS)\\/(\\S+)/i;\n      const match \x3d re.exec(userAgentString);\n      version \x3d match \x26\x26 match[1];\n    } else if (isAndroid()) {\n      re \x3d /Android\\s+([^\\);]+)(\\)|;)/;\n      const match \x3d re.exec(userAgentString);\n      version \x3d match \x26\x26 match[1];\n    } else if (isChromeOS()) {\n      re \x3d /(?:CrOS\\s+(?:i686|x86_64)\\s+([0-9.]+))/;\n      const match \x3d re.exec(userAgentString);\n      version \x3d match \x26\x26 match[1];\n    }\n    return version || \x22\x22;\n  }\n  function isVersionOrHigher(version) {\n    return googString.compareVersions(getVersion(), version) \x3e\x3d 0;\n  }\n  exports \x3d {getVersion, isAndroid, isChromeOS, isChromecast, isIos, isIpad, isIphone, isIpod, isKaiOS, isLinux, isMacintosh, isVersionOrHigher, isWindows,};\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.useragent.useragent.js", true , "goog.provide(\x22goog.userAgent\x22);\ngoog.require(\x22goog.labs.userAgent.browser\x22);\ngoog.require(\x22goog.labs.userAgent.engine\x22);\ngoog.require(\x22goog.labs.userAgent.platform\x22);\ngoog.require(\x22goog.labs.userAgent.util\x22);\ngoog.require(\x22goog.reflect\x22);\ngoog.require(\x22goog.string.internal\x22);\ngoog.userAgent.ASSUME_IE \x3d goog.define(\x22goog.userAgent.ASSUME_IE\x22, false);\ngoog.userAgent.ASSUME_EDGE \x3d goog.define(\x22goog.userAgent.ASSUME_EDGE\x22, false);\ngoog.userAgent.ASSUME_GECKO \x3d goog.define(\x22goog.userAgent.ASSUME_GECKO\x22, false);\ngoog.userAgent.ASSUME_WEBKIT \x3d goog.define(\x22goog.userAgent.ASSUME_WEBKIT\x22, false);\ngoog.userAgent.ASSUME_MOBILE_WEBKIT \x3d goog.define(\x22goog.userAgent.ASSUME_MOBILE_WEBKIT\x22, false);\ngoog.userAgent.ASSUME_OPERA \x3d goog.define(\x22goog.userAgent.ASSUME_OPERA\x22, false);\ngoog.userAgent.ASSUME_ANY_VERSION \x3d goog.define(\x22goog.userAgent.ASSUME_ANY_VERSION\x22, false);\ngoog.userAgent.BROWSER_KNOWN_ \x3d goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_EDGE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;\ngoog.userAgent.getUserAgentString \x3d function() {\n  return goog.labs.userAgent.util.getUserAgent();\n};\ngoog.userAgent.getNavigatorTyped \x3d function() {\n  return goog.global[\x22navigator\x22] || null;\n};\ngoog.userAgent.getNavigator \x3d function() {\n  return goog.userAgent.getNavigatorTyped();\n};\ngoog.userAgent.OPERA \x3d goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();\ngoog.userAgent.IE \x3d goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();\ngoog.userAgent.EDGE \x3d goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_EDGE : goog.labs.userAgent.engine.isEdge();\ngoog.userAgent.EDGE_OR_IE \x3d goog.userAgent.EDGE || goog.userAgent.IE;\ngoog.userAgent.GECKO \x3d goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();\ngoog.userAgent.WEBKIT \x3d goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();\ngoog.userAgent.isMobile_ \x3d function() {\n  return goog.userAgent.WEBKIT \x26\x26 goog.labs.userAgent.util.matchUserAgent(\x22Mobile\x22);\n};\ngoog.userAgent.MOBILE \x3d goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();\ngoog.userAgent.SAFARI \x3d goog.userAgent.WEBKIT;\ngoog.userAgent.determinePlatform_ \x3d function() {\n  var navigator \x3d goog.userAgent.getNavigatorTyped();\n  return navigator \x26\x26 navigator.platform || \x22\x22;\n};\ngoog.userAgent.PLATFORM \x3d goog.userAgent.determinePlatform_();\ngoog.userAgent.ASSUME_MAC \x3d goog.define(\x22goog.userAgent.ASSUME_MAC\x22, false);\ngoog.userAgent.ASSUME_WINDOWS \x3d goog.define(\x22goog.userAgent.ASSUME_WINDOWS\x22, false);\ngoog.userAgent.ASSUME_LINUX \x3d goog.define(\x22goog.userAgent.ASSUME_LINUX\x22, false);\ngoog.userAgent.ASSUME_X11 \x3d goog.define(\x22goog.userAgent.ASSUME_X11\x22, false);\ngoog.userAgent.ASSUME_ANDROID \x3d goog.define(\x22goog.userAgent.ASSUME_ANDROID\x22, false);\ngoog.userAgent.ASSUME_IPHONE \x3d goog.define(\x22goog.userAgent.ASSUME_IPHONE\x22, false);\ngoog.userAgent.ASSUME_IPAD \x3d goog.define(\x22goog.userAgent.ASSUME_IPAD\x22, false);\ngoog.userAgent.ASSUME_IPOD \x3d goog.define(\x22goog.userAgent.ASSUME_IPOD\x22, false);\ngoog.userAgent.ASSUME_KAIOS \x3d goog.define(\x22goog.userAgent.ASSUME_KAIOS\x22, false);\ngoog.userAgent.PLATFORM_KNOWN_ \x3d goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD;\ngoog.userAgent.MAC \x3d goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.labs.userAgent.platform.isMacintosh();\ngoog.userAgent.WINDOWS \x3d goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.labs.userAgent.platform.isWindows();\ngoog.userAgent.isLegacyLinux_ \x3d function() {\n  return goog.labs.userAgent.platform.isLinux() || goog.labs.userAgent.platform.isChromeOS();\n};\ngoog.userAgent.LINUX \x3d goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.isLegacyLinux_();\ngoog.userAgent.isX11_ \x3d function() {\n  var navigator \x3d goog.userAgent.getNavigatorTyped();\n  return !!navigator \x26\x26 goog.string.internal.contains(navigator[\x22appVersion\x22] || \x22\x22, \x22X11\x22);\n};\ngoog.userAgent.X11 \x3d goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.isX11_();\ngoog.userAgent.ANDROID \x3d goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.labs.userAgent.platform.isAndroid();\ngoog.userAgent.IPHONE \x3d goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.labs.userAgent.platform.isIphone();\ngoog.userAgent.IPAD \x3d goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.labs.userAgent.platform.isIpad();\ngoog.userAgent.IPOD \x3d goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIpod();\ngoog.userAgent.IOS \x3d goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD || goog.userAgent.ASSUME_IPOD : goog.labs.userAgent.platform.isIos();\ngoog.userAgent.KAIOS \x3d goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_KAIOS : goog.labs.userAgent.platform.isKaiOS();\ngoog.userAgent.determineVersion_ \x3d function() {\n  var version \x3d \x22\x22;\n  var arr \x3d goog.userAgent.getVersionRegexResult_();\n  if (arr) {\n    version \x3d arr ? arr[1] : \x22\x22;\n  }\n  if (goog.userAgent.IE) {\n    var docMode \x3d goog.userAgent.getDocumentMode_();\n    if (docMode !\x3d null \x26\x26 docMode \x3e parseFloat(version)) {\n      return String(docMode);\n    }\n  }\n  return version;\n};\ngoog.userAgent.getVersionRegexResult_ \x3d function() {\n  var userAgent \x3d goog.userAgent.getUserAgentString();\n  if (goog.userAgent.GECKO) {\n    return /rv:([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.EDGE) {\n    return /Edge\\/([\\d\\.]+)/.exec(userAgent);\n  }\n  if (goog.userAgent.IE) {\n    return /\\b(?:MSIE|rv)[: ]([^\\);]+)(\\)|;)/.exec(userAgent);\n  }\n  if (goog.userAgent.WEBKIT) {\n    return /WebKit\\/(\\S+)/.exec(userAgent);\n  }\n  if (goog.userAgent.OPERA) {\n    return /(?:Version)[ \\/]?(\\S+)/.exec(userAgent);\n  }\n  return undefined;\n};\ngoog.userAgent.getDocumentMode_ \x3d function() {\n  var doc \x3d goog.global[\x22document\x22];\n  return doc ? doc[\x22documentMode\x22] : undefined;\n};\ngoog.userAgent.VERSION \x3d goog.userAgent.determineVersion_();\ngoog.userAgent.compare \x3d function(v1, v2) {\n  return goog.string.internal.compareVersions(v1, v2);\n};\ngoog.userAgent.isVersionOrHigherCache_ \x3d {};\ngoog.userAgent.isVersionOrHigher \x3d function(version) {\n  return goog.userAgent.ASSUME_ANY_VERSION || goog.reflect.cache(goog.userAgent.isVersionOrHigherCache_, version, function() {\n    return goog.string.internal.compareVersions(goog.userAgent.VERSION, version) \x3e\x3d 0;\n  });\n};\ngoog.userAgent.isDocumentModeOrHigher \x3d function(documentMode) {\n  return Number(goog.userAgent.DOCUMENT_MODE) \x3e\x3d documentMode;\n};\ngoog.userAgent.isDocumentMode \x3d goog.userAgent.isDocumentModeOrHigher;\ngoog.userAgent.DOCUMENT_MODE \x3d function() {\n  var doc \x3d goog.global[\x22document\x22];\n  if (!doc || !goog.userAgent.IE) {\n    return undefined;\n  }\n  var documentMode \x3d goog.userAgent.getDocumentMode_();\n  if (documentMode) {\n    return documentMode;\n  }\n  var ieVersion \x3d parseInt(goog.userAgent.VERSION, 10);\n  return ieVersion || undefined;\n}();\n");
SHADOW_ENV.evalLoad("clojure.set.js", true , "goog.provide(\x27clojure.set\x27);\nclojure.set.bubble_max_key \x3d (function clojure$set$bubble_max_key(k,coll){\n\nvar max \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.max_key,k,coll);\nreturn cljs.core.cons(max,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__11176_SHARP_){\nreturn (max \x3d\x3d\x3d p1__11176_SHARP_);\n}),coll));\n});\n/**\n * Return a set that is the union of the input sets\n */\nclojure.set.union \x3d (function clojure$set$union(var_args){\nvar G__11187 \x3d arguments.length;\nswitch (G__11187) {\ncase 0:\nreturn clojure.set.union.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn clojure.set.union.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn clojure.set.union.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___11358 \x3d arguments.length;\nvar i__5770__auto___11360 \x3d (0);\nwhile(true){\nif((i__5770__auto___11360 \x3c len__5769__auto___11358)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___11360]));\n\nvar G__11363 \x3d (i__5770__auto___11360 + (1));\ni__5770__auto___11360 \x3d G__11363;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn clojure.set.union.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(clojure.set.union.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.PersistentHashSet.EMPTY;\n}));\n\n(clojure.set.union.cljs$core$IFn$_invoke$arity$1 \x3d (function (s1){\nreturn s1;\n}));\n\n(clojure.set.union.cljs$core$IFn$_invoke$arity$2 \x3d (function (s1,s2){\nif((cljs.core.count(s1) \x3c cljs.core.count(s2))){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,s2,s1);\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,s1,s2);\n}\n}));\n\n(clojure.set.union.cljs$core$IFn$_invoke$arity$variadic \x3d (function (s1,s2,sets){\nvar bubbled_sets \x3d clojure.set.bubble_max_key(cljs.core.count,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(sets,s2,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s1], 0)));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.into,cljs.core.first(bubbled_sets),cljs.core.rest(bubbled_sets));\n}));\n\n/** @this {Function} */\n(clojure.set.union.cljs$lang$applyTo \x3d (function (seq11183){\nvar G__11184 \x3d cljs.core.first(seq11183);\nvar seq11183__$1 \x3d cljs.core.next(seq11183);\nvar G__11185 \x3d cljs.core.first(seq11183__$1);\nvar seq11183__$2 \x3d cljs.core.next(seq11183__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11184,G__11185,seq11183__$2);\n}));\n\n(clojure.set.union.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Return a set that is the intersection of the input sets\n */\nclojure.set.intersection \x3d (function clojure$set$intersection(var_args){\nvar G__11202 \x3d arguments.length;\nswitch (G__11202) {\ncase 1:\nreturn clojure.set.intersection.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn clojure.set.intersection.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___11382 \x3d arguments.length;\nvar i__5770__auto___11383 \x3d (0);\nwhile(true){\nif((i__5770__auto___11383 \x3c len__5769__auto___11382)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___11383]));\n\nvar G__11386 \x3d (i__5770__auto___11383 + (1));\ni__5770__auto___11383 \x3d G__11386;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(clojure.set.intersection.cljs$core$IFn$_invoke$arity$1 \x3d (function (s1){\nreturn s1;\n}));\n\n(clojure.set.intersection.cljs$core$IFn$_invoke$arity$2 \x3d (function (s1,s2){\nwhile(true){\nif((cljs.core.count(s2) \x3c cljs.core.count(s1))){\nvar G__11392 \x3d s2;\nvar G__11393 \x3d s1;\ns1 \x3d G__11392;\ns2 \x3d G__11393;\ncontinue;\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (s1,s2){\nreturn (function (result,item){\nif(cljs.core.contains_QMARK_(s2,item)){\nreturn result;\n} else {\nreturn cljs.core.disj.cljs$core$IFn$_invoke$arity$2(result,item);\n}\n});})(s1,s2))\n,s1,s1);\n}\nbreak;\n}\n}));\n\n(clojure.set.intersection.cljs$core$IFn$_invoke$arity$variadic \x3d (function (s1,s2,sets){\nvar bubbled_sets \x3d clojure.set.bubble_max_key((function (p1__11197_SHARP_){\nreturn (- cljs.core.count(p1__11197_SHARP_));\n}),cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(sets,s2,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s1], 0)));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(clojure.set.intersection,cljs.core.first(bubbled_sets),cljs.core.rest(bubbled_sets));\n}));\n\n/** @this {Function} */\n(clojure.set.intersection.cljs$lang$applyTo \x3d (function (seq11199){\nvar G__11200 \x3d cljs.core.first(seq11199);\nvar seq11199__$1 \x3d cljs.core.next(seq11199);\nvar G__11201 \x3d cljs.core.first(seq11199__$1);\nvar seq11199__$2 \x3d cljs.core.next(seq11199__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11200,G__11201,seq11199__$2);\n}));\n\n(clojure.set.intersection.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Return a set that is the first set without elements of the remaining sets\n */\nclojure.set.difference \x3d (function clojure$set$difference(var_args){\nvar G__11236 \x3d arguments.length;\nswitch (G__11236) {\ncase 1:\nreturn clojure.set.difference.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn clojure.set.difference.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___11410 \x3d arguments.length;\nvar i__5770__auto___11411 \x3d (0);\nwhile(true){\nif((i__5770__auto___11411 \x3c len__5769__auto___11410)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___11411]));\n\nvar G__11416 \x3d (i__5770__auto___11411 + (1));\ni__5770__auto___11411 \x3d G__11416;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(clojure.set.difference.cljs$core$IFn$_invoke$arity$1 \x3d (function (s1){\nreturn s1;\n}));\n\n(clojure.set.difference.cljs$core$IFn$_invoke$arity$2 \x3d (function (s1,s2){\nif((cljs.core.count(s1) \x3c cljs.core.count(s2))){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,item){\nif(cljs.core.contains_QMARK_(s2,item)){\nreturn cljs.core.disj.cljs$core$IFn$_invoke$arity$2(result,item);\n} else {\nreturn result;\n}\n}),s1,s1);\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.disj,s1,s2);\n}\n}));\n\n(clojure.set.difference.cljs$core$IFn$_invoke$arity$variadic \x3d (function (s1,s2,sets){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(clojure.set.difference,s1,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(sets,s2));\n}));\n\n/** @this {Function} */\n(clojure.set.difference.cljs$lang$applyTo \x3d (function (seq11232){\nvar G__11233 \x3d cljs.core.first(seq11232);\nvar seq11232__$1 \x3d cljs.core.next(seq11232);\nvar G__11234 \x3d cljs.core.first(seq11232__$1);\nvar seq11232__$2 \x3d cljs.core.next(seq11232__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11233,G__11234,seq11232__$2);\n}));\n\n(clojure.set.difference.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Returns a set of the elements for which pred is true\n */\nclojure.set.select \x3d (function clojure$set$select(pred,xset){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (s,k){\nif(cljs.core.truth_((pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(k) : pred.call(null,k)))){\nreturn s;\n} else {\nreturn cljs.core.disj.cljs$core$IFn$_invoke$arity$2(s,k);\n}\n}),xset,xset);\n});\n/**\n * Returns a rel of the elements of xrel with only the keys in ks\n */\nclojure.set.project \x3d (function clojure$set$project(xrel,ks){\nreturn cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11253_SHARP_){\nreturn cljs.core.select_keys(p1__11253_SHARP_,ks);\n}),xrel));\n});\n/**\n * Returns the map with the keys in kmap renamed to the vals in kmap\n */\nclojure.set.rename_keys \x3d (function clojure$set$rename_keys(map,kmap){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,p__11267){\nvar vec__11268 \x3d p__11267;\nvar old \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11268,(0),null);\nvar new$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11268,(1),null);\nif(cljs.core.contains_QMARK_(map,old)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,new$,cljs.core.get.cljs$core$IFn$_invoke$arity$2(map,old));\n} else {\nreturn m;\n}\n}),cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.dissoc,map,cljs.core.keys(kmap)),kmap);\n});\n/**\n * Returns a rel of the maps in xrel with the keys in kmap renamed to the vals in kmap\n */\nclojure.set.rename \x3d (function clojure$set$rename(xrel,kmap){\nreturn cljs.core.set(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__11272_SHARP_){\nreturn clojure.set.rename_keys(p1__11272_SHARP_,kmap);\n}),xrel));\n});\n/**\n * Returns a map of the distinct values of ks in the xrel mapped to a\n *   set of the maps in xrel with the corresponding values of ks.\n */\nclojure.set.index \x3d (function clojure$set$index(xrel,ks){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (m,x){\nvar ik \x3d cljs.core.select_keys(x,ks);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,ik,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(m,ik,cljs.core.PersistentHashSet.EMPTY),x));\n}),cljs.core.PersistentArrayMap.EMPTY,xrel);\n});\n/**\n * Returns the map with the vals mapped to the keys.\n */\nclojure.set.map_invert \x3d (function clojure$set$map_invert(m){\nreturn cljs.core.persistent_BANG_(cljs.core.reduce_kv((function (m__$1,k,v){\nreturn cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(m__$1,v,k);\n}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),m));\n});\n/**\n * When passed 2 rels, returns the rel corresponding to the natural\n *   join. When passed an additional keymap, joins on the corresponding\n *   keys.\n */\nclojure.set.join \x3d (function clojure$set$join(var_args){\nvar G__11299 \x3d arguments.length;\nswitch (G__11299) {\ncase 2:\nreturn clojure.set.join.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn clojure.set.join.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(clojure.set.join.cljs$core$IFn$_invoke$arity$2 \x3d (function (xrel,yrel){\nif(((cljs.core.seq(xrel)) \x26\x26 (cljs.core.seq(yrel)))){\nvar ks \x3d clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(cljs.core.first(xrel))),cljs.core.set(cljs.core.keys(cljs.core.first(yrel))));\nvar vec__11302 \x3d (((cljs.core.count(xrel) \x3c\x3d cljs.core.count(yrel)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel,yrel], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel,xrel], null));\nvar r \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11302,(0),null);\nvar s \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11302,(1),null);\nvar idx \x3d clojure.set.index(r,ks);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){\nvar found \x3d (function (){var G__11310 \x3d cljs.core.select_keys(x,ks);\nreturn (idx.cljs$core$IFn$_invoke$arity$1 ? idx.cljs$core$IFn$_invoke$arity$1(G__11310) : idx.call(null,G__11310));\n})();\nif(cljs.core.truth_(found)){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11285_SHARP_,p2__11286_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11285_SHARP_,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p2__11286_SHARP_,x], 0)));\n}),ret,found);\n} else {\nreturn ret;\n}\n}),cljs.core.PersistentHashSet.EMPTY,s);\n} else {\nreturn cljs.core.PersistentHashSet.EMPTY;\n}\n}));\n\n(clojure.set.join.cljs$core$IFn$_invoke$arity$3 \x3d (function (xrel,yrel,km){\nvar vec__11315 \x3d (((cljs.core.count(xrel) \x3c\x3d cljs.core.count(yrel)))?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [xrel,yrel,clojure.set.map_invert(km)], null):new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [yrel,xrel,km], null));\nvar r \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11315,(0),null);\nvar s \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11315,(1),null);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11315,(2),null);\nvar idx \x3d clojure.set.index(r,cljs.core.vals(k));\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){\nvar found \x3d (function (){var G__11324 \x3d clojure.set.rename_keys(cljs.core.select_keys(x,cljs.core.keys(k)),k);\nreturn (idx.cljs$core$IFn$_invoke$arity$1 ? idx.cljs$core$IFn$_invoke$arity$1(G__11324) : idx.call(null,G__11324));\n})();\nif(cljs.core.truth_(found)){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__11292_SHARP_,p2__11293_SHARP_){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__11292_SHARP_,cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p2__11293_SHARP_,x], 0)));\n}),ret,found);\n} else {\nreturn ret;\n}\n}),cljs.core.PersistentHashSet.EMPTY,s);\n}));\n\n(clojure.set.join.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Is set1 a subset of set2?\n */\nclojure.set.subset_QMARK_ \x3d (function clojure$set$subset_QMARK_(set1,set2){\nreturn (((cljs.core.count(set1) \x3c\x3d cljs.core.count(set2))) \x26\x26 (cljs.core.every_QMARK_((function (p1__11329_SHARP_){\nreturn cljs.core.contains_QMARK_(set2,p1__11329_SHARP_);\n}),set1)));\n});\n/**\n * Is set1 a superset of set2?\n */\nclojure.set.superset_QMARK_ \x3d (function clojure$set$superset_QMARK_(set1,set2){\nreturn (((cljs.core.count(set1) \x3e\x3d cljs.core.count(set2))) \x26\x26 (cljs.core.every_QMARK_((function (p1__11340_SHARP_){\nreturn cljs.core.contains_QMARK_(set1,p1__11340_SHARP_);\n}),set2)));\n});\n");
SHADOW_ENV.evalLoad("clojure.data.js", true , "goog.provide(\x27clojure.data\x27);\n/**\n * Internal helper for diff.\n */\nclojure.data.atom_diff \x3d (function clojure$data$atom_diff(a,b){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a,b)){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,null,a], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [a,b,null], null);\n}\n});\n/**\n * Convert an associative-by-numeric-index collection into\n * an equivalent vector, with nil for any missing keys\n */\nclojure.data.vectorize \x3d (function clojure$data$vectorize(m){\nif(cljs.core.seq(m)){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (result,p__11461){\nvar vec__11462 \x3d p__11461;\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11462,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11462,(1),null);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(result,k,v);\n}),cljs.core.vec(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max,cljs.core.keys(m)),null)),m);\n} else {\nreturn null;\n}\n});\n/**\n * Diff associative things a and b, comparing only the key k.\n */\nclojure.data.diff_associative_key \x3d (function clojure$data$diff_associative_key(a,b,k){\nvar va \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(a,k);\nvar vb \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(b,k);\nvar vec__11466 \x3d clojure.data.diff(va,vb);\nvar a_STAR_ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11466,(0),null);\nvar b_STAR_ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11466,(1),null);\nvar ab \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11466,(2),null);\nvar in_a \x3d cljs.core.contains_QMARK_(a,k);\nvar in_b \x3d cljs.core.contains_QMARK_(b,k);\nvar same \x3d ((in_a) \x26\x26 (((in_b) \x26\x26 ((((!((ab \x3d\x3d null)))) || ((((va \x3d\x3d null)) \x26\x26 ((vb \x3d\x3d null)))))))));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [((((in_a) \x26\x26 ((((!((a_STAR_ \x3d\x3d null)))) || ((!(same)))))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([k,a_STAR_]):null),((((in_b) \x26\x26 ((((!((b_STAR_ \x3d\x3d null)))) || ((!(same)))))))?cljs.core.PersistentArrayMap.createAsIfByAssoc([k,b_STAR_]):null),((same)?cljs.core.PersistentArrayMap.createAsIfByAssoc([k,ab]):null)], null);\n});\n/**\n * Diff associative things a and b, comparing only keys in ks (if supplied).\n */\nclojure.data.diff_associative \x3d (function clojure$data$diff_associative(var_args){\nvar G__11479 \x3d arguments.length;\nswitch (G__11479) {\ncase 2:\nreturn clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\nreturn clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$3(a,b,clojure.set.union.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(a),cljs.core.keys(b)));\n}));\n\n(clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,ks){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (diff1,diff2){\nreturn cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.merge,diff1,diff2));\n}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,null,null], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$3(clojure.data.diff_associative_key,a,b),ks));\n}));\n\n(clojure.data.diff_associative.cljs$lang$maxFixedArity \x3d 3);\n\nclojure.data.diff_sequential \x3d (function clojure$data$diff_sequential(a,b){\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clojure.data.vectorize,clojure.data.diff_associative.cljs$core$IFn$_invoke$arity$3(((cljs.core.vector_QMARK_(a))?a:cljs.core.vec(a)),((cljs.core.vector_QMARK_(b))?b:cljs.core.vec(b)),cljs.core.range.cljs$core$IFn$_invoke$arity$1((function (){var x__5130__auto__ \x3d cljs.core.count(a);\nvar y__5131__auto__ \x3d cljs.core.count(b);\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})()))));\n});\nclojure.data.diff_set \x3d (function clojure$data$diff_set(a,b){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.not_empty(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(a,b)),cljs.core.not_empty(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(b,a)),cljs.core.not_empty(clojure.set.intersection.cljs$core$IFn$_invoke$arity$2(a,b))], null);\n});\n\n/**\n * Implementation detail. Subject to change.\n * @interface\n */\nclojure.data.EqualityPartition \x3d function(){};\n\nvar clojure$data$EqualityPartition$equality_partition$dyn_11641 \x3d (function (x){\nvar x__5393__auto__ \x3d (((x \x3d\x3d null))?null:x);\nvar m__5394__auto__ \x3d (clojure.data.equality_partition[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5394__auto__.call(null,x));\n} else {\nvar m__5392__auto__ \x3d (clojure.data.equality_partition[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(x) : m__5392__auto__.call(null,x));\n} else {\nthrow cljs.core.missing_protocol(\x22EqualityPartition.equality-partition\x22,x);\n}\n}\n});\n/**\n * Implementation detail. Subject to change.\n */\nclojure.data.equality_partition \x3d (function clojure$data$equality_partition(x){\nif((((!((x \x3d\x3d null)))) \x26\x26 ((!((x.clojure$data$EqualityPartition$equality_partition$arity$1 \x3d\x3d null)))))){\nreturn x.clojure$data$EqualityPartition$equality_partition$arity$1(x);\n} else {\nreturn clojure$data$EqualityPartition$equality_partition$dyn_11641(x);\n}\n});\n\n\n/**\n * Implementation detail. Subject to change.\n * @interface\n */\nclojure.data.Diff \x3d function(){};\n\nvar clojure$data$Diff$diff_similar$dyn_11650 \x3d (function (a,b){\nvar x__5393__auto__ \x3d (((a \x3d\x3d null))?null:a);\nvar m__5394__auto__ \x3d (clojure.data.diff_similar[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(a,b) : m__5394__auto__.call(null,a,b));\n} else {\nvar m__5392__auto__ \x3d (clojure.data.diff_similar[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(a,b) : m__5392__auto__.call(null,a,b));\n} else {\nthrow cljs.core.missing_protocol(\x22Diff.diff-similar\x22,a);\n}\n}\n});\n/**\n * Implementation detail. Subject to change.\n */\nclojure.data.diff_similar \x3d (function clojure$data$diff_similar(a,b){\nif((((!((a \x3d\x3d null)))) \x26\x26 ((!((a.clojure$data$Diff$diff_similar$arity$2 \x3d\x3d null)))))){\nreturn a.clojure$data$Diff$diff_similar$arity$2(a,b);\n} else {\nreturn clojure$data$Diff$diff_similar$dyn_11650(a,b);\n}\n});\n\n(clojure.data.EqualityPartition[\x22null\x22] \x3d true);\n\n(clojure.data.equality_partition[\x22null\x22] \x3d (function (x){\nreturn new cljs.core.Keyword(null,\x22atom\x22,\x22atom\x22,-397043653);\n}));\n\n(clojure.data.EqualityPartition[\x22string\x22] \x3d true);\n\n(clojure.data.equality_partition[\x22string\x22] \x3d (function (x){\nreturn new cljs.core.Keyword(null,\x22atom\x22,\x22atom\x22,-397043653);\n}));\n\n(clojure.data.EqualityPartition[\x22number\x22] \x3d true);\n\n(clojure.data.equality_partition[\x22number\x22] \x3d (function (x){\nreturn new cljs.core.Keyword(null,\x22atom\x22,\x22atom\x22,-397043653);\n}));\n\n(clojure.data.EqualityPartition[\x22array\x22] \x3d true);\n\n(clojure.data.equality_partition[\x22array\x22] \x3d (function (x){\nreturn new cljs.core.Keyword(null,\x22sequential\x22,\x22sequential\x22,-1082983960);\n}));\n\n(clojure.data.EqualityPartition[\x22function\x22] \x3d true);\n\n(clojure.data.equality_partition[\x22function\x22] \x3d (function (x){\nreturn new cljs.core.Keyword(null,\x22atom\x22,\x22atom\x22,-397043653);\n}));\n\n(clojure.data.EqualityPartition[\x22boolean\x22] \x3d true);\n\n(clojure.data.equality_partition[\x22boolean\x22] \x3d (function (x){\nreturn new cljs.core.Keyword(null,\x22atom\x22,\x22atom\x22,-397043653);\n}));\n\n(clojure.data.EqualityPartition[\x22_\x22] \x3d true);\n\n(clojure.data.equality_partition[\x22_\x22] \x3d (function (x){\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition0$ \x26 (1024))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IMap$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IMap,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IMap,x))){\nreturn new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461);\n} else {\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition0$ \x26 (4096))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ISet$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.ISet,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.ISet,x))){\nreturn new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554);\n} else {\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition0$ \x26 (16777216))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$ISequential$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,x))){\nreturn new cljs.core.Keyword(null,\x22sequential\x22,\x22sequential\x22,-1082983960);\n} else {\nreturn new cljs.core.Keyword(null,\x22atom\x22,\x22atom\x22,-397043653);\n\n}\n}\n}\n}));\n(clojure.data.Diff[\x22null\x22] \x3d true);\n\n(clojure.data.diff_similar[\x22null\x22] \x3d (function (a,b){\nreturn clojure.data.atom_diff(a,b);\n}));\n\n(clojure.data.Diff[\x22string\x22] \x3d true);\n\n(clojure.data.diff_similar[\x22string\x22] \x3d (function (a,b){\nreturn clojure.data.atom_diff(a,b);\n}));\n\n(clojure.data.Diff[\x22number\x22] \x3d true);\n\n(clojure.data.diff_similar[\x22number\x22] \x3d (function (a,b){\nreturn clojure.data.atom_diff(a,b);\n}));\n\n(clojure.data.Diff[\x22array\x22] \x3d true);\n\n(clojure.data.diff_similar[\x22array\x22] \x3d (function (a,b){\nreturn clojure.data.diff_sequential(a,b);\n}));\n\n(clojure.data.Diff[\x22function\x22] \x3d true);\n\n(clojure.data.diff_similar[\x22function\x22] \x3d (function (a,b){\nreturn clojure.data.atom_diff(a,b);\n}));\n\n(clojure.data.Diff[\x22boolean\x22] \x3d true);\n\n(clojure.data.diff_similar[\x22boolean\x22] \x3d (function (a,b){\nreturn clojure.data.atom_diff(a,b);\n}));\n\n(clojure.data.Diff[\x22_\x22] \x3d true);\n\n(clojure.data.diff_similar[\x22_\x22] \x3d (function (a,b){\nvar fexpr__11591 \x3d (function (){var G__11593 \x3d clojure.data.equality_partition(a);\nvar G__11593__$1 \x3d (((G__11593 instanceof cljs.core.Keyword))?G__11593.fqn:null);\nswitch (G__11593__$1) {\ncase \x22atom\x22:\nreturn clojure.data.atom_diff;\n\nbreak;\ncase \x22set\x22:\nreturn clojure.data.diff_set;\n\nbreak;\ncase \x22sequential\x22:\nreturn clojure.data.diff_sequential;\n\nbreak;\ncase \x22map\x22:\nreturn clojure.data.diff_associative;\n\nbreak;\ndefault:\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__11593__$1)].join(\x27\x27)));\n\n}\n})();\nreturn (fexpr__11591.cljs$core$IFn$_invoke$arity$2 ? fexpr__11591.cljs$core$IFn$_invoke$arity$2(a,b) : fexpr__11591.call(null,a,b));\n}));\n/**\n * Recursively compares a and b, returning a tuple of\n *   [things-only-in-a things-only-in-b things-in-both].\n *   Comparison rules:\n * \n *   * For equal a and b, return [nil nil a].\n *   * Maps are subdiffed where keys match and values differ.\n *   * Sets are never subdiffed.\n *   * All sequential things are treated as associative collections\n *  by their indexes, with results returned as vectors.\n *   * Everything else (including strings!) is treated as\n *  an atom and compared for equality.\n */\nclojure.data.diff \x3d (function clojure$data$diff(a,b){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a,b)){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,null,a], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(clojure.data.equality_partition(a),clojure.data.equality_partition(b))){\nreturn clojure.data.diff_similar(a,b);\n} else {\nreturn clojure.data.atom_diff(a,b);\n}\n}\n});\n");
SHADOW_ENV.evalLoad("devtools.version.js", true , "goog.provide(\x27devtools.version\x27);\ndevtools.version.current_version \x3d \x221.0.6\x22;\ndevtools.version.get_current_version \x3d (function devtools$version$get_current_version(){\nreturn devtools.version.current_version;\n});\n");
SHADOW_ENV.evalLoad("cljs.pprint.js", true , "goog.provide(\x27cljs.pprint\x27);\ncljs.pprint.print \x3d (function cljs$pprint$print(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14135 \x3d arguments.length;\nvar i__5770__auto___14136 \x3d (0);\nwhile(true){\nif((i__5770__auto___14136 \x3c len__5769__auto___14135)){\nargs__5775__auto__.push((arguments[i__5770__auto___14136]));\n\nvar G__14137 \x3d (i__5770__auto___14136 + (1));\ni__5770__auto___14136 \x3d G__14137;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic \x3d (function (more){\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.print_str,more));\n}));\n\n(cljs.pprint.print.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.pprint.print.cljs$lang$applyTo \x3d (function (seq12021){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12021));\n}));\n\ncljs.pprint.println \x3d (function cljs$pprint$println(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14140 \x3d arguments.length;\nvar i__5770__auto___14141 \x3d (0);\nwhile(true){\nif((i__5770__auto___14141 \x3c len__5769__auto___14140)){\nargs__5775__auto__.push((arguments[i__5770__auto___14141]));\n\nvar G__14142 \x3d (i__5770__auto___14141 + (1));\ni__5770__auto___14141 \x3d G__14142;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.pprint.println.cljs$core$IFn$_invoke$arity$variadic \x3d (function (more){\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.pprint.print,more);\n\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,\x22\\n\x22);\n}));\n\n(cljs.pprint.println.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.pprint.println.cljs$lang$applyTo \x3d (function (seq12042){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12042));\n}));\n\ncljs.pprint.print_char \x3d (function cljs$pprint$print_char(c){\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,(function (){var pred__12068 \x3d cljs.core._EQ_;\nvar expr__12069 \x3d c;\nif(cljs.core.truth_((function (){var G__12072 \x3d \x22\\b\x22;\nvar G__12073 \x3d expr__12069;\nreturn (pred__12068.cljs$core$IFn$_invoke$arity$2 ? pred__12068.cljs$core$IFn$_invoke$arity$2(G__12072,G__12073) : pred__12068.call(null,G__12072,G__12073));\n})())){\nreturn \x22\\\\backspace\x22;\n} else {\nif(cljs.core.truth_((function (){var G__12077 \x3d \x22 \x22;\nvar G__12078 \x3d expr__12069;\nreturn (pred__12068.cljs$core$IFn$_invoke$arity$2 ? pred__12068.cljs$core$IFn$_invoke$arity$2(G__12077,G__12078) : pred__12068.call(null,G__12077,G__12078));\n})())){\nreturn \x22\\\\space\x22;\n} else {\nif(cljs.core.truth_((function (){var G__12080 \x3d \x22\\t\x22;\nvar G__12081 \x3d expr__12069;\nreturn (pred__12068.cljs$core$IFn$_invoke$arity$2 ? pred__12068.cljs$core$IFn$_invoke$arity$2(G__12080,G__12081) : pred__12068.call(null,G__12080,G__12081));\n})())){\nreturn \x22\\\\tab\x22;\n} else {\nif(cljs.core.truth_((function (){var G__12083 \x3d \x22\\n\x22;\nvar G__12084 \x3d expr__12069;\nreturn (pred__12068.cljs$core$IFn$_invoke$arity$2 ? pred__12068.cljs$core$IFn$_invoke$arity$2(G__12083,G__12084) : pred__12068.call(null,G__12083,G__12084));\n})())){\nreturn \x22\\\\newline\x22;\n} else {\nif(cljs.core.truth_((function (){var G__12087 \x3d \x22\\f\x22;\nvar G__12088 \x3d expr__12069;\nreturn (pred__12068.cljs$core$IFn$_invoke$arity$2 ? pred__12068.cljs$core$IFn$_invoke$arity$2(G__12087,G__12088) : pred__12068.call(null,G__12087,G__12088));\n})())){\nreturn \x22\\\\formfeed\x22;\n} else {\nif(cljs.core.truth_((function (){var G__12092 \x3d \x22\\r\x22;\nvar G__12093 \x3d expr__12069;\nreturn (pred__12068.cljs$core$IFn$_invoke$arity$2 ? pred__12068.cljs$core$IFn$_invoke$arity$2(G__12092,G__12093) : pred__12068.call(null,G__12092,G__12093));\n})())){\nreturn \x22\\\\return\x22;\n} else {\nif(cljs.core.truth_((function (){var G__12096 \x3d \x22\\\x22\x22;\nvar G__12097 \x3d expr__12069;\nreturn (pred__12068.cljs$core$IFn$_invoke$arity$2 ? pred__12068.cljs$core$IFn$_invoke$arity$2(G__12096,G__12097) : pred__12068.call(null,G__12096,G__12097));\n})())){\nreturn \x22\\\\\\\x22\x22;\n} else {\nif(cljs.core.truth_((function (){var G__12098 \x3d \x22\\\\\x22;\nvar G__12099 \x3d expr__12069;\nreturn (pred__12068.cljs$core$IFn$_invoke$arity$2 ? pred__12068.cljs$core$IFn$_invoke$arity$2(G__12098,G__12099) : pred__12068.call(null,G__12098,G__12099));\n})())){\nreturn \x22\\\\\\\\\x22;\n} else {\nreturn [\x22\\\\\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(c)].join(\x27\x27);\n}\n}\n}\n}\n}\n}\n}\n}\n})());\n});\ncljs.pprint.pr \x3d (function cljs$pprint$pr(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14144 \x3d arguments.length;\nvar i__5770__auto___14145 \x3d (0);\nwhile(true){\nif((i__5770__auto___14145 \x3c len__5769__auto___14144)){\nargs__5775__auto__.push((arguments[i__5770__auto___14145]));\n\nvar G__14146 \x3d (i__5770__auto___14145 + (1));\ni__5770__auto___14145 \x3d G__14146;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.pprint.pr.cljs$core$IFn$_invoke$arity$variadic \x3d (function (more){\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.pr_str,more));\n}));\n\n(cljs.pprint.pr.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.pprint.pr.cljs$lang$applyTo \x3d (function (seq12110){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12110));\n}));\n\ncljs.pprint.prn \x3d (function cljs$pprint$prn(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14147 \x3d arguments.length;\nvar i__5770__auto___14148 \x3d (0);\nwhile(true){\nif((i__5770__auto___14148 \x3c len__5769__auto___14147)){\nargs__5775__auto__.push((arguments[i__5770__auto___14148]));\n\nvar G__14149 \x3d (i__5770__auto___14148 + (1));\ni__5770__auto___14148 \x3d G__14149;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(cljs.pprint.prn.cljs$core$IFn$_invoke$arity$variadic \x3d (function (more){\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.pprint.pr,more);\n\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,\x22\\n\x22);\n}));\n\n(cljs.pprint.prn.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(cljs.pprint.prn.cljs$lang$applyTo \x3d (function (seq12141){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq12141));\n}));\n\n/**\n * Returns true if n is an float.\n */\ncljs.pprint.float_QMARK_ \x3d (function cljs$pprint$float_QMARK_(n){\nreturn ((typeof n \x3d\x3d\x3d \x27number\x27) \x26\x26 ((((!(isNaN(n)))) \x26\x26 ((((!((n \x3d\x3d\x3d Infinity)))) \x26\x26 ((!((parseFloat(n) \x3d\x3d\x3d parseInt(n,(10)))))))))));\n});\n/**\n * Convert char to int\n */\ncljs.pprint.char_code \x3d (function cljs$pprint$char_code(c){\nif(typeof c \x3d\x3d\x3d \x27number\x27){\nreturn c;\n} else {\nif(((typeof c \x3d\x3d\x3d \x27string\x27) \x26\x26 ((c.length \x3d\x3d\x3d (1))))){\nreturn c.charCodeAt((0));\n} else {\nthrow (new Error(\x22Argument to char must be a character or number\x22));\n\n}\n}\n});\ncljs.pprint.map_passing_context \x3d (function cljs$pprint$map_passing_context(func,initial_context,lis){\nvar context \x3d initial_context;\nvar lis__$1 \x3d lis;\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(lis__$1)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc,context], null);\n} else {\nvar this$ \x3d cljs.core.first(lis__$1);\nvar remainder \x3d cljs.core.next(lis__$1);\nvar vec__12208 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(func,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$,context], null));\nvar result \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12208,(0),null);\nvar new_context \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12208,(1),null);\nvar G__14152 \x3d new_context;\nvar G__14153 \x3d remainder;\nvar G__14154 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,result);\ncontext \x3d G__14152;\nlis__$1 \x3d G__14153;\nacc \x3d G__14154;\ncontinue;\n}\nbreak;\n}\n});\ncljs.pprint.consume \x3d (function cljs$pprint$consume(func,initial_context){\nvar context \x3d initial_context;\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\nwhile(true){\nvar vec__12224 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(func,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));\nvar result \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12224,(0),null);\nvar new_context \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12224,(1),null);\nif(cljs.core.not(result)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc,new_context], null);\n} else {\nvar G__14156 \x3d new_context;\nvar G__14157 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,result);\ncontext \x3d G__14156;\nacc \x3d G__14157;\ncontinue;\n}\nbreak;\n}\n});\ncljs.pprint.consume_while \x3d (function cljs$pprint$consume_while(func,initial_context){\nvar context \x3d initial_context;\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\nwhile(true){\nvar vec__12245 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(func,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [context], null));\nvar result \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12245,(0),null);\nvar continue$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12245,(1),null);\nvar new_context \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12245,(2),null);\nif(cljs.core.not(continue$)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc,context], null);\n} else {\nvar G__14158 \x3d new_context;\nvar G__14159 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,result);\ncontext \x3d G__14158;\nacc \x3d G__14159;\ncontinue;\n}\nbreak;\n}\n});\ncljs.pprint.unzip_map \x3d (function cljs$pprint$unzip_map(m){\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__5523__auto__ \x3d (function cljs$pprint$unzip_map_$_iter__12258(s__12259){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__12259__$1 \x3d s__12259;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__12259__$1);\nif(temp__5804__auto__){\nvar s__12259__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__12259__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__12259__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__12263 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__12262 \x3d (0);\nwhile(true){\nif((i__12262 \x3c size__5522__auto__)){\nvar vec__12290 \x3d cljs.core._nth(c__5521__auto__,i__12262);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12290,(0),null);\nvar vec__12293 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12290,(1),null);\nvar v1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12293,(0),null);\nvar v2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12293,(1),null);\ncljs.core.chunk_append(b__12263,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v1], null));\n\nvar G__14164 \x3d (i__12262 + (1));\ni__12262 \x3d G__14164;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__12263),cljs$pprint$unzip_map_$_iter__12258(cljs.core.chunk_rest(s__12259__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__12263),null);\n}\n} else {\nvar vec__12298 \x3d cljs.core.first(s__12259__$2);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12298,(0),null);\nvar vec__12301 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12298,(1),null);\nvar v1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12301,(0),null);\nvar v2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12301,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v1], null),cljs$pprint$unzip_map_$_iter__12258(cljs.core.rest(s__12259__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(m);\n})()),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__5523__auto__ \x3d (function cljs$pprint$unzip_map_$_iter__12305(s__12306){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__12306__$1 \x3d s__12306;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__12306__$1);\nif(temp__5804__auto__){\nvar s__12306__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__12306__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__12306__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__12308 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__12307 \x3d (0);\nwhile(true){\nif((i__12307 \x3c size__5522__auto__)){\nvar vec__12310 \x3d cljs.core._nth(c__5521__auto__,i__12307);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12310,(0),null);\nvar vec__12313 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12310,(1),null);\nvar v1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12313,(0),null);\nvar v2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12313,(1),null);\ncljs.core.chunk_append(b__12308,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v2], null));\n\nvar G__14169 \x3d (i__12307 + (1));\ni__12307 \x3d G__14169;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__12308),cljs$pprint$unzip_map_$_iter__12305(cljs.core.chunk_rest(s__12306__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__12308),null);\n}\n} else {\nvar vec__12316 \x3d cljs.core.first(s__12306__$2);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12316,(0),null);\nvar vec__12319 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12316,(1),null);\nvar v1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12319,(0),null);\nvar v2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12319,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v2], null),cljs$pprint$unzip_map_$_iter__12305(cljs.core.rest(s__12306__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(m);\n})())], null);\n});\ncljs.pprint.tuple_map \x3d (function cljs$pprint$tuple_map(m,v1){\n\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__5523__auto__ \x3d (function cljs$pprint$tuple_map_$_iter__12333(s__12334){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__12334__$1 \x3d s__12334;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__12334__$1);\nif(temp__5804__auto__){\nvar s__12334__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__12334__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__12334__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__12336 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__12335 \x3d (0);\nwhile(true){\nif((i__12335 \x3c size__5522__auto__)){\nvar vec__12343 \x3d cljs.core._nth(c__5521__auto__,i__12335);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12343,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12343,(1),null);\ncljs.core.chunk_append(b__12336,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v,v1], null)], null));\n\nvar G__14175 \x3d (i__12335 + (1));\ni__12335 \x3d G__14175;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__12336),cljs$pprint$tuple_map_$_iter__12333(cljs.core.chunk_rest(s__12334__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__12336),null);\n}\n} else {\nvar vec__12347 \x3d cljs.core.first(s__12334__$2);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12347,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12347,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v,v1], null)], null),cljs$pprint$tuple_map_$_iter__12333(cljs.core.rest(s__12334__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(m);\n})());\n});\ncljs.pprint.rtrim \x3d (function cljs$pprint$rtrim(s,c){\n\nvar len \x3d cljs.core.count(s);\nif((((len \x3e (0))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,(cljs.core.count(s) - (1))),c)))){\nvar n \x3d (len - (1));\nwhile(true){\nif((n \x3c (0))){\nreturn \x22\x22;\n} else {\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,n),c)))){\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),(n + (1)));\n} else {\nvar G__14179 \x3d (n - (1));\nn \x3d G__14179;\ncontinue;\n\n}\n}\nbreak;\n}\n} else {\nreturn s;\n}\n});\ncljs.pprint.ltrim \x3d (function cljs$pprint$ltrim(s,c){\n\nvar len \x3d cljs.core.count(s);\nif((((len \x3e (0))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,(0)),c)))){\nvar n \x3d (0);\nwhile(true){\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,len)) || ((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,n),c)))))){\nreturn cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,n);\n} else {\nvar G__14180 \x3d (n + (1));\nn \x3d G__14180;\ncontinue;\n}\nbreak;\n}\n} else {\nreturn s;\n}\n});\ncljs.pprint.prefix_count \x3d (function cljs$pprint$prefix_count(aseq,val){\n\nvar test \x3d ((cljs.core.coll_QMARK_(val))?cljs.core.set(val):cljs.core.PersistentHashSet.createAsIfByAssoc([val]));\nvar pos \x3d (0);\nwhile(true){\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(pos,cljs.core.count(aseq))) || (cljs.core.not((function (){var G__12361 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(aseq,pos);\nreturn (test.cljs$core$IFn$_invoke$arity$1 ? test.cljs$core$IFn$_invoke$arity$1(G__12361) : test.call(null,G__12361));\n})())))){\nreturn pos;\n} else {\nvar G__14184 \x3d (pos + (1));\npos \x3d G__14184;\ncontinue;\n}\nbreak;\n}\n});\n\n/**\n * @interface\n */\ncljs.pprint.IPrettyFlush \x3d function(){};\n\nvar cljs$pprint$IPrettyFlush$_ppflush$dyn_14185 \x3d (function (pp){\nvar x__5393__auto__ \x3d (((pp \x3d\x3d null))?null:pp);\nvar m__5394__auto__ \x3d (cljs.pprint._ppflush[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(pp) : m__5394__auto__.call(null,pp));\n} else {\nvar m__5392__auto__ \x3d (cljs.pprint._ppflush[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(pp) : m__5392__auto__.call(null,pp));\n} else {\nthrow cljs.core.missing_protocol(\x22IPrettyFlush.-ppflush\x22,pp);\n}\n}\n});\ncljs.pprint._ppflush \x3d (function cljs$pprint$_ppflush(pp){\nif((((!((pp \x3d\x3d null)))) \x26\x26 ((!((pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1 \x3d\x3d null)))))){\nreturn pp.cljs$pprint$IPrettyFlush$_ppflush$arity$1(pp);\n} else {\nreturn cljs$pprint$IPrettyFlush$_ppflush$dyn_14185(pp);\n}\n});\n\ncljs.pprint._STAR_default_page_width_STAR_ \x3d (72);\ncljs.pprint.get_field \x3d (function cljs$pprint$get_field(this$,sym){\nvar G__12385 \x3d cljs.core.deref(cljs.core.deref(this$));\nreturn (sym.cljs$core$IFn$_invoke$arity$1 ? sym.cljs$core$IFn$_invoke$arity$1(G__12385) : sym.call(null,G__12385));\n});\ncljs.pprint.set_field \x3d (function cljs$pprint$set_field(this$,sym,new_val){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,sym,new_val);\n});\ncljs.pprint.get_column \x3d (function cljs$pprint$get_column(this$){\nreturn cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599));\n});\ncljs.pprint.get_line \x3d (function cljs$pprint$get_line(this$){\nreturn cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235));\n});\ncljs.pprint.get_max_column \x3d (function cljs$pprint$get_max_column(this$){\nreturn cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548));\n});\ncljs.pprint.set_max_column \x3d (function cljs$pprint$set_max_column(this$,new_max){\ncljs.pprint.set_field(this$,new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548),new_max);\n\nreturn null;\n});\ncljs.pprint.get_writer \x3d (function cljs$pprint$get_writer(this$){\nreturn cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322));\n});\ncljs.pprint.c_write_char \x3d (function cljs$pprint$c_write_char(this$,c){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c,\x22\\n\x22)){\ncljs.pprint.set_field(this$,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599),(0));\n\ncljs.pprint.set_field(this$,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),(cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235)) + (1)));\n} else {\ncljs.pprint.set_field(this$,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599),(cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599)) + (1)));\n}\n\nreturn cljs.core._write(cljs.pprint.get_field(this$,new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322)),c);\n});\ncljs.pprint.column_writer \x3d (function cljs$pprint$column_writer(var_args){\nvar G__12448 \x3d arguments.length;\nswitch (G__12448) {\ncase 1:\nreturn cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$1 \x3d (function (writer){\nreturn cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(writer,cljs.pprint._STAR_default_page_width_STAR_);\n}));\n\n(cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2 \x3d (function (writer,max_columns){\nvar fields \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548),max_columns,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599),(0),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),(0),new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322),writer], null));\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint12457 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.pprint.t_cljs$pprint12457 \x3d (function (writer,max_columns,fields,meta12458){\nthis.writer \x3d writer;\nthis.max_columns \x3d max_columns;\nthis.fields \x3d fields;\nthis.meta12458 \x3d meta12458;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074167808;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.pprint.t_cljs$pprint12457.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_12459,meta12458__$1){\nvar self__ \x3d this;\nvar _12459__$1 \x3d this;\nreturn (new cljs.pprint.t_cljs$pprint12457(self__.writer,self__.max_columns,self__.fields,meta12458__$1));\n}));\n\n(cljs.pprint.t_cljs$pprint12457.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_12459){\nvar self__ \x3d this;\nvar _12459__$1 \x3d this;\nreturn self__.meta12458;\n}));\n\n(cljs.pprint.t_cljs$pprint12457.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.fields;\n}));\n\n(cljs.pprint.t_cljs$pprint12457.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core._flush(self__.writer);\n}));\n\n(cljs.pprint.t_cljs$pprint12457.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar pred__12474 \x3d cljs.core._EQ_;\nvar expr__12475 \x3d cljs.core.type(x);\nif(cljs.core.truth_((pred__12474.cljs$core$IFn$_invoke$arity$2 ? pred__12474.cljs$core$IFn$_invoke$arity$2(String,expr__12475) : pred__12474.call(null,String,expr__12475)))){\nvar s \x3d x;\nvar nl \x3d s.lastIndexOf(\x22\\n\x22);\nif((nl \x3c (0))){\ncljs.pprint.set_field(this$__$1,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599),(cljs.pprint.get_field(this$__$1,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599)) + cljs.core.count(s)));\n} else {\ncljs.pprint.set_field(this$__$1,new cljs.core.Keyword(null,\x22cur\x22,\x22cur\x22,1153190599),((cljs.core.count(s) - nl) - (1)));\n\ncljs.pprint.set_field(this$__$1,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),(cljs.pprint.get_field(this$__$1,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235)) + cljs.core.count(cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__12446_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p1__12446_SHARP_,\x22\\n\x22);\n}),s))));\n}\n\nreturn cljs.core._write(cljs.pprint.get_field(this$__$1,new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322)),s);\n} else {\nif(cljs.core.truth_((pred__12474.cljs$core$IFn$_invoke$arity$2 ? pred__12474.cljs$core$IFn$_invoke$arity$2(Number,expr__12475) : pred__12474.call(null,Number,expr__12475)))){\nreturn cljs.pprint.c_write_char(this$__$1,x);\n} else {\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__12475)].join(\x27\x27)));\n}\n}\n}));\n\n(cljs.pprint.t_cljs$pprint12457.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22max-columns\x22,\x22max-columns\x22,-912112507,null),new cljs.core.Symbol(null,\x22fields\x22,\x22fields\x22,-291534703,null),new cljs.core.Symbol(null,\x22meta12458\x22,\x22meta12458\x22,-756870466,null)], null);\n}));\n\n(cljs.pprint.t_cljs$pprint12457.cljs$lang$type \x3d true);\n\n(cljs.pprint.t_cljs$pprint12457.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint12457\x22);\n\n(cljs.pprint.t_cljs$pprint12457.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.pprint/t_cljs$pprint12457\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/t_cljs$pprint12457.\n */\ncljs.pprint.__GT_t_cljs$pprint12457 \x3d (function cljs$pprint$__GT_t_cljs$pprint12457(writer__$1,max_columns__$1,fields__$1,meta12458){\nreturn (new cljs.pprint.t_cljs$pprint12457(writer__$1,max_columns__$1,fields__$1,meta12458));\n});\n\n}\n\nreturn (new cljs.pprint.t_cljs$pprint12457(writer,max_columns,fields,cljs.core.PersistentArrayMap.EMPTY));\n}));\n\n(cljs.pprint.column_writer.cljs$lang$maxFixedArity \x3d 2);\n\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.pprint.logical_block \x3d (function (parent,section,start_col,indent,done_nl,intra_block_nl,prefix,per_line_prefix,suffix,logical_block_callback,__meta,__extmap,__hash){\nthis.parent \x3d parent;\nthis.section \x3d section;\nthis.start_col \x3d start_col;\nthis.indent \x3d indent;\nthis.done_nl \x3d done_nl;\nthis.intra_block_nl \x3d intra_block_nl;\nthis.prefix \x3d prefix;\nthis.per_line_prefix \x3d per_line_prefix;\nthis.suffix \x3d suffix;\nthis.logical_block_callback \x3d logical_block_callback;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k12486,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__12498 \x3d k12486;\nvar G__12498__$1 \x3d (((G__12498 instanceof cljs.core.Keyword))?G__12498.fqn:null);\nswitch (G__12498__$1) {\ncase \x22parent\x22:\nreturn self__.parent;\n\nbreak;\ncase \x22section\x22:\nreturn self__.section;\n\nbreak;\ncase \x22start-col\x22:\nreturn self__.start_col;\n\nbreak;\ncase \x22indent\x22:\nreturn self__.indent;\n\nbreak;\ncase \x22done-nl\x22:\nreturn self__.done_nl;\n\nbreak;\ncase \x22intra-block-nl\x22:\nreturn self__.intra_block_nl;\n\nbreak;\ncase \x22prefix\x22:\nreturn self__.prefix;\n\nbreak;\ncase \x22per-line-prefix\x22:\nreturn self__.per_line_prefix;\n\nbreak;\ncase \x22suffix\x22:\nreturn self__.suffix;\n\nbreak;\ncase \x22logical-block-callback\x22:\nreturn self__.logical_block_callback;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k12486,else__5346__auto__);\n\n}\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__12509){\nvar vec__12510 \x3d p__12509;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12510,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12510,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#cljs.pprint.logical-block{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),self__.parent],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),self__.section],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),self__.start_col],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),self__.indent],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),self__.done_nl],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),self__.intra_block_nl],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),self__.prefix],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),self__.per_line_prefix],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),self__.suffix],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194),self__.logical_block_callback],null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__12485){\nvar self__ \x3d this;\nvar G__12485__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__12485__$1,10,new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (10 + cljs.core.count(self__.__extmap));\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (1977012399 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this12487,other12488){\nvar self__ \x3d this;\nvar this12487__$1 \x3d this;\nreturn (((!((other12488 \x3d\x3d null)))) \x26\x26 ((((this12487__$1.constructor \x3d\x3d\x3d other12488.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.parent,other12488.parent)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.section,other12488.section)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.start_col,other12488.start_col)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.indent,other12488.indent)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.done_nl,other12488.done_nl)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.intra_block_nl,other12488.intra_block_nl)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.prefix,other12488.prefix)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.per_line_prefix,other12488.per_line_prefix)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.suffix,other12488.suffix)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.logical_block_callback,other12488.logical_block_callback)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12487__$1.__extmap,other12488.__extmap)))))))))))))))))))))))));\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 10, [new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),null,new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),null,new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),null,new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),null,new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),null,new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),null,new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),null,new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),null,new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194),null,new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k12486){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__12530 \x3d k12486;\nvar G__12530__$1 \x3d (((G__12530 instanceof cljs.core.Keyword))?G__12530.fqn:null);\nswitch (G__12530__$1) {\ncase \x22parent\x22:\ncase \x22section\x22:\ncase \x22start-col\x22:\ncase \x22indent\x22:\ncase \x22done-nl\x22:\ncase \x22intra-block-nl\x22:\ncase \x22prefix\x22:\ncase \x22per-line-prefix\x22:\ncase \x22suffix\x22:\ncase \x22logical-block-callback\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k12486);\n\n}\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__12485){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__12532 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__12533 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__12532.cljs$core$IFn$_invoke$arity$2 ? pred__12532.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),expr__12533) : pred__12532.call(null,new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),expr__12533)))){\nreturn (new cljs.pprint.logical_block(G__12485,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12532.cljs$core$IFn$_invoke$arity$2 ? pred__12532.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),expr__12533) : pred__12532.call(null,new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),expr__12533)))){\nreturn (new cljs.pprint.logical_block(self__.parent,G__12485,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12532.cljs$core$IFn$_invoke$arity$2 ? pred__12532.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),expr__12533) : pred__12532.call(null,new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),expr__12533)))){\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,G__12485,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12532.cljs$core$IFn$_invoke$arity$2 ? pred__12532.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),expr__12533) : pred__12532.call(null,new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),expr__12533)))){\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,G__12485,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12532.cljs$core$IFn$_invoke$arity$2 ? pred__12532.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),expr__12533) : pred__12532.call(null,new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),expr__12533)))){\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,G__12485,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12532.cljs$core$IFn$_invoke$arity$2 ? pred__12532.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),expr__12533) : pred__12532.call(null,new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),expr__12533)))){\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,G__12485,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12532.cljs$core$IFn$_invoke$arity$2 ? pred__12532.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),expr__12533) : pred__12532.call(null,new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),expr__12533)))){\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,G__12485,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12532.cljs$core$IFn$_invoke$arity$2 ? pred__12532.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),expr__12533) : pred__12532.call(null,new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),expr__12533)))){\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,G__12485,self__.suffix,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12532.cljs$core$IFn$_invoke$arity$2 ? pred__12532.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),expr__12533) : pred__12532.call(null,new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),expr__12533)))){\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,G__12485,self__.logical_block_callback,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12532.cljs$core$IFn$_invoke$arity$2 ? pred__12532.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194),expr__12533) : pred__12532.call(null,new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194),expr__12533)))){\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,G__12485,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__12485),null));\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),self__.parent,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),self__.section,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),self__.start_col,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),self__.indent,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),self__.done_nl,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),self__.intra_block_nl,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),self__.prefix,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),self__.per_line_prefix,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),self__.suffix,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194),self__.logical_block_callback,null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__12485){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new cljs.pprint.logical_block(self__.parent,self__.section,self__.start_col,self__.indent,self__.done_nl,self__.intra_block_nl,self__.prefix,self__.per_line_prefix,self__.suffix,self__.logical_block_callback,G__12485,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.logical_block.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(cljs.pprint.logical_block.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22parent\x22,\x22parent\x22,761652748,null),new cljs.core.Symbol(null,\x22section\x22,\x22section\x22,1340390001,null),new cljs.core.Symbol(null,\x22start-col\x22,\x22start-col\x22,-1986355626,null),new cljs.core.Symbol(null,\x22indent\x22,\x22indent\x22,1492331402,null),new cljs.core.Symbol(null,\x22done-nl\x22,\x22done-nl\x22,1259507187,null),new cljs.core.Symbol(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,-845608894,null),new cljs.core.Symbol(null,\x22prefix\x22,\x22prefix\x22,1374623062,null),new cljs.core.Symbol(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,-1807493956,null),new cljs.core.Symbol(null,\x22suffix\x22,\x22suffix\x22,2007904584,null),new cljs.core.Symbol(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,-1041744575,null)], null);\n}));\n\n(cljs.pprint.logical_block.cljs$lang$type \x3d true);\n\n(cljs.pprint.logical_block.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22cljs.pprint/logical-block\x22,null,(1),null));\n}));\n\n(cljs.pprint.logical_block.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22cljs.pprint/logical-block\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/logical-block.\n */\ncljs.pprint.__GT_logical_block \x3d (function cljs$pprint$__GT_logical_block(parent,section,start_col,indent,done_nl,intra_block_nl,prefix,per_line_prefix,suffix,logical_block_callback){\nreturn (new cljs.pprint.logical_block(parent,section,start_col,indent,done_nl,intra_block_nl,prefix,per_line_prefix,suffix,logical_block_callback,null,null,null));\n});\n\n/**\n * Factory function for cljs.pprint/logical-block, taking a map of keywords to field values.\n */\ncljs.pprint.map__GT_logical_block \x3d (function cljs$pprint$map__GT_logical_block(G__12494){\nvar extmap__5385__auto__ \x3d (function (){var G__12541 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__12494,new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143),new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125),new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340),new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875),new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465),new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813),new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057),new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194)], 0));\nif(cljs.core.record_QMARK_(G__12494)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__12541);\n} else {\nreturn G__12541;\n}\n})();\nreturn (new cljs.pprint.logical_block(new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(G__12494),new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526).cljs$core$IFn$_invoke$arity$1(G__12494),new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143).cljs$core$IFn$_invoke$arity$1(G__12494),new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125).cljs$core$IFn$_invoke$arity$1(G__12494),new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340).cljs$core$IFn$_invoke$arity$1(G__12494),new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875).cljs$core$IFn$_invoke$arity$1(G__12494),new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465).cljs$core$IFn$_invoke$arity$1(G__12494),new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813).cljs$core$IFn$_invoke$arity$1(G__12494),new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057).cljs$core$IFn$_invoke$arity$1(G__12494),new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194).cljs$core$IFn$_invoke$arity$1(G__12494),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\ncljs.pprint.ancestor_QMARK_ \x3d (function cljs$pprint$ancestor_QMARK_(parent,child){\nvar child__$1 \x3d new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(child);\nwhile(true){\nif((child__$1 \x3d\x3d null)){\nreturn false;\n} else {\nif((parent \x3d\x3d\x3d child__$1)){\nreturn true;\n} else {\nvar G__14224 \x3d new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(child__$1);\nchild__$1 \x3d G__14224;\ncontinue;\n\n}\n}\nbreak;\n}\n});\ncljs.pprint.buffer_length \x3d (function cljs$pprint$buffer_length(l){\nvar l__$1 \x3d cljs.core.seq(l);\nif(l__$1){\nreturn (new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(cljs.core.last(l__$1)) - new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(cljs.core.first(l__$1)));\n} else {\nreturn (0);\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.pprint.buffer_blob \x3d (function (type_tag,data,trailing_white_space,start_pos,end_pos,__meta,__extmap,__hash){\nthis.type_tag \x3d type_tag;\nthis.data \x3d data;\nthis.trailing_white_space \x3d trailing_white_space;\nthis.start_pos \x3d start_pos;\nthis.end_pos \x3d end_pos;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k12547,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__12551 \x3d k12547;\nvar G__12551__$1 \x3d (((G__12551 instanceof cljs.core.Keyword))?G__12551.fqn:null);\nswitch (G__12551__$1) {\ncase \x22type-tag\x22:\nreturn self__.type_tag;\n\nbreak;\ncase \x22data\x22:\nreturn self__.data;\n\nbreak;\ncase \x22trailing-white-space\x22:\nreturn self__.trailing_white_space;\n\nbreak;\ncase \x22start-pos\x22:\nreturn self__.start_pos;\n\nbreak;\ncase \x22end-pos\x22:\nreturn self__.end_pos;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k12547,else__5346__auto__);\n\n}\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__12553){\nvar vec__12554 \x3d p__12553;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12554,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12554,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#cljs.pprint.buffer-blob{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),self__.data],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),self__.trailing_white_space],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos],null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__12546){\nvar self__ \x3d this;\nvar G__12546__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__12546__$1,5,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (5 + cljs.core.count(self__.__extmap));\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (1809113693 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this12548,other12549){\nvar self__ \x3d this;\nvar this12548__$1 \x3d this;\nreturn (((!((other12549 \x3d\x3d null)))) \x26\x26 ((((this12548__$1.constructor \x3d\x3d\x3d other12549.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12548__$1.type_tag,other12549.type_tag)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12548__$1.data,other12549.data)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12548__$1.trailing_white_space,other12549.trailing_white_space)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12548__$1.start_pos,other12549.start_pos)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12548__$1.end_pos,other12549.end_pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12548__$1.__extmap,other12549.__extmap)))))))))))))));\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),null,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),null,new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k12547){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__12561 \x3d k12547;\nvar G__12561__$1 \x3d (((G__12561 instanceof cljs.core.Keyword))?G__12561.fqn:null);\nswitch (G__12561__$1) {\ncase \x22type-tag\x22:\ncase \x22data\x22:\ncase \x22trailing-white-space\x22:\ncase \x22start-pos\x22:\ncase \x22end-pos\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k12547);\n\n}\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__12546){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__12562 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__12563 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__12562.cljs$core$IFn$_invoke$arity$2 ? pred__12562.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__12563) : pred__12562.call(null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__12563)))){\nreturn (new cljs.pprint.buffer_blob(G__12546,self__.data,self__.trailing_white_space,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12562.cljs$core$IFn$_invoke$arity$2 ? pred__12562.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),expr__12563) : pred__12562.call(null,new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),expr__12563)))){\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,G__12546,self__.trailing_white_space,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12562.cljs$core$IFn$_invoke$arity$2 ? pred__12562.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),expr__12563) : pred__12562.call(null,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),expr__12563)))){\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,G__12546,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12562.cljs$core$IFn$_invoke$arity$2 ? pred__12562.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__12563) : pred__12562.call(null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__12563)))){\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,G__12546,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12562.cljs$core$IFn$_invoke$arity$2 ? pred__12562.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__12563) : pred__12562.call(null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__12563)))){\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,self__.start_pos,G__12546,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__12546),null));\n}\n}\n}\n}\n}\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),self__.data,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),self__.trailing_white_space,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos,null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__12546){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new cljs.pprint.buffer_blob(self__.type_tag,self__.data,self__.trailing_white_space,self__.start_pos,self__.end_pos,G__12546,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.buffer_blob.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(cljs.pprint.buffer_blob.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22type-tag\x22,\x22type-tag\x22,-233331740,null),new cljs.core.Symbol(null,\x22data\x22,\x22data\x22,1407862150,null),new cljs.core.Symbol(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,-1158428773,null),new cljs.core.Symbol(null,\x22start-pos\x22,\x22start-pos\x22,-1985646683,null),new cljs.core.Symbol(null,\x22end-pos\x22,\x22end-pos\x22,-3352399,null)], null);\n}));\n\n(cljs.pprint.buffer_blob.cljs$lang$type \x3d true);\n\n(cljs.pprint.buffer_blob.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22cljs.pprint/buffer-blob\x22,null,(1),null));\n}));\n\n(cljs.pprint.buffer_blob.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22cljs.pprint/buffer-blob\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/buffer-blob.\n */\ncljs.pprint.__GT_buffer_blob \x3d (function cljs$pprint$__GT_buffer_blob(type_tag,data,trailing_white_space,start_pos,end_pos){\nreturn (new cljs.pprint.buffer_blob(type_tag,data,trailing_white_space,start_pos,end_pos,null,null,null));\n});\n\n/**\n * Factory function for cljs.pprint/buffer-blob, taking a map of keywords to field values.\n */\ncljs.pprint.map__GT_buffer_blob \x3d (function cljs$pprint$map__GT_buffer_blob(G__12550){\nvar extmap__5385__auto__ \x3d (function (){var G__12569 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__12550,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], 0));\nif(cljs.core.record_QMARK_(G__12550)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__12569);\n} else {\nreturn G__12569;\n}\n})();\nreturn (new cljs.pprint.buffer_blob(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(G__12550),new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377).cljs$core$IFn$_invoke$arity$1(G__12550),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(G__12550),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(G__12550),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(G__12550),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n\ncljs.pprint.make_buffer_blob \x3d (function cljs$pprint$make_buffer_blob(data,trailing_white_space,start_pos,end_pos){\nreturn (new cljs.pprint.buffer_blob(new cljs.core.Keyword(null,\x22buffer-blob\x22,\x22buffer-blob\x22,-1830112173),data,trailing_white_space,start_pos,end_pos,null,null,null));\n});\n\ncljs.pprint.buffer_blob_QMARK_ \x3d (function cljs$pprint$buffer_blob_QMARK_(x__11816__auto__){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(x__11816__auto__),new cljs.core.Keyword(null,\x22buffer-blob\x22,\x22buffer-blob\x22,-1830112173));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.pprint.nl_t \x3d (function (type_tag,type,logical_block,start_pos,end_pos,__meta,__extmap,__hash){\nthis.type_tag \x3d type_tag;\nthis.type \x3d type;\nthis.logical_block \x3d logical_block;\nthis.start_pos \x3d start_pos;\nthis.end_pos \x3d end_pos;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k12575,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__12580 \x3d k12575;\nvar G__12580__$1 \x3d (((G__12580 instanceof cljs.core.Keyword))?G__12580.fqn:null);\nswitch (G__12580__$1) {\ncase \x22type-tag\x22:\nreturn self__.type_tag;\n\nbreak;\ncase \x22type\x22:\nreturn self__.type;\n\nbreak;\ncase \x22logical-block\x22:\nreturn self__.logical_block;\n\nbreak;\ncase \x22start-pos\x22:\nreturn self__.start_pos;\n\nbreak;\ncase \x22end-pos\x22:\nreturn self__.end_pos;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k12575,else__5346__auto__);\n\n}\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__12585){\nvar vec__12586 \x3d p__12585;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12586,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12586,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#cljs.pprint.nl-t{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),self__.type],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos],null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__12574){\nvar self__ \x3d this;\nvar G__12574__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__12574__$1,5,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (5 + cljs.core.count(self__.__extmap));\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (-1640656800 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this12576,other12577){\nvar self__ \x3d this;\nvar this12576__$1 \x3d this;\nreturn (((!((other12577 \x3d\x3d null)))) \x26\x26 ((((this12576__$1.constructor \x3d\x3d\x3d other12577.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12576__$1.type_tag,other12577.type_tag)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12576__$1.type,other12577.type)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12576__$1.logical_block,other12577.logical_block)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12576__$1.start_pos,other12577.start_pos)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12576__$1.end_pos,other12577.end_pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12576__$1.__extmap,other12577.__extmap)))))))))))))));\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),null,new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k12575){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__12599 \x3d k12575;\nvar G__12599__$1 \x3d (((G__12599 instanceof cljs.core.Keyword))?G__12599.fqn:null);\nswitch (G__12599__$1) {\ncase \x22type-tag\x22:\ncase \x22type\x22:\ncase \x22logical-block\x22:\ncase \x22start-pos\x22:\ncase \x22end-pos\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k12575);\n\n}\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__12574){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__12604 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__12605 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__12604.cljs$core$IFn$_invoke$arity$2 ? pred__12604.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__12605) : pred__12604.call(null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__12605)))){\nreturn (new cljs.pprint.nl_t(G__12574,self__.type,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12604.cljs$core$IFn$_invoke$arity$2 ? pred__12604.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),expr__12605) : pred__12604.call(null,new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),expr__12605)))){\nreturn (new cljs.pprint.nl_t(self__.type_tag,G__12574,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12604.cljs$core$IFn$_invoke$arity$2 ? pred__12604.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__12605) : pred__12604.call(null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__12605)))){\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,G__12574,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12604.cljs$core$IFn$_invoke$arity$2 ? pred__12604.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__12605) : pred__12604.call(null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__12605)))){\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,G__12574,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12604.cljs$core$IFn$_invoke$arity$2 ? pred__12604.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__12605) : pred__12604.call(null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__12605)))){\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,self__.start_pos,G__12574,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__12574),null));\n}\n}\n}\n}\n}\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),self__.type,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos,null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__12574){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new cljs.pprint.nl_t(self__.type_tag,self__.type,self__.logical_block,self__.start_pos,self__.end_pos,G__12574,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.nl_t.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(cljs.pprint.nl_t.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22type-tag\x22,\x22type-tag\x22,-233331740,null),new cljs.core.Symbol(null,\x22type\x22,\x22type\x22,-1480165421,null),new cljs.core.Symbol(null,\x22logical-block\x22,\x22logical-block\x22,1059508963,null),new cljs.core.Symbol(null,\x22start-pos\x22,\x22start-pos\x22,-1985646683,null),new cljs.core.Symbol(null,\x22end-pos\x22,\x22end-pos\x22,-3352399,null)], null);\n}));\n\n(cljs.pprint.nl_t.cljs$lang$type \x3d true);\n\n(cljs.pprint.nl_t.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22cljs.pprint/nl-t\x22,null,(1),null));\n}));\n\n(cljs.pprint.nl_t.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22cljs.pprint/nl-t\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/nl-t.\n */\ncljs.pprint.__GT_nl_t \x3d (function cljs$pprint$__GT_nl_t(type_tag,type,logical_block,start_pos,end_pos){\nreturn (new cljs.pprint.nl_t(type_tag,type,logical_block,start_pos,end_pos,null,null,null));\n});\n\n/**\n * Factory function for cljs.pprint/nl-t, taking a map of keywords to field values.\n */\ncljs.pprint.map__GT_nl_t \x3d (function cljs$pprint$map__GT_nl_t(G__12579){\nvar extmap__5385__auto__ \x3d (function (){var G__12625 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__12579,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], 0));\nif(cljs.core.record_QMARK_(G__12579)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__12625);\n} else {\nreturn G__12625;\n}\n})();\nreturn (new cljs.pprint.nl_t(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(G__12579),new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(G__12579),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(G__12579),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(G__12579),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(G__12579),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n\ncljs.pprint.make_nl_t \x3d (function cljs$pprint$make_nl_t(type,logical_block,start_pos,end_pos){\nreturn (new cljs.pprint.nl_t(new cljs.core.Keyword(null,\x22nl-t\x22,\x22nl-t\x22,-1608382114),type,logical_block,start_pos,end_pos,null,null,null));\n});\n\ncljs.pprint.nl_t_QMARK_ \x3d (function cljs$pprint$nl_t_QMARK_(x__11816__auto__){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(x__11816__auto__),new cljs.core.Keyword(null,\x22nl-t\x22,\x22nl-t\x22,-1608382114));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.pprint.start_block_t \x3d (function (type_tag,logical_block,start_pos,end_pos,__meta,__extmap,__hash){\nthis.type_tag \x3d type_tag;\nthis.logical_block \x3d logical_block;\nthis.start_pos \x3d start_pos;\nthis.end_pos \x3d end_pos;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k12634,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__12644 \x3d k12634;\nvar G__12644__$1 \x3d (((G__12644 instanceof cljs.core.Keyword))?G__12644.fqn:null);\nswitch (G__12644__$1) {\ncase \x22type-tag\x22:\nreturn self__.type_tag;\n\nbreak;\ncase \x22logical-block\x22:\nreturn self__.logical_block;\n\nbreak;\ncase \x22start-pos\x22:\nreturn self__.start_pos;\n\nbreak;\ncase \x22end-pos\x22:\nreturn self__.end_pos;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k12634,else__5346__auto__);\n\n}\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__12649){\nvar vec__12650 \x3d p__12649;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12650,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12650,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#cljs.pprint.start-block-t{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos],null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__12633){\nvar self__ \x3d this;\nvar G__12633__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__12633__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (4 + cljs.core.count(self__.__extmap));\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (-414877272 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this12635,other12636){\nvar self__ \x3d this;\nvar this12635__$1 \x3d this;\nreturn (((!((other12636 \x3d\x3d null)))) \x26\x26 ((((this12635__$1.constructor \x3d\x3d\x3d other12636.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12635__$1.type_tag,other12636.type_tag)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12635__$1.logical_block,other12636.logical_block)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12635__$1.start_pos,other12636.start_pos)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12635__$1.end_pos,other12636.end_pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12635__$1.__extmap,other12636.__extmap)))))))))))));\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k12634){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__12667 \x3d k12634;\nvar G__12667__$1 \x3d (((G__12667 instanceof cljs.core.Keyword))?G__12667.fqn:null);\nswitch (G__12667__$1) {\ncase \x22type-tag\x22:\ncase \x22logical-block\x22:\ncase \x22start-pos\x22:\ncase \x22end-pos\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k12634);\n\n}\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__12633){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__12668 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__12669 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__12668.cljs$core$IFn$_invoke$arity$2 ? pred__12668.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__12669) : pred__12668.call(null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__12669)))){\nreturn (new cljs.pprint.start_block_t(G__12633,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12668.cljs$core$IFn$_invoke$arity$2 ? pred__12668.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__12669) : pred__12668.call(null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__12669)))){\nreturn (new cljs.pprint.start_block_t(self__.type_tag,G__12633,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12668.cljs$core$IFn$_invoke$arity$2 ? pred__12668.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__12669) : pred__12668.call(null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__12669)))){\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,G__12633,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12668.cljs$core$IFn$_invoke$arity$2 ? pred__12668.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__12669) : pred__12668.call(null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__12669)))){\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,self__.start_pos,G__12633,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__12633),null));\n}\n}\n}\n}\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos,null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__12633){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new cljs.pprint.start_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,G__12633,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.start_block_t.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(cljs.pprint.start_block_t.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22type-tag\x22,\x22type-tag\x22,-233331740,null),new cljs.core.Symbol(null,\x22logical-block\x22,\x22logical-block\x22,1059508963,null),new cljs.core.Symbol(null,\x22start-pos\x22,\x22start-pos\x22,-1985646683,null),new cljs.core.Symbol(null,\x22end-pos\x22,\x22end-pos\x22,-3352399,null)], null);\n}));\n\n(cljs.pprint.start_block_t.cljs$lang$type \x3d true);\n\n(cljs.pprint.start_block_t.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22cljs.pprint/start-block-t\x22,null,(1),null));\n}));\n\n(cljs.pprint.start_block_t.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22cljs.pprint/start-block-t\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/start-block-t.\n */\ncljs.pprint.__GT_start_block_t \x3d (function cljs$pprint$__GT_start_block_t(type_tag,logical_block,start_pos,end_pos){\nreturn (new cljs.pprint.start_block_t(type_tag,logical_block,start_pos,end_pos,null,null,null));\n});\n\n/**\n * Factory function for cljs.pprint/start-block-t, taking a map of keywords to field values.\n */\ncljs.pprint.map__GT_start_block_t \x3d (function cljs$pprint$map__GT_start_block_t(G__12640){\nvar extmap__5385__auto__ \x3d (function (){var G__12677 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__12640,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], 0));\nif(cljs.core.record_QMARK_(G__12640)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__12677);\n} else {\nreturn G__12677;\n}\n})();\nreturn (new cljs.pprint.start_block_t(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(G__12640),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(G__12640),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(G__12640),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(G__12640),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n\ncljs.pprint.make_start_block_t \x3d (function cljs$pprint$make_start_block_t(logical_block,start_pos,end_pos){\nreturn (new cljs.pprint.start_block_t(new cljs.core.Keyword(null,\x22start-block-t\x22,\x22start-block-t\x22,-373430594),logical_block,start_pos,end_pos,null,null,null));\n});\n\ncljs.pprint.start_block_t_QMARK_ \x3d (function cljs$pprint$start_block_t_QMARK_(x__11816__auto__){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(x__11816__auto__),new cljs.core.Keyword(null,\x22start-block-t\x22,\x22start-block-t\x22,-373430594));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.pprint.end_block_t \x3d (function (type_tag,logical_block,start_pos,end_pos,__meta,__extmap,__hash){\nthis.type_tag \x3d type_tag;\nthis.logical_block \x3d logical_block;\nthis.start_pos \x3d start_pos;\nthis.end_pos \x3d end_pos;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k12682,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__12686 \x3d k12682;\nvar G__12686__$1 \x3d (((G__12686 instanceof cljs.core.Keyword))?G__12686.fqn:null);\nswitch (G__12686__$1) {\ncase \x22type-tag\x22:\nreturn self__.type_tag;\n\nbreak;\ncase \x22logical-block\x22:\nreturn self__.logical_block;\n\nbreak;\ncase \x22start-pos\x22:\nreturn self__.start_pos;\n\nbreak;\ncase \x22end-pos\x22:\nreturn self__.end_pos;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k12682,else__5346__auto__);\n\n}\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__12687){\nvar vec__12688 \x3d p__12687;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12688,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12688,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#cljs.pprint.end-block-t{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos],null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__12681){\nvar self__ \x3d this;\nvar G__12681__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__12681__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (4 + cljs.core.count(self__.__extmap));\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (1365867980 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this12683,other12684){\nvar self__ \x3d this;\nvar this12683__$1 \x3d this;\nreturn (((!((other12684 \x3d\x3d null)))) \x26\x26 ((((this12683__$1.constructor \x3d\x3d\x3d other12684.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12683__$1.type_tag,other12684.type_tag)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12683__$1.logical_block,other12684.logical_block)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12683__$1.start_pos,other12684.start_pos)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12683__$1.end_pos,other12684.end_pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12683__$1.__extmap,other12684.__extmap)))))))))))));\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k12682){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__12709 \x3d k12682;\nvar G__12709__$1 \x3d (((G__12709 instanceof cljs.core.Keyword))?G__12709.fqn:null);\nswitch (G__12709__$1) {\ncase \x22type-tag\x22:\ncase \x22logical-block\x22:\ncase \x22start-pos\x22:\ncase \x22end-pos\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k12682);\n\n}\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__12681){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__12710 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__12711 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__12710.cljs$core$IFn$_invoke$arity$2 ? pred__12710.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__12711) : pred__12710.call(null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__12711)))){\nreturn (new cljs.pprint.end_block_t(G__12681,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12710.cljs$core$IFn$_invoke$arity$2 ? pred__12710.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__12711) : pred__12710.call(null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__12711)))){\nreturn (new cljs.pprint.end_block_t(self__.type_tag,G__12681,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12710.cljs$core$IFn$_invoke$arity$2 ? pred__12710.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__12711) : pred__12710.call(null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__12711)))){\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,G__12681,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12710.cljs$core$IFn$_invoke$arity$2 ? pred__12710.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__12711) : pred__12710.call(null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__12711)))){\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,self__.start_pos,G__12681,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__12681),null));\n}\n}\n}\n}\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos,null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__12681){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new cljs.pprint.end_block_t(self__.type_tag,self__.logical_block,self__.start_pos,self__.end_pos,G__12681,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.end_block_t.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(cljs.pprint.end_block_t.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22type-tag\x22,\x22type-tag\x22,-233331740,null),new cljs.core.Symbol(null,\x22logical-block\x22,\x22logical-block\x22,1059508963,null),new cljs.core.Symbol(null,\x22start-pos\x22,\x22start-pos\x22,-1985646683,null),new cljs.core.Symbol(null,\x22end-pos\x22,\x22end-pos\x22,-3352399,null)], null);\n}));\n\n(cljs.pprint.end_block_t.cljs$lang$type \x3d true);\n\n(cljs.pprint.end_block_t.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22cljs.pprint/end-block-t\x22,null,(1),null));\n}));\n\n(cljs.pprint.end_block_t.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22cljs.pprint/end-block-t\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/end-block-t.\n */\ncljs.pprint.__GT_end_block_t \x3d (function cljs$pprint$__GT_end_block_t(type_tag,logical_block,start_pos,end_pos){\nreturn (new cljs.pprint.end_block_t(type_tag,logical_block,start_pos,end_pos,null,null,null));\n});\n\n/**\n * Factory function for cljs.pprint/end-block-t, taking a map of keywords to field values.\n */\ncljs.pprint.map__GT_end_block_t \x3d (function cljs$pprint$map__GT_end_block_t(G__12685){\nvar extmap__5385__auto__ \x3d (function (){var G__12721 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__12685,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], 0));\nif(cljs.core.record_QMARK_(G__12685)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__12721);\n} else {\nreturn G__12721;\n}\n})();\nreturn (new cljs.pprint.end_block_t(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(G__12685),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(G__12685),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(G__12685),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(G__12685),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n\ncljs.pprint.make_end_block_t \x3d (function cljs$pprint$make_end_block_t(logical_block,start_pos,end_pos){\nreturn (new cljs.pprint.end_block_t(new cljs.core.Keyword(null,\x22end-block-t\x22,\x22end-block-t\x22,1544648735),logical_block,start_pos,end_pos,null,null,null));\n});\n\ncljs.pprint.end_block_t_QMARK_ \x3d (function cljs$pprint$end_block_t_QMARK_(x__11816__auto__){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(x__11816__auto__),new cljs.core.Keyword(null,\x22end-block-t\x22,\x22end-block-t\x22,1544648735));\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.pprint.indent_t \x3d (function (type_tag,logical_block,relative_to,offset,start_pos,end_pos,__meta,__extmap,__hash){\nthis.type_tag \x3d type_tag;\nthis.logical_block \x3d logical_block;\nthis.relative_to \x3d relative_to;\nthis.offset \x3d offset;\nthis.start_pos \x3d start_pos;\nthis.end_pos \x3d end_pos;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k12734,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__12747 \x3d k12734;\nvar G__12747__$1 \x3d (((G__12747 instanceof cljs.core.Keyword))?G__12747.fqn:null);\nswitch (G__12747__$1) {\ncase \x22type-tag\x22:\nreturn self__.type_tag;\n\nbreak;\ncase \x22logical-block\x22:\nreturn self__.logical_block;\n\nbreak;\ncase \x22relative-to\x22:\nreturn self__.relative_to;\n\nbreak;\ncase \x22offset\x22:\nreturn self__.offset;\n\nbreak;\ncase \x22start-pos\x22:\nreturn self__.start_pos;\n\nbreak;\ncase \x22end-pos\x22:\nreturn self__.end_pos;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k12734,else__5346__auto__);\n\n}\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__12749){\nvar vec__12750 \x3d p__12749;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12750,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12750,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#cljs.pprint.indent-t{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),self__.relative_to],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),self__.offset],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos],null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__12732){\nvar self__ \x3d this;\nvar G__12732__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__12732__$1,6,new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (6 + cljs.core.count(self__.__extmap));\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (-1602780238 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this12735,other12736){\nvar self__ \x3d this;\nvar this12735__$1 \x3d this;\nreturn (((!((other12736 \x3d\x3d null)))) \x26\x26 ((((this12735__$1.constructor \x3d\x3d\x3d other12736.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12735__$1.type_tag,other12736.type_tag)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12735__$1.logical_block,other12736.logical_block)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12735__$1.relative_to,other12736.relative_to)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12735__$1.offset,other12736.offset)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12735__$1.start_pos,other12736.start_pos)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12735__$1.end_pos,other12736.end_pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this12735__$1.__extmap,other12736.__extmap)))))))))))))))));\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),null,new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k12734){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__12761 \x3d k12734;\nvar G__12761__$1 \x3d (((G__12761 instanceof cljs.core.Keyword))?G__12761.fqn:null);\nswitch (G__12761__$1) {\ncase \x22type-tag\x22:\ncase \x22logical-block\x22:\ncase \x22relative-to\x22:\ncase \x22offset\x22:\ncase \x22start-pos\x22:\ncase \x22end-pos\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k12734);\n\n}\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__12732){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__12762 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__12763 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__12762.cljs$core$IFn$_invoke$arity$2 ? pred__12762.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__12763) : pred__12762.call(null,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),expr__12763)))){\nreturn (new cljs.pprint.indent_t(G__12732,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12762.cljs$core$IFn$_invoke$arity$2 ? pred__12762.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__12763) : pred__12762.call(null,new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),expr__12763)))){\nreturn (new cljs.pprint.indent_t(self__.type_tag,G__12732,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12762.cljs$core$IFn$_invoke$arity$2 ? pred__12762.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),expr__12763) : pred__12762.call(null,new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),expr__12763)))){\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,G__12732,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12762.cljs$core$IFn$_invoke$arity$2 ? pred__12762.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),expr__12763) : pred__12762.call(null,new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),expr__12763)))){\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,G__12732,self__.start_pos,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12762.cljs$core$IFn$_invoke$arity$2 ? pred__12762.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__12763) : pred__12762.call(null,new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),expr__12763)))){\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,G__12732,self__.end_pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__12762.cljs$core$IFn$_invoke$arity$2 ? pred__12762.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__12763) : pred__12762.call(null,new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),expr__12763)))){\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,G__12732,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__12732),null));\n}\n}\n}\n}\n}\n}\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),self__.type_tag,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),self__.logical_block,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),self__.relative_to,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),self__.offset,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),self__.start_pos,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926),self__.end_pos,null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__12732){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new cljs.pprint.indent_t(self__.type_tag,self__.logical_block,self__.relative_to,self__.offset,self__.start_pos,self__.end_pos,G__12732,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.indent_t.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(cljs.pprint.indent_t.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22type-tag\x22,\x22type-tag\x22,-233331740,null),new cljs.core.Symbol(null,\x22logical-block\x22,\x22logical-block\x22,1059508963,null),new cljs.core.Symbol(null,\x22relative-to\x22,\x22relative-to\x22,1170431476,null),new cljs.core.Symbol(null,\x22offset\x22,\x22offset\x22,1937029838,null),new cljs.core.Symbol(null,\x22start-pos\x22,\x22start-pos\x22,-1985646683,null),new cljs.core.Symbol(null,\x22end-pos\x22,\x22end-pos\x22,-3352399,null)], null);\n}));\n\n(cljs.pprint.indent_t.cljs$lang$type \x3d true);\n\n(cljs.pprint.indent_t.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22cljs.pprint/indent-t\x22,null,(1),null));\n}));\n\n(cljs.pprint.indent_t.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22cljs.pprint/indent-t\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/indent-t.\n */\ncljs.pprint.__GT_indent_t \x3d (function cljs$pprint$__GT_indent_t(type_tag,logical_block,relative_to,offset,start_pos,end_pos){\nreturn (new cljs.pprint.indent_t(type_tag,logical_block,relative_to,offset,start_pos,end_pos,null,null,null));\n});\n\n/**\n * Factory function for cljs.pprint/indent-t, taking a map of keywords to field values.\n */\ncljs.pprint.map__GT_indent_t \x3d (function cljs$pprint$map__GT_indent_t(G__12737){\nvar extmap__5385__auto__ \x3d (function (){var G__12765 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__12737,new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564),new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926)], 0));\nif(cljs.core.record_QMARK_(G__12737)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__12765);\n} else {\nreturn G__12765;\n}\n})();\nreturn (new cljs.pprint.indent_t(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(G__12737),new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(G__12737),new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051).cljs$core$IFn$_invoke$arity$1(G__12737),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(G__12737),new cljs.core.Keyword(null,\x22start-pos\x22,\x22start-pos\x22,668789086).cljs$core$IFn$_invoke$arity$1(G__12737),new cljs.core.Keyword(null,\x22end-pos\x22,\x22end-pos\x22,-1643883926).cljs$core$IFn$_invoke$arity$1(G__12737),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n\ncljs.pprint.make_indent_t \x3d (function cljs$pprint$make_indent_t(logical_block,relative_to,offset,start_pos,end_pos){\nreturn (new cljs.pprint.indent_t(new cljs.core.Keyword(null,\x22indent-t\x22,\x22indent-t\x22,528318969),logical_block,relative_to,offset,start_pos,end_pos,null,null,null));\n});\n\ncljs.pprint.indent_t_QMARK_ \x3d (function cljs$pprint$indent_t_QMARK_(x__11816__auto__){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(x__11816__auto__),new cljs.core.Keyword(null,\x22indent-t\x22,\x22indent-t\x22,528318969));\n});\ncljs.pprint.pp_newline \x3d (function cljs$pprint$pp_newline(){\nreturn \x22\\n\x22;\n});\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.write_token !\x3d\x3d \x27undefined\x27)){\n} else {\ncljs.pprint.write_token \x3d (function (){var method_table__5642__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__5643__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__5644__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__5645__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__5646__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22hierarchy\x22,\x22hierarchy\x22,-1053470341),(function (){var fexpr__12768 \x3d cljs.core.get_global_hierarchy;\nreturn (fexpr__12768.cljs$core$IFn$_invoke$arity$0 ? fexpr__12768.cljs$core$IFn$_invoke$arity$0() : fexpr__12768.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\x22cljs.pprint\x22,\x22write-token\x22),(function (p1__12767_SHARP_,p2__12766_SHARP_){\nreturn new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(p2__12766_SHARP_);\n}),new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),hierarchy__5646__auto__,method_table__5642__auto__,prefer_table__5643__auto__,method_cache__5644__auto__,cached_hierarchy__5645__auto__));\n})();\n}\ncljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22start-block-t\x22,\x22start-block-t\x22,-373430594),(function (this$,token){\nvar temp__5804__auto___14375 \x3d new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_(temp__5804__auto___14375)){\nvar cb_14376 \x3d temp__5804__auto___14375;\n(cb_14376.cljs$core$IFn$_invoke$arity$1 ? cb_14376.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981)) : cb_14376.call(null,new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981)));\n} else {\n}\n\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(token);\nvar temp__5804__auto___14377 \x3d new cljs.core.Keyword(null,\x22prefix\x22,\x22prefix\x22,-265908465).cljs$core$IFn$_invoke$arity$1(lb);\nif(cljs.core.truth_(temp__5804__auto___14377)){\nvar prefix_14378 \x3d temp__5804__auto___14377;\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),prefix_14378);\n} else {\n}\n\nvar col \x3d cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143).cljs$core$IFn$_invoke$arity$1(lb),col);\n\nreturn cljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125).cljs$core$IFn$_invoke$arity$1(lb),col);\n}));\ncljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22end-block-t\x22,\x22end-block-t\x22,1544648735),(function (this$,token){\nvar temp__5804__auto___14379 \x3d new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_(temp__5804__auto___14379)){\nvar cb_14380 \x3d temp__5804__auto___14379;\n(cb_14380.cljs$core$IFn$_invoke$arity$1 ? cb_14380.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958)) : cb_14380.call(null,new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958)));\n} else {\n}\n\nvar temp__5804__auto__ \x3d new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(token));\nif(cljs.core.truth_(temp__5804__auto__)){\nvar suffix \x3d temp__5804__auto__;\nreturn cljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),suffix);\n} else {\nreturn null;\n}\n}));\ncljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22indent-t\x22,\x22indent-t\x22,528318969),(function (this$,token){\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(token);\nreturn cljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125).cljs$core$IFn$_invoke$arity$1(lb),(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(token) + (function (){var pred__12780 \x3d cljs.core._EQ_;\nvar expr__12781 \x3d new cljs.core.Keyword(null,\x22relative-to\x22,\x22relative-to\x22,-470100051).cljs$core$IFn$_invoke$arity$1(token);\nif(cljs.core.truth_((pred__12780.cljs$core$IFn$_invoke$arity$2 ? pred__12780.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),expr__12781) : pred__12780.call(null,new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),expr__12781)))){\nreturn cljs.core.deref(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143).cljs$core$IFn$_invoke$arity$1(lb));\n} else {\nif(cljs.core.truth_((pred__12780.cljs$core$IFn$_invoke$arity$2 ? pred__12780.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603),expr__12781) : pred__12780.call(null,new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603),expr__12781)))){\nreturn cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\n} else {\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__12781)].join(\x27\x27)));\n}\n}\n})()));\n}));\ncljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22buffer-blob\x22,\x22buffer-blob\x22,-1830112173),(function (this$,token){\nreturn cljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),new cljs.core.Keyword(null,\x22data\x22,\x22data\x22,-232669377).cljs$core$IFn$_invoke$arity$1(token));\n}));\ncljs.pprint.write_token.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22nl-t\x22,\x22nl-t\x22,-1608382114),(function (this$,token){\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,\x22mandatory\x22,\x22mandatory\x22,542802336));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar and__5043__auto__ \x3d (!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,\x22fill\x22,\x22fill\x22,883462889))));\nif(and__5043__auto__){\nreturn cljs.core.deref(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(token)));\n} else {\nreturn and__5043__auto__;\n}\n}\n})())){\n(cljs.pprint.emit_nl.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.emit_nl.cljs$core$IFn$_invoke$arity$2(this$,token) : cljs.pprint.emit_nl.call(null,this$,token));\n} else {\nvar temp__5802__auto___14387 \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_(temp__5802__auto___14387)){\nvar tws_14388 \x3d temp__5802__auto___14387;\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws_14388);\n} else {\n}\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null);\n}));\ncljs.pprint.write_tokens \x3d (function cljs$pprint$write_tokens(this$,tokens,force_trailing_whitespace){\nvar seq__12790 \x3d cljs.core.seq(tokens);\nvar chunk__12791 \x3d null;\nvar count__12792 \x3d (0);\nvar i__12793 \x3d (0);\nwhile(true){\nif((i__12793 \x3c count__12792)){\nvar token \x3d chunk__12791.cljs$core$IIndexed$_nth$arity$2(null,i__12793);\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,\x22nl-t\x22,\x22nl-t\x22,-1608382114))))){\nvar temp__5802__auto___14389 \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_(temp__5802__auto___14389)){\nvar tws_14390 \x3d temp__5802__auto___14389;\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws_14390);\n} else {\n}\n} else {\n}\n\ncljs.pprint.write_token.cljs$core$IFn$_invoke$arity$2(this$,token);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(token));\n\nvar tws_14392 \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d force_trailing_whitespace;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn tws_14392;\n} else {\nreturn and__5043__auto__;\n}\n})())){\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws_14392);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null);\n} else {\n}\n\n\nvar G__14394 \x3d seq__12790;\nvar G__14395 \x3d chunk__12791;\nvar G__14396 \x3d count__12792;\nvar G__14397 \x3d (i__12793 + (1));\nseq__12790 \x3d G__14394;\nchunk__12791 \x3d G__14395;\ncount__12792 \x3d G__14396;\ni__12793 \x3d G__14397;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__12790);\nif(temp__5804__auto__){\nvar seq__12790__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__12790__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__12790__$1);\nvar G__14398 \x3d cljs.core.chunk_rest(seq__12790__$1);\nvar G__14399 \x3d c__5568__auto__;\nvar G__14400 \x3d cljs.core.count(c__5568__auto__);\nvar G__14401 \x3d (0);\nseq__12790 \x3d G__14398;\nchunk__12791 \x3d G__14399;\ncount__12792 \x3d G__14400;\ni__12793 \x3d G__14401;\ncontinue;\n} else {\nvar token \x3d cljs.core.first(seq__12790__$1);\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-tag\x22,\x22type-tag\x22,-1873863267).cljs$core$IFn$_invoke$arity$1(token),new cljs.core.Keyword(null,\x22nl-t\x22,\x22nl-t\x22,-1608382114))))){\nvar temp__5802__auto___14402 \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_(temp__5802__auto___14402)){\nvar tws_14403 \x3d temp__5802__auto___14402;\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws_14403);\n} else {\n}\n} else {\n}\n\ncljs.pprint.write_token.cljs$core$IFn$_invoke$arity$2(this$,token);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(token));\n\nvar tws_14406 \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d force_trailing_whitespace;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn tws_14406;\n} else {\nreturn and__5043__auto__;\n}\n})())){\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws_14406);\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null);\n} else {\n}\n\n\nvar G__14407 \x3d cljs.core.next(seq__12790__$1);\nvar G__14408 \x3d null;\nvar G__14409 \x3d (0);\nvar G__14410 \x3d (0);\nseq__12790 \x3d G__14407;\nchunk__12791 \x3d G__14408;\ncount__12792 \x3d G__14409;\ni__12793 \x3d G__14410;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ncljs.pprint.tokens_fit_QMARK_ \x3d (function cljs$pprint$tokens_fit_QMARK_(this$,tokens){\nvar maxcol \x3d cljs.pprint.get_max_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\nreturn (((maxcol \x3d\x3d null)) || (((cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)))) + cljs.pprint.buffer_length(tokens)) \x3c maxcol)));\n});\ncljs.pprint.linear_nl_QMARK_ \x3d (function cljs$pprint$linear_nl_QMARK_(this$,lb,section){\nvar or__5045__auto__ \x3d cljs.core.deref(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340).cljs$core$IFn$_invoke$arity$1(lb));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (!(cljs.pprint.tokens_fit_QMARK_(this$,section)));\n}\n});\ncljs.pprint.miser_nl_QMARK_ \x3d (function cljs$pprint$miser_nl_QMARK_(this$,lb,section){\nvar miser_width \x3d cljs.pprint.get_miser_width(this$);\nvar maxcol \x3d cljs.pprint.get_max_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\nvar and__5043__auto__ \x3d miser_width;\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d maxcol;\nif(cljs.core.truth_(and__5043__auto____$1)){\nvar and__5043__auto____$2 \x3d (cljs.core.deref(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143).cljs$core$IFn$_invoke$arity$1(lb)) \x3e\x3d (maxcol - miser_width));\nif(and__5043__auto____$2){\nreturn cljs.pprint.linear_nl_QMARK_(this$,lb,section);\n} else {\nreturn and__5043__auto____$2;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n});\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.emit_nl_QMARK_ !\x3d\x3d \x27undefined\x27)){\n} else {\ncljs.pprint.emit_nl_QMARK_ \x3d (function (){var method_table__5642__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__5643__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__5644__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__5645__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__5646__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22hierarchy\x22,\x22hierarchy\x22,-1053470341),(function (){var fexpr__12811 \x3d cljs.core.get_global_hierarchy;\nreturn (fexpr__12811.cljs$core$IFn$_invoke$arity$0 ? fexpr__12811.cljs$core$IFn$_invoke$arity$0() : fexpr__12811.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\x22cljs.pprint\x22,\x22emit-nl?\x22),(function (t,_,___$1,___$2){\nreturn new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348).cljs$core$IFn$_invoke$arity$1(t);\n}),new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),hierarchy__5646__auto__,method_table__5642__auto__,prefer_table__5643__auto__,method_cache__5644__auto__,cached_hierarchy__5645__auto__));\n})();\n}\ncljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697),(function (newl,this$,section,_){\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(newl);\nreturn cljs.pprint.linear_nl_QMARK_(this$,lb,section);\n}));\ncljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186),(function (newl,this$,section,_){\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(newl);\nreturn cljs.pprint.miser_nl_QMARK_(this$,lb,section);\n}));\ncljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22fill\x22,\x22fill\x22,883462889),(function (newl,this$,section,subsection){\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(newl);\nvar or__5045__auto__ \x3d cljs.core.deref(new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875).cljs$core$IFn$_invoke$arity$1(lb));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (!(cljs.pprint.tokens_fit_QMARK_(this$,subsection)));\nif(or__5045__auto____$1){\nreturn or__5045__auto____$1;\n} else {\nreturn cljs.pprint.miser_nl_QMARK_(this$,lb,section);\n}\n}\n}));\ncljs.pprint.emit_nl_QMARK_.cljs$core$IMultiFn$_add_method$arity$3(null,new cljs.core.Keyword(null,\x22mandatory\x22,\x22mandatory\x22,542802336),(function (_,___$1,___$2,___$3){\nreturn true;\n}));\ncljs.pprint.get_section \x3d (function cljs$pprint$get_section(buffer){\nvar nl \x3d cljs.core.first(buffer);\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(nl);\nvar section \x3d cljs.core.seq(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__12818_SHARP_){\nreturn (!(((cljs.pprint.nl_t_QMARK_(p1__12818_SHARP_)) \x26\x26 (cljs.pprint.ancestor_QMARK_(new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(p1__12818_SHARP_),lb)))));\n}),cljs.core.next(buffer)));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [section,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2((cljs.core.count(section) + (1)),buffer))], null);\n});\ncljs.pprint.get_sub_section \x3d (function cljs$pprint$get_sub_section(buffer){\nvar nl \x3d cljs.core.first(buffer);\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(nl);\nvar section \x3d cljs.core.seq(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__12822_SHARP_){\nvar nl_lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(p1__12822_SHARP_);\nreturn (!(((cljs.pprint.nl_t_QMARK_(p1__12822_SHARP_)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(nl_lb,lb)) || (cljs.pprint.ancestor_QMARK_(nl_lb,lb)))))));\n}),cljs.core.next(buffer)));\nreturn section;\n});\ncljs.pprint.update_nl_state \x3d (function cljs$pprint$update_nl_state(lb){\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875).cljs$core$IFn$_invoke$arity$1(lb),true);\n\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340).cljs$core$IFn$_invoke$arity$1(lb),true);\n\nvar lb__$1 \x3d new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(lb);\nwhile(true){\nif(cljs.core.truth_(lb__$1)){\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22done-nl\x22,\x22done-nl\x22,-381024340).cljs$core$IFn$_invoke$arity$1(lb__$1),true);\n\ncljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22intra-block-nl\x22,\x22intra-block-nl\x22,1808826875).cljs$core$IFn$_invoke$arity$1(lb__$1),true);\n\nvar G__14413 \x3d new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(lb__$1);\nlb__$1 \x3d G__14413;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\ncljs.pprint.emit_nl \x3d (function cljs$pprint$emit_nl(this$,nl){\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),cljs.pprint.pp_newline());\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null);\n\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-block\x22,\x22logical-block\x22,-581022564).cljs$core$IFn$_invoke$arity$1(nl);\nvar prefix \x3d new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813).cljs$core$IFn$_invoke$arity$1(lb);\nif(cljs.core.truth_(prefix)){\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),prefix);\n} else {\n}\n\nvar istr_14415 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((cljs.core.deref(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125).cljs$core$IFn$_invoke$arity$1(lb)) - cljs.core.count(prefix)),\x22 \x22));\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),istr_14415);\n\nreturn cljs.pprint.update_nl_state(lb);\n});\ncljs.pprint.split_at_newline \x3d (function cljs$pprint$split_at_newline(tokens){\nvar pre \x3d cljs.core.seq(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2((function (p1__12836_SHARP_){\nreturn (!(cljs.pprint.nl_t_QMARK_(p1__12836_SHARP_)));\n}),tokens));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [pre,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(pre),tokens))], null);\n});\ncljs.pprint.write_token_string \x3d (function cljs$pprint$write_token_string(this$,tokens){\nvar vec__12844 \x3d cljs.pprint.split_at_newline(tokens);\nvar a \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12844,(0),null);\nvar b \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12844,(1),null);\nif(cljs.core.truth_(a)){\ncljs.pprint.write_tokens(this$,a,false);\n} else {\n}\n\nif(cljs.core.truth_(b)){\nvar vec__12850 \x3d cljs.pprint.get_section(b);\nvar section \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12850,(0),null);\nvar remainder \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12850,(1),null);\nvar newl \x3d cljs.core.first(b);\nvar do_nl \x3d cljs.pprint.emit_nl_QMARK_.cljs$core$IFn$_invoke$arity$4(newl,this$,section,cljs.pprint.get_sub_section(b));\nvar result \x3d (cljs.core.truth_(do_nl)?(function (){\ncljs.pprint.emit_nl(this$,newl);\n\nreturn cljs.core.next(b);\n})()\n:b);\nvar long_section \x3d (!(cljs.pprint.tokens_fit_QMARK_(this$,result)));\nvar result__$1 \x3d ((long_section)?(function (){var rem2 \x3d (cljs.pprint.write_token_string.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.write_token_string.cljs$core$IFn$_invoke$arity$2(this$,section) : cljs.pprint.write_token_string.call(null,this$,section));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(rem2,section)){\ncljs.pprint.write_tokens(this$,section,false);\n\nreturn remainder;\n} else {\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(rem2,remainder));\n}\n})():result);\nreturn result__$1;\n} else {\nreturn null;\n}\n});\ncljs.pprint.write_line \x3d (function cljs$pprint$write_line(this$){\nvar buffer \x3d new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nwhile(true){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198),cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,buffer));\n\nif((!(cljs.pprint.tokens_fit_QMARK_(this$,buffer)))){\nvar new_buffer \x3d cljs.pprint.write_token_string(this$,buffer);\nif((!((buffer \x3d\x3d\x3d new_buffer)))){\nvar G__14420 \x3d new_buffer;\nbuffer \x3d G__14420;\ncontinue;\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});\ncljs.pprint.add_to_buffer \x3d (function cljs$pprint$add_to_buffer(this$,token){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),token));\n\nif((!(cljs.pprint.tokens_fit_QMARK_(this$,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))))))){\nreturn cljs.pprint.write_line(this$);\n} else {\nreturn null;\n}\n});\ncljs.pprint.write_buffered_output \x3d (function cljs$pprint$write_buffered_output(this$){\ncljs.pprint.write_line(this$);\n\nvar temp__5802__auto__ \x3d new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar buf \x3d temp__5802__auto__;\ncljs.pprint.write_tokens(this$,buf,true);\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198),cljs.core.PersistentVector.EMPTY);\n} else {\nreturn null;\n}\n});\ncljs.pprint.write_white_space \x3d (function cljs$pprint$write_white_space(this$){\nvar temp__5804__auto__ \x3d new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_(temp__5804__auto__)){\nvar tws \x3d temp__5804__auto__;\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),tws);\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),null);\n} else {\nreturn null;\n}\n});\ncljs.pprint.write_initial_lines \x3d (function cljs$pprint$write_initial_lines(this$,s){\nvar lines \x3d clojure.string.split.cljs$core$IFn$_invoke$arity$3(s,\x22\\n\x22,(-1));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(lines),(1))){\nreturn s;\n} else {\nvar prefix \x3d new cljs.core.Keyword(null,\x22per-line-prefix\x22,\x22per-line-prefix\x22,846941813).cljs$core$IFn$_invoke$arity$1(cljs.core.first(new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)))));\nvar l \x3d cljs.core.first(lines);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22buffering\x22,\x22buffering\x22,-876713613),new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))))){\nvar oldpos_14425 \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nvar newpos_14426 \x3d (oldpos_14425 + cljs.core.count(l));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),newpos_14426);\n\ncljs.pprint.add_to_buffer(this$,cljs.pprint.make_buffer_blob(l,null,oldpos_14425,newpos_14426));\n\ncljs.pprint.write_buffered_output(this$);\n} else {\ncljs.pprint.write_white_space(this$);\n\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),l);\n}\n\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),\x22\\n\x22);\n\nvar seq__12882_14428 \x3d cljs.core.seq(cljs.core.next(cljs.core.butlast(lines)));\nvar chunk__12883_14429 \x3d null;\nvar count__12884_14430 \x3d (0);\nvar i__12885_14431 \x3d (0);\nwhile(true){\nif((i__12885_14431 \x3c count__12884_14430)){\nvar l_14432__$1 \x3d chunk__12883_14429.cljs$core$IIndexed$_nth$arity$2(null,i__12885_14431);\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),l_14432__$1);\n\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),cljs.pprint.pp_newline());\n\nif(cljs.core.truth_(prefix)){\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),prefix);\n} else {\n}\n\n\nvar G__14433 \x3d seq__12882_14428;\nvar G__14434 \x3d chunk__12883_14429;\nvar G__14435 \x3d count__12884_14430;\nvar G__14436 \x3d (i__12885_14431 + (1));\nseq__12882_14428 \x3d G__14433;\nchunk__12883_14429 \x3d G__14434;\ncount__12884_14430 \x3d G__14435;\ni__12885_14431 \x3d G__14436;\ncontinue;\n} else {\nvar temp__5804__auto___14437 \x3d cljs.core.seq(seq__12882_14428);\nif(temp__5804__auto___14437){\nvar seq__12882_14438__$1 \x3d temp__5804__auto___14437;\nif(cljs.core.chunked_seq_QMARK_(seq__12882_14438__$1)){\nvar c__5568__auto___14439 \x3d cljs.core.chunk_first(seq__12882_14438__$1);\nvar G__14440 \x3d cljs.core.chunk_rest(seq__12882_14438__$1);\nvar G__14441 \x3d c__5568__auto___14439;\nvar G__14442 \x3d cljs.core.count(c__5568__auto___14439);\nvar G__14443 \x3d (0);\nseq__12882_14428 \x3d G__14440;\nchunk__12883_14429 \x3d G__14441;\ncount__12884_14430 \x3d G__14442;\ni__12885_14431 \x3d G__14443;\ncontinue;\n} else {\nvar l_14444__$1 \x3d cljs.core.first(seq__12882_14438__$1);\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),l_14444__$1);\n\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),cljs.pprint.pp_newline());\n\nif(cljs.core.truth_(prefix)){\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),prefix);\n} else {\n}\n\n\nvar G__14445 \x3d cljs.core.next(seq__12882_14438__$1);\nvar G__14446 \x3d null;\nvar G__14447 \x3d (0);\nvar G__14448 \x3d (0);\nseq__12882_14428 \x3d G__14445;\nchunk__12883_14429 \x3d G__14446;\ncount__12884_14430 \x3d G__14447;\ni__12885_14431 \x3d G__14448;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22buffering\x22,\x22buffering\x22,-876713613),new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108));\n\nreturn cljs.core.last(lines);\n}\n});\ncljs.pprint.p_write_char \x3d (function cljs$pprint$p_write_char(this$,c){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108))){\ncljs.pprint.write_white_space(this$);\n\nreturn cljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),c);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(c,\x22\\n\x22)){\nreturn cljs.pprint.write_initial_lines(this$,\x22\\n\x22);\n} else {\nvar oldpos \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nvar newpos \x3d (oldpos + (1));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),newpos);\n\nreturn cljs.pprint.add_to_buffer(this$,cljs.pprint.make_buffer_blob(cljs.core.char$(c),null,oldpos,newpos));\n}\n}\n});\ncljs.pprint.pretty_writer \x3d (function cljs$pprint$pretty_writer(writer,max_columns,miser_width){\nvar lb \x3d (new cljs.pprint.logical_block(null,null,cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),null,null,null,null,null,null,null));\nvar fields \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776),new cljs.core.Keyword(null,\x22miser-width\x22,\x22miser-width\x22,-1310049437),new cljs.core.Keyword(null,\x22buffer-block\x22,\x22buffer-block\x22,-10937307),new cljs.core.Keyword(null,\x22pretty-writer\x22,\x22pretty-writer\x22,-1222834267),new cljs.core.Keyword(null,\x22sections\x22,\x22sections\x22,-886710106),new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691),new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322),new cljs.core.Keyword(null,\x22buffer-level\x22,\x22buffer-level\x22,928864731),new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198)],[lb,miser_width,lb,true,null,new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108),(0),null,cljs.pprint.column_writer.cljs$core$IFn$_invoke$arity$2(writer,max_columns),(1),cljs.core.PersistentVector.EMPTY]));\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint12902 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.pprint.IPrettyFlush}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.pprint.t_cljs$pprint12902 \x3d (function (writer,max_columns,miser_width,lb,fields,meta12903){\nthis.writer \x3d writer;\nthis.max_columns \x3d max_columns;\nthis.miser_width \x3d miser_width;\nthis.lb \x3d lb;\nthis.fields \x3d fields;\nthis.meta12903 \x3d meta12903;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074167808;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.pprint.t_cljs$pprint12902.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_12904,meta12903__$1){\nvar self__ \x3d this;\nvar _12904__$1 \x3d this;\nreturn (new cljs.pprint.t_cljs$pprint12902(self__.writer,self__.max_columns,self__.miser_width,self__.lb,self__.fields,meta12903__$1));\n}));\n\n(cljs.pprint.t_cljs$pprint12902.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_12904){\nvar self__ \x3d this;\nvar _12904__$1 \x3d this;\nreturn self__.meta12903;\n}));\n\n(cljs.pprint.t_cljs$pprint12902.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.fields;\n}));\n\n(cljs.pprint.t_cljs$pprint12902.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar pred__12913 \x3d cljs.core._EQ_;\nvar expr__12914 \x3d cljs.core.type(x);\nif(cljs.core.truth_((pred__12913.cljs$core$IFn$_invoke$arity$2 ? pred__12913.cljs$core$IFn$_invoke$arity$2(String,expr__12914) : pred__12913.call(null,String,expr__12914)))){\nvar s0 \x3d cljs.pprint.write_initial_lines(this$__$1,x);\nvar s \x3d clojure.string.replace_first(s0,/\\s+$/,\x22\x22);\nvar white_space \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s0,((s).length));\nvar mode \x3d new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1)));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(mode,new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108))){\ncljs.pprint.write_white_space(this$__$1);\n\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))),s);\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$__$1),cljs.core.assoc,new cljs.core.Keyword(null,\x22trailing-white-space\x22,\x22trailing-white-space\x22,1496006996),white_space);\n} else {\nvar oldpos \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1)));\nvar newpos \x3d (oldpos + cljs.core.count(s0));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$__$1),cljs.core.assoc,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),newpos);\n\nreturn cljs.pprint.add_to_buffer(this$__$1,cljs.pprint.make_buffer_blob(s,white_space,oldpos,newpos));\n}\n} else {\nif(cljs.core.truth_((pred__12913.cljs$core$IFn$_invoke$arity$2 ? pred__12913.cljs$core$IFn$_invoke$arity$2(Number,expr__12914) : pred__12913.call(null,Number,expr__12914)))){\nreturn cljs.pprint.p_write_char(this$__$1,x);\n} else {\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__12914)].join(\x27\x27)));\n}\n}\n}));\n\n(cljs.pprint.t_cljs$pprint12902.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nthis$__$1.cljs$pprint$IPrettyFlush$_ppflush$arity$1(null);\n\nreturn cljs.core._flush(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))));\n}));\n\n(cljs.pprint.t_cljs$pprint12902.prototype.cljs$pprint$IPrettyFlush$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(cljs.pprint.t_cljs$pprint12902.prototype.cljs$pprint$IPrettyFlush$_ppflush$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))),new cljs.core.Keyword(null,\x22buffering\x22,\x22buffering\x22,-876713613))){\ncljs.pprint.write_tokens(this$__$1,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$__$1))),true);\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$__$1),cljs.core.assoc,new cljs.core.Keyword(null,\x22buffer\x22,\x22buffer\x22,617295198),cljs.core.PersistentVector.EMPTY);\n} else {\nreturn cljs.pprint.write_white_space(this$__$1);\n}\n}));\n\n(cljs.pprint.t_cljs$pprint12902.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22max-columns\x22,\x22max-columns\x22,-912112507,null),new cljs.core.Symbol(null,\x22miser-width\x22,\x22miser-width\x22,330482090,null),new cljs.core.Symbol(null,\x22lb\x22,\x22lb\x22,950310490,null),new cljs.core.Symbol(null,\x22fields\x22,\x22fields\x22,-291534703,null),new cljs.core.Symbol(null,\x22meta12903\x22,\x22meta12903\x22,-887702216,null)], null);\n}));\n\n(cljs.pprint.t_cljs$pprint12902.cljs$lang$type \x3d true);\n\n(cljs.pprint.t_cljs$pprint12902.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint12902\x22);\n\n(cljs.pprint.t_cljs$pprint12902.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.pprint/t_cljs$pprint12902\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/t_cljs$pprint12902.\n */\ncljs.pprint.__GT_t_cljs$pprint12902 \x3d (function cljs$pprint$pretty_writer_$___GT_t_cljs$pprint12902(writer__$1,max_columns__$1,miser_width__$1,lb__$1,fields__$1,meta12903){\nreturn (new cljs.pprint.t_cljs$pprint12902(writer__$1,max_columns__$1,miser_width__$1,lb__$1,fields__$1,meta12903));\n});\n\n}\n\nreturn (new cljs.pprint.t_cljs$pprint12902(writer,max_columns,miser_width,lb,fields,cljs.core.PersistentArrayMap.EMPTY));\n});\ncljs.pprint.start_block \x3d (function cljs$pprint$start_block(this$,prefix,per_line_prefix,suffix){\nvar lb \x3d (new cljs.pprint.logical_block(new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),null,cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0)),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false),prefix,per_line_prefix,suffix,null,null,null,null));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776),lb);\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108))){\ncljs.pprint.write_white_space(this$);\n\nvar temp__5804__auto___14466 \x3d new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_(temp__5804__auto___14466)){\nvar cb_14469 \x3d temp__5804__auto___14466;\n(cb_14469.cljs$core$IFn$_invoke$arity$1 ? cb_14469.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981)) : cb_14469.call(null,new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981)));\n} else {\n}\n\nif(cljs.core.truth_(prefix)){\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),prefix);\n} else {\n}\n\nvar col \x3d cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\ncljs.core.reset_BANG_(lb.start_col,col);\n\nreturn cljs.core.reset_BANG_(lb.indent,col);\n} else {\nvar oldpos \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nvar newpos \x3d (oldpos + (cljs.core.truth_(prefix)?cljs.core.count(prefix):(0)));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),newpos);\n\nreturn cljs.pprint.add_to_buffer(this$,cljs.pprint.make_start_block_t(lb,oldpos,newpos));\n}\n});\ncljs.pprint.end_block \x3d (function cljs$pprint$end_block(this$){\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nvar suffix \x3d new cljs.core.Keyword(null,\x22suffix\x22,\x22suffix\x22,367373057).cljs$core$IFn$_invoke$arity$1(lb);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108))){\ncljs.pprint.write_white_space(this$);\n\nif(cljs.core.truth_(suffix)){\ncljs.core._write(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),suffix);\n} else {\n}\n\nvar temp__5804__auto___14474 \x3d new cljs.core.Keyword(null,\x22logical-block-callback\x22,\x22logical-block-callback\x22,1612691194).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core.truth_(temp__5804__auto___14474)){\nvar cb_14475 \x3d temp__5804__auto___14474;\n(cb_14475.cljs$core$IFn$_invoke$arity$1 ? cb_14475.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958)) : cb_14475.call(null,new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958)));\n} else {\n}\n} else {\nvar oldpos_14476 \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nvar newpos_14477 \x3d (oldpos_14476 + (cljs.core.truth_(suffix)?cljs.core.count(suffix):(0)));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),newpos_14477);\n\ncljs.pprint.add_to_buffer(this$,cljs.pprint.make_end_block_t(lb,oldpos_14476,newpos_14477));\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776),new cljs.core.Keyword(null,\x22parent\x22,\x22parent\x22,-878878779).cljs$core$IFn$_invoke$arity$1(lb));\n});\ncljs.pprint.nl \x3d (function cljs$pprint$nl(this$,type){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(cljs.core.deref(this$),cljs.core.assoc,new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691),new cljs.core.Keyword(null,\x22buffering\x22,\x22buffering\x22,-876713613));\n\nvar pos \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nreturn cljs.pprint.add_to_buffer(this$,cljs.pprint.make_nl_t(type,new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),pos,pos));\n});\ncljs.pprint.indent \x3d (function cljs$pprint$indent(this$,relative_to,offset){\nvar lb \x3d new cljs.core.Keyword(null,\x22logical-blocks\x22,\x22logical-blocks\x22,-1466339776).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22mode\x22,\x22mode\x22,654403691).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))),new cljs.core.Keyword(null,\x22writing\x22,\x22writing\x22,-1486865108))){\ncljs.pprint.write_white_space(this$);\n\nreturn cljs.core.reset_BANG_(new cljs.core.Keyword(null,\x22indent\x22,\x22indent\x22,-148200125).cljs$core$IFn$_invoke$arity$1(lb),(offset + (function (){var pred__12951 \x3d cljs.core._EQ_;\nvar expr__12952 \x3d relative_to;\nif(cljs.core.truth_((pred__12951.cljs$core$IFn$_invoke$arity$2 ? pred__12951.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),expr__12952) : pred__12951.call(null,new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),expr__12952)))){\nreturn cljs.core.deref(new cljs.core.Keyword(null,\x22start-col\x22,\x22start-col\x22,668080143).cljs$core$IFn$_invoke$arity$1(lb));\n} else {\nif(cljs.core.truth_((pred__12951.cljs$core$IFn$_invoke$arity$2 ? pred__12951.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603),expr__12952) : pred__12951.call(null,new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603),expr__12952)))){\nreturn cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$))));\n} else {\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__12952)].join(\x27\x27)));\n}\n}\n})()));\n} else {\nvar pos \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\nreturn cljs.pprint.add_to_buffer(this$,cljs.pprint.make_indent_t(lb,relative_to,offset,pos,pos));\n}\n});\ncljs.pprint.get_miser_width \x3d (function cljs$pprint$get_miser_width(this$){\nreturn new cljs.core.Keyword(null,\x22miser-width\x22,\x22miser-width\x22,-1310049437).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(this$)));\n});\n/**\n * Bind to true if you want write to use pretty printing\n */\ncljs.pprint._STAR_print_pretty_STAR_ \x3d true;\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint._STAR_print_pprint_dispatch_STAR_ !\x3d\x3d \x27undefined\x27)){\n} else {\n/**\n * The pretty print dispatch function. Use with-pprint-dispatch or\n * set-pprint-dispatch to modify.\n */\ncljs.pprint._STAR_print_pprint_dispatch_STAR_ \x3d null;\n}\n/**\n * Pretty printing will try to avoid anything going beyond this column.\n * Set it to nil to have pprint let the line be arbitrarily long. This will ignore all\n * non-mandatory newlines.\n */\ncljs.pprint._STAR_print_right_margin_STAR_ \x3d (72);\n/**\n * The column at which to enter miser style. Depending on the dispatch table,\n * miser style add newlines in more places to try to keep lines short allowing for further\n * levels of nesting.\n */\ncljs.pprint._STAR_print_miser_width_STAR_ \x3d (40);\n/**\n * Maximum number of lines to print in a pretty print instance (N.B. This is not yet used)\n */\ncljs.pprint._STAR_print_lines_STAR_ \x3d null;\n/**\n * Mark circular structures (N.B. This is not yet used)\n */\ncljs.pprint._STAR_print_circle_STAR_ \x3d null;\n/**\n * Mark repeated structures rather than repeat them (N.B. This is not yet used)\n */\ncljs.pprint._STAR_print_shared_STAR_ \x3d null;\n/**\n * Don\x27t print namespaces with symbols. This is particularly useful when\n * pretty printing the results of macro expansions\n */\ncljs.pprint._STAR_print_suppress_namespaces_STAR_ \x3d null;\n/**\n * Print a radix specifier in front of integers and rationals. If *print-base* is 2, 8,\n * or 16, then the radix specifier used is #b, #o, or #x, respectively. Otherwise the\n * radix specifier is in the form #XXr where XX is the decimal value of *print-base* \n */\ncljs.pprint._STAR_print_radix_STAR_ \x3d null;\n/**\n * The base to use for printing integers and rationals.\n */\ncljs.pprint._STAR_print_base_STAR_ \x3d (10);\ncljs.pprint._STAR_current_level_STAR_ \x3d (0);\ncljs.pprint._STAR_current_length_STAR_ \x3d null;\ncljs.pprint.table_ize \x3d (function cljs$pprint$table_ize(t,m){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic((function (p1__12970_SHARP_){\nvar temp__5804__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(t,cljs.core.key(p1__12970_SHARP_));\nif(cljs.core.truth_(temp__5804__auto__)){\nvar v \x3d temp__5804__auto__;\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [v,cljs.core.val(p1__12970_SHARP_)], null);\n} else {\nreturn null;\n}\n}),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m], 0)));\n});\n/**\n * Return true iff x is a PrettyWriter\n */\ncljs.pprint.pretty_writer_QMARK_ \x3d (function cljs$pprint$pretty_writer_QMARK_(x){\nvar and__5043__auto__ \x3d (((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IDeref$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,x));\nif(and__5043__auto__){\nreturn new cljs.core.Keyword(null,\x22pretty-writer\x22,\x22pretty-writer\x22,-1222834267).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(x)));\n} else {\nreturn and__5043__auto__;\n}\n});\n/**\n * Wrap base-writer in a PrettyWriter with the specified right-margin and miser-width\n */\ncljs.pprint.make_pretty_writer \x3d (function cljs$pprint$make_pretty_writer(base_writer,right_margin,miser_width){\nreturn cljs.pprint.pretty_writer(base_writer,right_margin,miser_width);\n});\n/**\n * Write an object to *out* subject to the current bindings of the printer control\n * variables. Use the kw-args argument to override individual variables for this call (and\n * any recursive calls).\n * \n * *out* must be a PrettyWriter if pretty printing is enabled. This is the responsibility\n * of the caller.\n * \n * This method is primarily intended for use by pretty print dispatch functions that\n * already know that the pretty printer will have set up their environment appropriately.\n * Normal library clients should use the standard \x22write\x22 interface. \n */\ncljs.pprint.write_out \x3d (function cljs$pprint$write_out(object){\nvar length_reached \x3d (function (){var and__5043__auto__ \x3d cljs.pprint._STAR_current_length_STAR_;\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d cljs.core._STAR_print_length_STAR_;\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn (cljs.pprint._STAR_current_length_STAR_ \x3e\x3d cljs.core._STAR_print_length_STAR_);\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})();\nif(cljs.core.not(cljs.pprint._STAR_print_pretty_STAR_)){\ncljs.pprint.pr.call(null,object);\n} else {\nif(cljs.core.truth_(length_reached)){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\n} else {\nif(cljs.core.truth_(cljs.pprint._STAR_current_length_STAR_)){\n(cljs.pprint._STAR_current_length_STAR_ \x3d (cljs.pprint._STAR_current_length_STAR_ + (1)));\n} else {\n}\n\ncljs.pprint._STAR_print_pprint_dispatch_STAR_.call(null,object);\n}\n}\n\nreturn length_reached;\n});\n/**\n * Write an object subject to the current bindings of the printer control variables.\n * Use the kw-args argument to override individual variables for this call (and any\n * recursive calls). Returns the string result if :stream is nil or nil otherwise.\n * \n * The following keyword arguments can be passed with values:\n *   Keyword              Meaning                              Default value\n *   :stream              Writer for output or nil             true (indicates *out*)\n *   :base                Base to use for writing rationals    Current value of *print-base*\n *   :circle*             If true, mark circular structures    Current value of *print-circle*\n *   :length              Maximum elements to show in sublists Current value of *print-length*\n *   :level               Maximum depth                        Current value of *print-level*\n *   :lines*              Maximum lines of output              Current value of *print-lines*\n *   :miser-width         Width to enter miser mode            Current value of *print-miser-width*\n *   :dispatch            The pretty print dispatch function   Current value of *print-pprint-dispatch*\n *   :pretty              If true, do pretty printing          Current value of *print-pretty*\n *   :radix               If true, prepend a radix specifier   Current value of *print-radix*\n *   :readably*           If true, print readably              Current value of *print-readably*\n *   :right-margin        The column for the right margin      Current value of *print-right-margin*\n *   :suppress-namespaces If true, no namespaces in symbols    Current value of *print-suppress-namespaces*\n * \n *   * \x3d not yet supported\n */\ncljs.pprint.write \x3d (function cljs$pprint$write(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14501 \x3d arguments.length;\nvar i__5770__auto___14502 \x3d (0);\nwhile(true){\nif((i__5770__auto___14502 \x3c len__5769__auto___14501)){\nargs__5775__auto__.push((arguments[i__5770__auto___14502]));\n\nvar G__14503 \x3d (i__5770__auto___14502 + (1));\ni__5770__auto___14502 \x3d G__14503;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(cljs.pprint.write.cljs$core$IFn$_invoke$arity$variadic \x3d (function (object,kw_args){\nvar options \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22stream\x22,\x22stream\x22,1534941648),true], null),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,kw_args)], 0));\nvar _STAR_print_base_STAR__orig_val__12998 \x3d cljs.pprint._STAR_print_base_STAR_;\nvar _STAR_print_circle_STAR__orig_val__12999 \x3d cljs.pprint._STAR_print_circle_STAR_;\nvar _STAR_print_length_STAR__orig_val__13000 \x3d cljs.core._STAR_print_length_STAR_;\nvar _STAR_print_level_STAR__orig_val__13001 \x3d cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_lines_STAR__orig_val__13002 \x3d cljs.pprint._STAR_print_lines_STAR_;\nvar _STAR_print_miser_width_STAR__orig_val__13003 \x3d cljs.pprint._STAR_print_miser_width_STAR_;\nvar _STAR_print_pprint_dispatch_STAR__orig_val__13004 \x3d cljs.pprint._STAR_print_pprint_dispatch_STAR_;\nvar _STAR_print_pretty_STAR__orig_val__13005 \x3d cljs.pprint._STAR_print_pretty_STAR_;\nvar _STAR_print_radix_STAR__orig_val__13006 \x3d cljs.pprint._STAR_print_radix_STAR_;\nvar _STAR_print_readably_STAR__orig_val__13007 \x3d cljs.core._STAR_print_readably_STAR_;\nvar _STAR_print_right_margin_STAR__orig_val__13008 \x3d cljs.pprint._STAR_print_right_margin_STAR_;\nvar _STAR_print_suppress_namespaces_STAR__orig_val__13009 \x3d cljs.pprint._STAR_print_suppress_namespaces_STAR_;\nvar _STAR_print_base_STAR__temp_val__13010 \x3d new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_base_STAR_);\nvar _STAR_print_circle_STAR__temp_val__13011 \x3d new cljs.core.Keyword(null,\x22circle\x22,\x22circle\x22,1903212362).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_circle_STAR_);\nvar _STAR_print_length_STAR__temp_val__13012 \x3d new cljs.core.Keyword(null,\x22length\x22,\x22length\x22,588987862).cljs$core$IFn$_invoke$arity$2(options,cljs.core._STAR_print_length_STAR_);\nvar _STAR_print_level_STAR__temp_val__13013 \x3d new cljs.core.Keyword(null,\x22level\x22,\x22level\x22,1290497552).cljs$core$IFn$_invoke$arity$2(options,cljs.core._STAR_print_level_STAR_);\nvar _STAR_print_lines_STAR__temp_val__13014 \x3d new cljs.core.Keyword(null,\x22lines\x22,\x22lines\x22,-700165781).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_lines_STAR_);\nvar _STAR_print_miser_width_STAR__temp_val__13015 \x3d new cljs.core.Keyword(null,\x22miser-width\x22,\x22miser-width\x22,-1310049437).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_miser_width_STAR_);\nvar _STAR_print_pprint_dispatch_STAR__temp_val__13016 \x3d new cljs.core.Keyword(null,\x22dispatch\x22,\x22dispatch\x22,1319337009).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_pprint_dispatch_STAR_);\nvar _STAR_print_pretty_STAR__temp_val__13017 \x3d new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_pretty_STAR_);\nvar _STAR_print_radix_STAR__temp_val__13018 \x3d new cljs.core.Keyword(null,\x22radix\x22,\x22radix\x22,857016463).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_radix_STAR_);\nvar _STAR_print_readably_STAR__temp_val__13019 \x3d new cljs.core.Keyword(null,\x22readably\x22,\x22readably\x22,1129599760).cljs$core$IFn$_invoke$arity$2(options,cljs.core._STAR_print_readably_STAR_);\nvar _STAR_print_right_margin_STAR__temp_val__13020 \x3d new cljs.core.Keyword(null,\x22right-margin\x22,\x22right-margin\x22,-810413306).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_right_margin_STAR_);\nvar _STAR_print_suppress_namespaces_STAR__temp_val__13021 \x3d new cljs.core.Keyword(null,\x22suppress-namespaces\x22,\x22suppress-namespaces\x22,2130686956).cljs$core$IFn$_invoke$arity$2(options,cljs.pprint._STAR_print_suppress_namespaces_STAR_);\n(cljs.pprint._STAR_print_base_STAR_ \x3d _STAR_print_base_STAR__temp_val__13010);\n\n(cljs.pprint._STAR_print_circle_STAR_ \x3d _STAR_print_circle_STAR__temp_val__13011);\n\n(cljs.core._STAR_print_length_STAR_ \x3d _STAR_print_length_STAR__temp_val__13012);\n\n(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__temp_val__13013);\n\n(cljs.pprint._STAR_print_lines_STAR_ \x3d _STAR_print_lines_STAR__temp_val__13014);\n\n(cljs.pprint._STAR_print_miser_width_STAR_ \x3d _STAR_print_miser_width_STAR__temp_val__13015);\n\n(cljs.pprint._STAR_print_pprint_dispatch_STAR_ \x3d _STAR_print_pprint_dispatch_STAR__temp_val__13016);\n\n(cljs.pprint._STAR_print_pretty_STAR_ \x3d _STAR_print_pretty_STAR__temp_val__13017);\n\n(cljs.pprint._STAR_print_radix_STAR_ \x3d _STAR_print_radix_STAR__temp_val__13018);\n\n(cljs.core._STAR_print_readably_STAR_ \x3d _STAR_print_readably_STAR__temp_val__13019);\n\n(cljs.pprint._STAR_print_right_margin_STAR_ \x3d _STAR_print_right_margin_STAR__temp_val__13020);\n\n(cljs.pprint._STAR_print_suppress_namespaces_STAR_ \x3d _STAR_print_suppress_namespaces_STAR__temp_val__13021);\n\ntry{try{var sb \x3d (new goog.string.StringBuffer());\nvar optval \x3d ((cljs.core.contains_QMARK_(options,new cljs.core.Keyword(null,\x22stream\x22,\x22stream\x22,1534941648)))?new cljs.core.Keyword(null,\x22stream\x22,\x22stream\x22,1534941648).cljs$core$IFn$_invoke$arity$1(options):true);\nvar base_writer \x3d ((((optval \x3d\x3d\x3d true) || ((optval \x3d\x3d null))))?(new cljs.core.StringBufferWriter(sb)):optval);\nif(cljs.core.truth_(cljs.pprint._STAR_print_pretty_STAR_)){\nvar base_writer__11769__auto___14505 \x3d base_writer;\nvar new_writer__11770__auto___14506 \x3d cljs.core.not(cljs.pprint.pretty_writer_QMARK_(base_writer__11769__auto___14505));\nvar _STAR_out_STAR__orig_val__13022_14508 \x3d cljs.core._STAR_out_STAR_;\nvar _STAR_out_STAR__temp_val__13023_14509 \x3d ((new_writer__11770__auto___14506)?cljs.pprint.make_pretty_writer(base_writer__11769__auto___14505,cljs.pprint._STAR_print_right_margin_STAR_,cljs.pprint._STAR_print_miser_width_STAR_):base_writer__11769__auto___14505);\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__13023_14509);\n\ntry{cljs.pprint.write_out(object);\n\ncljs.pprint._ppflush(cljs.core._STAR_out_STAR_);\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__13022_14508);\n}} else {\nvar _STAR_out_STAR__orig_val__13024_14513 \x3d cljs.core._STAR_out_STAR_;\nvar _STAR_out_STAR__temp_val__13025_14514 \x3d base_writer;\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__13025_14514);\n\ntry{cljs.pprint.pr.call(null,object);\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__13024_14513);\n}}\n\nif(optval \x3d\x3d\x3d true){\ncljs.core.string_print(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));\n} else {\n}\n\nif((optval \x3d\x3d null)){\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\n} else {\nreturn null;\n}\n}finally {}}finally {(cljs.pprint._STAR_print_suppress_namespaces_STAR_ \x3d _STAR_print_suppress_namespaces_STAR__orig_val__13009);\n\n(cljs.pprint._STAR_print_right_margin_STAR_ \x3d _STAR_print_right_margin_STAR__orig_val__13008);\n\n(cljs.core._STAR_print_readably_STAR_ \x3d _STAR_print_readably_STAR__orig_val__13007);\n\n(cljs.pprint._STAR_print_radix_STAR_ \x3d _STAR_print_radix_STAR__orig_val__13006);\n\n(cljs.pprint._STAR_print_pretty_STAR_ \x3d _STAR_print_pretty_STAR__orig_val__13005);\n\n(cljs.pprint._STAR_print_pprint_dispatch_STAR_ \x3d _STAR_print_pprint_dispatch_STAR__orig_val__13004);\n\n(cljs.pprint._STAR_print_miser_width_STAR_ \x3d _STAR_print_miser_width_STAR__orig_val__13003);\n\n(cljs.pprint._STAR_print_lines_STAR_ \x3d _STAR_print_lines_STAR__orig_val__13002);\n\n(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__orig_val__13001);\n\n(cljs.core._STAR_print_length_STAR_ \x3d _STAR_print_length_STAR__orig_val__13000);\n\n(cljs.pprint._STAR_print_circle_STAR_ \x3d _STAR_print_circle_STAR__orig_val__12999);\n\n(cljs.pprint._STAR_print_base_STAR_ \x3d _STAR_print_base_STAR__orig_val__12998);\n}}));\n\n(cljs.pprint.write.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(cljs.pprint.write.cljs$lang$applyTo \x3d (function (seq12994){\nvar G__12995 \x3d cljs.core.first(seq12994);\nvar seq12994__$1 \x3d cljs.core.next(seq12994);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12995,seq12994__$1);\n}));\n\ncljs.pprint.pprint \x3d (function cljs$pprint$pprint(var_args){\nvar G__13033 \x3d arguments.length;\nswitch (G__13033) {\ncase 1:\nreturn cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$1 \x3d (function (object){\nvar sb \x3d (new goog.string.StringBuffer());\nvar _STAR_out_STAR__orig_val__13036 \x3d cljs.core._STAR_out_STAR_;\nvar _STAR_out_STAR__temp_val__13037 \x3d (new cljs.core.StringBufferWriter(sb));\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__13037);\n\ntry{cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2(object,cljs.core._STAR_out_STAR_);\n\nreturn cljs.core.string_print(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__13036);\n}}));\n\n(cljs.pprint.pprint.cljs$core$IFn$_invoke$arity$2 \x3d (function (object,writer){\nvar base_writer__11769__auto__ \x3d writer;\nvar new_writer__11770__auto__ \x3d cljs.core.not(cljs.pprint.pretty_writer_QMARK_(base_writer__11769__auto__));\nvar _STAR_out_STAR__orig_val__13038 \x3d cljs.core._STAR_out_STAR_;\nvar _STAR_out_STAR__temp_val__13039 \x3d ((new_writer__11770__auto__)?cljs.pprint.make_pretty_writer(base_writer__11769__auto__,cljs.pprint._STAR_print_right_margin_STAR_,cljs.pprint._STAR_print_miser_width_STAR_):base_writer__11769__auto__);\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__13039);\n\ntry{var _STAR_print_pretty_STAR__orig_val__13040_14531 \x3d cljs.pprint._STAR_print_pretty_STAR_;\nvar _STAR_print_pretty_STAR__temp_val__13041_14532 \x3d true;\n(cljs.pprint._STAR_print_pretty_STAR_ \x3d _STAR_print_pretty_STAR__temp_val__13041_14532);\n\ntry{cljs.pprint.write_out(object);\n}finally {(cljs.pprint._STAR_print_pretty_STAR_ \x3d _STAR_print_pretty_STAR__orig_val__13040_14531);\n}\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),cljs.pprint.get_column(cljs.core._STAR_out_STAR_))))){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22\\n\x22);\n} else {\n}\n\nreturn cljs.pprint._ppflush(cljs.core._STAR_out_STAR_);\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__13038);\n}}));\n\n(cljs.pprint.pprint.cljs$lang$maxFixedArity \x3d 2);\n\ncljs.pprint.set_pprint_dispatch \x3d (function cljs$pprint$set_pprint_dispatch(function$){\n(cljs.pprint._STAR_print_pprint_dispatch_STAR_ \x3d function$);\n\nreturn null;\n});\ncljs.pprint.check_enumerated_arg \x3d (function cljs$pprint$check_enumerated_arg(arg,choices){\nif(cljs.core.not((choices.cljs$core$IFn$_invoke$arity$1 ? choices.cljs$core$IFn$_invoke$arity$1(arg) : choices.call(null,arg)))){\nthrow (new Error([\x22Bad argument: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arg),\x22. It must be one of \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(choices)].join(\x27\x27)));\n} else {\nreturn null;\n}\n});\ncljs.pprint.level_exceeded \x3d (function cljs$pprint$level_exceeded(){\nvar and__5043__auto__ \x3d cljs.core._STAR_print_level_STAR_;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (cljs.pprint._STAR_current_level_STAR_ \x3e\x3d cljs.core._STAR_print_level_STAR_);\n} else {\nreturn and__5043__auto__;\n}\n});\n/**\n * Print a conditional newline to a pretty printing stream. kind specifies if the\n *   newline is :linear, :miser, :fill, or :mandatory.\n * \n *   This function is intended for use when writing custom dispatch functions.\n * \n *   Output is sent to *out* which must be a pretty printing writer.\n */\ncljs.pprint.pprint_newline \x3d (function cljs$pprint$pprint_newline(kind){\ncljs.pprint.check_enumerated_arg(kind,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22mandatory\x22,\x22mandatory\x22,542802336),null,new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186),null,new cljs.core.Keyword(null,\x22fill\x22,\x22fill\x22,883462889),null,new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697),null], null), null));\n\nreturn cljs.pprint.nl(cljs.core._STAR_out_STAR_,kind);\n});\n/**\n * Create an indent at this point in the pretty printing stream. This defines how\n * following lines are indented. relative-to can be either :block or :current depending\n * whether the indent should be computed relative to the start of the logical block or\n * the current column position. n is an offset.\n * \n * This function is intended for use when writing custom dispatch functions.\n * \n * Output is sent to *out* which must be a pretty printing writer.\n */\ncljs.pprint.pprint_indent \x3d (function cljs$pprint$pprint_indent(relative_to,n){\ncljs.pprint.check_enumerated_arg(relative_to,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),null,new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603),null], null), null));\n\nreturn cljs.pprint.indent(cljs.core._STAR_out_STAR_,relative_to,n);\n});\n/**\n * Tab at this point in the pretty printing stream. kind specifies whether the tab\n * is :line, :section, :line-relative, or :section-relative.\n * \n * Colnum and colinc specify the target column and the increment to move the target\n * forward if the output is already past the original target.\n * \n * This function is intended for use when writing custom dispatch functions.\n * \n * Output is sent to *out* which must be a pretty printing writer.\n * \n * THIS FUNCTION IS NOT YET IMPLEMENTED.\n */\ncljs.pprint.pprint_tab \x3d (function cljs$pprint$pprint_tab(kind,colnum,colinc){\ncljs.pprint.check_enumerated_arg(kind,new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22section\x22,\x22section\x22,-300141526),null,new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),null,new cljs.core.Keyword(null,\x22line-relative\x22,\x22line-relative\x22,1149548219),null,new cljs.core.Keyword(null,\x22section-relative\x22,\x22section-relative\x22,-658298724),null], null), null));\n\nthrow (new Error(\x22pprint-tab is not yet implemented\x22));\n});\n/**\n * An implementation of a Common Lisp compatible format function. cl-format formats its\n * arguments to an output stream or string based on the format control string given. It\n * supports sophisticated formatting of structured data.\n * \n * Writer satisfies IWriter, true to output via *print-fn* or nil to output\n * to a string, format-in is the format control string and the remaining arguments\n * are the data to be formatted.\n * \n * The format control string is a string to be output with embedded \x27format directives\x27\n * describing how to format the various arguments passed in.\n * \n * If writer is nil, cl-format returns the formatted result string. Otherwise, cl-format\n * returns nil.\n * \n * For example:\n *  (let [results [46 38 22]]\n *      (cl-format true \x22There ~[are~;is~:;are~]~:* ~d result~:p: ~{~d~^, ~}~%\x22\n *                 (count results) results))\n * \n * Prints via *print-fn*:\n *  There are 3 results: 46, 38, 22\n * \n * Detailed documentation on format control strings is available in the \x22Common Lisp the\n * Language, 2nd edition\x22, Chapter 22 (available online at:\n * http://www.cs.cmu.edu/afs/cs.cmu.edu/project/ai-repository/ai/html/cltl/clm/node200.html#SECTION002633000000000000000)\n * and in the Common Lisp HyperSpec at\n * http://www.lispworks.com/documentation/HyperSpec/Body/22_c.htm\n */\ncljs.pprint.cl_format \x3d (function cljs$pprint$cl_format(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14549 \x3d arguments.length;\nvar i__5770__auto___14550 \x3d (0);\nwhile(true){\nif((i__5770__auto___14550 \x3c len__5769__auto___14549)){\nargs__5775__auto__.push((arguments[i__5770__auto___14550]));\n\nvar G__14551 \x3d (i__5770__auto___14550 + (1));\ni__5770__auto___14550 \x3d G__14551;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic \x3d (function (writer,format_in,args){\nvar compiled_format \x3d ((typeof format_in \x3d\x3d\x3d \x27string\x27)?cljs.pprint.compile_format(format_in):format_in);\nvar navigator__$1 \x3d cljs.pprint.init_navigator(args);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3(writer,compiled_format,navigator__$1);\n}));\n\n(cljs.pprint.cl_format.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(cljs.pprint.cl_format.cljs$lang$applyTo \x3d (function (seq13043){\nvar G__13044 \x3d cljs.core.first(seq13043);\nvar seq13043__$1 \x3d cljs.core.next(seq13043);\nvar G__13045 \x3d cljs.core.first(seq13043__$1);\nvar seq13043__$2 \x3d cljs.core.next(seq13043__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__13044,G__13045,seq13043__$2);\n}));\n\ncljs.pprint._STAR_format_str_STAR_ \x3d null;\ncljs.pprint.format_error \x3d (function cljs$pprint$format_error(message,offset){\nvar full_message \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(message),\x22\\n\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_format_str_STAR_),\x22\\n\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(offset,\x22 \x22))),\x22^\x22,\x22\\n\x22].join(\x27\x27);\nthrow Error(full_message);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.pprint.arg_navigator \x3d (function (seq,rest,pos,__meta,__extmap,__hash){\nthis.seq \x3d seq;\nthis.rest \x3d rest;\nthis.pos \x3d pos;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k13048,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__13054 \x3d k13048;\nvar G__13054__$1 \x3d (((G__13054 instanceof cljs.core.Keyword))?G__13054.fqn:null);\nswitch (G__13054__$1) {\ncase \x22seq\x22:\nreturn self__.seq;\n\nbreak;\ncase \x22rest\x22:\nreturn self__.rest;\n\nbreak;\ncase \x22pos\x22:\nreturn self__.pos;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k13048,else__5346__auto__);\n\n}\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__13055){\nvar vec__13056 \x3d p__13055;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13056,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13056,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#cljs.pprint.arg-navigator{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),self__.seq],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),self__.rest],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),self__.pos],null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__13047){\nvar self__ \x3d this;\nvar G__13047__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__13047__$1,3,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new cljs.pprint.arg_navigator(self__.seq,self__.rest,self__.pos,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (3 + cljs.core.count(self__.__extmap));\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (-402038447 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this13049,other13050){\nvar self__ \x3d this;\nvar this13049__$1 \x3d this;\nreturn (((!((other13050 \x3d\x3d null)))) \x26\x26 ((((this13049__$1.constructor \x3d\x3d\x3d other13050.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this13049__$1.seq,other13050.seq)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this13049__$1.rest,other13050.rest)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this13049__$1.pos,other13050.pos)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this13049__$1.__extmap,other13050.__extmap)))))))))));\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),null,new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),null,new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new cljs.pprint.arg_navigator(self__.seq,self__.rest,self__.pos,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k13048){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__13063 \x3d k13048;\nvar G__13063__$1 \x3d (((G__13063 instanceof cljs.core.Keyword))?G__13063.fqn:null);\nswitch (G__13063__$1) {\ncase \x22seq\x22:\ncase \x22rest\x22:\ncase \x22pos\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k13048);\n\n}\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__13047){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__13064 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__13065 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__13064.cljs$core$IFn$_invoke$arity$2 ? pred__13064.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),expr__13065) : pred__13064.call(null,new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),expr__13065)))){\nreturn (new cljs.pprint.arg_navigator(G__13047,self__.rest,self__.pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__13064.cljs$core$IFn$_invoke$arity$2 ? pred__13064.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),expr__13065) : pred__13064.call(null,new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),expr__13065)))){\nreturn (new cljs.pprint.arg_navigator(self__.seq,G__13047,self__.pos,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__13064.cljs$core$IFn$_invoke$arity$2 ? pred__13064.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),expr__13065) : pred__13064.call(null,new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),expr__13065)))){\nreturn (new cljs.pprint.arg_navigator(self__.seq,self__.rest,G__13047,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new cljs.pprint.arg_navigator(self__.seq,self__.rest,self__.pos,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__13047),null));\n}\n}\n}\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),self__.seq,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),self__.rest,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220),self__.pos,null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__13047){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new cljs.pprint.arg_navigator(self__.seq,self__.rest,self__.pos,G__13047,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.arg_navigator.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(cljs.pprint.arg_navigator.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22seq\x22,\x22seq\x22,-177272256,null),new cljs.core.Symbol(null,\x22rest\x22,\x22rest\x22,398835108,null),new cljs.core.Symbol(null,\x22pos\x22,\x22pos\x22,775924307,null)], null);\n}));\n\n(cljs.pprint.arg_navigator.cljs$lang$type \x3d true);\n\n(cljs.pprint.arg_navigator.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22cljs.pprint/arg-navigator\x22,null,(1),null));\n}));\n\n(cljs.pprint.arg_navigator.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22cljs.pprint/arg-navigator\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/arg-navigator.\n */\ncljs.pprint.__GT_arg_navigator \x3d (function cljs$pprint$__GT_arg_navigator(seq,rest,pos){\nreturn (new cljs.pprint.arg_navigator(seq,rest,pos,null,null,null));\n});\n\n/**\n * Factory function for cljs.pprint/arg-navigator, taking a map of keywords to field values.\n */\ncljs.pprint.map__GT_arg_navigator \x3d (function cljs$pprint$map__GT_arg_navigator(G__13051){\nvar extmap__5385__auto__ \x3d (function (){var G__13073 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__13051,new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419),new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220)], 0));\nif(cljs.core.record_QMARK_(G__13051)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__13073);\n} else {\nreturn G__13073;\n}\n})();\nreturn (new cljs.pprint.arg_navigator(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(G__13051),new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(G__13051),new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(G__13051),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\n/**\n * Create a new arg-navigator from the sequence with the position set to 0\n */\ncljs.pprint.init_navigator \x3d (function cljs$pprint$init_navigator(s){\nvar s__$1 \x3d cljs.core.seq(s);\nreturn (new cljs.pprint.arg_navigator(s__$1,s__$1,(0),null,null,null));\n});\ncljs.pprint.next_arg \x3d (function cljs$pprint$next_arg(navigator){\nvar rst \x3d new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator);\nif(cljs.core.truth_(rst)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(rst),(new cljs.pprint.arg_navigator(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(navigator),cljs.core.next(rst),(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator) + (1)),null,null,null))], null);\n} else {\nthrow Error(\x22Not enough arguments for format definition\x22);\n}\n});\ncljs.pprint.next_arg_or_nil \x3d (function cljs$pprint$next_arg_or_nil(navigator){\nvar rst \x3d new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator);\nif(cljs.core.truth_(rst)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(rst),(new cljs.pprint.arg_navigator(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(navigator),cljs.core.next(rst),(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator) + (1)),null,null,null))], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,navigator], null);\n}\n});\ncljs.pprint.get_format_arg \x3d (function cljs$pprint$get_format_arg(navigator){\nvar vec__13092 \x3d cljs.pprint.next_arg(navigator);\nvar raw_format \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13092,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13092,(1),null);\nvar compiled_format \x3d ((typeof raw_format \x3d\x3d\x3d \x27string\x27)?cljs.pprint.compile_format(raw_format):raw_format);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [compiled_format,navigator__$1], null);\n});\ncljs.pprint.absolute_reposition \x3d (function cljs$pprint$absolute_reposition(navigator,position){\nif((position \x3e\x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator))){\nvar G__13100 \x3d navigator;\nvar G__13101 \x3d (new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator) - position);\nreturn (cljs.pprint.relative_reposition.cljs$core$IFn$_invoke$arity$2 ? cljs.pprint.relative_reposition.cljs$core$IFn$_invoke$arity$2(G__13100,G__13101) : cljs.pprint.relative_reposition.call(null,G__13100,G__13101));\n} else {\nreturn (new cljs.pprint.arg_navigator(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(navigator),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(position,new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(navigator)),position,null,null,null));\n}\n});\ncljs.pprint.relative_reposition \x3d (function cljs$pprint$relative_reposition(navigator,position){\nvar newpos \x3d (new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator) + position);\nif((position \x3c (0))){\nreturn cljs.pprint.absolute_reposition(navigator,newpos);\n} else {\nreturn (new cljs.pprint.arg_navigator(new cljs.core.Keyword(null,\x22seq\x22,\x22seq\x22,-1817803783).cljs$core$IFn$_invoke$arity$1(navigator),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(position,new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator)),newpos,null,null,null));\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IRecord}\n * @implements {cljs.core.IKVReduce}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.ICollection}\n * @implements {cljs.core.ICounted}\n * @implements {cljs.core.ISeqable}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.ICloneable}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IIterable}\n * @implements {cljs.core.IWithMeta}\n * @implements {cljs.core.IAssociative}\n * @implements {cljs.core.IMap}\n * @implements {cljs.core.ILookup}\n*/\ncljs.pprint.compiled_directive \x3d (function (func,def,params,offset,__meta,__extmap,__hash){\nthis.func \x3d func;\nthis.def \x3d def;\nthis.params \x3d params;\nthis.offset \x3d offset;\nthis.__meta \x3d __meta;\nthis.__extmap \x3d __extmap;\nthis.__hash \x3d __hash;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2230716170;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 139264;\n});\n(cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$2 \x3d (function (this__5343__auto__,k__5344__auto__){\nvar self__ \x3d this;\nvar this__5343__auto____$1 \x3d this;\nreturn this__5343__auto____$1.cljs$core$ILookup$_lookup$arity$3(null,k__5344__auto__,null);\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$ILookup$_lookup$arity$3 \x3d (function (this__5345__auto__,k13109,else__5346__auto__){\nvar self__ \x3d this;\nvar this__5345__auto____$1 \x3d this;\nvar G__13114 \x3d k13109;\nvar G__13114__$1 \x3d (((G__13114 instanceof cljs.core.Keyword))?G__13114.fqn:null);\nswitch (G__13114__$1) {\ncase \x22func\x22:\nreturn self__.func;\n\nbreak;\ncase \x22def\x22:\nreturn self__.def;\n\nbreak;\ncase \x22params\x22:\nreturn self__.params;\n\nbreak;\ncase \x22offset\x22:\nreturn self__.offset;\n\nbreak;\ndefault:\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k13109,else__5346__auto__);\n\n}\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 \x3d (function (this__5363__auto__,f__5364__auto__,init__5365__auto__){\nvar self__ \x3d this;\nvar this__5363__auto____$1 \x3d this;\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret__5366__auto__,p__13118){\nvar vec__13119 \x3d p__13118;\nvar k__5367__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13119,(0),null);\nvar v__5368__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13119,(1),null);\nreturn (f__5364__auto__.cljs$core$IFn$_invoke$arity$3 ? f__5364__auto__.cljs$core$IFn$_invoke$arity$3(ret__5366__auto__,k__5367__auto__,v__5368__auto__) : f__5364__auto__.call(null,ret__5366__auto__,k__5367__auto__,v__5368__auto__));\n}),init__5365__auto__,this__5363__auto____$1);\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (this__5358__auto__,writer__5359__auto__,opts__5360__auto__){\nvar self__ \x3d this;\nvar this__5358__auto____$1 \x3d this;\nvar pr_pair__5361__auto__ \x3d (function (keyval__5362__auto__){\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,cljs.core.pr_writer,\x22\x22,\x22 \x22,\x22\x22,opts__5360__auto__,keyval__5362__auto__);\n});\nreturn cljs.core.pr_sequential_writer(writer__5359__auto__,pr_pair__5361__auto__,\x22#cljs.pprint.compiled-directive{\x22,\x22, \x22,\x22}\x22,opts__5360__auto__,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),self__.func],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),self__.def],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),self__.params],null)),(new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),self__.offset],null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$IIterable$_iterator$arity$1 \x3d (function (G__13108){\nvar self__ \x3d this;\nvar G__13108__$1 \x3d this;\nreturn (new cljs.core.RecordIter((0),G__13108__$1,4,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311)], null),(cljs.core.truth_(self__.__extmap)?cljs.core._iterator(self__.__extmap):cljs.core.nil_iter())));\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (this__5341__auto__){\nvar self__ \x3d this;\nvar this__5341__auto____$1 \x3d this;\nreturn self__.__meta;\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$ICloneable$_clone$arity$1 \x3d (function (this__5338__auto__){\nvar self__ \x3d this;\nvar this__5338__auto____$1 \x3d this;\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,self__.params,self__.offset,self__.__meta,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$ICounted$_count$arity$1 \x3d (function (this__5347__auto__){\nvar self__ \x3d this;\nvar this__5347__auto____$1 \x3d this;\nreturn (4 + cljs.core.count(self__.__extmap));\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this__5339__auto__){\nvar self__ \x3d this;\nvar this__5339__auto____$1 \x3d this;\nvar h__5154__auto__ \x3d self__.__hash;\nif((!((h__5154__auto__ \x3d\x3d null)))){\nreturn h__5154__auto__;\n} else {\nvar h__5154__auto____$1 \x3d (function (coll__5340__auto__){\nreturn (-829256337 ^ cljs.core.hash_unordered_coll(coll__5340__auto__));\n})(this__5339__auto____$1);\n(self__.__hash \x3d h__5154__auto____$1);\n\nreturn h__5154__auto____$1;\n}\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this13110,other13111){\nvar self__ \x3d this;\nvar this13110__$1 \x3d this;\nreturn (((!((other13111 \x3d\x3d null)))) \x26\x26 ((((this13110__$1.constructor \x3d\x3d\x3d other13111.constructor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this13110__$1.func,other13111.func)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this13110__$1.def,other13111.def)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this13110__$1.params,other13111.params)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this13110__$1.offset,other13111.offset)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this13110__$1.__extmap,other13111.__extmap)))))))))))));\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$IMap$_dissoc$arity$2 \x3d (function (this__5353__auto__,k__5354__auto__){\nvar self__ \x3d this;\nvar this__5353__auto____$1 \x3d this;\nif(cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),null,new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),null,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),null,new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),null], null), null),k__5354__auto__)){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(cljs.core._with_meta(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,this__5353__auto____$1),self__.__meta),k__5354__auto__);\n} else {\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,self__.params,self__.offset,self__.__meta,cljs.core.not_empty(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.__extmap,k__5354__auto__)),null));\n}\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 \x3d (function (this__5350__auto__,k13109){\nvar self__ \x3d this;\nvar this__5350__auto____$1 \x3d this;\nvar G__13140 \x3d k13109;\nvar G__13140__$1 \x3d (((G__13140 instanceof cljs.core.Keyword))?G__13140.fqn:null);\nswitch (G__13140__$1) {\ncase \x22func\x22:\ncase \x22def\x22:\ncase \x22params\x22:\ncase \x22offset\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn cljs.core.contains_QMARK_(self__.__extmap,k13109);\n\n}\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$IAssociative$_assoc$arity$3 \x3d (function (this__5351__auto__,k__5352__auto__,G__13108){\nvar self__ \x3d this;\nvar this__5351__auto____$1 \x3d this;\nvar pred__13142 \x3d cljs.core.keyword_identical_QMARK_;\nvar expr__13143 \x3d k__5352__auto__;\nif(cljs.core.truth_((pred__13142.cljs$core$IFn$_invoke$arity$2 ? pred__13142.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),expr__13143) : pred__13142.call(null,new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),expr__13143)))){\nreturn (new cljs.pprint.compiled_directive(G__13108,self__.def,self__.params,self__.offset,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__13142.cljs$core$IFn$_invoke$arity$2 ? pred__13142.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),expr__13143) : pred__13142.call(null,new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),expr__13143)))){\nreturn (new cljs.pprint.compiled_directive(self__.func,G__13108,self__.params,self__.offset,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__13142.cljs$core$IFn$_invoke$arity$2 ? pred__13142.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),expr__13143) : pred__13142.call(null,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),expr__13143)))){\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,G__13108,self__.offset,self__.__meta,self__.__extmap,null));\n} else {\nif(cljs.core.truth_((pred__13142.cljs$core$IFn$_invoke$arity$2 ? pred__13142.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),expr__13143) : pred__13142.call(null,new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),expr__13143)))){\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,self__.params,G__13108,self__.__meta,self__.__extmap,null));\n} else {\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,self__.params,self__.offset,self__.__meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.__extmap,k__5352__auto__,G__13108),null));\n}\n}\n}\n}\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$ISeqable$_seq$arity$1 \x3d (function (this__5356__auto__){\nvar self__ \x3d this;\nvar this__5356__auto____$1 \x3d this;\nreturn cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),self__.func,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),self__.def,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),self__.params,null)),(new cljs.core.MapEntry(new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311),self__.offset,null))], null),self__.__extmap));\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (this__5342__auto__,G__13108){\nvar self__ \x3d this;\nvar this__5342__auto____$1 \x3d this;\nreturn (new cljs.pprint.compiled_directive(self__.func,self__.def,self__.params,self__.offset,G__13108,self__.__extmap,self__.__hash));\n}));\n\n(cljs.pprint.compiled_directive.prototype.cljs$core$ICollection$_conj$arity$2 \x3d (function (this__5348__auto__,entry__5349__auto__){\nvar self__ \x3d this;\nvar this__5348__auto____$1 \x3d this;\nif(cljs.core.vector_QMARK_(entry__5349__auto__)){\nreturn this__5348__auto____$1.cljs$core$IAssociative$_assoc$arity$3(null,cljs.core._nth(entry__5349__auto__,(0)),cljs.core._nth(entry__5349__auto__,(1)));\n} else {\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,this__5348__auto____$1,entry__5349__auto__);\n}\n}));\n\n(cljs.pprint.compiled_directive.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22func\x22,\x22func\x22,1401825487,null),new cljs.core.Symbol(null,\x22def\x22,\x22def\x22,597100991,null),new cljs.core.Symbol(null,\x22params\x22,\x22params\x22,-1943919534,null),new cljs.core.Symbol(null,\x22offset\x22,\x22offset\x22,1937029838,null)], null);\n}));\n\n(cljs.pprint.compiled_directive.cljs$lang$type \x3d true);\n\n(cljs.pprint.compiled_directive.cljs$lang$ctorPrSeq \x3d (function (this__5389__auto__){\nreturn (new cljs.core.List(null,\x22cljs.pprint/compiled-directive\x22,null,(1),null));\n}));\n\n(cljs.pprint.compiled_directive.cljs$lang$ctorPrWriter \x3d (function (this__5389__auto__,writer__5390__auto__){\nreturn cljs.core._write(writer__5390__auto__,\x22cljs.pprint/compiled-directive\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/compiled-directive.\n */\ncljs.pprint.__GT_compiled_directive \x3d (function cljs$pprint$__GT_compiled_directive(func,def,params,offset){\nreturn (new cljs.pprint.compiled_directive(func,def,params,offset,null,null,null));\n});\n\n/**\n * Factory function for cljs.pprint/compiled-directive, taking a map of keywords to field values.\n */\ncljs.pprint.map__GT_compiled_directive \x3d (function cljs$pprint$map__GT_compiled_directive(G__13112){\nvar extmap__5385__auto__ \x3d (function (){var G__13155 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(G__13112,new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536),new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311)], 0));\nif(cljs.core.record_QMARK_(G__13112)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,G__13155);\n} else {\nreturn G__13155;\n}\n})();\nreturn (new cljs.pprint.compiled_directive(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040).cljs$core$IFn$_invoke$arity$1(G__13112),new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(G__13112),new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(G__13112),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(G__13112),null,cljs.core.not_empty(extmap__5385__auto__),null));\n});\n\ncljs.pprint.realize_parameter \x3d (function cljs$pprint$realize_parameter(p__13156,navigator){\nvar vec__13157 \x3d p__13156;\nvar param \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13157,(0),null);\nvar vec__13160 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13157,(1),null);\nvar raw_val \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13160,(0),null);\nvar offset \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13160,(1),null);\nvar vec__13163 \x3d ((cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),param))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val,navigator], null):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(raw_val,new cljs.core.Keyword(null,\x22parameter-from-args\x22,\x22parameter-from-args\x22,-758446196)))?cljs.pprint.next_arg(navigator):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(raw_val,new cljs.core.Keyword(null,\x22remaining-arg-count\x22,\x22remaining-arg-count\x22,-1216589335)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.count(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator)),navigator], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [raw_val,navigator], null)\n)));\nvar real_param \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13163,(0),null);\nvar new_navigator \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13163,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [real_param,offset], null)], null),new_navigator], null);\n});\ncljs.pprint.realize_parameter_list \x3d (function cljs$pprint$realize_parameter_list(parameter_map,navigator){\nvar vec__13166 \x3d cljs.pprint.map_passing_context(cljs.pprint.realize_parameter,navigator,parameter_map);\nvar pairs \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13166,(0),null);\nvar new_navigator \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13166,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,pairs),new_navigator], null);\n});\ncljs.pprint.special_radix_markers \x3d new cljs.core.PersistentArrayMap(null, 3, [(2),\x22#b\x22,(8),\x22#o\x22,(16),\x22#x\x22], null);\ncljs.pprint.format_simple_number \x3d (function cljs$pprint$format_simple_number(n){\nif(cljs.core.integer_QMARK_(n)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.pprint._STAR_print_base_STAR_,(10))){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),(cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_)?\x22.\x22:null)].join(\x27\x27);\n} else {\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(cljs.pprint._STAR_print_radix_STAR_)?(function (){var or__5045__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.special_radix_markers,cljs.pprint._STAR_print_base_STAR_);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn [\x22#\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_print_base_STAR_),\x22r\x22].join(\x27\x27);\n}\n})():null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.opt_base_str(cljs.pprint._STAR_print_base_STAR_,n))].join(\x27\x27);\n}\n} else {\nreturn null;\n\n}\n});\ncljs.pprint.format_ascii \x3d (function cljs$pprint$format_ascii(print_func,params,arg_navigator,offsets){\nvar vec__13169 \x3d cljs.pprint.next_arg(arg_navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13169,(0),null);\nvar arg_navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13169,(1),null);\nvar base_output \x3d (function (){var or__5045__auto__ \x3d cljs.pprint.format_simple_number(arg);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (print_func.cljs$core$IFn$_invoke$arity$1 ? print_func.cljs$core$IFn$_invoke$arity$1(arg) : print_func.call(null,arg));\n}\n})();\nvar base_width \x3d base_output.length;\nvar min_width \x3d (base_width + new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901).cljs$core$IFn$_invoke$arity$1(params));\nvar width \x3d (((min_width \x3e\x3d new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params)))?min_width:(min_width + ((cljs.core.quot(((new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params) - min_width) - (1)),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385).cljs$core$IFn$_invoke$arity$1(params)) + (1)) * new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385).cljs$core$IFn$_invoke$arity$1(params))));\nvar chars \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((width - base_width),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars),cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output)].join(\x27\x27)], 0));\n} else {\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(base_output),cljs.core.str.cljs$core$IFn$_invoke$arity$1(chars)].join(\x27\x27)], 0));\n}\n\nreturn arg_navigator__$1;\n});\n/**\n * returns true if a number is actually an integer (that is, has no fractional part)\n */\ncljs.pprint.integral_QMARK_ \x3d (function cljs$pprint$integral_QMARK_(x){\nif(cljs.core.integer_QMARK_(x)){\nreturn true;\n} else {\nif(cljs.pprint.float_QMARK_(x)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,Math.floor(x));\n} else {\nreturn false;\n\n}\n}\n});\n/**\n * Return the list of remainders (essentially the \x27digits\x27) of val in the given base\n */\ncljs.pprint.remainders \x3d (function cljs$pprint$remainders(base,val){\nreturn cljs.core.reverse(cljs.core.first(cljs.pprint.consume((function (p1__13172_SHARP_){\nif((p1__13172_SHARP_ \x3e (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.rem(p1__13172_SHARP_,base),cljs.core.quot(p1__13172_SHARP_,base)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,null], null);\n}\n}),val)));\n});\n/**\n * Return val as a string in the given base\n */\ncljs.pprint.base_str \x3d (function cljs$pprint$base_str(base,val){\nif((val \x3d\x3d\x3d (0))){\nreturn \x220\x22;\n} else {\nvar xlated_val \x3d val\n;\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__13174_SHARP_){\nif((p1__13174_SHARP_ \x3c (10))){\nreturn cljs.core.char$((cljs.pprint.char_code(\x220\x22) + p1__13174_SHARP_));\n} else {\nreturn cljs.core.char$((cljs.pprint.char_code(\x22a\x22) + (p1__13174_SHARP_ - (10))));\n}\n}),cljs.pprint.remainders(base,val)));\n}\n});\ncljs.pprint.javascript_base_formats \x3d new cljs.core.PersistentArrayMap(null, 3, [(8),\x22%o\x22,(10),\x22%d\x22,(16),\x22%x\x22], null);\n/**\n * Return val as a string in the given base. No cljs format, so no improved performance.\n */\ncljs.pprint.opt_base_str \x3d (function cljs$pprint$opt_base_str(base,val){\nreturn cljs.pprint.base_str(base,val);\n});\ncljs.pprint.group_by_STAR_ \x3d (function cljs$pprint$group_by_STAR_(unit,lis){\nreturn cljs.core.reverse(cljs.core.first(cljs.pprint.consume((function (x){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.seq(cljs.core.reverse(cljs.core.take.cljs$core$IFn$_invoke$arity$2(unit,x))),cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(unit,x))], null);\n}),cljs.core.reverse(lis))));\n});\ncljs.pprint.format_integer \x3d (function cljs$pprint$format_integer(base,params,arg_navigator,offsets){\nvar vec__13176 \x3d cljs.pprint.next_arg(arg_navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13176,(0),null);\nvar arg_navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13176,(1),null);\nif(cljs.pprint.integral_QMARK_(arg)){\nvar neg_14630 \x3d (arg \x3c (0));\nvar pos_arg_14631 \x3d ((neg_14630)?(- arg):arg);\nvar raw_str_14632 \x3d cljs.pprint.opt_base_str(base,pos_arg_14631);\nvar group_str_14633 \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?(function (){var groups \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__13175_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,p1__13175_SHARP_);\n}),cljs.pprint.group_by_STAR_(new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083).cljs$core$IFn$_invoke$arity$1(params),raw_str_14632));\nvar commas \x3d cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.count(groups),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327).cljs$core$IFn$_invoke$arity$1(params));\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.next(cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(commas,groups)));\n})():raw_str_14632);\nvar signed_str_14634 \x3d ((neg_14630)?[\x22-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_14633)].join(\x27\x27):(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?[\x22+\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(group_str_14633)].join(\x27\x27):group_str_14633\n));\nvar padded_str_14635 \x3d (((signed_str_14634.length \x3c new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params)))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params) - signed_str_14634.length),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(signed_str_14634)].join(\x27\x27):signed_str_14634);\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([padded_str_14635], 0));\n} else {\ncljs.pprint.format_ascii(cljs.core.print_str,new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385),(1),new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params),new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),true], null),cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)),null);\n}\n\nreturn arg_navigator__$1;\n});\ncljs.pprint.english_cardinal_units \x3d new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22zero\x22,\x22one\x22,\x22two\x22,\x22three\x22,\x22four\x22,\x22five\x22,\x22six\x22,\x22seven\x22,\x22eight\x22,\x22nine\x22,\x22ten\x22,\x22eleven\x22,\x22twelve\x22,\x22thirteen\x22,\x22fourteen\x22,\x22fifteen\x22,\x22sixteen\x22,\x22seventeen\x22,\x22eighteen\x22,\x22nineteen\x22], null);\ncljs.pprint.english_ordinal_units \x3d new cljs.core.PersistentVector(null, 20, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22zeroth\x22,\x22first\x22,\x22second\x22,\x22third\x22,\x22fourth\x22,\x22fifth\x22,\x22sixth\x22,\x22seventh\x22,\x22eighth\x22,\x22ninth\x22,\x22tenth\x22,\x22eleventh\x22,\x22twelfth\x22,\x22thirteenth\x22,\x22fourteenth\x22,\x22fifteenth\x22,\x22sixteenth\x22,\x22seventeenth\x22,\x22eighteenth\x22,\x22nineteenth\x22], null);\ncljs.pprint.english_cardinal_tens \x3d new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,\x22\x22,\x22twenty\x22,\x22thirty\x22,\x22forty\x22,\x22fifty\x22,\x22sixty\x22,\x22seventy\x22,\x22eighty\x22,\x22ninety\x22], null);\ncljs.pprint.english_ordinal_tens \x3d new cljs.core.PersistentVector(null, 10, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,\x22\x22,\x22twentieth\x22,\x22thirtieth\x22,\x22fortieth\x22,\x22fiftieth\x22,\x22sixtieth\x22,\x22seventieth\x22,\x22eightieth\x22,\x22ninetieth\x22], null);\ncljs.pprint.english_scale_numbers \x3d new cljs.core.PersistentVector(null, 22, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,\x22thousand\x22,\x22million\x22,\x22billion\x22,\x22trillion\x22,\x22quadrillion\x22,\x22quintillion\x22,\x22sextillion\x22,\x22septillion\x22,\x22octillion\x22,\x22nonillion\x22,\x22decillion\x22,\x22undecillion\x22,\x22duodecillion\x22,\x22tredecillion\x22,\x22quattuordecillion\x22,\x22quindecillion\x22,\x22sexdecillion\x22,\x22septendecillion\x22,\x22octodecillion\x22,\x22novemdecillion\x22,\x22vigintillion\x22], null);\n/**\n * Convert a number less than 1000 to a cardinal english string\n */\ncljs.pprint.format_simple_cardinal \x3d (function cljs$pprint$format_simple_cardinal(num){\nvar hundreds \x3d cljs.core.quot(num,(100));\nvar tens \x3d cljs.core.rem(num,(100));\nreturn [(((hundreds \x3e (0)))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units,hundreds)),\x22 hundred\x22].join(\x27\x27):null),(((((hundreds \x3e (0))) \x26\x26 ((tens \x3e (0)))))?\x22 \x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((tens \x3e (0)))?(((tens \x3c (20)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units,tens):(function (){var ten_digit \x3d cljs.core.quot(tens,(10));\nvar unit_digit \x3d cljs.core.rem(tens,(10));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((((ten_digit \x3e (0)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_tens,ten_digit):null)),(((((ten_digit \x3e (0))) \x26\x26 ((unit_digit \x3e (0)))))?\x22-\x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((unit_digit \x3e (0)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units,unit_digit):null))].join(\x27\x27);\n})()):null))].join(\x27\x27);\n});\n/**\n * Take a sequence of parts, add scale numbers (e.g., million) and combine into a string\n *   offset is a factor of 10^3 to multiply by\n */\ncljs.pprint.add_english_scales \x3d (function cljs$pprint$add_english_scales(parts,offset){\nvar cnt \x3d cljs.core.count(parts);\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\nvar pos \x3d (cnt - (1));\nvar this$ \x3d cljs.core.first(parts);\nvar remainder \x3d cljs.core.next(parts);\nwhile(true){\nif((remainder \x3d\x3d null)){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\x22, \x22,acc))),(((((!(cljs.core.empty_QMARK_(this$)))) \x26\x26 ((!(cljs.core.empty_QMARK_(acc))))))?\x22, \x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$),(((((!(cljs.core.empty_QMARK_(this$)))) \x26\x26 (((pos + offset) \x3e (0)))))?[\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_scale_numbers,(pos + offset)))].join(\x27\x27):null)].join(\x27\x27);\n} else {\nvar G__14643 \x3d ((cljs.core.empty_QMARK_(this$))?acc:cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(this$),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_scale_numbers,(pos + offset)))].join(\x27\x27)));\nvar G__14644 \x3d (pos - (1));\nvar G__14645 \x3d cljs.core.first(remainder);\nvar G__14646 \x3d cljs.core.next(remainder);\nacc \x3d G__14643;\npos \x3d G__14644;\nthis$ \x3d G__14645;\nremainder \x3d G__14646;\ncontinue;\n}\nbreak;\n}\n});\ncljs.pprint.format_cardinal_english \x3d (function cljs$pprint$format_cardinal_english(params,navigator,offsets){\nvar vec__13185 \x3d cljs.pprint.next_arg(navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13185,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13185,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),arg)){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22zero\x22], 0));\n} else {\nvar abs_arg_14647 \x3d (((arg \x3c (0)))?(- arg):arg);\nvar parts_14648 \x3d cljs.pprint.remainders((1000),abs_arg_14647);\nif((cljs.core.count(parts_14648) \x3c\x3d cljs.core.count(cljs.pprint.english_scale_numbers))){\nvar parts_strs_14649 \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.pprint.format_simple_cardinal,parts_14648);\nvar full_str_14650 \x3d cljs.pprint.add_english_scales(parts_strs_14649,(0));\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[(((arg \x3c (0)))?\x22minus \x22:null),full_str_14650].join(\x27\x27)], 0));\n} else {\ncljs.pprint.format_integer((10),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),\x22 \x22,new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),\x22,\x22,new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(3),new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),true], null),cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),(0),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),(0),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(0)], null));\n}\n}\n\nreturn navigator__$1;\n});\n/**\n * Convert a number less than 1000 to a ordinal english string\n *   Note this should only be used for the last one in the sequence\n */\ncljs.pprint.format_simple_ordinal \x3d (function cljs$pprint$format_simple_ordinal(num){\nvar hundreds \x3d cljs.core.quot(num,(100));\nvar tens \x3d cljs.core.rem(num,(100));\nreturn [(((hundreds \x3e (0)))?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_units,hundreds)),\x22 hundred\x22].join(\x27\x27):null),(((((hundreds \x3e (0))) \x26\x26 ((tens \x3e (0)))))?\x22 \x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((tens \x3e (0)))?(((tens \x3c (20)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_ordinal_units,tens):(function (){var ten_digit \x3d cljs.core.quot(tens,(10));\nvar unit_digit \x3d cljs.core.rem(tens,(10));\nif((((ten_digit \x3e (0))) \x26\x26 ((!((unit_digit \x3e (0))))))){\nreturn cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_ordinal_tens,ten_digit);\n} else {\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((((ten_digit \x3e (0)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_cardinal_tens,ten_digit):null)),(((((ten_digit \x3e (0))) \x26\x26 ((unit_digit \x3e (0)))))?\x22-\x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((unit_digit \x3e (0)))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.pprint.english_ordinal_units,unit_digit):null))].join(\x27\x27);\n}\n})()):(((hundreds \x3e (0)))?\x22th\x22:null)))].join(\x27\x27);\n});\ncljs.pprint.format_ordinal_english \x3d (function cljs$pprint$format_ordinal_english(params,navigator,offsets){\nvar vec__13196 \x3d cljs.pprint.next_arg(navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13196,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13196,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),arg)){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22zeroth\x22], 0));\n} else {\nvar abs_arg_14654 \x3d (((arg \x3c (0)))?(- arg):arg);\nvar parts_14655 \x3d cljs.pprint.remainders((1000),abs_arg_14654);\nif((cljs.core.count(parts_14655) \x3c\x3d cljs.core.count(cljs.pprint.english_scale_numbers))){\nvar parts_strs_14657 \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.pprint.format_simple_cardinal,cljs.core.drop_last.cljs$core$IFn$_invoke$arity$1(parts_14655));\nvar head_str_14658 \x3d cljs.pprint.add_english_scales(parts_strs_14657,(1));\nvar tail_str_14659 \x3d cljs.pprint.format_simple_ordinal(cljs.core.last(parts_14655));\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[(((arg \x3c (0)))?\x22minus \x22:null),(((((!(cljs.core.empty_QMARK_(head_str_14658)))) \x26\x26 ((!(cljs.core.empty_QMARK_(tail_str_14659))))))?[head_str_14658,\x22, \x22,tail_str_14659].join(\x27\x27):(((!(cljs.core.empty_QMARK_(head_str_14658))))?[head_str_14658,\x22th\x22].join(\x27\x27):tail_str_14659\n))].join(\x27\x27)], 0));\n} else {\ncljs.pprint.format_integer((10),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),\x22 \x22,new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),\x22,\x22,new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(3),new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),true], null),cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),(0),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),(0),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(0)], null));\n\nvar low_two_digits_14663 \x3d cljs.core.rem(arg,(100));\nvar not_teens_14664 \x3d ((((11) \x3c low_two_digits_14663)) || (((19) \x3e low_two_digits_14663)));\nvar low_digit_14665 \x3d cljs.core.rem(low_two_digits_14663,(10));\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(((((low_digit_14665 \x3d\x3d\x3d (1))) \x26\x26 (not_teens_14664)))?\x22st\x22:(((((low_digit_14665 \x3d\x3d\x3d (2))) \x26\x26 (not_teens_14664)))?\x22nd\x22:(((((low_digit_14665 \x3d\x3d\x3d (3))) \x26\x26 (not_teens_14664)))?\x22rd\x22:\x22th\x22\n)))], 0));\n}\n}\n\nreturn navigator__$1;\n});\ncljs.pprint.old_roman_table \x3d new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22I\x22,\x22II\x22,\x22III\x22,\x22IIII\x22,\x22V\x22,\x22VI\x22,\x22VII\x22,\x22VIII\x22,\x22VIIII\x22], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22X\x22,\x22XX\x22,\x22XXX\x22,\x22XXXX\x22,\x22L\x22,\x22LX\x22,\x22LXX\x22,\x22LXXX\x22,\x22LXXXX\x22], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22C\x22,\x22CC\x22,\x22CCC\x22,\x22CCCC\x22,\x22D\x22,\x22DC\x22,\x22DCC\x22,\x22DCCC\x22,\x22DCCCC\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22M\x22,\x22MM\x22,\x22MMM\x22], null)], null);\ncljs.pprint.new_roman_table \x3d new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22I\x22,\x22II\x22,\x22III\x22,\x22IV\x22,\x22V\x22,\x22VI\x22,\x22VII\x22,\x22VIII\x22,\x22IX\x22], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22X\x22,\x22XX\x22,\x22XXX\x22,\x22XL\x22,\x22L\x22,\x22LX\x22,\x22LXX\x22,\x22LXXX\x22,\x22XC\x22], null),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22C\x22,\x22CC\x22,\x22CCC\x22,\x22CD\x22,\x22D\x22,\x22DC\x22,\x22DCC\x22,\x22DCCC\x22,\x22CM\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22M\x22,\x22MM\x22,\x22MMM\x22], null)], null);\n/**\n * Format a roman numeral using the specified look-up table\n */\ncljs.pprint.format_roman \x3d (function cljs$pprint$format_roman(table,params,navigator,offsets){\nvar vec__13199 \x3d cljs.pprint.next_arg(navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13199,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13199,(1),null);\nif(((typeof arg \x3d\x3d\x3d \x27number\x27) \x26\x26 ((((arg \x3e (0))) \x26\x26 ((arg \x3c (4000))))))){\nvar digits_14682 \x3d cljs.pprint.remainders((10),arg);\nvar acc_14684 \x3d cljs.core.PersistentVector.EMPTY;\nvar pos_14685 \x3d (cljs.core.count(digits_14682) - (1));\nvar digits_14686__$1 \x3d digits_14682;\nwhile(true){\nif(cljs.core.empty_QMARK_(digits_14686__$1)){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,acc_14684)], 0));\n} else {\nvar digit_14687 \x3d cljs.core.first(digits_14686__$1);\nvar G__14689 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),digit_14687))?acc_14684:cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc_14684,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(table,pos_14685),(digit_14687 - (1)))));\nvar G__14690 \x3d (pos_14685 - (1));\nvar G__14691 \x3d cljs.core.next(digits_14686__$1);\nacc_14684 \x3d G__14689;\npos_14685 \x3d G__14690;\ndigits_14686__$1 \x3d G__14691;\ncontinue;\n}\nbreak;\n}\n} else {\ncljs.pprint.format_integer((10),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),\x22 \x22,new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),\x22,\x22,new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(3),new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),true], null),cljs.pprint.init_navigator(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg], null)),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),(0),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),(0),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),(0),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),(0)], null));\n}\n\nreturn navigator__$1;\n});\ncljs.pprint.format_old_roman \x3d (function cljs$pprint$format_old_roman(params,navigator,offsets){\nreturn cljs.pprint.format_roman(cljs.pprint.old_roman_table,params,navigator,offsets);\n});\ncljs.pprint.format_new_roman \x3d (function cljs$pprint$format_new_roman(params,navigator,offsets){\nreturn cljs.pprint.format_roman(cljs.pprint.new_roman_table,params,navigator,offsets);\n});\ncljs.pprint.special_chars \x3d new cljs.core.PersistentArrayMap(null, 5, [(8),\x22Backspace\x22,(9),\x22Tab\x22,(10),\x22Newline\x22,(13),\x22Return\x22,(32),\x22Space\x22], null);\ncljs.pprint.pretty_character \x3d (function cljs$pprint$pretty_character(params,navigator,offsets){\nvar vec__13207 \x3d cljs.pprint.next_arg(navigator);\nvar c \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13207,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13207,(1),null);\nvar as_int \x3d cljs.pprint.char_code(c);\nvar base_char \x3d (as_int \x26 (127));\nvar meta \x3d (as_int \x26 (128));\nvar special \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.special_chars,base_char);\nif((meta \x3e (0))){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Meta-\x22], 0));\n} else {\n}\n\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(special)?special:(((base_char \x3c (32)))?[\x22Control-\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.char$((base_char + (64))))].join(\x27\x27):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(base_char,(127)))?\x22Control-?\x22:cljs.core.char$(base_char)\n)))], 0));\n\nreturn navigator__$1;\n});\ncljs.pprint.readable_character \x3d (function cljs$pprint$readable_character(params,navigator,offsets){\nvar vec__13215 \x3d cljs.pprint.next_arg(navigator);\nvar c \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13215,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13215,(1),null);\nvar pred__13218_14705 \x3d cljs.core._EQ_;\nvar expr__13219_14706 \x3d new cljs.core.Keyword(null,\x22char-format\x22,\x22char-format\x22,-1016499218).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_((function (){var G__13221 \x3d \x22o\x22;\nvar G__13222 \x3d expr__13219_14706;\nreturn (pred__13218_14705.cljs$core$IFn$_invoke$arity$2 ? pred__13218_14705.cljs$core$IFn$_invoke$arity$2(G__13221,G__13222) : pred__13218_14705.call(null,G__13221,G__13222));\n})())){\ncljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(true,\x22\\\\o~3,\x270o\x22,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.pprint.char_code(c)], 0));\n} else {\nif(cljs.core.truth_((function (){var G__13223 \x3d \x22u\x22;\nvar G__13224 \x3d expr__13219_14706;\nreturn (pred__13218_14705.cljs$core$IFn$_invoke$arity$2 ? pred__13218_14705.cljs$core$IFn$_invoke$arity$2(G__13223,G__13224) : pred__13218_14705.call(null,G__13223,G__13224));\n})())){\ncljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(true,\x22\\\\u~4,\x270x\x22,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.pprint.char_code(c)], 0));\n} else {\nif(cljs.core.truth_((pred__13218_14705.cljs$core$IFn$_invoke$arity$2 ? pred__13218_14705.cljs$core$IFn$_invoke$arity$2(null,expr__13219_14706) : pred__13218_14705.call(null,null,expr__13219_14706)))){\ncljs.pprint.print_char(c);\n} else {\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__13219_14706)].join(\x27\x27)));\n}\n}\n}\n\nreturn navigator__$1;\n});\ncljs.pprint.plain_character \x3d (function cljs$pprint$plain_character(params,navigator,offsets){\nvar vec__13225 \x3d cljs.pprint.next_arg(navigator);\nvar char$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13225,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13225,(1),null);\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([char$], 0));\n\nreturn navigator__$1;\n});\ncljs.pprint.abort_QMARK_ \x3d (function cljs$pprint$abort_QMARK_(context){\nvar token \x3d cljs.core.first(context);\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),token)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22colon-up-arrow\x22,\x22colon-up-arrow\x22,244853007),token)));\n});\ncljs.pprint.execute_sub_format \x3d (function cljs$pprint$execute_sub_format(format,args,base_args){\nreturn cljs.core.second(cljs.pprint.map_passing_context((function (element,context){\nif(cljs.pprint.abort_QMARK_(context)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,context], null);\n} else {\nvar vec__13238 \x3d cljs.pprint.realize_parameter_list(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(element),context);\nvar params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13238,(0),null);\nvar args__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13238,(1),null);\nvar vec__13241 \x3d cljs.pprint.unzip_map(params);\nvar params__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13241,(0),null);\nvar offsets \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13241,(1),null);\nvar params__$2 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(params__$1,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822),base_args);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040).cljs$core$IFn$_invoke$arity$1(element),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2,args__$1,offsets], null))], null);\n}\n}),args,format));\n});\n/**\n * Produce string parts for the mantissa (normalize 1-9) and exponent\n */\ncljs.pprint.float_parts_base \x3d (function cljs$pprint$float_parts_base(f){\nvar s \x3d clojure.string.lower_case(cljs.core.str.cljs$core$IFn$_invoke$arity$1(f));\nvar exploc \x3d s.indexOf(\x22e\x22);\nvar dotloc \x3d s.indexOf(\x22.\x22);\nif((exploc \x3c (0))){\nif((dotloc \x3c (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s,cljs.core.str.cljs$core$IFn$_invoke$arity$1((((s).length) - (1)))], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),dotloc),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(dotloc + (1)))].join(\x27\x27),cljs.core.str.cljs$core$IFn$_invoke$arity$1((dotloc - (1)))], null);\n}\n} else {\nif((dotloc \x3c (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),exploc),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(exploc + (1)))], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),(1)),cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(2),exploc)].join(\x27\x27),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(exploc + (1)))], null);\n}\n}\n});\n/**\n * Take care of leading and trailing zeros in decomposed floats\n */\ncljs.pprint.float_parts \x3d (function cljs$pprint$float_parts(f){\nvar vec__13258 \x3d cljs.pprint.float_parts_base(f);\nvar m \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13258,(0),null);\nvar e \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13258,(1),null);\nvar m1 \x3d cljs.pprint.rtrim(m,\x220\x22);\nvar m2 \x3d cljs.pprint.ltrim(m1,\x220\x22);\nvar delta \x3d (cljs.core.count(m1) - cljs.core.count(m2));\nvar e__$1 \x3d (((((cljs.core.count(e) \x3e (0))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(e,(0)),\x22+\x22))))?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(e,(1)):e);\nif(cljs.core.empty_QMARK_(m2)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x220\x22,(0)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m2,(parseInt(e__$1,(10)) - delta)], null);\n}\n});\n/**\n * Assumption: The input string consists of one or more decimal digits,\n *   and no other characters. Return a string containing one or more\n *   decimal digits containing a decimal number one larger than the input\n *   string. The output string will always be the same length as the input\n *   string, or one character longer.\n */\ncljs.pprint.inc_s \x3d (function cljs$pprint$inc_s(s){\nvar len_1 \x3d (cljs.core.count(s) - (1));\nvar i \x3d (len_1 | (0));\nwhile(true){\nif((i \x3c (0))){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str,\x221\x22,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((len_1 + (1)),\x220\x22));\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x229\x22,s.charAt(i))){\nvar G__14737 \x3d (i - (1));\ni \x3d G__14737;\ncontinue;\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.str,cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),i),cljs.core.char$((cljs.pprint.char_code(s.charAt(i)) + (1))),cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((len_1 - i),\x220\x22));\n\n}\n}\nbreak;\n}\n});\ncljs.pprint.round_str \x3d (function cljs$pprint$round_str(m,e,d,w){\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d d;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn w;\n}\n})())){\nvar len \x3d cljs.core.count(m);\nvar w__$1 \x3d (cljs.core.truth_(w)?(function (){var x__5130__auto__ \x3d (2);\nvar y__5131__auto__ \x3d w;\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})():(0));\nvar round_pos \x3d (cljs.core.truth_(d)?((e + d) + (1)):(((e \x3e\x3d (0)))?(function (){var x__5130__auto__ \x3d (e + (1));\nvar y__5131__auto__ \x3d (w__$1 - (1));\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})():(w__$1 + e)\n));\nvar vec__13281 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(round_pos,(0)))?new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [[\x220\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(\x27\x27),(e + (1)),(1),(len + (1))], null):new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [m,e,round_pos,len], null));\nvar m1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13281,(0),null);\nvar e1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13281,(1),null);\nvar round_pos__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13281,(2),null);\nvar len__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13281,(3),null);\nif(cljs.core.truth_(round_pos__$1)){\nif((round_pos__$1 \x3c (0))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x220\x22,(0),false], null);\n} else {\nif((len__$1 \x3e round_pos__$1)){\nvar round_char \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(m1,round_pos__$1);\nvar result \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$3(m1,(0),round_pos__$1);\nif((cljs.pprint.char_code(round_char) \x3e\x3d cljs.pprint.char_code(\x225\x22))){\nvar round_up_result \x3d cljs.pprint.inc_s(result);\nvar expanded \x3d (cljs.core.count(round_up_result) \x3e ((result).length));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [((expanded)?cljs.core.subs.cljs$core$IFn$_invoke$arity$3(round_up_result,(0),(cljs.core.count(round_up_result) - (1))):round_up_result),e1,expanded], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [result,e1,false], null);\n}\n} else {\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m,e,false], null);\n}\n}\n} else {\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m,e,false], null);\n}\n} else {\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [m,e,false], null);\n}\n});\ncljs.pprint.expand_fixed \x3d (function cljs$pprint$expand_fixed(m,e,d){\nvar vec__13294 \x3d (((e \x3c (0)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(((- e) - (1)),\x220\x22))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(\x27\x27),(-1)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [m,e], null));\nvar m1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13294,(0),null);\nvar e1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13294,(1),null);\nvar len \x3d cljs.core.count(m1);\nvar target_len \x3d (cljs.core.truth_(d)?((e1 + d) + (1)):(e1 + (1)));\nif((len \x3c target_len)){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(m1),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((target_len - len),\x220\x22)))].join(\x27\x27);\n} else {\nreturn m1;\n}\n});\n/**\n * Insert the decimal point at the right spot in the number to match an exponent\n */\ncljs.pprint.insert_decimal \x3d (function cljs$pprint$insert_decimal(m,e){\nif((e \x3c (0))){\nreturn [\x22.\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(\x27\x27);\n} else {\nvar loc \x3d (e + (1));\nreturn [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(m,(0),loc),\x22.\x22,cljs.core.subs.cljs$core$IFn$_invoke$arity$2(m,loc)].join(\x27\x27);\n}\n});\ncljs.pprint.get_fixed \x3d (function cljs$pprint$get_fixed(m,e,d){\nreturn cljs.pprint.insert_decimal(cljs.pprint.expand_fixed(m,e,d),e);\n});\n/**\n * Insert the decimal point at the right spot in the number to match an exponent\n */\ncljs.pprint.insert_scaled_decimal \x3d (function cljs$pprint$insert_scaled_decimal(m,k){\nif((k \x3c (0))){\nreturn [\x22.\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(m)].join(\x27\x27);\n} else {\nreturn [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(m,(0),k),\x22.\x22,cljs.core.subs.cljs$core$IFn$_invoke$arity$2(m,k)].join(\x27\x27);\n}\n});\ncljs.pprint.convert_ratio \x3d (function cljs$pprint$convert_ratio(x){\nreturn x;\n});\ncljs.pprint.fixed_float \x3d (function cljs$pprint$fixed_float(params,navigator,offsets){\nvar w \x3d new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001).cljs$core$IFn$_invoke$arity$1(params);\nvar d \x3d new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424).cljs$core$IFn$_invoke$arity$1(params);\nvar vec__13316 \x3d cljs.pprint.next_arg(navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13316,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13316,(1),null);\nvar vec__13319 \x3d (((arg \x3c (0)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22-\x22,(- arg)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22+\x22,arg], null));\nvar sign \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13319,(0),null);\nvar abs \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13319,(1),null);\nvar abs__$1 \x3d cljs.pprint.convert_ratio(abs);\nvar vec__13322 \x3d cljs.pprint.float_parts(abs__$1);\nvar mantissa \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13322,(0),null);\nvar exp \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13322,(1),null);\nvar scaled_exp \x3d (exp + new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393).cljs$core$IFn$_invoke$arity$1(params));\nvar add_sign \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (arg \x3c (0));\n}\n})();\nvar append_zero \x3d ((cljs.core.not(d)) \x26\x26 (((cljs.core.count(mantissa) - (1)) \x3c\x3d scaled_exp)));\nvar vec__13325 \x3d cljs.pprint.round_str(mantissa,scaled_exp,d,(cljs.core.truth_(w)?(w - (cljs.core.truth_(add_sign)?(1):(0))):null));\nvar rounded_mantissa \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13325,(0),null);\nvar scaled_exp__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13325,(1),null);\nvar expanded \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13325,(2),null);\nvar fixed_repr \x3d cljs.pprint.get_fixed(rounded_mantissa,(cljs.core.truth_(expanded)?(scaled_exp__$1 + (1)):scaled_exp__$1),d);\nvar fixed_repr__$1 \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d w;\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d d;\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn (((d \x3e\x3d (1))) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fixed_repr.charAt((0)),\x220\x22)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fixed_repr.charAt((1)),\x22.\x22)) \x26\x26 ((((fixed_repr).length) \x3e (w - (cljs.core.truth_(add_sign)?(1):(0))))))))));\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})())?cljs.core.subs.cljs$core$IFn$_invoke$arity$2(fixed_repr,(1)):fixed_repr);\nvar prepend_zero \x3d cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fixed_repr__$1),\x22.\x22);\nif(cljs.core.truth_(w)){\nvar len_14752 \x3d ((fixed_repr__$1).length);\nvar signed_len_14753 \x3d (cljs.core.truth_(add_sign)?(len_14752 + (1)):len_14752);\nvar prepend_zero_14754__$1 \x3d ((prepend_zero) \x26\x26 ((!((signed_len_14753 \x3e\x3d w)))));\nvar append_zero_14755__$1 \x3d ((append_zero) \x26\x26 ((!((signed_len_14753 \x3e\x3d w)))));\nvar full_len_14756 \x3d ((((prepend_zero_14754__$1) || (append_zero_14755__$1)))?(signed_len_14753 + (1)):signed_len_14753);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d (full_len_14756 \x3e w);\nif(and__5043__auto__){\nreturn new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106).cljs$core$IFn$_invoke$arity$1(params);\n} else {\nreturn and__5043__auto__;\n}\n})())){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(w,new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106).cljs$core$IFn$_invoke$arity$1(params)))], 0));\n} else {\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((w - full_len_14756),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)))),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(add_sign)?sign:null)),((prepend_zero_14754__$1)?\x220\x22:null),fixed_repr__$1,((append_zero_14755__$1)?\x220\x22:null)].join(\x27\x27)], 0));\n}\n} else {\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(add_sign)?sign:null)),((prepend_zero)?\x220\x22:null),fixed_repr__$1,((append_zero)?\x220\x22:null)].join(\x27\x27)], 0));\n}\n\nreturn navigator__$1;\n});\ncljs.pprint.exponential_float \x3d (function cljs$pprint$exponential_float(params,navigator,offset){\nvar vec__13343 \x3d cljs.pprint.next_arg(navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13343,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13343,(1),null);\nvar arg__$1 \x3d cljs.pprint.convert_ratio(arg);\nvar G__13350_14761 \x3d cljs.pprint.float_parts((((arg__$1 \x3c (0)))?(- arg__$1):arg__$1));\nvar vec__13351_14762 \x3d G__13350_14761;\nvar mantissa_14763 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13351_14762,(0),null);\nvar exp_14764 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13351_14762,(1),null);\nvar G__13350_14766__$1 \x3d G__13350_14761;\nwhile(true){\nvar vec__13354_14767 \x3d G__13350_14766__$1;\nvar mantissa_14768__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13354_14767,(0),null);\nvar exp_14769__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13354_14767,(1),null);\nvar w_14772 \x3d new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001).cljs$core$IFn$_invoke$arity$1(params);\nvar d_14773 \x3d new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424).cljs$core$IFn$_invoke$arity$1(params);\nvar e_14774 \x3d new cljs.core.Keyword(null,\x22e\x22,\x22e\x22,1381269198).cljs$core$IFn$_invoke$arity$1(params);\nvar k_14775 \x3d new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393).cljs$core$IFn$_invoke$arity$1(params);\nvar expchar_14776 \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22exponentchar\x22,\x22exponentchar\x22,1986664222).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \x22E\x22;\n}\n})();\nvar add_sign_14777 \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (arg__$1 \x3c (0));\n}\n})();\nvar prepend_zero_14778 \x3d (k_14775 \x3c\x3d (0));\nvar scaled_exp_14779 \x3d (exp_14769__$1 - (k_14775 - (1)));\nvar scaled_exp_str_14780 \x3d cljs.core.str.cljs$core$IFn$_invoke$arity$1(Math.abs(scaled_exp_14779));\nvar scaled_exp_str_14781__$1 \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(expchar_14776),(((scaled_exp_14779 \x3c (0)))?\x22-\x22:\x22+\x22),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(e_14774)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((e_14774 - ((scaled_exp_str_14780).length)),\x220\x22)):null)),scaled_exp_str_14780].join(\x27\x27);\nvar exp_width_14782 \x3d ((scaled_exp_str_14781__$1).length);\nvar base_mantissa_width_14783 \x3d cljs.core.count(mantissa_14768__$1);\nvar scaled_mantissa_14784 \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((- k_14775),\x220\x22))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(mantissa_14768__$1),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(d_14773)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(((d_14773 - (base_mantissa_width_14783 - (1))) - (((k_14775 \x3c (0)))?(- k_14775):(0))),\x220\x22)):null))].join(\x27\x27);\nvar w_mantissa_14785 \x3d (cljs.core.truth_(w_14772)?(w_14772 - exp_width_14782):null);\nvar vec__13357_14786 \x3d cljs.pprint.round_str(scaled_mantissa_14784,(0),((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k_14775,(0)))?(d_14773 - (1)):(((k_14775 \x3e (0)))?d_14773:(((k_14775 \x3c (0)))?(d_14773 - (1)):null))),(cljs.core.truth_(w_mantissa_14785)?(w_mantissa_14785 - (cljs.core.truth_(add_sign_14777)?(1):(0))):null));\nvar rounded_mantissa_14787 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13357_14786,(0),null);\nvar __14788 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13357_14786,(1),null);\nvar incr_exp_14789 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13357_14786,(2),null);\nvar full_mantissa_14790 \x3d cljs.pprint.insert_scaled_decimal(rounded_mantissa_14787,k_14775);\nvar append_zero_14791 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k_14775,cljs.core.count(rounded_mantissa_14787))) \x26\x26 ((d_14773 \x3d\x3d null)));\nif(cljs.core.not(incr_exp_14789)){\nif(cljs.core.truth_(w_14772)){\nvar len_14794 \x3d (((full_mantissa_14790).length) + exp_width_14782);\nvar signed_len_14795 \x3d (cljs.core.truth_(add_sign_14777)?(len_14794 + (1)):len_14794);\nvar prepend_zero_14796__$1 \x3d ((prepend_zero_14778) \x26\x26 ((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(signed_len_14795,w_14772)))));\nvar full_len_14797 \x3d ((prepend_zero_14796__$1)?(signed_len_14795 + (1)):signed_len_14795);\nvar append_zero_14798__$1 \x3d ((append_zero_14791) \x26\x26 ((full_len_14797 \x3c w_14772)));\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d (function (){var or__5045__auto__ \x3d (full_len_14797 \x3e w_14772);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar and__5043__auto__ \x3d e_14774;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn ((exp_width_14782 - (2)) \x3e e_14774);\n} else {\nreturn and__5043__auto__;\n}\n}\n})();\nif(cljs.core.truth_(and__5043__auto__)){\nreturn new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106).cljs$core$IFn$_invoke$arity$1(params);\n} else {\nreturn and__5043__auto__;\n}\n})())){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(w_14772,new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106).cljs$core$IFn$_invoke$arity$1(params)))], 0));\n} else {\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(((w_14772 - full_len_14797) - ((append_zero_14798__$1)?(1):(0))),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)))),(cljs.core.truth_(add_sign_14777)?(((arg__$1 \x3c (0)))?\x22-\x22:\x22+\x22):null),((prepend_zero_14796__$1)?\x220\x22:null),full_mantissa_14790,((append_zero_14798__$1)?\x220\x22:null),scaled_exp_str_14781__$1].join(\x27\x27)], 0));\n}\n} else {\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[(cljs.core.truth_(add_sign_14777)?(((arg__$1 \x3c (0)))?\x22-\x22:\x22+\x22):null),((prepend_zero_14778)?\x220\x22:null),full_mantissa_14790,((append_zero_14791)?\x220\x22:null),scaled_exp_str_14781__$1].join(\x27\x27)], 0));\n}\n} else {\nvar G__14802 \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [rounded_mantissa_14787,(exp_14769__$1 + (1))], null);\nG__13350_14766__$1 \x3d G__14802;\ncontinue;\n}\nbreak;\n}\n\nreturn navigator__$1;\n});\ncljs.pprint.general_float \x3d (function cljs$pprint$general_float(params,navigator,offsets){\nvar vec__13376 \x3d cljs.pprint.next_arg(navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13376,(0),null);\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13376,(1),null);\nvar arg__$1 \x3d cljs.pprint.convert_ratio(arg);\nvar vec__13380 \x3d cljs.pprint.float_parts((((arg__$1 \x3c (0)))?(- arg__$1):arg__$1));\nvar mantissa \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13380,(0),null);\nvar exp \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13380,(1),null);\nvar w \x3d new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001).cljs$core$IFn$_invoke$arity$1(params);\nvar d \x3d new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424).cljs$core$IFn$_invoke$arity$1(params);\nvar e \x3d new cljs.core.Keyword(null,\x22e\x22,\x22e\x22,1381269198).cljs$core$IFn$_invoke$arity$1(params);\nvar n \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg__$1,0.0))?(0):(exp + (1)));\nvar ee \x3d (cljs.core.truth_(e)?(e + (2)):(4));\nvar ww \x3d (cljs.core.truth_(w)?(w - ee):null);\nvar d__$1 \x3d (cljs.core.truth_(d)?d:(function (){var x__5130__auto__ \x3d cljs.core.count(mantissa);\nvar y__5131__auto__ \x3d (function (){var x__5133__auto__ \x3d n;\nvar y__5134__auto__ \x3d (7);\nreturn ((x__5133__auto__ \x3c y__5134__auto__) ? x__5133__auto__ : y__5134__auto__);\n})();\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})());\nvar dd \x3d (d__$1 - n);\nif(((((0) \x3c\x3d dd)) \x26\x26 ((dd \x3c\x3d d__$1)))){\nvar navigator__$1 \x3d cljs.pprint.fixed_float(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001),ww,new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424),dd,new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393),(0),new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106),new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106).cljs$core$IFn$_invoke$arity$1(params),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params),new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params)], null),navigator,offsets);\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(ee,\x22 \x22))], 0));\n\nreturn navigator__$1;\n} else {\nreturn cljs.pprint.exponential_float(params,navigator,offsets);\n}\n});\ncljs.pprint.dollar_float \x3d (function cljs$pprint$dollar_float(params,navigator,offsets){\nvar vec__13386 \x3d cljs.pprint.next_arg(navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13386,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13386,(1),null);\nvar vec__13389 \x3d cljs.pprint.float_parts(Math.abs(arg));\nvar mantissa \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13389,(0),null);\nvar exp \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13389,(1),null);\nvar d \x3d new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424).cljs$core$IFn$_invoke$arity$1(params);\nvar n \x3d new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025).cljs$core$IFn$_invoke$arity$1(params);\nvar w \x3d new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001).cljs$core$IFn$_invoke$arity$1(params);\nvar add_sign \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (arg \x3c (0));\n}\n})();\nvar vec__13392 \x3d cljs.pprint.round_str(mantissa,exp,d,null);\nvar rounded_mantissa \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13392,(0),null);\nvar scaled_exp \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13392,(1),null);\nvar expanded \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13392,(2),null);\nvar fixed_repr \x3d cljs.pprint.get_fixed(rounded_mantissa,(cljs.core.truth_(expanded)?(scaled_exp + (1)):scaled_exp),d);\nvar full_repr \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((n - fixed_repr.indexOf(\x22.\x22)),\x220\x22))),fixed_repr].join(\x27\x27);\nvar full_len \x3d (((full_repr).length) + (cljs.core.truth_(add_sign)?(1):(0)));\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[(cljs.core.truth_((function (){var and__5043__auto__ \x3d new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn add_sign;\n} else {\nreturn and__5043__auto__;\n}\n})())?(((arg \x3c (0)))?\x22-\x22:\x22+\x22):null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((w - full_len),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)))),(cljs.core.truth_((function (){var and__5043__auto__ \x3d cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params));\nif(and__5043__auto__){\nreturn add_sign;\n} else {\nreturn and__5043__auto__;\n}\n})())?(((arg \x3c (0)))?\x22-\x22:\x22+\x22):null),full_repr].join(\x27\x27)], 0));\n\nreturn navigator__$1;\n});\ncljs.pprint.choice_conditional \x3d (function cljs$pprint$choice_conditional(params,arg_navigator,offsets){\nvar arg \x3d new cljs.core.Keyword(null,\x22selector\x22,\x22selector\x22,762528866).cljs$core$IFn$_invoke$arity$1(params);\nvar vec__13399 \x3d (cljs.core.truth_(arg)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arg,arg_navigator], null):cljs.pprint.next_arg(arg_navigator));\nvar arg__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13399,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13399,(1),null);\nvar clauses \x3d new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params);\nvar clause \x3d (((((arg__$1 \x3c (0))) || ((arg__$1 \x3e\x3d cljs.core.count(clauses)))))?cljs.core.first(new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(params)):cljs.core.nth.cljs$core$IFn$_invoke$arity$2(clauses,arg__$1));\nif(cljs.core.truth_(clause)){\nreturn cljs.pprint.execute_sub_format(clause,navigator__$1,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\n} else {\nreturn navigator__$1;\n}\n});\ncljs.pprint.boolean_conditional \x3d (function cljs$pprint$boolean_conditional(params,arg_navigator,offsets){\nvar vec__13403 \x3d cljs.pprint.next_arg(arg_navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13403,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13403,(1),null);\nvar clauses \x3d new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params);\nvar clause \x3d (cljs.core.truth_(arg)?cljs.core.second(clauses):cljs.core.first(clauses));\nif(cljs.core.truth_(clause)){\nreturn cljs.pprint.execute_sub_format(clause,navigator__$1,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\n} else {\nreturn navigator__$1;\n}\n});\ncljs.pprint.check_arg_conditional \x3d (function cljs$pprint$check_arg_conditional(params,arg_navigator,offsets){\nvar vec__13408 \x3d cljs.pprint.next_arg(arg_navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13408,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13408,(1),null);\nvar clauses \x3d new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params);\nvar clause \x3d (cljs.core.truth_(arg)?cljs.core.first(clauses):null);\nif(cljs.core.truth_(arg)){\nif(cljs.core.truth_(clause)){\nreturn cljs.pprint.execute_sub_format(clause,arg_navigator,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\n} else {\nreturn arg_navigator;\n}\n} else {\nreturn navigator__$1;\n}\n});\ncljs.pprint.iterate_sublist \x3d (function cljs$pprint$iterate_sublist(params,navigator,offsets){\nvar max_count \x3d new cljs.core.Keyword(null,\x22max-iterations\x22,\x22max-iterations\x22,2021275563).cljs$core$IFn$_invoke$arity$1(params);\nvar param_clause \x3d cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params));\nvar vec__13415 \x3d ((cljs.core.empty_QMARK_(param_clause))?cljs.pprint.get_format_arg(navigator):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause,navigator], null));\nvar clause \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13415,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13415,(1),null);\nvar vec__13418 \x3d cljs.pprint.next_arg(navigator__$1);\nvar arg_list \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13418,(0),null);\nvar navigator__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13418,(1),null);\nvar args \x3d cljs.pprint.init_navigator(arg_list);\nvar count \x3d (0);\nvar args__$1 \x3d args;\nvar last_pos \x3d ((-1) | (0));\nwhile(true){\nif(((cljs.core.not(max_count)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(args__$1),last_pos)) \x26\x26 ((count \x3e (1))))))){\nthrow Error(\x22%{ construct not consuming any arguments: Infinite loop!\x22);\n} else {\n}\n\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d ((cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(args__$1))) \x26\x26 (((cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237).cljs$core$IFn$_invoke$arity$1(params)))) || ((count \x3e (0))))));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar and__5043__auto__ \x3d max_count;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (count \x3e\x3d max_count);\n} else {\nreturn and__5043__auto__;\n}\n}\n})())){\nreturn navigator__$2;\n} else {\nvar iter_result \x3d cljs.pprint.execute_sub_format(clause,args__$1,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),cljs.core.first(iter_result))){\nreturn navigator__$2;\n} else {\nvar G__14831 \x3d (count + (1));\nvar G__14832 \x3d iter_result;\nvar G__14833 \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(args__$1);\ncount \x3d G__14831;\nargs__$1 \x3d G__14832;\nlast_pos \x3d G__14833;\ncontinue;\n}\n}\nbreak;\n}\n});\ncljs.pprint.iterate_list_of_sublists \x3d (function cljs$pprint$iterate_list_of_sublists(params,navigator,offsets){\nvar max_count \x3d new cljs.core.Keyword(null,\x22max-iterations\x22,\x22max-iterations\x22,2021275563).cljs$core$IFn$_invoke$arity$1(params);\nvar param_clause \x3d cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params));\nvar vec__13434 \x3d ((cljs.core.empty_QMARK_(param_clause))?cljs.pprint.get_format_arg(navigator):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause,navigator], null));\nvar clause \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13434,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13434,(1),null);\nvar vec__13437 \x3d cljs.pprint.next_arg(navigator__$1);\nvar arg_list \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13437,(0),null);\nvar navigator__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13437,(1),null);\nvar count \x3d (0);\nvar arg_list__$1 \x3d arg_list;\nwhile(true){\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d ((cljs.core.empty_QMARK_(arg_list__$1)) \x26\x26 (((cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237).cljs$core$IFn$_invoke$arity$1(params)))) || ((count \x3e (0))))));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar and__5043__auto__ \x3d max_count;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (count \x3e\x3d max_count);\n} else {\nreturn and__5043__auto__;\n}\n}\n})())){\nreturn navigator__$2;\n} else {\nvar iter_result \x3d cljs.pprint.execute_sub_format(clause,cljs.pprint.init_navigator(cljs.core.first(arg_list__$1)),cljs.pprint.init_navigator(cljs.core.next(arg_list__$1)));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22colon-up-arrow\x22,\x22colon-up-arrow\x22,244853007),cljs.core.first(iter_result))){\nreturn navigator__$2;\n} else {\nvar G__14837 \x3d (count + (1));\nvar G__14838 \x3d cljs.core.next(arg_list__$1);\ncount \x3d G__14837;\narg_list__$1 \x3d G__14838;\ncontinue;\n}\n}\nbreak;\n}\n});\ncljs.pprint.iterate_main_list \x3d (function cljs$pprint$iterate_main_list(params,navigator,offsets){\nvar max_count \x3d new cljs.core.Keyword(null,\x22max-iterations\x22,\x22max-iterations\x22,2021275563).cljs$core$IFn$_invoke$arity$1(params);\nvar param_clause \x3d cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params));\nvar vec__13445 \x3d ((cljs.core.empty_QMARK_(param_clause))?cljs.pprint.get_format_arg(navigator):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause,navigator], null));\nvar clause \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13445,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13445,(1),null);\nvar count \x3d (0);\nvar navigator__$2 \x3d navigator__$1;\nvar last_pos \x3d ((-1) | (0));\nwhile(true){\nif(((cljs.core.not(max_count)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator__$2),last_pos)) \x26\x26 ((count \x3e (1))))))){\nthrow Error(\x22%@{ construct not consuming any arguments: Infinite loop!\x22);\n} else {\n}\n\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d ((cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator__$2))) \x26\x26 (((cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237).cljs$core$IFn$_invoke$arity$1(params)))) || ((count \x3e (0))))));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar and__5043__auto__ \x3d max_count;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (count \x3e\x3d max_count);\n} else {\nreturn and__5043__auto__;\n}\n}\n})())){\nreturn navigator__$2;\n} else {\nvar iter_result \x3d cljs.pprint.execute_sub_format(clause,navigator__$2,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),cljs.core.first(iter_result))){\nreturn cljs.core.second(iter_result);\n} else {\nvar G__14864 \x3d (count + (1));\nvar G__14865 \x3d iter_result;\nvar G__14866 \x3d new cljs.core.Keyword(null,\x22pos\x22,\x22pos\x22,-864607220).cljs$core$IFn$_invoke$arity$1(navigator__$2);\ncount \x3d G__14864;\nnavigator__$2 \x3d G__14865;\nlast_pos \x3d G__14866;\ncontinue;\n}\n}\nbreak;\n}\n});\ncljs.pprint.iterate_main_sublists \x3d (function cljs$pprint$iterate_main_sublists(params,navigator,offsets){\nvar max_count \x3d new cljs.core.Keyword(null,\x22max-iterations\x22,\x22max-iterations\x22,2021275563).cljs$core$IFn$_invoke$arity$1(params);\nvar param_clause \x3d cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params));\nvar vec__13462 \x3d ((cljs.core.empty_QMARK_(param_clause))?cljs.pprint.get_format_arg(navigator):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [param_clause,navigator], null));\nvar clause \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13462,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13462,(1),null);\nvar count \x3d (0);\nvar navigator__$2 \x3d navigator__$1;\nwhile(true){\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d ((cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator__$2))) \x26\x26 (((cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237).cljs$core$IFn$_invoke$arity$1(params)))) || ((count \x3e (0))))));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar and__5043__auto__ \x3d max_count;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (count \x3e\x3d max_count);\n} else {\nreturn and__5043__auto__;\n}\n}\n})())){\nreturn navigator__$2;\n} else {\nvar vec__13473 \x3d cljs.pprint.next_arg_or_nil(navigator__$2);\nvar sublist \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13473,(0),null);\nvar navigator__$3 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13473,(1),null);\nvar iter_result \x3d cljs.pprint.execute_sub_format(clause,cljs.pprint.init_navigator(sublist),navigator__$3);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22colon-up-arrow\x22,\x22colon-up-arrow\x22,244853007),cljs.core.first(iter_result))){\nreturn navigator__$3;\n} else {\nvar G__14892 \x3d (count + (1));\nvar G__14893 \x3d navigator__$3;\ncount \x3d G__14892;\nnavigator__$2 \x3d G__14893;\ncontinue;\n}\n}\nbreak;\n}\n});\ncljs.pprint.logical_block_or_justify \x3d (function cljs$pprint$logical_block_or_justify(params,navigator,offsets){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237).cljs$core$IFn$_invoke$arity$1(params)))){\nreturn cljs.pprint.format_logical_block(params,navigator,offsets);\n} else {\nreturn cljs.pprint.justify_clauses(params,navigator,offsets);\n}\n});\ncljs.pprint.render_clauses \x3d (function cljs$pprint$render_clauses(clauses,navigator,base_navigator){\nvar clauses__$1 \x3d clauses;\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\nvar navigator__$1 \x3d navigator;\nwhile(true){\nif(cljs.core.empty_QMARK_(clauses__$1)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc,navigator__$1], null);\n} else {\nvar clause \x3d cljs.core.first(clauses__$1);\nvar vec__13489 \x3d (function (){var sb \x3d (new goog.string.StringBuffer());\nvar _STAR_out_STAR__orig_val__13492 \x3d cljs.core._STAR_out_STAR_;\nvar _STAR_out_STAR__temp_val__13493 \x3d (new cljs.core.StringBufferWriter(sb));\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__13493);\n\ntry{return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.execute_sub_format(clause,navigator__$1,base_navigator),cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb)], null);\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__13492);\n}})();\nvar iter_result \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13489,(0),null);\nvar result_str \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13489,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),cljs.core.first(iter_result))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [acc,cljs.core.second(iter_result)], null);\n} else {\nvar G__14899 \x3d cljs.core.next(clauses__$1);\nvar G__14900 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,result_str);\nvar G__14901 \x3d iter_result;\nclauses__$1 \x3d G__14899;\nacc \x3d G__14900;\nnavigator__$1 \x3d G__14901;\ncontinue;\n}\n}\nbreak;\n}\n});\ncljs.pprint.justify_clauses \x3d (function cljs$pprint$justify_clauses(params,navigator,offsets){\nvar vec__13502 \x3d (function (){var temp__5804__auto__ \x3d new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar else$ \x3d temp__5804__auto__;\nreturn cljs.pprint.render_clauses(else$,navigator,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\n} else {\nreturn null;\n}\n})();\nvar vec__13505 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13502,(0),null);\nvar eol_str \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13505,(0),null);\nvar new_navigator \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13502,(1),null);\nvar navigator__$1 \x3d (function (){var or__5045__auto__ \x3d new_navigator;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn navigator;\n}\n})();\nvar vec__13508 \x3d (function (){var temp__5804__auto__ \x3d new cljs.core.Keyword(null,\x22else-params\x22,\x22else-params\x22,-832171646).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar p \x3d temp__5804__auto__;\nreturn cljs.pprint.realize_parameter_list(p,navigator__$1);\n} else {\nreturn null;\n}\n})();\nvar else_params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13508,(0),null);\nvar new_navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13508,(1),null);\nvar navigator__$2 \x3d (function (){var or__5045__auto__ \x3d new_navigator__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn navigator__$1;\n}\n})();\nvar min_remaining \x3d (function (){var or__5045__auto__ \x3d cljs.core.first(new cljs.core.Keyword(null,\x22min-remaining\x22,\x22min-remaining\x22,962687677).cljs$core$IFn$_invoke$arity$1(else_params));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (0);\n}\n})();\nvar max_columns \x3d (function (){var or__5045__auto__ \x3d cljs.core.first(new cljs.core.Keyword(null,\x22max-columns\x22,\x22max-columns\x22,1742323262).cljs$core$IFn$_invoke$arity$1(else_params));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.pprint.get_max_column(cljs.core._STAR_out_STAR_);\n}\n})();\nvar clauses \x3d new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params);\nvar vec__13511 \x3d cljs.pprint.render_clauses(clauses,navigator__$2,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\nvar strs \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13511,(0),null);\nvar navigator__$3 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13511,(1),null);\nvar slots \x3d (function (){var x__5130__auto__ \x3d (1);\nvar y__5131__auto__ \x3d (((cljs.core.count(strs) - (1)) + (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?(1):(0))) + (cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?(1):(0)));\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})();\nvar chars \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.count,strs));\nvar mincol \x3d new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445).cljs$core$IFn$_invoke$arity$1(params);\nvar minpad \x3d new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901).cljs$core$IFn$_invoke$arity$1(params);\nvar colinc \x3d new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385).cljs$core$IFn$_invoke$arity$1(params);\nvar minout \x3d (chars + (slots * minpad));\nvar result_columns \x3d (((minout \x3c\x3d mincol))?mincol:(mincol + (colinc * ((1) + cljs.core.quot(((minout - mincol) - (1)),colinc)))));\nvar total_pad \x3d (result_columns - chars);\nvar pad \x3d (function (){var x__5130__auto__ \x3d minpad;\nvar y__5131__auto__ \x3d cljs.core.quot(total_pad,slots);\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})();\nvar extra_pad \x3d (total_pad - (pad * slots));\nvar pad_str \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(pad,new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params)));\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d eol_str;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (((cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_)))) + min_remaining) + result_columns) \x3e max_columns);\n} else {\nreturn and__5043__auto__;\n}\n})())){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([eol_str], 0));\n} else {\n}\n\nvar slots_14911__$1 \x3d slots;\nvar extra_pad_14912__$1 \x3d extra_pad;\nvar strs_14913__$1 \x3d strs;\nvar pad_only_14914 \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(strs_14913__$1),(1))) \x26\x26 (cljs.core.not(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))));\n}\n})();\nwhile(true){\nif(cljs.core.seq(strs_14913__$1)){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(((cljs.core.not(pad_only_14914))?cljs.core.first(strs_14913__$1):null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_((function (){var or__5045__auto__ \x3d pad_only_14914;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d cljs.core.next(strs_14913__$1);\nif(or__5045__auto____$1){\nreturn or__5045__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\n}\n}\n})())?pad_str:null)),cljs.core.str.cljs$core$IFn$_invoke$arity$1((((extra_pad_14912__$1 \x3e (0)))?new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530).cljs$core$IFn$_invoke$arity$1(params):null))].join(\x27\x27)], 0));\n\nvar G__14916 \x3d (slots_14911__$1 - (1));\nvar G__14917 \x3d (extra_pad_14912__$1 - (1));\nvar G__14918 \x3d (cljs.core.truth_(pad_only_14914)?strs_14913__$1:cljs.core.next(strs_14913__$1));\nvar G__14919 \x3d false;\nslots_14911__$1 \x3d G__14916;\nextra_pad_14912__$1 \x3d G__14917;\nstrs_14913__$1 \x3d G__14918;\npad_only_14914 \x3d G__14919;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn navigator__$3;\n});\n/**\n * Returns a proxy that wraps writer, converting all characters to lower case\n */\ncljs.pprint.downcase_writer \x3d (function cljs$pprint$downcase_writer(writer){\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint13532 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.pprint.t_cljs$pprint13532 \x3d (function (writer,meta13533){\nthis.writer \x3d writer;\nthis.meta13533 \x3d meta13533;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074135040;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.pprint.t_cljs$pprint13532.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_13534,meta13533__$1){\nvar self__ \x3d this;\nvar _13534__$1 \x3d this;\nreturn (new cljs.pprint.t_cljs$pprint13532(self__.writer,meta13533__$1));\n}));\n\n(cljs.pprint.t_cljs$pprint13532.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_13534){\nvar self__ \x3d this;\nvar _13534__$1 \x3d this;\nreturn self__.meta13533;\n}));\n\n(cljs.pprint.t_cljs$pprint13532.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core._flush(self__.writer);\n}));\n\n(cljs.pprint.t_cljs$pprint13532.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar pred__13539 \x3d cljs.core._EQ_;\nvar expr__13540 \x3d cljs.core.type(x);\nif(cljs.core.truth_((pred__13539.cljs$core$IFn$_invoke$arity$2 ? pred__13539.cljs$core$IFn$_invoke$arity$2(String,expr__13540) : pred__13539.call(null,String,expr__13540)))){\nvar s \x3d x;\nreturn cljs.core._write(self__.writer,clojure.string.lower_case(s));\n} else {\nif(cljs.core.truth_((pred__13539.cljs$core$IFn$_invoke$arity$2 ? pred__13539.cljs$core$IFn$_invoke$arity$2(Number,expr__13540) : pred__13539.call(null,Number,expr__13540)))){\nvar c \x3d x;\nreturn cljs.core._write(self__.writer,clojure.string.lower_case(cljs.core.char$(c)));\n} else {\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__13540)].join(\x27\x27)));\n}\n}\n}));\n\n(cljs.pprint.t_cljs$pprint13532.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22meta13533\x22,\x22meta13533\x22,1784296753,null)], null);\n}));\n\n(cljs.pprint.t_cljs$pprint13532.cljs$lang$type \x3d true);\n\n(cljs.pprint.t_cljs$pprint13532.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint13532\x22);\n\n(cljs.pprint.t_cljs$pprint13532.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.pprint/t_cljs$pprint13532\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/t_cljs$pprint13532.\n */\ncljs.pprint.__GT_t_cljs$pprint13532 \x3d (function cljs$pprint$downcase_writer_$___GT_t_cljs$pprint13532(writer__$1,meta13533){\nreturn (new cljs.pprint.t_cljs$pprint13532(writer__$1,meta13533));\n});\n\n}\n\nreturn (new cljs.pprint.t_cljs$pprint13532(writer,cljs.core.PersistentArrayMap.EMPTY));\n});\n/**\n * Returns a proxy that wraps writer, converting all characters to upper case\n */\ncljs.pprint.upcase_writer \x3d (function cljs$pprint$upcase_writer(writer){\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint13547 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.pprint.t_cljs$pprint13547 \x3d (function (writer,meta13548){\nthis.writer \x3d writer;\nthis.meta13548 \x3d meta13548;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074135040;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.pprint.t_cljs$pprint13547.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_13549,meta13548__$1){\nvar self__ \x3d this;\nvar _13549__$1 \x3d this;\nreturn (new cljs.pprint.t_cljs$pprint13547(self__.writer,meta13548__$1));\n}));\n\n(cljs.pprint.t_cljs$pprint13547.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_13549){\nvar self__ \x3d this;\nvar _13549__$1 \x3d this;\nreturn self__.meta13548;\n}));\n\n(cljs.pprint.t_cljs$pprint13547.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core._flush(self__.writer);\n}));\n\n(cljs.pprint.t_cljs$pprint13547.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar pred__13554 \x3d cljs.core._EQ_;\nvar expr__13555 \x3d cljs.core.type(x);\nif(cljs.core.truth_((pred__13554.cljs$core$IFn$_invoke$arity$2 ? pred__13554.cljs$core$IFn$_invoke$arity$2(String,expr__13555) : pred__13554.call(null,String,expr__13555)))){\nvar s \x3d x;\nreturn cljs.core._write(self__.writer,clojure.string.upper_case(s));\n} else {\nif(cljs.core.truth_((pred__13554.cljs$core$IFn$_invoke$arity$2 ? pred__13554.cljs$core$IFn$_invoke$arity$2(Number,expr__13555) : pred__13554.call(null,Number,expr__13555)))){\nvar c \x3d x;\nreturn cljs.core._write(self__.writer,clojure.string.upper_case(cljs.core.char$(c)));\n} else {\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__13555)].join(\x27\x27)));\n}\n}\n}));\n\n(cljs.pprint.t_cljs$pprint13547.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22meta13548\x22,\x22meta13548\x22,-24106711,null)], null);\n}));\n\n(cljs.pprint.t_cljs$pprint13547.cljs$lang$type \x3d true);\n\n(cljs.pprint.t_cljs$pprint13547.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint13547\x22);\n\n(cljs.pprint.t_cljs$pprint13547.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.pprint/t_cljs$pprint13547\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/t_cljs$pprint13547.\n */\ncljs.pprint.__GT_t_cljs$pprint13547 \x3d (function cljs$pprint$upcase_writer_$___GT_t_cljs$pprint13547(writer__$1,meta13548){\nreturn (new cljs.pprint.t_cljs$pprint13547(writer__$1,meta13548));\n});\n\n}\n\nreturn (new cljs.pprint.t_cljs$pprint13547(writer,cljs.core.PersistentArrayMap.EMPTY));\n});\n/**\n * Capitalizes the words in a string. If first? is false, don\x27t capitalize the\n *                                    first character of the string even if it\x27s a letter.\n */\ncljs.pprint.capitalize_string \x3d (function cljs$pprint$capitalize_string(s,first_QMARK_){\nvar f \x3d cljs.core.first(s);\nvar s__$1 \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d first_QMARK_;\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d f;\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn goog.string.isUnicodeChar(f);\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})())?[clojure.string.upper_case(f),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(1))].join(\x27\x27):s);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.first(cljs.pprint.consume((function (s__$2){\nif(cljs.core.empty_QMARK_(s__$2)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,null], null);\n} else {\nvar m \x3d RegExp(\x22\\\\W\\\\w\x22,\x22g\x22).exec(s__$2);\nvar offset \x3d (function (){var and__5043__auto__ \x3d m;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (m.index + (1));\n} else {\nreturn and__5043__auto__;\n}\n})();\nif(cljs.core.truth_(offset)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s__$2,(0),offset),clojure.string.upper_case(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s__$2,offset))].join(\x27\x27),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s__$2,(offset + (1)))], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$2,null], null);\n}\n}\n}),s__$1)));\n});\n/**\n * Returns a proxy that wraps writer, capitalizing all words\n */\ncljs.pprint.capitalize_word_writer \x3d (function cljs$pprint$capitalize_word_writer(writer){\nvar last_was_whitespace_QMARK_ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(true);\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint13566 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.pprint.t_cljs$pprint13566 \x3d (function (writer,last_was_whitespace_QMARK_,meta13567){\nthis.writer \x3d writer;\nthis.last_was_whitespace_QMARK_ \x3d last_was_whitespace_QMARK_;\nthis.meta13567 \x3d meta13567;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074135040;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.pprint.t_cljs$pprint13566.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_13568,meta13567__$1){\nvar self__ \x3d this;\nvar _13568__$1 \x3d this;\nreturn (new cljs.pprint.t_cljs$pprint13566(self__.writer,self__.last_was_whitespace_QMARK_,meta13567__$1));\n}));\n\n(cljs.pprint.t_cljs$pprint13566.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_13568){\nvar self__ \x3d this;\nvar _13568__$1 \x3d this;\nreturn self__.meta13567;\n}));\n\n(cljs.pprint.t_cljs$pprint13566.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core._flush(self__.writer);\n}));\n\n(cljs.pprint.t_cljs$pprint13566.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar pred__13573 \x3d cljs.core._EQ_;\nvar expr__13574 \x3d cljs.core.type(x);\nif(cljs.core.truth_((pred__13573.cljs$core$IFn$_invoke$arity$2 ? pred__13573.cljs$core$IFn$_invoke$arity$2(String,expr__13574) : pred__13573.call(null,String,expr__13574)))){\nvar s \x3d x;\ncljs.core._write(self__.writer,cljs.pprint.capitalize_string(s.toLowerCase(),cljs.core.deref(self__.last_was_whitespace_QMARK_)));\n\nif((s.length \x3e (0))){\nreturn cljs.core.reset_BANG_(self__.last_was_whitespace_QMARK_,goog.string.isEmptyOrWhitespace(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,(cljs.core.count(s) - (1)))));\n} else {\nreturn null;\n}\n} else {\nif(cljs.core.truth_((pred__13573.cljs$core$IFn$_invoke$arity$2 ? pred__13573.cljs$core$IFn$_invoke$arity$2(Number,expr__13574) : pred__13573.call(null,Number,expr__13574)))){\nvar c \x3d cljs.core.char$(x);\nvar mod_c \x3d (cljs.core.truth_(cljs.core.deref(self__.last_was_whitespace_QMARK_))?clojure.string.upper_case(c):c);\ncljs.core._write(self__.writer,mod_c);\n\nreturn cljs.core.reset_BANG_(self__.last_was_whitespace_QMARK_,goog.string.isEmptyOrWhitespace(c));\n} else {\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__13574)].join(\x27\x27)));\n}\n}\n}));\n\n(cljs.pprint.t_cljs$pprint13566.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22last-was-whitespace?\x22,\x22last-was-whitespace?\x22,-1073928093,null),new cljs.core.Symbol(null,\x22meta13567\x22,\x22meta13567\x22,618032514,null)], null);\n}));\n\n(cljs.pprint.t_cljs$pprint13566.cljs$lang$type \x3d true);\n\n(cljs.pprint.t_cljs$pprint13566.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint13566\x22);\n\n(cljs.pprint.t_cljs$pprint13566.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.pprint/t_cljs$pprint13566\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/t_cljs$pprint13566.\n */\ncljs.pprint.__GT_t_cljs$pprint13566 \x3d (function cljs$pprint$capitalize_word_writer_$___GT_t_cljs$pprint13566(writer__$1,last_was_whitespace_QMARK___$1,meta13567){\nreturn (new cljs.pprint.t_cljs$pprint13566(writer__$1,last_was_whitespace_QMARK___$1,meta13567));\n});\n\n}\n\nreturn (new cljs.pprint.t_cljs$pprint13566(writer,last_was_whitespace_QMARK_,cljs.core.PersistentArrayMap.EMPTY));\n});\n/**\n * Returns a proxy that wraps writer, capitalizing the first word\n */\ncljs.pprint.init_cap_writer \x3d (function cljs$pprint$init_cap_writer(writer){\nvar capped \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(false);\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.t_cljs$pprint13582 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n*/\ncljs.pprint.t_cljs$pprint13582 \x3d (function (writer,capped,meta13583){\nthis.writer \x3d writer;\nthis.capped \x3d capped;\nthis.meta13583 \x3d meta13583;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1074135040;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(cljs.pprint.t_cljs$pprint13582.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_13584,meta13583__$1){\nvar self__ \x3d this;\nvar _13584__$1 \x3d this;\nreturn (new cljs.pprint.t_cljs$pprint13582(self__.writer,self__.capped,meta13583__$1));\n}));\n\n(cljs.pprint.t_cljs$pprint13582.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_13584){\nvar self__ \x3d this;\nvar _13584__$1 \x3d this;\nreturn self__.meta13583;\n}));\n\n(cljs.pprint.t_cljs$pprint13582.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core._flush(self__.writer);\n}));\n\n(cljs.pprint.t_cljs$pprint13582.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (this$,x){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar pred__13590 \x3d cljs.core._EQ_;\nvar expr__13591 \x3d cljs.core.type(x);\nif(cljs.core.truth_((pred__13590.cljs$core$IFn$_invoke$arity$2 ? pred__13590.cljs$core$IFn$_invoke$arity$2(String,expr__13591) : pred__13590.call(null,String,expr__13591)))){\nvar s \x3d clojure.string.lower_case(x);\nif(cljs.core.not(cljs.core.deref(self__.capped))){\nvar m \x3d RegExp(\x22\\\\S\x22,\x22g\x22).exec(s);\nvar offset \x3d (function (){var and__5043__auto__ \x3d m;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn m.index;\n} else {\nreturn and__5043__auto__;\n}\n})();\nif(cljs.core.truth_(offset)){\ncljs.core._write(self__.writer,[cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),offset),clojure.string.upper_case(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(s,offset)),clojure.string.lower_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(offset + (1))))].join(\x27\x27));\n\nreturn cljs.core.reset_BANG_(self__.capped,true);\n} else {\nreturn cljs.core._write(self__.writer,s);\n}\n} else {\nreturn cljs.core._write(self__.writer,clojure.string.lower_case(s));\n}\n} else {\nif(cljs.core.truth_((pred__13590.cljs$core$IFn$_invoke$arity$2 ? pred__13590.cljs$core$IFn$_invoke$arity$2(Number,expr__13591) : pred__13590.call(null,Number,expr__13591)))){\nvar c \x3d cljs.core.char$(x);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d cljs.core.not(cljs.core.deref(self__.capped));\nif(and__5043__auto__){\nreturn goog.string.isUnicodeChar(c);\n} else {\nreturn and__5043__auto__;\n}\n})())){\ncljs.core.reset_BANG_(self__.capped,true);\n\nreturn cljs.core._write(self__.writer,clojure.string.upper_case(c));\n} else {\nreturn cljs.core._write(self__.writer,clojure.string.lower_case(c));\n}\n} else {\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(expr__13591)].join(\x27\x27)));\n}\n}\n}));\n\n(cljs.pprint.t_cljs$pprint13582.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22writer\x22,\x22writer\x22,1362963291,null),new cljs.core.Symbol(null,\x22capped\x22,\x22capped\x22,-1650988402,null),new cljs.core.Symbol(null,\x22meta13583\x22,\x22meta13583\x22,-1824788941,null)], null);\n}));\n\n(cljs.pprint.t_cljs$pprint13582.cljs$lang$type \x3d true);\n\n(cljs.pprint.t_cljs$pprint13582.cljs$lang$ctorStr \x3d \x22cljs.pprint/t_cljs$pprint13582\x22);\n\n(cljs.pprint.t_cljs$pprint13582.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22cljs.pprint/t_cljs$pprint13582\x22);\n}));\n\n/**\n * Positional factory function for cljs.pprint/t_cljs$pprint13582.\n */\ncljs.pprint.__GT_t_cljs$pprint13582 \x3d (function cljs$pprint$init_cap_writer_$___GT_t_cljs$pprint13582(writer__$1,capped__$1,meta13583){\nreturn (new cljs.pprint.t_cljs$pprint13582(writer__$1,capped__$1,meta13583));\n});\n\n}\n\nreturn (new cljs.pprint.t_cljs$pprint13582(writer,capped,cljs.core.PersistentArrayMap.EMPTY));\n});\ncljs.pprint.modify_case \x3d (function cljs$pprint$modify_case(make_writer,params,navigator,offsets){\nvar clause \x3d cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params));\nvar _STAR_out_STAR__orig_val__13600 \x3d cljs.core._STAR_out_STAR_;\nvar _STAR_out_STAR__temp_val__13601 \x3d (make_writer.cljs$core$IFn$_invoke$arity$1 ? make_writer.cljs$core$IFn$_invoke$arity$1(cljs.core._STAR_out_STAR_) : make_writer.call(null,cljs.core._STAR_out_STAR_));\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__13601);\n\ntry{return cljs.pprint.execute_sub_format(clause,navigator,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__13600);\n}});\n/**\n * Returns the IWriter passed in wrapped in a pretty writer proxy, unless it\x27s\n * already a pretty writer. Generally, it is unnecessary to call this function, since pprint,\n * write, and cl-format all call it if they need to. However if you want the state to be\n * preserved across calls, you will want to wrap them with this.\n * \n * For example, when you want to generate column-aware output with multiple calls to cl-format,\n * do it like in this example:\n * \n *  (defn print-table [aseq column-width]\n *    (binding [*out* (get-pretty-writer *out*)]\n *      (doseq [row aseq]\n *        (doseq [col row]\n *          (cl-format true \x22~4D~7,vT\x22 col column-width))\n *        (prn))))\n * \n * Now when you run:\n * \n *  user\x3e (print-table (map #(vector % (* % %) (* % % %)) (range 1 11)) 8)\n * \n * It prints a table of squares and cubes for the numbers from 1 to 10:\n * \n *     1      1       1\n *     2      4       8\n *     3      9      27\n *     4     16      64\n *     5     25     125\n *     6     36     216\n *     7     49     343\n *     8     64     512\n *     9     81     729\n *    10    100    1000\n */\ncljs.pprint.get_pretty_writer \x3d (function cljs$pprint$get_pretty_writer(writer){\nif(cljs.core.truth_(cljs.pprint.pretty_writer_QMARK_(writer))){\nreturn writer;\n} else {\nreturn cljs.pprint.pretty_writer(writer,cljs.pprint._STAR_print_right_margin_STAR_,cljs.pprint._STAR_print_miser_width_STAR_);\n}\n});\n/**\n * Make a newline if *out* is not already at the beginning of the line. If *out* is\n * not a pretty writer (which keeps track of columns), this function always outputs a newline.\n */\ncljs.pprint.fresh_line \x3d (function cljs$pprint$fresh_line(){\nif((((!((cljs.core._STAR_out_STAR_ \x3d\x3d null))))?(((((cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d cljs.core._STAR_out_STAR_.cljs$core$IDeref$))))?true:(((!cljs.core._STAR_out_STAR_.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,cljs.core._STAR_out_STAR_):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,cljs.core._STAR_out_STAR_))){\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_)))))))){\nreturn cljs.pprint.prn();\n} else {\nreturn null;\n}\n} else {\nreturn cljs.pprint.prn();\n}\n});\ncljs.pprint.absolute_tabulation \x3d (function cljs$pprint$absolute_tabulation(params,navigator,offsets){\nvar colnum_14954 \x3d new cljs.core.Keyword(null,\x22colnum\x22,\x22colnum\x22,2023796854).cljs$core$IFn$_invoke$arity$1(params);\nvar colinc_14955 \x3d new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385).cljs$core$IFn$_invoke$arity$1(params);\nvar current_14956 \x3d cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_))));\nvar space_count_14957 \x3d (((current_14956 \x3c colnum_14954))?(colnum_14954 - current_14956):((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(colinc_14955,(0)))?(0):(colinc_14955 - cljs.core.rem((current_14956 - colnum_14954),colinc_14955))\n));\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(space_count_14957,\x22 \x22))], 0));\n\nreturn navigator;\n});\ncljs.pprint.relative_tabulation \x3d (function cljs$pprint$relative_tabulation(params,navigator,offsets){\nvar colrel_14958 \x3d new cljs.core.Keyword(null,\x22colnum\x22,\x22colnum\x22,2023796854).cljs$core$IFn$_invoke$arity$1(params);\nvar colinc_14959 \x3d new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385).cljs$core$IFn$_invoke$arity$1(params);\nvar start_col_14960 \x3d (colrel_14958 + cljs.pprint.get_column(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(cljs.core.deref(cljs.core._STAR_out_STAR_)))));\nvar offset_14961 \x3d (((colinc_14959 \x3e (0)))?cljs.core.rem(start_col_14960,colinc_14959):(0));\nvar space_count_14962 \x3d (colrel_14958 + ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((0),offset_14961))?(0):(colinc_14959 - offset_14961)));\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(space_count_14962,\x22 \x22))], 0));\n\nreturn navigator;\n});\ncljs.pprint.format_logical_block \x3d (function cljs$pprint$format_logical_block(params,navigator,offsets){\nvar clauses \x3d new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(params);\nvar clause_count \x3d cljs.core.count(clauses);\nvar prefix \x3d (((clause_count \x3e (1)))?new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.first(cljs.core.first(clauses)))):(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?\x22(\x22:null));\nvar body \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(clauses,(((clause_count \x3e (1)))?(1):(0)));\nvar suffix \x3d (((clause_count \x3e (2)))?new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.first(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(clauses,(2))))):(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?\x22)\x22:null));\nvar vec__13612 \x3d cljs.pprint.next_arg(navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13612,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13612,(1),null);\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13615_14964 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13616_14965 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13617_14966 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13618_14967 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13617_14966);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13618_14967);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,prefix,null,suffix);\n\ncljs.pprint.execute_sub_format(body,cljs.pprint.init_navigator(arg),new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params));\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13616_14965);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13615_14964);\n}}\n\n\nreturn navigator__$1;\n});\ncljs.pprint.set_indent \x3d (function cljs$pprint$set_indent(params,navigator,offsets){\nvar relative_to \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?new cljs.core.Keyword(null,\x22current\x22,\x22current\x22,-1088038603):new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210));\ncljs.pprint.pprint_indent(relative_to,new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025).cljs$core$IFn$_invoke$arity$1(params));\n\nreturn navigator;\n});\ncljs.pprint.conditional_newline \x3d (function cljs$pprint$conditional_newline(params,navigator,offsets){\nvar kind \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?new cljs.core.Keyword(null,\x22mandatory\x22,\x22mandatory\x22,542802336):new cljs.core.Keyword(null,\x22fill\x22,\x22fill\x22,883462889)):(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186):new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697)));\ncljs.pprint.pprint_newline(kind);\n\nreturn navigator;\n});\ncljs.pprint.directive_table \x3d cljs.core.PersistentHashMap.fromArrays([\x22A\x22,\x22S\x22,\x22D\x22,\x22B\x22,\x22O\x22,\x22X\x22,\x22R\x22,\x22P\x22,\x22C\x22,\x22F\x22,\x22E\x22,\x22G\x22,\x22$\x22,\x22%\x22,\x22\x26\x22,\x22|\x22,\x22~\x22,\x22\\n\x22,\x22T\x22,\x22*\x22,\x22?\x22,\x22(\x22,\x22)\x22,\x22[\x22,\x22;\x22,\x22]\x22,\x22{\x22,\x22}\x22,\x22\x3c\x22,\x22\x3e\x22,\x22^\x22,\x22W\x22,\x22_\x22,\x22I\x22],[new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22A\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (p1__13623_SHARP_,p2__13624_SHARP_,p3__13625_SHARP_){\nreturn cljs.pprint.format_ascii(cljs.core.print_str,p1__13623_SHARP_,p2__13624_SHARP_,p3__13625_SHARP_);\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22S\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (p1__13626_SHARP_,p2__13627_SHARP_,p3__13628_SHARP_){\nreturn cljs.pprint.format_ascii(cljs.core.pr_str,p1__13626_SHARP_,p2__13627_SHARP_,p3__13628_SHARP_);\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22D\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22,\x22,String], null),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (p1__13629_SHARP_,p2__13630_SHARP_,p3__13631_SHARP_){\nreturn cljs.pprint.format_integer((10),p1__13629_SHARP_,p2__13630_SHARP_,p3__13631_SHARP_);\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22B\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22,\x22,String], null),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (p1__13632_SHARP_,p2__13633_SHARP_,p3__13634_SHARP_){\nreturn cljs.pprint.format_integer((2),p1__13632_SHARP_,p2__13633_SHARP_,p3__13634_SHARP_);\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22O\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22,\x22,String], null),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (p1__13635_SHARP_,p2__13636_SHARP_,p3__13637_SHARP_){\nreturn cljs.pprint.format_integer((8),p1__13635_SHARP_,p2__13636_SHARP_,p3__13637_SHARP_);\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22X\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22,\x22,String], null),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (p1__13638_SHARP_,p2__13639_SHARP_,p3__13640_SHARP_){\nreturn cljs.pprint.format_integer((16),p1__13638_SHARP_,p2__13639_SHARP_,p3__13640_SHARP_);\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22R\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(5),[new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22commachar\x22,\x22commachar\x22,652859327),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22,\x22,String], null),new cljs.core.Keyword(null,\x22commainterval\x22,\x22commainterval\x22,-1980061083),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(3),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nif(cljs.core.truth_(cljs.core.first(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(params)))){\nreturn (function (p1__13641_SHARP_,p2__13642_SHARP_,p3__13645_SHARP_){\nreturn cljs.pprint.format_integer(new cljs.core.Keyword(null,\x22base\x22,\x22base\x22,185279322).cljs$core$IFn$_invoke$arity$1(p1__13641_SHARP_),p1__13641_SHARP_,p2__13642_SHARP_,p3__13645_SHARP_);\n});\n} else {\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn (function (p1__13646_SHARP_,p2__13647_SHARP_,p3__13648_SHARP_){\nreturn cljs.pprint.format_old_roman(p1__13646_SHARP_,p2__13647_SHARP_,p3__13648_SHARP_);\n});\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\nreturn (function (p1__13649_SHARP_,p2__13650_SHARP_,p3__13651_SHARP_){\nreturn cljs.pprint.format_new_roman(p1__13649_SHARP_,p2__13650_SHARP_,p3__13651_SHARP_);\n});\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))){\nreturn (function (p1__13652_SHARP_,p2__13653_SHARP_,p3__13654_SHARP_){\nreturn cljs.pprint.format_ordinal_english(p1__13652_SHARP_,p2__13653_SHARP_,p3__13654_SHARP_);\n});\n} else {\nreturn (function (p1__13655_SHARP_,p2__13656_SHARP_,p3__13657_SHARP_){\nreturn cljs.pprint.format_cardinal_english(p1__13655_SHARP_,p2__13656_SHARP_,p3__13657_SHARP_);\n});\n\n}\n}\n}\n}\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22P\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (params__$1,navigator,offsets){\nvar navigator__$1 \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params__$1))?cljs.pprint.relative_reposition(navigator,(-1)):navigator);\nvar strs \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params__$1))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22y\x22,\x22ies\x22], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,\x22s\x22], null));\nvar vec__13681 \x3d cljs.pprint.next_arg(navigator__$1);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13681,(0),null);\nvar navigator__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13681,(1),null);\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg,(1)))?cljs.core.first(strs):cljs.core.second(strs))], 0));\n\nreturn navigator__$2;\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22C\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22char-format\x22,\x22char-format\x22,-1016499218),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))){\nreturn cljs.pprint.pretty_character;\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\nreturn cljs.pprint.readable_character;\n} else {\nreturn cljs.pprint.plain_character;\n\n}\n}\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22F\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(5),[new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn cljs.pprint.fixed_float;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22E\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(7),[new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22e\x22,\x22e\x22,1381269198),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22exponentchar\x22,\x22exponentchar\x22,1986664222),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn cljs.pprint.exponential_float;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22G\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(7),[new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22e\x22,\x22e\x22,1381269198),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22k\x22,\x22k\x22,-2146297393),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22overflowchar\x22,\x22overflowchar\x22,-1620088106),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null),new cljs.core.Keyword(null,\x22exponentchar\x22,\x22exponentchar\x22,1986664222),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn cljs.pprint.general_float;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22$\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22d\x22,\x22d\x22,1972142424),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),Number], null),new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22w\x22,\x22w\x22,354169001),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn cljs.pprint.dollar_float;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22%\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (params__$1,arg_navigator,offsets){\nvar n__5636__auto___14987 \x3d new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085).cljs$core$IFn$_invoke$arity$1(params__$1);\nvar i_14988 \x3d (0);\nwhile(true){\nif((i_14988 \x3c n__5636__auto___14987)){\ncljs.pprint.prn();\n\nvar G__14989 \x3d (i_14988 + (1));\ni_14988 \x3d G__14989;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn arg_navigator;\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22\x26\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (params__$1,arg_navigator,offsets){\nvar cnt_14991 \x3d new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085).cljs$core$IFn$_invoke$arity$1(params__$1);\nif((cnt_14991 \x3e (0))){\ncljs.pprint.fresh_line();\n} else {\n}\n\nvar n__5636__auto___14992 \x3d (cnt_14991 - (1));\nvar i_14993 \x3d (0);\nwhile(true){\nif((i_14993 \x3c n__5636__auto___14992)){\ncljs.pprint.prn();\n\nvar G__14994 \x3d (i_14993 + (1));\ni_14993 \x3d G__14994;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn arg_navigator;\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22|\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (params__$1,arg_navigator,offsets){\nvar n__5636__auto___14996 \x3d new cljs.core.Keyword(null,\x22count\x22,\x22count\x22,2139924085).cljs$core$IFn$_invoke$arity$1(params__$1);\nvar i_14998 \x3d (0);\nwhile(true){\nif((i_14998 \x3c n__5636__auto___14996)){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22\\f\x22], 0));\n\nvar G__14999 \x3d (i_14998 + (1));\ni_14998 \x3d G__14999;\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn arg_navigator;\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22~\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (params__$1,arg_navigator,offsets){\nvar n \x3d new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025).cljs$core$IFn$_invoke$arity$1(params__$1);\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(n,\x22~\x22))], 0));\n\nreturn arg_navigator;\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22\\n\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (params__$1,arg_navigator,offsets){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params__$1))){\ncljs.pprint.prn();\n} else {\n}\n\nreturn arg_navigator;\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22T\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(2),[new cljs.core.Keyword(null,\x22colnum\x22,\x22colnum\x22,2023796854),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\nreturn (function (p1__13658_SHARP_,p2__13659_SHARP_,p3__13660_SHARP_){\nreturn cljs.pprint.relative_tabulation(p1__13658_SHARP_,p2__13659_SHARP_,p3__13660_SHARP_);\n});\n} else {\nreturn (function (p1__13661_SHARP_,p2__13662_SHARP_,p3__13663_SHARP_){\nreturn cljs.pprint.absolute_tabulation(p1__13661_SHARP_,p2__13662_SHARP_,p3__13663_SHARP_);\n});\n}\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22*\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (params__$1,navigator,offsets){\nvar n \x3d new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025).cljs$core$IFn$_invoke$arity$1(params__$1);\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params__$1))){\nreturn cljs.pprint.absolute_reposition(navigator,n);\n} else {\nreturn cljs.pprint.relative_reposition(navigator,(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params__$1))?(- n):n));\n}\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22?\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\nreturn (function (params__$1,navigator,offsets){\nvar vec__13697 \x3d cljs.pprint.get_format_arg(navigator);\nvar subformat \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13697,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13697,(1),null);\nreturn cljs.pprint.execute_sub_format(subformat,navigator__$1,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params__$1));\n});\n} else {\nreturn (function (params__$1,navigator,offsets){\nvar vec__13701 \x3d cljs.pprint.get_format_arg(navigator);\nvar subformat \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13701,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13701,(1),null);\nvar vec__13704 \x3d cljs.pprint.next_arg(navigator__$1);\nvar subargs \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13704,(0),null);\nvar navigator__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13704,(1),null);\nvar sub_navigator \x3d cljs.pprint.init_navigator(subargs);\ncljs.pprint.execute_sub_format(subformat,sub_navigator,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params__$1));\n\nreturn navigator__$2;\n});\n}\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22(\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833),\x22)\x22,new cljs.core.Keyword(null,\x22allows-separator\x22,\x22allows-separator\x22,-818967742),null,new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),null], null),new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nvar mod_case_writer \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\n} else {\nreturn and__5043__auto__;\n}\n})())?cljs.pprint.upcase_writer:(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?cljs.pprint.capitalize_word_writer:(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?cljs.pprint.init_cap_writer:cljs.pprint.downcase_writer\n)));\nreturn (function (p1__13668_SHARP_,p2__13669_SHARP_,p3__13670_SHARP_){\nreturn cljs.pprint.modify_case(mod_case_writer,p1__13668_SHARP_,p2__13669_SHARP_,p3__13670_SHARP_);\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22)\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn null;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22[\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22selector\x22,\x22selector\x22,762528866),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833),\x22]\x22,new cljs.core.Keyword(null,\x22allows-separator\x22,\x22allows-separator\x22,-818967742),true,new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),new cljs.core.Keyword(null,\x22last\x22,\x22last\x22,1105735132)], null),new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))){\nreturn cljs.pprint.boolean_conditional;\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\nreturn cljs.pprint.check_arg_conditional;\n} else {\nreturn cljs.pprint.choice_conditional;\n\n}\n}\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22;\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(2),[new cljs.core.Keyword(null,\x22min-remaining\x22,\x22min-remaining\x22,962687677),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22max-columns\x22,\x22max-columns\x22,1742323262),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125),true], null),new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn null;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22]\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),cljs.core.PersistentHashSet.EMPTY,new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn null;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22{\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22max-iterations\x22,\x22max-iterations\x22,2021275563),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833),\x22}\x22,new cljs.core.Keyword(null,\x22allows-separator\x22,\x22allows-separator\x22,-818967742),false], null),new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn cljs.pprint.iterate_main_sublists;\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))){\nreturn cljs.pprint.iterate_list_of_sublists;\n} else {\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))){\nreturn cljs.pprint.iterate_main_list;\n} else {\nreturn cljs.pprint.iterate_sublist;\n\n}\n}\n}\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22}\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn null;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22\x3c\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(4),[new cljs.core.Keyword(null,\x22mincol\x22,\x22mincol\x22,1230695445),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22colinc\x22,\x22colinc\x22,-584873385),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),Number], null),new cljs.core.Keyword(null,\x22minpad\x22,\x22minpad\x22,323570901),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null),new cljs.core.Keyword(null,\x22padchar\x22,\x22padchar\x22,2018584530),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,String], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null,new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833),\x22\x3e\x22,new cljs.core.Keyword(null,\x22allows-separator\x22,\x22allows-separator\x22,-818967742),true,new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),new cljs.core.Keyword(null,\x22first\x22,\x22first\x22,-644103046)], null),new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn cljs.pprint.logical_block_or_justify;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22\x3e\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn null;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22^\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(3),[new cljs.core.Keyword(null,\x22arg1\x22,\x22arg1\x22,951899358),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22arg2\x22,\x22arg2\x22,1729550917),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null),new cljs.core.Keyword(null,\x22arg3\x22,\x22arg3\x22,-1486822496),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn (function (params__$1,navigator,offsets){\nvar arg1 \x3d new cljs.core.Keyword(null,\x22arg1\x22,\x22arg1\x22,951899358).cljs$core$IFn$_invoke$arity$1(params__$1);\nvar arg2 \x3d new cljs.core.Keyword(null,\x22arg2\x22,\x22arg2\x22,1729550917).cljs$core$IFn$_invoke$arity$1(params__$1);\nvar arg3 \x3d new cljs.core.Keyword(null,\x22arg3\x22,\x22arg3\x22,-1486822496).cljs$core$IFn$_invoke$arity$1(params__$1);\nvar exit \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params__$1))?new cljs.core.Keyword(null,\x22colon-up-arrow\x22,\x22colon-up-arrow\x22,244853007):new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333));\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d arg1;\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d arg2;\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn arg3;\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})())){\nif((((arg1 \x3c\x3d arg2)) \x26\x26 ((arg2 \x3c\x3d arg3)))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit,navigator], null);\n} else {\nreturn navigator;\n}\n} else {\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d arg1;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn arg2;\n} else {\nreturn and__5043__auto__;\n}\n})())){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg1,arg2)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit,navigator], null);\n} else {\nreturn navigator;\n}\n} else {\nif(cljs.core.truth_(arg1)){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arg1,(0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit,navigator], null);\n} else {\nreturn navigator;\n}\n} else {\nif((cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params__$1))?cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822).cljs$core$IFn$_invoke$arity$1(params__$1))):cljs.core.empty_QMARK_(new cljs.core.Keyword(null,\x22rest\x22,\x22rest\x22,-1241696419).cljs$core$IFn$_invoke$arity$1(navigator)))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [exit,navigator], null);\n} else {\nreturn navigator;\n}\n\n}\n}\n}\n});\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22W\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null,new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params);\n}\n})())){\nvar bindings \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$2((cljs.core.truth_(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(params))?new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22level\x22,\x22level\x22,1290497552),null,new cljs.core.Keyword(null,\x22length\x22,\x22length\x22,588987862),null], null):cljs.core.PersistentVector.EMPTY),(cljs.core.truth_(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486),true], null):cljs.core.PersistentVector.EMPTY));\nreturn (function (params__$1,navigator,offsets){\nvar vec__13714 \x3d cljs.pprint.next_arg(navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13714,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13714,(1),null);\nif(cljs.core.truth_(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.pprint.write,arg,bindings))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),navigator__$1], null);\n} else {\nreturn navigator__$1;\n}\n});\n} else {\nreturn (function (params__$1,navigator,offsets){\nvar vec__13717 \x3d cljs.pprint.next_arg(navigator);\nvar arg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13717,(0),null);\nvar navigator__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13717,(1),null);\nif(cljs.core.truth_(cljs.pprint.write_out(arg))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22up-arrow\x22,\x22up-arrow\x22,1705310333),navigator__$1], null);\n} else {\nreturn navigator__$1;\n}\n});\n}\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22_\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349),null,new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn cljs.pprint.conditional_newline;\n})], null),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132),\x22I\x22,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235),(new cljs.core.PersistentArrayMap(null,(1),[new cljs.core.Keyword(null,\x22n\x22,\x22n\x22,562130025),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),Number], null)],null)),new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),null], null), null),new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774),cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656),(function (params,offset){\nreturn cljs.pprint.set_indent;\n})], null)]);\ncljs.pprint.param_pattern \x3d /^([vV]|#|(\x27.)|([+-]?\\d+)|(?\x3d,))/;\ncljs.pprint.special_params \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22remaining-arg-count\x22,\x22remaining-arg-count\x22,-1216589335),null,new cljs.core.Keyword(null,\x22parameter-from-args\x22,\x22parameter-from-args\x22,-758446196),null], null), null);\ncljs.pprint.extract_param \x3d (function cljs$pprint$extract_param(p__13720){\nvar vec__13721 \x3d p__13720;\nvar s \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13721,(0),null);\nvar offset \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13721,(1),null);\nvar saw_comma \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13721,(2),null);\nvar m \x3d (new RegExp(cljs.pprint.param_pattern.source,\x22g\x22));\nvar param \x3d m.exec(s);\nif(cljs.core.truth_(param)){\nvar token_str \x3d cljs.core.first(param);\nvar remainder \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,m.lastIndex);\nvar new_offset \x3d (offset + m.lastIndex);\nif((!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22,\x22,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(remainder,(0)))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str,offset], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder,new_offset,false], null)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [token_str,offset], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$2(remainder,(1)),(new_offset + (1)),true], null)], null);\n}\n} else {\nif(cljs.core.truth_(saw_comma)){\nreturn cljs.pprint.format_error(\x22Badly formed parameters in format directive\x22,offset);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [s,offset], null)], null);\n}\n}\n});\ncljs.pprint.extract_params \x3d (function cljs$pprint$extract_params(s,offset){\nreturn cljs.pprint.consume(cljs.pprint.extract_param,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s,offset,false], null));\n});\n/**\n * Translate the string representation of a param to the internalized\n *                                    representation\n */\ncljs.pprint.translate_param \x3d (function cljs$pprint$translate_param(p__13730){\nvar vec__13731 \x3d p__13730;\nvar p \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13731,(0),null);\nvar offset \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13731,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length,(0)))?null:((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length,(1))) \x26\x26 (cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\x22V\x22,null,\x22v\x22,null], null), null),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p,(0))))))?new cljs.core.Keyword(null,\x22parameter-from-args\x22,\x22parameter-from-args\x22,-758446196):((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length,(1))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22#\x22,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p,(0))))))?new cljs.core.Keyword(null,\x22remaining-arg-count\x22,\x22remaining-arg-count\x22,-1216589335):((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(p.length,(2))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\x27\x22,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p,(0))))))?cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p,(1)):parseInt(p,(10))\n)))),offset], null);\n});\ncljs.pprint.flag_defs \x3d new cljs.core.PersistentArrayMap(null, 2, [\x22:\x22,new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945),\x22@\x22,new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349)], null);\ncljs.pprint.extract_flags \x3d (function cljs$pprint$extract_flags(s,offset){\nreturn cljs.pprint.consume((function (p__13735){\nvar vec__13736 \x3d p__13735;\nvar s__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13736,(0),null);\nvar offset__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13736,(1),null);\nvar flags \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13736,(2),null);\nif(cljs.core.empty_QMARK_(s__$1)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1,offset__$1,flags], null)], null);\n} else {\nvar flag \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.flag_defs,cljs.core.first(s__$1));\nif(cljs.core.truth_(flag)){\nif(cljs.core.contains_QMARK_(flags,flag)){\nreturn cljs.pprint.format_error([\x22Flag \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(s__$1)),\x22\\\x22 appears more than once in a directive\x22].join(\x27\x27),offset__$1);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s__$1,(1)),(offset__$1 + (1)),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(flags,flag,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,offset__$1], null))], null)], null);\n}\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s__$1,offset__$1,flags], null)], null);\n}\n}\n}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [s,offset,cljs.core.PersistentArrayMap.EMPTY], null));\n});\ncljs.pprint.check_flags \x3d (function cljs$pprint$check_flags(def,flags){\nvar allowed \x3d new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075).cljs$core$IFn$_invoke$arity$1(def);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d cljs.core.not(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(allowed));\nif(and__5043__auto__){\nreturn new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(flags);\n} else {\nreturn and__5043__auto__;\n}\n})())){\ncljs.pprint.format_error([\x22\\\x22@\\\x22 is an illegal flag for format directive \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def)),\x22\\\x22\x22].join(\x27\x27),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(flags),(1)));\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(allowed));\nif(and__5043__auto__){\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(flags);\n} else {\nreturn and__5043__auto__;\n}\n})())){\ncljs.pprint.format_error([\x22\\\x22:\\\x22 is an illegal flag for format directive \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def)),\x22\\\x22\x22].join(\x27\x27),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(flags),(1)));\n} else {\n}\n\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d cljs.core.not(new cljs.core.Keyword(null,\x22both\x22,\x22both\x22,-393648840).cljs$core$IFn$_invoke$arity$1(allowed));\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(flags);\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(flags);\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn cljs.pprint.format_error([\x22Cannot combine \\\x22@\\\x22 and \\\x22:\\\x22 flags for format directive \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def)),\x22\\\x22\x22].join(\x27\x27),(function (){var x__5133__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(flags),(1));\nvar y__5134__auto__ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22at\x22,\x22at\x22,1476951349).cljs$core$IFn$_invoke$arity$1(flags),(1));\nreturn ((x__5133__auto__ \x3c y__5134__auto__) ? x__5133__auto__ : y__5134__auto__);\n})());\n} else {\nreturn null;\n}\n});\n/**\n * Takes a directive definition and the list of actual parameters and\n * a map of flags and returns a map of the parameters and flags with defaults\n * filled in. We check to make sure that there are the right types and number\n * of parameters as well.\n */\ncljs.pprint.map_params \x3d (function cljs$pprint$map_params(def,params,flags,offset){\ncljs.pprint.check_flags(def,flags);\n\nif((cljs.core.count(params) \x3e cljs.core.count(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(def)))){\ncljs.pprint.format_error(cljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(null,\x22Too many parameters for directive \\\x22~C\\\x22: ~D~:* ~[were~;was~:;were~] specified but only ~D~:* ~[are~;is~:;are~] allowed\x22,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def),cljs.core.count(params),cljs.core.count(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(def))], 0)),cljs.core.second(cljs.core.first(params)));\n} else {\n}\n\ncljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__13741_SHARP_,p2__13742_SHARP_){\nvar val \x3d cljs.core.first(p1__13741_SHARP_);\nif((!((((val \x3d\x3d null)) || (((cljs.core.contains_QMARK_(cljs.pprint.special_params,val)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.second(cljs.core.second(p2__13742_SHARP_)),cljs.core.type(val))))))))){\nreturn cljs.pprint.format_error([\x22Parameter \x22,cljs.core.name(cljs.core.first(p2__13742_SHARP_)),\x22 has bad type in directive \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def)),\x22\\\x22: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.type(val))].join(\x27\x27),cljs.core.second(p1__13741_SHARP_));\n} else {\nreturn null;\n}\n}),params,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(def)));\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.reverse((function (){var iter__5523__auto__ \x3d (function cljs$pprint$map_params_$_iter__13747(s__13748){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__13748__$1 \x3d s__13748;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__13748__$1);\nif(temp__5804__auto__){\nvar s__13748__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__13748__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__13748__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__13750 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__13749 \x3d (0);\nwhile(true){\nif((i__13749 \x3c size__5522__auto__)){\nvar vec__13751 \x3d cljs.core._nth(c__5521__auto__,i__13749);\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13751,(0),null);\nvar vec__13754 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13751,(1),null);\nvar default$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13754,(0),null);\ncljs.core.chunk_append(b__13750,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$,offset], null)], null));\n\nvar G__15004 \x3d (i__13749 + (1));\ni__13749 \x3d G__15004;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__13750),cljs$pprint$map_params_$_iter__13747(cljs.core.chunk_rest(s__13748__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__13750),null);\n}\n} else {\nvar vec__13759 \x3d cljs.core.first(s__13748__$2);\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13759,(0),null);\nvar vec__13762 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13759,(1),null);\nvar default$ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13762,(0),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [default$,offset], null)], null),cljs$pprint$map_params_$_iter__13747(cljs.core.rest(s__13748__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(def));\n})())),cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__13743_SHARP_,p2__13744_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc,p1__13743_SHARP_,p2__13744_SHARP_);\n}),cljs.core.PersistentArrayMap.EMPTY,cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__13745_SHARP_){\nreturn cljs.core.first(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(p1__13745_SHARP_,(1)));\n}),cljs.core.zipmap(cljs.core.keys(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(def)),params))),flags], 0));\n});\ncljs.pprint.compile_directive \x3d (function cljs$pprint$compile_directive(s,offset){\nvar vec__13765 \x3d cljs.pprint.extract_params(s,offset);\nvar raw_params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13765,(0),null);\nvar vec__13768 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13765,(1),null);\nvar rest \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13768,(0),null);\nvar offset__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13768,(1),null);\nvar vec__13771 \x3d cljs.pprint.extract_flags(rest,offset__$1);\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13771,(0),null);\nvar vec__13774 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13771,(1),null);\nvar rest__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13774,(0),null);\nvar offset__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13774,(1),null);\nvar flags \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13774,(2),null);\nvar directive \x3d cljs.core.first(rest__$1);\nvar def \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.pprint.directive_table,clojure.string.upper_case(directive));\nvar params \x3d (cljs.core.truth_(def)?cljs.pprint.map_params(def,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.pprint.translate_param,raw_params),flags,offset__$2):null);\nif(cljs.core.not(directive)){\ncljs.pprint.format_error(\x22Format string ended in the middle of a directive\x22,offset__$2);\n} else {\n}\n\nif(cljs.core.not(def)){\ncljs.pprint.format_error([\x22Directive \\\x22\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(directive),\x22\\\x22 is undefined\x22].join(\x27\x27),offset__$2);\n} else {\n}\n\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.pprint.compiled_directive((function (){var fexpr__13779 \x3d new cljs.core.Keyword(null,\x22generator-fn\x22,\x22generator-fn\x22,811851656).cljs$core$IFn$_invoke$arity$1(def);\nreturn (fexpr__13779.cljs$core$IFn$_invoke$arity$2 ? fexpr__13779.cljs$core$IFn$_invoke$arity$2(params,offset__$2) : fexpr__13779.call(null,params,offset__$2));\n})(),def,params,offset__$2,null,null,null)),(function (){var remainder \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(rest__$1,(1));\nvar offset__$3 \x3d (offset__$2 + (1));\nvar trim_QMARK_ \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\\n\x22,new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(def))) \x26\x26 (cljs.core.not(new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(params))));\nvar trim_count \x3d ((trim_QMARK_)?cljs.pprint.prefix_count(remainder,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22 \x22,\x22\\t\x22], null)):(0));\nvar remainder__$1 \x3d cljs.core.subs.cljs$core$IFn$_invoke$arity$2(remainder,trim_count);\nvar offset__$4 \x3d (offset__$3 + trim_count);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [remainder__$1,offset__$4], null);\n})()], null);\n});\ncljs.pprint.compile_raw_string \x3d (function cljs$pprint$compile_raw_string(s,offset){\nreturn (new cljs.pprint.compiled_directive((function (_,a,___$1){\ncljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s], 0));\n\nreturn a;\n}),null,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),s], null),offset,null,null,null));\n});\ncljs.pprint.right_bracket \x3d (function cljs$pprint$right_bracket(this$){\nreturn new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$)));\n});\ncljs.pprint.separator_QMARK_ \x3d (function cljs$pprint$separator_QMARK_(this$){\nreturn new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$)));\n});\ncljs.pprint.else_separator_QMARK_ \x3d (function cljs$pprint$else_separator_QMARK_(this$){\nvar and__5043__auto__ \x3d new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$)));\nif(cljs.core.truth_(and__5043__auto__)){\nreturn new cljs.core.Keyword(null,\x22colon\x22,\x22colon\x22,-965200945).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(this$));\n} else {\nreturn and__5043__auto__;\n}\n});\ncljs.pprint.process_bracket \x3d (function cljs$pprint$process_bracket(this$,remainder){\nvar vec__13781 \x3d cljs.pprint.collect_clauses(new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$)),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(this$),remainder);\nvar subex \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13781,(0),null);\nvar remainder__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13781,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.pprint.compiled_directive(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040).cljs$core$IFn$_invoke$arity$1(this$),new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(this$),cljs.pprint.tuple_map(subex,new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(this$))], 0)),new cljs.core.Keyword(null,\x22offset\x22,\x22offset\x22,296498311).cljs$core$IFn$_invoke$arity$1(this$),null,null,null)),remainder__$1], null);\n});\ncljs.pprint.process_clause \x3d (function cljs$pprint$process_clause(bracket_info,offset,remainder){\nreturn cljs.pprint.consume((function (remainder__$1){\nif(cljs.core.empty_QMARK_(remainder__$1)){\nreturn cljs.pprint.format_error(\x22No closing bracket found.\x22,offset);\n} else {\nvar this$ \x3d cljs.core.first(remainder__$1);\nvar remainder__$2 \x3d cljs.core.next(remainder__$1);\nif(cljs.core.truth_(cljs.pprint.right_bracket(this$))){\nreturn cljs.pprint.process_bracket(this$,remainder__$2);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833).cljs$core$IFn$_invoke$arity$1(bracket_info),new cljs.core.Keyword(null,\x22directive\x22,\x22directive\x22,793559132).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$)))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22right-bracket\x22,\x22right-bracket\x22,951856080),new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(this$),null,remainder__$2], null)], null);\n} else {\nif(cljs.core.truth_(cljs.pprint.else_separator_QMARK_(this$))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),null,new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(this$),remainder__$2], null)], null);\n} else {\nif(cljs.core.truth_(cljs.pprint.separator_QMARK_(this$))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125),null,null,remainder__$2], null)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$,remainder__$2], null);\n\n}\n}\n}\n}\n}\n}),remainder);\n});\ncljs.pprint.collect_clauses \x3d (function cljs$pprint$collect_clauses(bracket_info,offset,remainder){\nreturn cljs.core.second(cljs.pprint.consume((function (p__13791){\nvar vec__13792 \x3d p__13791;\nvar clause_map \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13792,(0),null);\nvar saw_else \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13792,(1),null);\nvar remainder__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13792,(2),null);\nvar vec__13795 \x3d cljs.pprint.process_clause(bracket_info,offset,remainder__$1);\nvar clause \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13795,(0),null);\nvar vec__13798 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13795,(1),null);\nvar type \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13798,(0),null);\nvar right_params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13798,(1),null);\nvar else_params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13798,(2),null);\nvar remainder__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13798,(3),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\x22right-bracket\x22,\x22right-bracket\x22,951856080))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map,cljs.core.PersistentArrayMap.createAsIfByAssoc([(cljs.core.truth_(saw_else)?new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146):new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241)),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null),new cljs.core.Keyword(null,\x22right-params\x22,\x22right-params\x22,-1790676237),right_params])], 0)),remainder__$2], null)], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146))){\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(clause_map))){\nreturn cljs.pprint.format_error(\x22Two else clauses (\\\x22~:;\\\x22) inside bracket construction.\x22,offset);\n} else {\nif(cljs.core.not(new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(bracket_info))){\nreturn cljs.pprint.format_error(\x22An else clause (\\\x22~:;\\\x22) is in a bracket type that doesn\x27t support it.\x22,offset);\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22first\x22,\x22first\x22,-644103046),new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(bracket_info))) \x26\x26 (cljs.core.seq(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(clause_map))))){\nreturn cljs.pprint.format_error(\x22The else clause (\\\x22~:;\\\x22) is only allowed in the first position for this directive.\x22,offset);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22first\x22,\x22first\x22,-644103046),new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(bracket_info))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null),new cljs.core.Keyword(null,\x22else-params\x22,\x22else-params\x22,-832171646),else_params], null)], 0)),false,remainder__$2], null)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)], 0)),true,remainder__$2], null)], null);\n}\n\n}\n}\n}\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(type,new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125))){\nif(cljs.core.truth_(saw_else)){\nreturn cljs.pprint.format_error(\x22A plain clause (with \\\x22~;\\\x22) follows an else clause (\\\x22~:;\\\x22) inside bracket construction.\x22,offset);\n} else {\nif(cljs.core.not(new cljs.core.Keyword(null,\x22allows-separator\x22,\x22allows-separator\x22,-818967742).cljs$core$IFn$_invoke$arity$1(bracket_info))){\nreturn cljs.pprint.format_error(\x22A separator (\\\x22~;\\\x22) is in a bracket type that doesn\x27t support it.\x22,offset);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [true,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.merge_with.cljs$core$IFn$_invoke$arity$variadic(cljs.core.concat,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([clause_map,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [clause], null)], null)], 0)),false,remainder__$2], null)], null);\n\n}\n}\n} else {\nreturn null;\n}\n}\n}\n}),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241),cljs.core.PersistentVector.EMPTY], null),false,remainder], null)));\n});\n/**\n * Take a linearly compiled format and process the bracket directives to give it\n * the appropriate tree structure\n */\ncljs.pprint.process_nesting \x3d (function cljs$pprint$process_nesting(format){\nreturn cljs.core.first(cljs.pprint.consume((function (remainder){\nvar this$ \x3d cljs.core.first(remainder);\nvar remainder__$1 \x3d cljs.core.next(remainder);\nvar bracket \x3d new cljs.core.Keyword(null,\x22bracket-info\x22,\x22bracket-info\x22,-1600092774).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(this$));\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22right\x22,\x22right\x22,-452581833).cljs$core$IFn$_invoke$arity$1(bracket))){\nreturn cljs.pprint.process_bracket(this$,remainder__$1);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [this$,remainder__$1], null);\n}\n}),format));\n});\n/**\n * Compiles format-str into a compiled format which can be used as an argument\n * to cl-format just like a plain format string. Use this function for improved\n * performance when you\x27re using the same format string repeatedly\n */\ncljs.pprint.compile_format \x3d (function cljs$pprint$compile_format(format_str){\nvar _STAR_format_str_STAR__orig_val__13802 \x3d cljs.pprint._STAR_format_str_STAR_;\nvar _STAR_format_str_STAR__temp_val__13803 \x3d format_str;\n(cljs.pprint._STAR_format_str_STAR_ \x3d _STAR_format_str_STAR__temp_val__13803);\n\ntry{return cljs.pprint.process_nesting(cljs.core.first(cljs.pprint.consume((function (p__13804){\nvar vec__13805 \x3d p__13804;\nvar s \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13805,(0),null);\nvar offset \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13805,(1),null);\nif(cljs.core.empty_QMARK_(s)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,s], null);\n} else {\nvar tilde \x3d s.indexOf(\x22~\x22);\nif((tilde \x3c (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string(s,offset),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,(offset + s.length)], null)], null);\n} else {\nif((tilde \x3d\x3d\x3d (0))){\nreturn cljs.pprint.compile_directive(cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(1)),(offset + (1)));\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.pprint.compile_raw_string(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),tilde),offset),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,tilde),(tilde + offset)], null)], null);\n\n}\n}\n}\n}),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [format_str,(0)], null))));\n}finally {(cljs.pprint._STAR_format_str_STAR_ \x3d _STAR_format_str_STAR__orig_val__13802);\n}});\n/**\n * determine whether a given compiled format has any directives that depend on the\n * column number or pretty printing\n */\ncljs.pprint.needs_pretty \x3d (function cljs$pprint$needs_pretty(format){\nvar format__$1 \x3d format;\nwhile(true){\nif(cljs.core.empty_QMARK_(format__$1)){\nreturn false;\n} else {\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22pretty\x22,\x22pretty\x22,-1916372486).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22flags\x22,\x22flags\x22,1775418075).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22def\x22,\x22def\x22,-1043430536).cljs$core$IFn$_invoke$arity$1(cljs.core.first(format__$1))));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d cljs.core.some(cljs.pprint.needs_pretty,cljs.core.first(new cljs.core.Keyword(null,\x22clauses\x22,\x22clauses\x22,1454841241).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.first(format__$1)))));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn cljs.core.some(cljs.pprint.needs_pretty,cljs.core.first(new cljs.core.Keyword(null,\x22else\x22,\x22else\x22,-1508377146).cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(cljs.core.first(format__$1)))));\n}\n}\n})())){\nreturn true;\n} else {\nvar G__15008 \x3d cljs.core.next(format__$1);\nformat__$1 \x3d G__15008;\ncontinue;\n}\n}\nbreak;\n}\n});\n/**\n * Executes the format with the arguments.\n */\ncljs.pprint.execute_format \x3d (function cljs$pprint$execute_format(var_args){\nvar G__13819 \x3d arguments.length;\nswitch (G__13819) {\ncase 3:\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 2:\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$3 \x3d (function (stream,format,args){\nvar sb \x3d (new goog.string.StringBuffer());\nvar real_stream \x3d ((((cljs.core.not(stream)) || (stream \x3d\x3d\x3d true)))?(new cljs.core.StringBufferWriter(sb)):stream);\nvar wrapped_stream \x3d ((((cljs.pprint.needs_pretty(format)) \x26\x26 (cljs.core.not(cljs.pprint.pretty_writer_QMARK_(real_stream)))))?cljs.pprint.get_pretty_writer(real_stream):real_stream);\nvar _STAR_out_STAR__orig_val__13820 \x3d cljs.core._STAR_out_STAR_;\nvar _STAR_out_STAR__temp_val__13821 \x3d wrapped_stream;\n(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__temp_val__13821);\n\ntry{try{cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(format,args);\n}finally {if((!((real_stream \x3d\x3d\x3d wrapped_stream)))){\ncljs.core._flush(wrapped_stream);\n} else {\n}\n}\nif(cljs.core.not(stream)){\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\n} else {\nif(stream \x3d\x3d\x3d true){\nreturn cljs.core.string_print(cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb));\n} else {\nreturn null;\n\n}\n}\n}finally {(cljs.core._STAR_out_STAR_ \x3d _STAR_out_STAR__orig_val__13820);\n}}));\n\n(cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2 \x3d (function (format,args){\ncljs.pprint.map_passing_context((function (element,context){\nif(cljs.pprint.abort_QMARK_(context)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,context], null);\n} else {\nvar vec__13823 \x3d cljs.pprint.realize_parameter_list(new cljs.core.Keyword(null,\x22params\x22,\x22params\x22,710516235).cljs$core$IFn$_invoke$arity$1(element),context);\nvar params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13823,(0),null);\nvar args__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13823,(1),null);\nvar vec__13826 \x3d cljs.pprint.unzip_map(params);\nvar params__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13826,(0),null);\nvar offsets \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13826,(1),null);\nvar params__$2 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(params__$1,new cljs.core.Keyword(null,\x22base-args\x22,\x22base-args\x22,-1268706822),args__$1);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22func\x22,\x22func\x22,-238706040).cljs$core$IFn$_invoke$arity$1(element),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [params__$2,args__$1,offsets], null))], null);\n}\n}),args,format);\n\nreturn null;\n}));\n\n(cljs.pprint.execute_format.cljs$lang$maxFixedArity \x3d 3);\n\ncljs.pprint.cached_compile \x3d cljs.core.memoize(cljs.pprint.compile_format);\n/**\n * Installs a function as a new method of multimethod associated with dispatch-value. \n */\ncljs.pprint.use_method \x3d (function cljs$pprint$use_method(multifn,dispatch_val,func){\nreturn cljs.core._add_method(multifn,dispatch_val,func);\n});\ncljs.pprint.reader_macros \x3d new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Symbol(null,\x22quote\x22,\x22quote\x22,1377916282,null),\x22\x27\x22,new cljs.core.Symbol(null,\x22var\x22,\x22var\x22,870848730,null),\x22#\x27\x22,new cljs.core.Symbol(\x22clojure.core\x22,\x22deref\x22,\x22clojure.core/deref\x22,188719157,null),\x22@\x22,new cljs.core.Symbol(\x22clojure.core\x22,\x22unquote\x22,\x22clojure.core/unquote\x22,843087510,null),\x22~\x22,new cljs.core.Symbol(\x22cljs.core\x22,\x22deref\x22,\x22cljs.core/deref\x22,1901963335,null),\x22@\x22,new cljs.core.Symbol(\x22cljs.core\x22,\x22unquote\x22,\x22cljs.core/unquote\x22,1013085760,null),\x22~\x22], null);\ncljs.pprint.pprint_reader_macro \x3d (function cljs$pprint$pprint_reader_macro(alis){\nvar macro_char \x3d (function (){var G__13831 \x3d cljs.core.first(alis);\nreturn (cljs.pprint.reader_macros.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.reader_macros.cljs$core$IFn$_invoke$arity$1(G__13831) : cljs.pprint.reader_macros.call(null,G__13831));\n})();\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d macro_char;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(alis));\n} else {\nreturn and__5043__auto__;\n}\n})())){\ncljs.core._write(cljs.core._STAR_out_STAR_,macro_char);\n\ncljs.pprint.write_out(cljs.core.second(alis));\n\nreturn true;\n} else {\nreturn null;\n}\n});\ncljs.pprint.pprint_simple_list \x3d (function cljs$pprint$pprint_simple_list(alis){\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13832_15016 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13833_15017 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13834_15018 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13835_15019 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13834_15018);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13835_15019);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\n\nvar length_count13836_15020 \x3d (0);\nvar alis_15021__$1 \x3d cljs.core.seq(alis);\nwhile(true){\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count13836_15020 \x3c cljs.core._STAR_print_length_STAR_)))){\nif(alis_15021__$1){\ncljs.pprint.write_out(cljs.core.first(alis_15021__$1));\n\nif(cljs.core.next(alis_15021__$1)){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\nvar G__15022 \x3d (length_count13836_15020 + (1));\nvar G__15023 \x3d cljs.core.next(alis_15021__$1);\nlength_count13836_15020 \x3d G__15022;\nalis_15021__$1 \x3d G__15023;\ncontinue;\n} else {\n}\n} else {\n}\n} else {\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\n}\nbreak;\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13833_15017);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13832_15016);\n}}\n\nreturn null;\n});\ncljs.pprint.pprint_list \x3d (function cljs$pprint$pprint_list(alis){\nif(cljs.core.not(cljs.pprint.pprint_reader_macro(alis))){\nreturn cljs.pprint.pprint_simple_list(alis);\n} else {\nreturn null;\n}\n});\ncljs.pprint.pprint_vector \x3d (function cljs$pprint$pprint_vector(avec){\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13849_15024 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13850_15025 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13851_15026 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13852_15027 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13851_15026);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13852_15027);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22[\x22,null,\x22]\x22);\n\nvar length_count13855_15029 \x3d (0);\nvar aseq_15030 \x3d cljs.core.seq(avec);\nwhile(true){\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count13855_15029 \x3c cljs.core._STAR_print_length_STAR_)))){\nif(aseq_15030){\ncljs.pprint.write_out(cljs.core.first(aseq_15030));\n\nif(cljs.core.next(aseq_15030)){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\nvar G__15032 \x3d (length_count13855_15029 + (1));\nvar G__15033 \x3d cljs.core.next(aseq_15030);\nlength_count13855_15029 \x3d G__15032;\naseq_15030 \x3d G__15033;\ncontinue;\n} else {\n}\n} else {\n}\n} else {\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\n}\nbreak;\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13850_15025);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13849_15024);\n}}\n\nreturn null;\n});\ncljs.pprint.pprint_array \x3d (function (){var format_in__11978__auto__ \x3d \x22~\x3c[~;~@{~w~^, ~:_~}~;]~:\x3e\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15034__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15034 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15035__i \x3d 0, G__15035__a \x3d new Array(arguments.length -  0);\nwhile (G__15035__i \x3c G__15035__a.length) {G__15035__a[G__15035__i] \x3d arguments[G__15035__i + 0]; ++G__15035__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15035__a,0,null);\n} \nreturn G__15034__delegate.call(this,args__11980__auto__);};\nG__15034.cljs$lang$maxFixedArity \x3d 0;\nG__15034.cljs$lang$applyTo \x3d (function (arglist__15036){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15036);\nreturn G__15034__delegate(args__11980__auto__);\n});\nG__15034.cljs$core$IFn$_invoke$arity$variadic \x3d G__15034__delegate;\nreturn G__15034;\n})()\n;\n})();\ncljs.pprint.pprint_map \x3d (function cljs$pprint$pprint_map(amap){\nvar vec__13861 \x3d (((!(cljs.core.record_QMARK_(amap))))?(function (){var fexpr__13867 \x3d new cljs.core.Var(function(){return cljs.core.lift_ns;},new cljs.core.Symbol(\x22cljs.core\x22,\x22lift-ns\x22,\x22cljs.core/lift-ns\x22,463499081,null),cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22private\x22,\x22private\x22,-558947994),new cljs.core.Keyword(null,\x22ns\x22,\x22ns\x22,441598760),new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),new cljs.core.Keyword(null,\x22file\x22,\x22file\x22,-1269645878),new cljs.core.Keyword(null,\x22end-column\x22,\x22end-column\x22,1425389514),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),new cljs.core.Keyword(null,\x22line\x22,\x22line\x22,212345235),new cljs.core.Keyword(null,\x22end-line\x22,\x22end-line\x22,1837326455),new cljs.core.Keyword(null,\x22arglists\x22,\x22arglists\x22,1661989754),new cljs.core.Keyword(null,\x22doc\x22,\x22doc\x22,1913296891),new cljs.core.Keyword(null,\x22test\x22,\x22test\x22,577538877)],[true,new cljs.core.Symbol(null,\x22cljs.core\x22,\x22cljs.core\x22,770546058,null),new cljs.core.Symbol(null,\x22lift-ns\x22,\x22lift-ns\x22,602311926,null),\x22cljs/core.cljs\x22,15,1,10543,10543,cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22m\x22,\x22m\x22,-1021758608,null)], null)),\x22Returns [lifted-ns lifted-map] or nil if m can\x27t be lifted.\x22,(cljs.core.truth_(cljs.core.lift_ns)?cljs.core.lift_ns.cljs$lang$test:null)]));\nreturn (fexpr__13867.cljs$core$IFn$_invoke$arity$1 ? fexpr__13867.cljs$core$IFn$_invoke$arity$1(amap) : fexpr__13867.call(null,amap));\n})():null);\nvar ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13861,(0),null);\nvar lift_map \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13861,(1),null);\nvar amap__$1 \x3d (function (){var or__5045__auto__ \x3d lift_map;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn amap;\n}\n})();\nvar prefix \x3d (cljs.core.truth_(ns)?[\x22#:\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\x22{\x22].join(\x27\x27):\x22{\x22);\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13872_15037 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13873_15038 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13874_15039 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13875_15040 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13874_15039);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13875_15040);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,prefix,null,\x22}\x22);\n\nvar length_count13877_15041 \x3d (0);\nvar aseq_15042 \x3d cljs.core.seq(amap__$1);\nwhile(true){\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count13877_15041 \x3c cljs.core._STAR_print_length_STAR_)))){\nif(aseq_15042){\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13884_15043 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13885_15044 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13886_15045 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13887_15046 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13886_15045);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13887_15046);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,null,null,null);\n\ncljs.pprint.write_out(cljs.core.ffirst(aseq_15042));\n\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d (0));\n\ncljs.pprint.write_out(cljs.core.fnext(cljs.core.first(aseq_15042)));\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13885_15044);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13884_15043);\n}}\n\n\nif(cljs.core.next(aseq_15042)){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22, \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\nvar G__15048 \x3d (length_count13877_15041 + (1));\nvar G__15049 \x3d cljs.core.next(aseq_15042);\nlength_count13877_15041 \x3d G__15048;\naseq_15042 \x3d G__15049;\ncontinue;\n} else {\n}\n} else {\n}\n} else {\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\n}\nbreak;\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13873_15038);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13872_15037);\n}}\n\nreturn null;\n});\ncljs.pprint.pprint_simple_default \x3d (function cljs$pprint$pprint_simple_default(obj){\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\n});\ncljs.pprint.pprint_set \x3d (function (){var format_in__11978__auto__ \x3d \x22~\x3c#{~;~@{~w~^ ~:_~}~;}~:\x3e\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15052__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15052 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15053__i \x3d 0, G__15053__a \x3d new Array(arguments.length -  0);\nwhile (G__15053__i \x3c G__15053__a.length) {G__15053__a[G__15053__i] \x3d arguments[G__15053__i + 0]; ++G__15053__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15053__a,0,null);\n} \nreturn G__15052__delegate.call(this,args__11980__auto__);};\nG__15052.cljs$lang$maxFixedArity \x3d 0;\nG__15052.cljs$lang$applyTo \x3d (function (arglist__15054){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15054);\nreturn G__15052__delegate(args__11980__auto__);\n});\nG__15052.cljs$core$IFn$_invoke$arity$variadic \x3d G__15052__delegate;\nreturn G__15052;\n})()\n;\n})();\ncljs.pprint.type_map \x3d new cljs.core.PersistentArrayMap(null, 2, [\x22core$future_call\x22,\x22Future\x22,\x22core$promise\x22,\x22Promise\x22], null);\n/**\n * Map ugly type names to something simpler\n */\ncljs.pprint.map_ref_type \x3d (function cljs$pprint$map_ref_type(name){\nvar or__5045__auto__ \x3d (function (){var temp__5804__auto__ \x3d cljs.core.re_find(/^[^$]+\\$[^$]+/,name);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar match \x3d temp__5804__auto__;\nreturn (cljs.pprint.type_map.cljs$core$IFn$_invoke$arity$1 ? cljs.pprint.type_map.cljs$core$IFn$_invoke$arity$1(match) : cljs.pprint.type_map.call(null,match));\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn name;\n}\n});\ncljs.pprint.pprint_ideref \x3d (function cljs$pprint$pprint_ideref(o){\nvar prefix \x3d [\x22#\x3c\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.pprint.map_ref_type(cljs.core.type(o).name)),\x22@\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(goog.getUid(o)),\x22: \x22].join(\x27\x27);\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13907_15055 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13908_15056 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13909_15057 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13910_15058 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13909_15057);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13910_15058);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,prefix,null,\x22\x3e\x22);\n\ncljs.pprint.pprint_indent(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),(- (((prefix).length) - (2))));\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\ncljs.pprint.write_out((((function (){var and__5043__auto__ \x3d (((!((o \x3d\x3d null))))?(((((o.cljs$lang$protocol_mask$partition1$ \x26 (1))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d o.cljs$core$IPending$))))?true:(((!o.cljs$lang$protocol_mask$partition1$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPending,o):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPending,o));\nif(and__5043__auto__){\nreturn (!(cljs.core._realized_QMARK_(o)));\n} else {\nreturn and__5043__auto__;\n}\n})())?new cljs.core.Keyword(null,\x22not-delivered\x22,\x22not-delivered\x22,1599158697):cljs.core.deref(o)));\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13908_15056);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13907_15055);\n}}\n\nreturn null;\n});\ncljs.pprint.pprint_pqueue \x3d (function (){var format_in__11978__auto__ \x3d \x22~\x3c\x3c-(~;~@{~w~^ ~_~}~;)-\x3c~:\x3e\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15059__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15059 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15060__i \x3d 0, G__15060__a \x3d new Array(arguments.length -  0);\nwhile (G__15060__i \x3c G__15060__a.length) {G__15060__a[G__15060__i] \x3d arguments[G__15060__i + 0]; ++G__15060__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15060__a,0,null);\n} \nreturn G__15059__delegate.call(this,args__11980__auto__);};\nG__15059.cljs$lang$maxFixedArity \x3d 0;\nG__15059.cljs$lang$applyTo \x3d (function (arglist__15061){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15061);\nreturn G__15059__delegate(args__11980__auto__);\n});\nG__15059.cljs$core$IFn$_invoke$arity$variadic \x3d G__15059__delegate;\nreturn G__15059;\n})()\n;\n})();\ncljs.pprint.type_dispatcher \x3d (function cljs$pprint$type_dispatcher(obj){\nif((obj instanceof cljs.core.PersistentQueue)){\nreturn new cljs.core.Keyword(null,\x22queue\x22,\x22queue\x22,1455835879);\n} else {\nif((((!((obj \x3d\x3d null))))?(((((obj.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.cljs$core$IDeref$))))?true:(((!obj.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,obj):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,obj))){\nreturn new cljs.core.Keyword(null,\x22deref\x22,\x22deref\x22,-145586795);\n} else {\nif((obj instanceof cljs.core.Symbol)){\nreturn new cljs.core.Keyword(null,\x22symbol\x22,\x22symbol\x22,-1038572696);\n} else {\nif(cljs.core.seq_QMARK_(obj)){\nreturn new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683);\n} else {\nif(cljs.core.map_QMARK_(obj)){\nreturn new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461);\n} else {\nif(cljs.core.vector_QMARK_(obj)){\nreturn new cljs.core.Keyword(null,\x22vector\x22,\x22vector\x22,1902966158);\n} else {\nif(cljs.core.set_QMARK_(obj)){\nreturn new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554);\n} else {\nif((obj \x3d\x3d null)){\nreturn null;\n} else {\nreturn new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328);\n\n}\n}\n}\n}\n}\n}\n}\n}\n});\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.simple_dispatch !\x3d\x3d \x27undefined\x27)){\n} else {\n/**\n * The pretty print dispatch function for simple data structure format.\n */\ncljs.pprint.simple_dispatch \x3d (function (){var method_table__5642__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__5643__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__5644__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__5645__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__5646__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22hierarchy\x22,\x22hierarchy\x22,-1053470341),(function (){var fexpr__13919 \x3d cljs.core.get_global_hierarchy;\nreturn (fexpr__13919.cljs$core$IFn$_invoke$arity$0 ? fexpr__13919.cljs$core$IFn$_invoke$arity$0() : fexpr__13919.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\x22cljs.pprint\x22,\x22simple-dispatch\x22),cljs.pprint.type_dispatcher,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),hierarchy__5646__auto__,method_table__5642__auto__,prefer_table__5643__auto__,method_cache__5644__auto__,cached_hierarchy__5645__auto__));\n})();\n}\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683),cljs.pprint.pprint_list);\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,new cljs.core.Keyword(null,\x22vector\x22,\x22vector\x22,1902966158),cljs.pprint.pprint_vector);\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461),cljs.pprint.pprint_map);\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554),cljs.pprint.pprint_set);\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,null,(function (){\nreturn cljs.core._write(cljs.core._STAR_out_STAR_,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null], 0)));\n}));\ncljs.pprint.use_method(cljs.pprint.simple_dispatch,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),cljs.pprint.pprint_simple_default);\ncljs.pprint.set_pprint_dispatch(cljs.pprint.simple_dispatch);\n/**\n * Figure out which kind of brackets to use\n */\ncljs.pprint.brackets \x3d (function cljs$pprint$brackets(form){\nif(cljs.core.vector_QMARK_(form)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22[\x22,\x22]\x22], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22(\x22,\x22)\x22], null);\n}\n});\n/**\n * Pretty print a single reference (import, use, etc.) from a namespace decl\n */\ncljs.pprint.pprint_ns_reference \x3d (function cljs$pprint$pprint_ns_reference(reference){\nif(cljs.core.sequential_QMARK_(reference)){\nvar vec__13922 \x3d cljs.pprint.brackets(reference);\nvar start \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13922,(0),null);\nvar end \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13922,(1),null);\nvar vec__13925 \x3d reference;\nvar seq__13926 \x3d cljs.core.seq(vec__13925);\nvar first__13927 \x3d cljs.core.first(seq__13926);\nvar seq__13926__$1 \x3d cljs.core.next(seq__13926);\nvar keyw \x3d first__13927;\nvar args \x3d seq__13926__$1;\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13928_15070 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13929_15071 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13930_15072 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13931_15073 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13930_15072);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13931_15073);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,start,null,end);\n\n(function (){var format_in__11978__auto__ \x3d \x22~w~:i\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15074__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15074 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15076__i \x3d 0, G__15076__a \x3d new Array(arguments.length -  0);\nwhile (G__15076__i \x3c G__15076__a.length) {G__15076__a[G__15076__i] \x3d arguments[G__15076__i + 0]; ++G__15076__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15076__a,0,null);\n} \nreturn G__15074__delegate.call(this,args__11980__auto__);};\nG__15074.cljs$lang$maxFixedArity \x3d 0;\nG__15074.cljs$lang$applyTo \x3d (function (arglist__15079){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15079);\nreturn G__15074__delegate(args__11980__auto__);\n});\nG__15074.cljs$core$IFn$_invoke$arity$variadic \x3d G__15074__delegate;\nreturn G__15074;\n})()\n;\n})()(keyw);\n\nvar args_15080__$1 \x3d args;\nwhile(true){\nif(cljs.core.seq(args_15080__$1)){\n(function (){var format_in__11978__auto__ \x3d \x22 \x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn ((function (args_15080__$1,format_in__11978__auto__,cf__11979__auto__,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args){\nreturn (function() { \nvar G__15081__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15081 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15082__i \x3d 0, G__15082__a \x3d new Array(arguments.length -  0);\nwhile (G__15082__i \x3c G__15082__a.length) {G__15082__a[G__15082__i] \x3d arguments[G__15082__i + 0]; ++G__15082__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15082__a,0,null);\n} \nreturn G__15081__delegate.call(this,args__11980__auto__);};\nG__15081.cljs$lang$maxFixedArity \x3d 0;\nG__15081.cljs$lang$applyTo \x3d (function (arglist__15084){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15084);\nreturn G__15081__delegate(args__11980__auto__);\n});\nG__15081.cljs$core$IFn$_invoke$arity$variadic \x3d G__15081__delegate;\nreturn G__15081;\n})()\n;\n;})(args_15080__$1,format_in__11978__auto__,cf__11979__auto__,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args))\n})()();\n\nvar arg_15085 \x3d cljs.core.first(args_15080__$1);\nif(cljs.core.sequential_QMARK_(arg_15085)){\nvar vec__13932_15086 \x3d cljs.pprint.brackets(arg_15085);\nvar start_15087__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13932_15086,(0),null);\nvar end_15088__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13932_15086,(1),null);\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13939_15089 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13940_15090 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13941_15091 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13942_15092 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13941_15091);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13942_15092);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,start_15087__$1,null,end_15088__$1);\n\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(arg_15085),(3))) \x26\x26 ((cljs.core.second(arg_15085) instanceof cljs.core.Keyword)))){\nvar vec__13945_15094 \x3d arg_15085;\nvar ns_15095 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13945_15094,(0),null);\nvar kw_15096 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13945_15094,(1),null);\nvar lis_15097 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13945_15094,(2),null);\n(function (){var format_in__11978__auto__ \x3d \x22~w ~w \x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn ((function (args_15080__$1,format_in__11978__auto__,cf__11979__auto__,vec__13945_15094,ns_15095,kw_15096,lis_15097,_STAR_current_level_STAR__orig_val__13939_15089,_STAR_current_length_STAR__orig_val__13940_15090,_STAR_current_level_STAR__temp_val__13941_15091,_STAR_current_length_STAR__temp_val__13942_15092,vec__13932_15086,start_15087__$1,end_15088__$1,arg_15085,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args){\nreturn (function() { \nvar G__15107__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15107 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15108__i \x3d 0, G__15108__a \x3d new Array(arguments.length -  0);\nwhile (G__15108__i \x3c G__15108__a.length) {G__15108__a[G__15108__i] \x3d arguments[G__15108__i + 0]; ++G__15108__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15108__a,0,null);\n} \nreturn G__15107__delegate.call(this,args__11980__auto__);};\nG__15107.cljs$lang$maxFixedArity \x3d 0;\nG__15107.cljs$lang$applyTo \x3d (function (arglist__15109){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15109);\nreturn G__15107__delegate(args__11980__auto__);\n});\nG__15107.cljs$core$IFn$_invoke$arity$variadic \x3d G__15107__delegate;\nreturn G__15107;\n})()\n;\n;})(args_15080__$1,format_in__11978__auto__,cf__11979__auto__,vec__13945_15094,ns_15095,kw_15096,lis_15097,_STAR_current_level_STAR__orig_val__13939_15089,_STAR_current_length_STAR__orig_val__13940_15090,_STAR_current_level_STAR__temp_val__13941_15091,_STAR_current_length_STAR__temp_val__13942_15092,vec__13932_15086,start_15087__$1,end_15088__$1,arg_15085,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args))\n})()(ns_15095,kw_15096);\n\nif(cljs.core.sequential_QMARK_(lis_15097)){\n(function (){var format_in__11978__auto__ \x3d ((cljs.core.vector_QMARK_(lis_15097))?\x22~\x3c[~;~@{~w~^ ~:_~}~;]~:\x3e\x22:\x22~\x3c(~;~@{~w~^ ~:_~}~;)~:\x3e\x22);\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn ((function (args_15080__$1,format_in__11978__auto__,cf__11979__auto__,vec__13945_15094,ns_15095,kw_15096,lis_15097,_STAR_current_level_STAR__orig_val__13939_15089,_STAR_current_length_STAR__orig_val__13940_15090,_STAR_current_level_STAR__temp_val__13941_15091,_STAR_current_length_STAR__temp_val__13942_15092,vec__13932_15086,start_15087__$1,end_15088__$1,arg_15085,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args){\nreturn (function() { \nvar G__15116__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15116 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15117__i \x3d 0, G__15117__a \x3d new Array(arguments.length -  0);\nwhile (G__15117__i \x3c G__15117__a.length) {G__15117__a[G__15117__i] \x3d arguments[G__15117__i + 0]; ++G__15117__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15117__a,0,null);\n} \nreturn G__15116__delegate.call(this,args__11980__auto__);};\nG__15116.cljs$lang$maxFixedArity \x3d 0;\nG__15116.cljs$lang$applyTo \x3d (function (arglist__15118){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15118);\nreturn G__15116__delegate(args__11980__auto__);\n});\nG__15116.cljs$core$IFn$_invoke$arity$variadic \x3d G__15116__delegate;\nreturn G__15116;\n})()\n;\n;})(args_15080__$1,format_in__11978__auto__,cf__11979__auto__,vec__13945_15094,ns_15095,kw_15096,lis_15097,_STAR_current_level_STAR__orig_val__13939_15089,_STAR_current_length_STAR__orig_val__13940_15090,_STAR_current_level_STAR__temp_val__13941_15091,_STAR_current_length_STAR__temp_val__13942_15092,vec__13932_15086,start_15087__$1,end_15088__$1,arg_15085,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args))\n})()(lis_15097);\n} else {\ncljs.pprint.write_out(lis_15097);\n}\n} else {\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2((function (){var format_in__11978__auto__ \x3d \x22~w ~:i~@{~w~^ ~:_~}\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn ((function (args_15080__$1,format_in__11978__auto__,cf__11979__auto__,_STAR_current_level_STAR__orig_val__13939_15089,_STAR_current_length_STAR__orig_val__13940_15090,_STAR_current_level_STAR__temp_val__13941_15091,_STAR_current_length_STAR__temp_val__13942_15092,vec__13932_15086,start_15087__$1,end_15088__$1,arg_15085,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args){\nreturn (function() { \nvar G__15120__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15120 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15121__i \x3d 0, G__15121__a \x3d new Array(arguments.length -  0);\nwhile (G__15121__i \x3c G__15121__a.length) {G__15121__a[G__15121__i] \x3d arguments[G__15121__i + 0]; ++G__15121__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15121__a,0,null);\n} \nreturn G__15120__delegate.call(this,args__11980__auto__);};\nG__15120.cljs$lang$maxFixedArity \x3d 0;\nG__15120.cljs$lang$applyTo \x3d (function (arglist__15122){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15122);\nreturn G__15120__delegate(args__11980__auto__);\n});\nG__15120.cljs$core$IFn$_invoke$arity$variadic \x3d G__15120__delegate;\nreturn G__15120;\n})()\n;\n;})(args_15080__$1,format_in__11978__auto__,cf__11979__auto__,_STAR_current_level_STAR__orig_val__13939_15089,_STAR_current_length_STAR__orig_val__13940_15090,_STAR_current_level_STAR__temp_val__13941_15091,_STAR_current_length_STAR__temp_val__13942_15092,vec__13932_15086,start_15087__$1,end_15088__$1,arg_15085,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args))\n})(),arg_15085);\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13940_15090);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13939_15089);\n}}\n\n\nif(cljs.core.next(args_15080__$1)){\n(function (){var format_in__11978__auto__ \x3d \x22~_\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn ((function (args_15080__$1,format_in__11978__auto__,cf__11979__auto__,vec__13932_15086,start_15087__$1,end_15088__$1,arg_15085,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args){\nreturn (function() { \nvar G__15127__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15127 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15128__i \x3d 0, G__15128__a \x3d new Array(arguments.length -  0);\nwhile (G__15128__i \x3c G__15128__a.length) {G__15128__a[G__15128__i] \x3d arguments[G__15128__i + 0]; ++G__15128__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15128__a,0,null);\n} \nreturn G__15127__delegate.call(this,args__11980__auto__);};\nG__15127.cljs$lang$maxFixedArity \x3d 0;\nG__15127.cljs$lang$applyTo \x3d (function (arglist__15129){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15129);\nreturn G__15127__delegate(args__11980__auto__);\n});\nG__15127.cljs$core$IFn$_invoke$arity$variadic \x3d G__15127__delegate;\nreturn G__15127;\n})()\n;\n;})(args_15080__$1,format_in__11978__auto__,cf__11979__auto__,vec__13932_15086,start_15087__$1,end_15088__$1,arg_15085,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args))\n})()();\n} else {\n}\n} else {\ncljs.pprint.write_out(arg_15085);\n\nif(cljs.core.next(args_15080__$1)){\n(function (){var format_in__11978__auto__ \x3d \x22~:_\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn ((function (args_15080__$1,format_in__11978__auto__,cf__11979__auto__,arg_15085,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args){\nreturn (function() { \nvar G__15130__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15130 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15131__i \x3d 0, G__15131__a \x3d new Array(arguments.length -  0);\nwhile (G__15131__i \x3c G__15131__a.length) {G__15131__a[G__15131__i] \x3d arguments[G__15131__i + 0]; ++G__15131__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15131__a,0,null);\n} \nreturn G__15130__delegate.call(this,args__11980__auto__);};\nG__15130.cljs$lang$maxFixedArity \x3d 0;\nG__15130.cljs$lang$applyTo \x3d (function (arglist__15132){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15132);\nreturn G__15130__delegate(args__11980__auto__);\n});\nG__15130.cljs$core$IFn$_invoke$arity$variadic \x3d G__15130__delegate;\nreturn G__15130;\n})()\n;\n;})(args_15080__$1,format_in__11978__auto__,cf__11979__auto__,arg_15085,_STAR_current_level_STAR__orig_val__13928_15070,_STAR_current_length_STAR__orig_val__13929_15071,_STAR_current_level_STAR__temp_val__13930_15072,_STAR_current_length_STAR__temp_val__13931_15073,vec__13922,start,end,vec__13925,seq__13926,first__13927,seq__13926__$1,keyw,args))\n})()();\n} else {\n}\n}\n\nvar G__15133 \x3d cljs.core.next(args_15080__$1);\nargs_15080__$1 \x3d G__15133;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13929_15071);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13928_15070);\n}}\n\nreturn null;\n} else {\nreturn cljs.pprint.write_out(reference);\n}\n});\n/**\n * The pretty print dispatch chunk for the ns macro\n */\ncljs.pprint.pprint_ns \x3d (function cljs$pprint$pprint_ns(alis){\nif(cljs.core.next(alis)){\nvar vec__13954 \x3d alis;\nvar seq__13955 \x3d cljs.core.seq(vec__13954);\nvar first__13956 \x3d cljs.core.first(seq__13955);\nvar seq__13955__$1 \x3d cljs.core.next(seq__13955);\nvar ns_sym \x3d first__13956;\nvar first__13956__$1 \x3d cljs.core.first(seq__13955__$1);\nvar seq__13955__$2 \x3d cljs.core.next(seq__13955__$1);\nvar ns_name \x3d first__13956__$1;\nvar stuff \x3d seq__13955__$2;\nvar vec__13957 \x3d ((typeof cljs.core.first(stuff) \x3d\x3d\x3d \x27string\x27)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff),cljs.core.next(stuff)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,stuff], null));\nvar doc_str \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13957,(0),null);\nvar stuff__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13957,(1),null);\nvar vec__13960 \x3d ((cljs.core.map_QMARK_(cljs.core.first(stuff__$1)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff__$1),cljs.core.next(stuff__$1)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,stuff__$1], null));\nvar attr_map \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13960,(0),null);\nvar references \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13960,(1),null);\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13963_15136 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13964_15137 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13965_15138 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13966_15139 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13965_15138);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13966_15139);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\n\n(function (){var format_in__11978__auto__ \x3d \x22~w ~1I~@_~w\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15145__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15145 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15149__i \x3d 0, G__15149__a \x3d new Array(arguments.length -  0);\nwhile (G__15149__i \x3c G__15149__a.length) {G__15149__a[G__15149__i] \x3d arguments[G__15149__i + 0]; ++G__15149__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15149__a,0,null);\n} \nreturn G__15145__delegate.call(this,args__11980__auto__);};\nG__15145.cljs$lang$maxFixedArity \x3d 0;\nG__15145.cljs$lang$applyTo \x3d (function (arglist__15150){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15150);\nreturn G__15145__delegate(args__11980__auto__);\n});\nG__15145.cljs$core$IFn$_invoke$arity$variadic \x3d G__15145__delegate;\nreturn G__15145;\n})()\n;\n})()(ns_sym,ns_name);\n\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d doc_str;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d attr_map;\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn cljs.core.seq(references);\n}\n}\n})())){\n(function (){var format_in__11978__auto__ \x3d \x22~@:_\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15151__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15151 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15152__i \x3d 0, G__15152__a \x3d new Array(arguments.length -  0);\nwhile (G__15152__i \x3c G__15152__a.length) {G__15152__a[G__15152__i] \x3d arguments[G__15152__i + 0]; ++G__15152__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15152__a,0,null);\n} \nreturn G__15151__delegate.call(this,args__11980__auto__);};\nG__15151.cljs$lang$maxFixedArity \x3d 0;\nG__15151.cljs$lang$applyTo \x3d (function (arglist__15153){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15153);\nreturn G__15151__delegate(args__11980__auto__);\n});\nG__15151.cljs$core$IFn$_invoke$arity$variadic \x3d G__15151__delegate;\nreturn G__15151;\n})()\n;\n})()();\n} else {\n}\n\nif(cljs.core.truth_(doc_str)){\ncljs.pprint.cl_format.cljs$core$IFn$_invoke$arity$variadic(true,\x22\\\x22~a\\\x22~:[~;~:@_~]\x22,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([doc_str,(function (){var or__5045__auto__ \x3d attr_map;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.seq(references);\n}\n})()], 0));\n} else {\n}\n\nif(cljs.core.truth_(attr_map)){\n(function (){var format_in__11978__auto__ \x3d \x22~w~:[~;~:@_~]\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15154__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15154 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15155__i \x3d 0, G__15155__a \x3d new Array(arguments.length -  0);\nwhile (G__15155__i \x3c G__15155__a.length) {G__15155__a[G__15155__i] \x3d arguments[G__15155__i + 0]; ++G__15155__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15155__a,0,null);\n} \nreturn G__15154__delegate.call(this,args__11980__auto__);};\nG__15154.cljs$lang$maxFixedArity \x3d 0;\nG__15154.cljs$lang$applyTo \x3d (function (arglist__15156){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15156);\nreturn G__15154__delegate(args__11980__auto__);\n});\nG__15154.cljs$core$IFn$_invoke$arity$variadic \x3d G__15154__delegate;\nreturn G__15154;\n})()\n;\n})()(attr_map,cljs.core.seq(references));\n} else {\n}\n\nvar references_15157__$1 \x3d references;\nwhile(true){\ncljs.pprint.pprint_ns_reference(cljs.core.first(references_15157__$1));\n\nvar temp__5804__auto___15158 \x3d cljs.core.next(references_15157__$1);\nif(temp__5804__auto___15158){\nvar references_15159__$2 \x3d temp__5804__auto___15158;\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\nvar G__15160 \x3d references_15159__$2;\nreferences_15157__$1 \x3d G__15160;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13964_15137);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13963_15136);\n}}\n\nreturn null;\n} else {\nreturn cljs.pprint.write_out(alis);\n}\n});\ncljs.pprint.pprint_hold_first \x3d (function (){var format_in__11978__auto__ \x3d \x22~:\x3c~w~^ ~@_~w~^ ~_~@{~w~^ ~_~}~:\x3e\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15161__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15161 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15163__i \x3d 0, G__15163__a \x3d new Array(arguments.length -  0);\nwhile (G__15163__i \x3c G__15163__a.length) {G__15163__a[G__15163__i] \x3d arguments[G__15163__i + 0]; ++G__15163__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15163__a,0,null);\n} \nreturn G__15161__delegate.call(this,args__11980__auto__);};\nG__15161.cljs$lang$maxFixedArity \x3d 0;\nG__15161.cljs$lang$applyTo \x3d (function (arglist__15164){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15164);\nreturn G__15161__delegate(args__11980__auto__);\n});\nG__15161.cljs$core$IFn$_invoke$arity$variadic \x3d G__15161__delegate;\nreturn G__15161;\n})()\n;\n})();\ncljs.pprint.single_defn \x3d (function cljs$pprint$single_defn(alis,has_doc_str_QMARK_){\nif(cljs.core.seq(alis)){\nif(cljs.core.truth_(has_doc_str_QMARK_)){\n(function (){var format_in__11978__auto__ \x3d \x22 ~_\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15165__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15165 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15166__i \x3d 0, G__15166__a \x3d new Array(arguments.length -  0);\nwhile (G__15166__i \x3c G__15166__a.length) {G__15166__a[G__15166__i] \x3d arguments[G__15166__i + 0]; ++G__15166__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15166__a,0,null);\n} \nreturn G__15165__delegate.call(this,args__11980__auto__);};\nG__15165.cljs$lang$maxFixedArity \x3d 0;\nG__15165.cljs$lang$applyTo \x3d (function (arglist__15167){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15167);\nreturn G__15165__delegate(args__11980__auto__);\n});\nG__15165.cljs$core$IFn$_invoke$arity$variadic \x3d G__15165__delegate;\nreturn G__15165;\n})()\n;\n})()();\n} else {\n(function (){var format_in__11978__auto__ \x3d \x22 ~@_\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15168__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15168 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15169__i \x3d 0, G__15169__a \x3d new Array(arguments.length -  0);\nwhile (G__15169__i \x3c G__15169__a.length) {G__15169__a[G__15169__i] \x3d arguments[G__15169__i + 0]; ++G__15169__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15169__a,0,null);\n} \nreturn G__15168__delegate.call(this,args__11980__auto__);};\nG__15168.cljs$lang$maxFixedArity \x3d 0;\nG__15168.cljs$lang$applyTo \x3d (function (arglist__15170){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15170);\nreturn G__15168__delegate(args__11980__auto__);\n});\nG__15168.cljs$core$IFn$_invoke$arity$variadic \x3d G__15168__delegate;\nreturn G__15168;\n})()\n;\n})()();\n}\n\nreturn (function (){var format_in__11978__auto__ \x3d \x22~{~w~^ ~_~}\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15171__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15171 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15172__i \x3d 0, G__15172__a \x3d new Array(arguments.length -  0);\nwhile (G__15172__i \x3c G__15172__a.length) {G__15172__a[G__15172__i] \x3d arguments[G__15172__i + 0]; ++G__15172__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15172__a,0,null);\n} \nreturn G__15171__delegate.call(this,args__11980__auto__);};\nG__15171.cljs$lang$maxFixedArity \x3d 0;\nG__15171.cljs$lang$applyTo \x3d (function (arglist__15173){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15173);\nreturn G__15171__delegate(args__11980__auto__);\n});\nG__15171.cljs$core$IFn$_invoke$arity$variadic \x3d G__15171__delegate;\nreturn G__15171;\n})()\n;\n})()(alis);\n} else {\nreturn null;\n}\n});\ncljs.pprint.multi_defn \x3d (function cljs$pprint$multi_defn(alis,has_doc_str_QMARK_){\nif(cljs.core.seq(alis)){\nreturn (function (){var format_in__11978__auto__ \x3d \x22 ~_~{~w~^ ~_~}\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15174__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15174 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15175__i \x3d 0, G__15175__a \x3d new Array(arguments.length -  0);\nwhile (G__15175__i \x3c G__15175__a.length) {G__15175__a[G__15175__i] \x3d arguments[G__15175__i + 0]; ++G__15175__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15175__a,0,null);\n} \nreturn G__15174__delegate.call(this,args__11980__auto__);};\nG__15174.cljs$lang$maxFixedArity \x3d 0;\nG__15174.cljs$lang$applyTo \x3d (function (arglist__15176){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15176);\nreturn G__15174__delegate(args__11980__auto__);\n});\nG__15174.cljs$core$IFn$_invoke$arity$variadic \x3d G__15174__delegate;\nreturn G__15174;\n})()\n;\n})()(alis);\n} else {\nreturn null;\n}\n});\ncljs.pprint.pprint_defn \x3d (function cljs$pprint$pprint_defn(alis){\nif(cljs.core.next(alis)){\nvar vec__13978 \x3d alis;\nvar seq__13979 \x3d cljs.core.seq(vec__13978);\nvar first__13980 \x3d cljs.core.first(seq__13979);\nvar seq__13979__$1 \x3d cljs.core.next(seq__13979);\nvar defn_sym \x3d first__13980;\nvar first__13980__$1 \x3d cljs.core.first(seq__13979__$1);\nvar seq__13979__$2 \x3d cljs.core.next(seq__13979__$1);\nvar defn_name \x3d first__13980__$1;\nvar stuff \x3d seq__13979__$2;\nvar vec__13981 \x3d ((typeof cljs.core.first(stuff) \x3d\x3d\x3d \x27string\x27)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff),cljs.core.next(stuff)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,stuff], null));\nvar doc_str \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13981,(0),null);\nvar stuff__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13981,(1),null);\nvar vec__13984 \x3d ((cljs.core.map_QMARK_(cljs.core.first(stuff__$1)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first(stuff__$1),cljs.core.next(stuff__$1)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,stuff__$1], null));\nvar attr_map \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13984,(0),null);\nvar stuff__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13984,(1),null);\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13987_15180 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13988_15181 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13989_15182 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13990_15183 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13989_15182);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13990_15183);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\n\n(function (){var format_in__11978__auto__ \x3d \x22~w ~1I~@_~w\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15184__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15184 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15187__i \x3d 0, G__15187__a \x3d new Array(arguments.length -  0);\nwhile (G__15187__i \x3c G__15187__a.length) {G__15187__a[G__15187__i] \x3d arguments[G__15187__i + 0]; ++G__15187__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15187__a,0,null);\n} \nreturn G__15184__delegate.call(this,args__11980__auto__);};\nG__15184.cljs$lang$maxFixedArity \x3d 0;\nG__15184.cljs$lang$applyTo \x3d (function (arglist__15188){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15188);\nreturn G__15184__delegate(args__11980__auto__);\n});\nG__15184.cljs$core$IFn$_invoke$arity$variadic \x3d G__15184__delegate;\nreturn G__15184;\n})()\n;\n})()(defn_sym,defn_name);\n\nif(cljs.core.truth_(doc_str)){\n(function (){var format_in__11978__auto__ \x3d \x22 ~_~w\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15189__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15189 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15190__i \x3d 0, G__15190__a \x3d new Array(arguments.length -  0);\nwhile (G__15190__i \x3c G__15190__a.length) {G__15190__a[G__15190__i] \x3d arguments[G__15190__i + 0]; ++G__15190__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15190__a,0,null);\n} \nreturn G__15189__delegate.call(this,args__11980__auto__);};\nG__15189.cljs$lang$maxFixedArity \x3d 0;\nG__15189.cljs$lang$applyTo \x3d (function (arglist__15191){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15191);\nreturn G__15189__delegate(args__11980__auto__);\n});\nG__15189.cljs$core$IFn$_invoke$arity$variadic \x3d G__15189__delegate;\nreturn G__15189;\n})()\n;\n})()(doc_str);\n} else {\n}\n\nif(cljs.core.truth_(attr_map)){\n(function (){var format_in__11978__auto__ \x3d \x22 ~_~w\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15192__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15192 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15193__i \x3d 0, G__15193__a \x3d new Array(arguments.length -  0);\nwhile (G__15193__i \x3c G__15193__a.length) {G__15193__a[G__15193__i] \x3d arguments[G__15193__i + 0]; ++G__15193__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15193__a,0,null);\n} \nreturn G__15192__delegate.call(this,args__11980__auto__);};\nG__15192.cljs$lang$maxFixedArity \x3d 0;\nG__15192.cljs$lang$applyTo \x3d (function (arglist__15194){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15194);\nreturn G__15192__delegate(args__11980__auto__);\n});\nG__15192.cljs$core$IFn$_invoke$arity$variadic \x3d G__15192__delegate;\nreturn G__15192;\n})()\n;\n})()(attr_map);\n} else {\n}\n\nif(cljs.core.vector_QMARK_(cljs.core.first(stuff__$2))){\ncljs.pprint.single_defn(stuff__$2,(function (){var or__5045__auto__ \x3d doc_str;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn attr_map;\n}\n})());\n} else {\ncljs.pprint.multi_defn(stuff__$2,(function (){var or__5045__auto__ \x3d doc_str;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn attr_map;\n}\n})());\n\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13988_15181);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13987_15180);\n}}\n\nreturn null;\n} else {\nreturn cljs.pprint.pprint_simple_code_list(alis);\n}\n});\ncljs.pprint.pprint_binding_form \x3d (function cljs$pprint$pprint_binding_form(binding_vec){\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13992_15198 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13993_15199 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__13994_15200 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__13995_15201 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__13994_15200);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__13995_15201);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22[\x22,null,\x22]\x22);\n\nvar length_count13997_15202 \x3d (0);\nvar binding_15203 \x3d binding_vec;\nwhile(true){\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count13997_15202 \x3c cljs.core._STAR_print_length_STAR_)))){\nif(cljs.core.seq(binding_15203)){\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__13998_15204 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__13999_15205 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__14000_15206 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__14001_15207 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__14000_15206);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__14001_15207);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,null,null,null);\n\n\ncljs.pprint.write_out(cljs.core.first(binding_15203));\n\nif(cljs.core.next(binding_15203)){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186));\n\ncljs.pprint.write_out(cljs.core.second(binding_15203));\n} else {\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13999_15205);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13998_15204);\n}}\n\n\nif(cljs.core.next(cljs.core.rest(binding_15203))){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\nvar G__15209 \x3d (length_count13997_15202 + (1));\nvar G__15210 \x3d cljs.core.next(cljs.core.rest(binding_15203));\nlength_count13997_15202 \x3d G__15209;\nbinding_15203 \x3d G__15210;\ncontinue;\n} else {\n}\n} else {\n}\n} else {\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\n}\nbreak;\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__13993_15199);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__13992_15198);\n}}\n\nreturn null;\n});\ncljs.pprint.pprint_let \x3d (function cljs$pprint$pprint_let(alis){\nvar base_sym \x3d cljs.core.first(alis);\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__14003_15211 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__14004_15212 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__14005_15213 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__14006_15214 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__14005_15213);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__14006_15214);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\n\nif(((cljs.core.next(alis)) \x26\x26 (cljs.core.vector_QMARK_(cljs.core.second(alis))))){\n(function (){var format_in__11978__auto__ \x3d \x22~w ~1I~@_\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15216__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15216 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15217__i \x3d 0, G__15217__a \x3d new Array(arguments.length -  0);\nwhile (G__15217__i \x3c G__15217__a.length) {G__15217__a[G__15217__i] \x3d arguments[G__15217__i + 0]; ++G__15217__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15217__a,0,null);\n} \nreturn G__15216__delegate.call(this,args__11980__auto__);};\nG__15216.cljs$lang$maxFixedArity \x3d 0;\nG__15216.cljs$lang$applyTo \x3d (function (arglist__15218){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15218);\nreturn G__15216__delegate(args__11980__auto__);\n});\nG__15216.cljs$core$IFn$_invoke$arity$variadic \x3d G__15216__delegate;\nreturn G__15216;\n})()\n;\n})()(base_sym);\n\ncljs.pprint.pprint_binding_form(cljs.core.second(alis));\n\n(function (){var format_in__11978__auto__ \x3d \x22 ~_~{~w~^ ~_~}\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15221__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15221 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15222__i \x3d 0, G__15222__a \x3d new Array(arguments.length -  0);\nwhile (G__15222__i \x3c G__15222__a.length) {G__15222__a[G__15222__i] \x3d arguments[G__15222__i + 0]; ++G__15222__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15222__a,0,null);\n} \nreturn G__15221__delegate.call(this,args__11980__auto__);};\nG__15221.cljs$lang$maxFixedArity \x3d 0;\nG__15221.cljs$lang$applyTo \x3d (function (arglist__15223){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15223);\nreturn G__15221__delegate(args__11980__auto__);\n});\nG__15221.cljs$core$IFn$_invoke$arity$variadic \x3d G__15221__delegate;\nreturn G__15221;\n})()\n;\n})()(cljs.core.next(cljs.core.rest(alis)));\n} else {\ncljs.pprint.pprint_simple_code_list(alis);\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__14004_15212);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__14003_15211);\n}}\n\nreturn null;\n});\ncljs.pprint.pprint_if \x3d (function (){var format_in__11978__auto__ \x3d \x22~:\x3c~1I~w~^ ~@_~w~@{ ~_~w~}~:\x3e\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15224__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15224 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15225__i \x3d 0, G__15225__a \x3d new Array(arguments.length -  0);\nwhile (G__15225__i \x3c G__15225__a.length) {G__15225__a[G__15225__i] \x3d arguments[G__15225__i + 0]; ++G__15225__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15225__a,0,null);\n} \nreturn G__15224__delegate.call(this,args__11980__auto__);};\nG__15224.cljs$lang$maxFixedArity \x3d 0;\nG__15224.cljs$lang$applyTo \x3d (function (arglist__15226){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15226);\nreturn G__15224__delegate(args__11980__auto__);\n});\nG__15224.cljs$core$IFn$_invoke$arity$variadic \x3d G__15224__delegate;\nreturn G__15224;\n})()\n;\n})();\ncljs.pprint.pprint_cond \x3d (function cljs$pprint$pprint_cond(alis){\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__14011_15229 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__14012_15230 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__14013_15231 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__14014_15232 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__14013_15231);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__14014_15232);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\n\ncljs.pprint.pprint_indent(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),(1));\n\ncljs.pprint.write_out(cljs.core.first(alis));\n\nif(cljs.core.next(alis)){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\nvar length_count14016_15233 \x3d (0);\nvar alis_15234__$1 \x3d cljs.core.next(alis);\nwhile(true){\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count14016_15233 \x3c cljs.core._STAR_print_length_STAR_)))){\nif(alis_15234__$1){\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__14017_15235 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__14018_15236 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__14019_15237 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__14020_15238 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__14019_15237);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__14020_15238);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,null,null,null);\n\n\ncljs.pprint.write_out(cljs.core.first(alis_15234__$1));\n\nif(cljs.core.next(alis_15234__$1)){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186));\n\ncljs.pprint.write_out(cljs.core.second(alis_15234__$1));\n} else {\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__14018_15236);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__14017_15235);\n}}\n\n\nif(cljs.core.next(cljs.core.rest(alis_15234__$1))){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\nvar G__15239 \x3d (length_count14016_15233 + (1));\nvar G__15240 \x3d cljs.core.next(cljs.core.rest(alis_15234__$1));\nlength_count14016_15233 \x3d G__15239;\nalis_15234__$1 \x3d G__15240;\ncontinue;\n} else {\n}\n} else {\n}\n} else {\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\n}\nbreak;\n}\n} else {\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__14012_15230);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__14011_15229);\n}}\n\nreturn null;\n});\ncljs.pprint.pprint_condp \x3d (function cljs$pprint$pprint_condp(alis){\nif((cljs.core.count(alis) \x3e (3))){\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__14022_15241 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__14023_15242 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__14024_15243 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__14025_15244 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__14024_15243);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__14025_15244);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\n\ncljs.pprint.pprint_indent(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),(1));\n\ncljs.core.apply.cljs$core$IFn$_invoke$arity$2((function (){var format_in__11978__auto__ \x3d \x22~w ~@_~w ~@_~w ~_\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15246__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15246 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15248__i \x3d 0, G__15248__a \x3d new Array(arguments.length -  0);\nwhile (G__15248__i \x3c G__15248__a.length) {G__15248__a[G__15248__i] \x3d arguments[G__15248__i + 0]; ++G__15248__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15248__a,0,null);\n} \nreturn G__15246__delegate.call(this,args__11980__auto__);};\nG__15246.cljs$lang$maxFixedArity \x3d 0;\nG__15246.cljs$lang$applyTo \x3d (function (arglist__15249){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15249);\nreturn G__15246__delegate(args__11980__auto__);\n});\nG__15246.cljs$core$IFn$_invoke$arity$variadic \x3d G__15246__delegate;\nreturn G__15246;\n})()\n;\n})(),alis);\n\nvar length_count14028_15250 \x3d (0);\nvar alis_15251__$1 \x3d cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2((3),alis));\nwhile(true){\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count14028_15250 \x3c cljs.core._STAR_print_length_STAR_)))){\nif(alis_15251__$1){\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__14029_15252 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__14030_15253 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__14031_15254 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__14032_15255 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__14031_15254);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__14032_15255);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,null,null,null);\n\n\ncljs.pprint.write_out(cljs.core.first(alis_15251__$1));\n\nif(cljs.core.next(alis_15251__$1)){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22miser\x22,\x22miser\x22,-556060186));\n\ncljs.pprint.write_out(cljs.core.second(alis_15251__$1));\n} else {\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__14030_15253);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__14029_15252);\n}}\n\n\nif(cljs.core.next(cljs.core.rest(alis_15251__$1))){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\nvar G__15256 \x3d (length_count14028_15250 + (1));\nvar G__15257 \x3d cljs.core.next(cljs.core.rest(alis_15251__$1));\nlength_count14028_15250 \x3d G__15256;\nalis_15251__$1 \x3d G__15257;\ncontinue;\n} else {\n}\n} else {\n}\n} else {\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\n}\nbreak;\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__14023_15242);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__14022_15241);\n}}\n\nreturn null;\n} else {\nreturn cljs.pprint.pprint_simple_code_list(alis);\n}\n});\ncljs.pprint._STAR_symbol_map_STAR_ \x3d cljs.core.PersistentArrayMap.EMPTY;\ncljs.pprint.pprint_anon_func \x3d (function cljs$pprint$pprint_anon_func(alis){\nvar args \x3d cljs.core.second(alis);\nvar nlis \x3d cljs.core.first(cljs.core.rest(cljs.core.rest(alis)));\nif(cljs.core.vector_QMARK_(args)){\nvar _STAR_symbol_map_STAR__orig_val__14047 \x3d cljs.pprint._STAR_symbol_map_STAR_;\nvar _STAR_symbol_map_STAR__temp_val__14048 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(args)))?cljs.core.PersistentArrayMap.createAsIfByAssoc([cljs.core.first(args),\x22%\x22]):cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p1__14045_SHARP_,p2__14046_SHARP_){\nreturn (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__14045_SHARP_,[\x22%\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(p2__14046_SHARP_)].join(\x27\x27)],null));\n}),args,cljs.core.range.cljs$core$IFn$_invoke$arity$2((1),(cljs.core.count(args) + (1))))));\n(cljs.pprint._STAR_symbol_map_STAR_ \x3d _STAR_symbol_map_STAR__temp_val__14048);\n\ntry{return (function (){var format_in__11978__auto__ \x3d \x22~\x3c#(~;~@{~w~^ ~_~}~;)~:\x3e\x22;\nvar cf__11979__auto__ \x3d ((typeof format_in__11978__auto__ \x3d\x3d\x3d \x27string\x27)?cljs.pprint.cached_compile(format_in__11978__auto__):format_in__11978__auto__);\nreturn (function() { \nvar G__15261__delegate \x3d function (args__11980__auto__){\nvar navigator__11981__auto__ \x3d cljs.pprint.init_navigator(args__11980__auto__);\nreturn cljs.pprint.execute_format.cljs$core$IFn$_invoke$arity$2(cf__11979__auto__,navigator__11981__auto__);\n};\nvar G__15261 \x3d function (var_args){\nvar args__11980__auto__ \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15262__i \x3d 0, G__15262__a \x3d new Array(arguments.length -  0);\nwhile (G__15262__i \x3c G__15262__a.length) {G__15262__a[G__15262__i] \x3d arguments[G__15262__i + 0]; ++G__15262__i;}\n  args__11980__auto__ \x3d new cljs.core.IndexedSeq(G__15262__a,0,null);\n} \nreturn G__15261__delegate.call(this,args__11980__auto__);};\nG__15261.cljs$lang$maxFixedArity \x3d 0;\nG__15261.cljs$lang$applyTo \x3d (function (arglist__15263){\nvar args__11980__auto__ \x3d cljs.core.seq(arglist__15263);\nreturn G__15261__delegate(args__11980__auto__);\n});\nG__15261.cljs$core$IFn$_invoke$arity$variadic \x3d G__15261__delegate;\nreturn G__15261;\n})()\n;\n})()(nlis);\n}finally {(cljs.pprint._STAR_symbol_map_STAR_ \x3d _STAR_symbol_map_STAR__orig_val__14047);\n}} else {\nreturn cljs.pprint.pprint_simple_code_list(alis);\n}\n});\ncljs.pprint.pprint_simple_code_list \x3d (function cljs$pprint$pprint_simple_code_list(alis){\nif(cljs.core.truth_(cljs.pprint.level_exceeded())){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22#\x22);\n} else {\nvar _STAR_current_level_STAR__orig_val__14049_15264 \x3d cljs.pprint._STAR_current_level_STAR_;\nvar _STAR_current_length_STAR__orig_val__14050_15265 \x3d cljs.pprint._STAR_current_length_STAR_;\nvar _STAR_current_level_STAR__temp_val__14051_15266 \x3d (cljs.pprint._STAR_current_level_STAR_ + (1));\nvar _STAR_current_length_STAR__temp_val__14052_15267 \x3d (0);\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__temp_val__14051_15266);\n\n(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__temp_val__14052_15267);\n\ntry{cljs.pprint.start_block(cljs.core._STAR_out_STAR_,\x22(\x22,null,\x22)\x22);\n\ncljs.pprint.pprint_indent(new cljs.core.Keyword(null,\x22block\x22,\x22block\x22,664686210),(1));\n\nvar length_count14055_15268 \x3d (0);\nvar alis_15269__$1 \x3d cljs.core.seq(alis);\nwhile(true){\nif(((cljs.core.not(cljs.core._STAR_print_length_STAR_)) || ((length_count14055_15268 \x3c cljs.core._STAR_print_length_STAR_)))){\nif(alis_15269__$1){\ncljs.pprint.write_out(cljs.core.first(alis_15269__$1));\n\nif(cljs.core.next(alis_15269__$1)){\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22 \x22);\n\ncljs.pprint.pprint_newline(new cljs.core.Keyword(null,\x22linear\x22,\x22linear\x22,872268697));\n\nvar G__15270 \x3d (length_count14055_15268 + (1));\nvar G__15271 \x3d cljs.core.next(alis_15269__$1);\nlength_count14055_15268 \x3d G__15270;\nalis_15269__$1 \x3d G__15271;\ncontinue;\n} else {\n}\n} else {\n}\n} else {\ncljs.core._write(cljs.core._STAR_out_STAR_,\x22...\x22);\n}\nbreak;\n}\n\ncljs.pprint.end_block(cljs.core._STAR_out_STAR_);\n}finally {(cljs.pprint._STAR_current_length_STAR_ \x3d _STAR_current_length_STAR__orig_val__14050_15265);\n\n(cljs.pprint._STAR_current_level_STAR_ \x3d _STAR_current_level_STAR__orig_val__14049_15264);\n}}\n\nreturn null;\n});\ncljs.pprint.two_forms \x3d (function cljs$pprint$two_forms(amap){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs.core.identity,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(function (){var iter__5523__auto__ \x3d (function cljs$pprint$two_forms_$_iter__14057(s__14058){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__14058__$1 \x3d s__14058;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__14058__$1);\nif(temp__5804__auto__){\nvar s__14058__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__14058__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__14058__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__14060 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__14059 \x3d (0);\nwhile(true){\nif((i__14059 \x3c size__5522__auto__)){\nvar x \x3d cljs.core._nth(c__5521__auto__,i__14059);\ncljs.core.chunk_append(b__14060,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.first(x))),cljs.core.second(x)], null)], null));\n\nvar G__15272 \x3d (i__14059 + (1));\ni__14059 \x3d G__15272;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__14060),cljs$pprint$two_forms_$_iter__14057(cljs.core.chunk_rest(s__14058__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__14060),null);\n}\n} else {\nvar x \x3d cljs.core.first(s__14058__$2);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [x,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(cljs.core.name(cljs.core.first(x))),cljs.core.second(x)], null)], null),cljs$pprint$two_forms_$_iter__14057(cljs.core.rest(s__14058__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(amap);\n})()], 0)));\n});\ncljs.pprint.add_core_ns \x3d (function cljs$pprint$add_core_ns(amap){\nvar core \x3d \x22clojure.core\x22;\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__14069_SHARP_){\nvar vec__14070 \x3d p1__14069_SHARP_;\nvar s \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14070,(0),null);\nvar f \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14070,(1),null);\nif(cljs.core.not((function (){var or__5045__auto__ \x3d cljs.core.namespace(s);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.special_symbol_QMARK_(s);\n}\n})())){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(core,cljs.core.name(s)),f], null);\n} else {\nreturn p1__14069_SHARP_;\n}\n}),amap));\n});\ncljs.pprint._STAR_code_table_STAR_ \x3d cljs.pprint.two_forms(cljs.pprint.add_core_ns(cljs.core.PersistentHashMap.fromArrays([new cljs.core.Symbol(null,\x22.\x22,\x22.\x22,1975675962,null),new cljs.core.Symbol(null,\x22fn*\x22,\x22fn*\x22,-752876845,null),new cljs.core.Symbol(null,\x22when-first\x22,\x22when-first\x22,821699168,null),new cljs.core.Symbol(null,\x22if\x22,\x22if\x22,1181717262,null),new cljs.core.Symbol(null,\x22condp\x22,\x22condp\x22,1054325175,null),new cljs.core.Symbol(null,\x22..\x22,\x22..\x22,-300507420,null),new cljs.core.Symbol(null,\x22defmacro\x22,\x22defmacro\x22,2054157304,null),new cljs.core.Symbol(null,\x22defn\x22,\x22defn\x22,-126010802,null),new cljs.core.Symbol(null,\x22loop\x22,\x22loop\x22,1244978678,null),new cljs.core.Symbol(null,\x22struct\x22,\x22struct\x22,325972931,null),new cljs.core.Symbol(null,\x22doseq\x22,\x22doseq\x22,221164135,null),new cljs.core.Symbol(null,\x22if-not\x22,\x22if-not\x22,-265415609,null),new cljs.core.Symbol(null,\x22when-not\x22,\x22when-not\x22,-1223136340,null),new cljs.core.Symbol(null,\x22def\x22,\x22def\x22,597100991,null),new cljs.core.Symbol(null,\x22when\x22,\x22when\x22,1064114221,null),new cljs.core.Symbol(null,\x22with-open\x22,\x22with-open\x22,172119667,null),new cljs.core.Symbol(null,\x22with-local-vars\x22,\x22with-local-vars\x22,837642072,null),new cljs.core.Symbol(null,\x22defonce\x22,\x22defonce\x22,-1681484013,null),new cljs.core.Symbol(null,\x22when-let\x22,\x22when-let\x22,-1383043480,null),new cljs.core.Symbol(null,\x22ns\x22,\x22ns\x22,2082130287,null),new cljs.core.Symbol(null,\x22dotimes\x22,\x22dotimes\x22,-818708397,null),new cljs.core.Symbol(null,\x22cond\x22,\x22cond\x22,1606708055,null),new cljs.core.Symbol(null,\x22let\x22,\x22let\x22,358118826,null),new cljs.core.Symbol(null,\x22fn\x22,\x22fn\x22,465265323,null),new cljs.core.Symbol(null,\x22defn-\x22,\x22defn-\x22,1097765044,null),new cljs.core.Symbol(null,\x22locking\x22,\x22locking\x22,1542862874,null),new cljs.core.Symbol(null,\x22-\x3e\x22,\x22-\x3e\x22,-2139605430,null),new cljs.core.Symbol(null,\x22if-let\x22,\x22if-let\x22,1803593690,null),new cljs.core.Symbol(null,\x22binding\x22,\x22binding\x22,-2114503176,null),new cljs.core.Symbol(null,\x22struct-map\x22,\x22struct-map\x22,-1387540878,null)],[cljs.pprint.pprint_hold_first,cljs.pprint.pprint_anon_func,cljs.pprint.pprint_let,cljs.pprint.pprint_if,cljs.pprint.pprint_condp,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_defn,cljs.pprint.pprint_defn,cljs.pprint.pprint_let,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_let,cljs.pprint.pprint_if,cljs.pprint.pprint_if,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_if,cljs.pprint.pprint_let,cljs.pprint.pprint_let,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_let,cljs.pprint.pprint_ns,cljs.pprint.pprint_let,cljs.pprint.pprint_cond,cljs.pprint.pprint_let,cljs.pprint.pprint_defn,cljs.pprint.pprint_defn,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_hold_first,cljs.pprint.pprint_let,cljs.pprint.pprint_let,cljs.pprint.pprint_hold_first])));\ncljs.pprint.pprint_code_list \x3d (function cljs$pprint$pprint_code_list(alis){\nif(cljs.core.not(cljs.pprint.pprint_reader_macro(alis))){\nvar temp__5802__auto__ \x3d cljs.pprint._STAR_code_table_STAR_.call(null,cljs.core.first(alis));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar special_form \x3d temp__5802__auto__;\nreturn (special_form.cljs$core$IFn$_invoke$arity$1 ? special_form.cljs$core$IFn$_invoke$arity$1(alis) : special_form.call(null,alis));\n} else {\nreturn cljs.pprint.pprint_simple_code_list(alis);\n}\n} else {\nreturn null;\n}\n});\ncljs.pprint.pprint_code_symbol \x3d (function cljs$pprint$pprint_code_symbol(sym){\nvar temp__5802__auto__ \x3d (sym.cljs$core$IFn$_invoke$arity$1 ? sym.cljs$core$IFn$_invoke$arity$1(cljs.pprint._STAR_symbol_map_STAR_) : sym.call(null,cljs.pprint._STAR_symbol_map_STAR_));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar arg_num \x3d temp__5802__auto__;\nreturn cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arg_num], 0));\n} else {\nif(cljs.core.truth_(cljs.pprint._STAR_print_suppress_namespaces_STAR_)){\nreturn cljs.pprint.print.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.name(sym)], 0));\n} else {\nreturn cljs.pprint.pr.call(null,sym);\n}\n}\n});\nif((typeof cljs !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof cljs.pprint.code_dispatch !\x3d\x3d \x27undefined\x27)){\n} else {\n/**\n * The pretty print dispatch function for pretty printing Clojure code.\n */\ncljs.pprint.code_dispatch \x3d (function (){var method_table__5642__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar prefer_table__5643__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar method_cache__5644__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar cached_hierarchy__5645__auto__ \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nvar hierarchy__5646__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22hierarchy\x22,\x22hierarchy\x22,-1053470341),(function (){var fexpr__14078 \x3d cljs.core.get_global_hierarchy;\nreturn (fexpr__14078.cljs$core$IFn$_invoke$arity$0 ? fexpr__14078.cljs$core$IFn$_invoke$arity$0() : fexpr__14078.call(null));\n})());\nreturn (new cljs.core.MultiFn(cljs.core.symbol.cljs$core$IFn$_invoke$arity$2(\x22cljs.pprint\x22,\x22code-dispatch\x22),cljs.pprint.type_dispatcher,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),hierarchy__5646__auto__,method_table__5642__auto__,prefer_table__5643__auto__,method_cache__5644__auto__,cached_hierarchy__5645__auto__));\n})();\n}\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683),cljs.pprint.pprint_code_list);\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22symbol\x22,\x22symbol\x22,-1038572696),cljs.pprint.pprint_code_symbol);\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22vector\x22,\x22vector\x22,1902966158),cljs.pprint.pprint_vector);\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22map\x22,\x22map\x22,1371690461),cljs.pprint.pprint_map);\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22set\x22,\x22set\x22,304602554),cljs.pprint.pprint_set);\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22queue\x22,\x22queue\x22,1455835879),cljs.pprint.pprint_pqueue);\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22deref\x22,\x22deref\x22,-145586795),cljs.pprint.pprint_ideref);\ncljs.pprint.use_method(cljs.pprint.code_dispatch,null,cljs.pprint.pr);\ncljs.pprint.use_method(cljs.pprint.code_dispatch,new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328),cljs.pprint.pprint_simple_default);\ncljs.pprint.set_pprint_dispatch(cljs.pprint.simple_dispatch);\ncljs.pprint.add_padding \x3d (function cljs$pprint$add_padding(width,s){\nvar padding \x3d (function (){var x__5130__auto__ \x3d (0);\nvar y__5131__auto__ \x3d (width - cljs.core.count(s));\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})();\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str,clojure.string.join.cljs$core$IFn$_invoke$arity$1(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(padding,\x22 \x22)),s);\n});\n/**\n * Prints a collection of maps in a textual table. Prints table headings\n * ks, and then a line of output for each row, corresponding to the keys\n * in ks. If ks are not specified, use the keys of the first item in rows.\n */\ncljs.pprint.print_table \x3d (function cljs$pprint$print_table(var_args){\nvar G__14083 \x3d arguments.length;\nswitch (G__14083) {\ncase 2:\nreturn cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 1:\nreturn cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2 \x3d (function (ks,rows){\nif(cljs.core.seq(rows)){\nvar widths \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.max,((cljs.core.str.cljs$core$IFn$_invoke$arity$1(k)).length),cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__14079_SHARP_){\nreturn ((cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(p1__14079_SHARP_,k))).length);\n}),rows));\n}),ks);\nvar spacers \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__14080_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(p1__14080_SHARP_,\x22-\x22));\n}),widths);\nvar fmt_row \x3d (function (leader,divider,trailer,row){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(leader),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(divider,(function (){var iter__5523__auto__ \x3d (function cljs$pprint$iter__14097(s__14098){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__14098__$1 \x3d s__14098;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__14098__$1);\nif(temp__5804__auto__){\nvar s__14098__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__14098__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__14098__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__14100 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__14099 \x3d (0);\nwhile(true){\nif((i__14099 \x3c size__5522__auto__)){\nvar vec__14101 \x3d cljs.core._nth(c__5521__auto__,i__14099);\nvar col \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14101,(0),null);\nvar width \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14101,(1),null);\ncljs.core.chunk_append(b__14100,cljs.pprint.add_padding(width,cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)));\n\nvar G__15283 \x3d (i__14099 + (1));\ni__14099 \x3d G__15283;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__14100),cljs$pprint$iter__14097(cljs.core.chunk_rest(s__14098__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__14100),null);\n}\n} else {\nvar vec__14105 \x3d cljs.core.first(s__14098__$2);\nvar col \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14105,(0),null);\nvar width \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14105,(1),null);\nreturn cljs.core.cons(cljs.pprint.add_padding(width,cljs.core.str.cljs$core$IFn$_invoke$arity$1(col)),cljs$pprint$iter__14097(cljs.core.rest(s__14098__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__14081_SHARP_){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(row,p1__14081_SHARP_);\n}),ks),widths));\n})()))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(trailer)].join(\x27\x27);\n});\ncljs.core.println();\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row(\x22| \x22,\x22 | \x22,\x22 |\x22,cljs.core.zipmap(ks,ks))], 0));\n\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row(\x22|-\x22,\x22-+-\x22,\x22-|\x22,cljs.core.zipmap(ks,spacers))], 0));\n\nvar seq__14110 \x3d cljs.core.seq(rows);\nvar chunk__14111 \x3d null;\nvar count__14112 \x3d (0);\nvar i__14113 \x3d (0);\nwhile(true){\nif((i__14113 \x3c count__14112)){\nvar row \x3d chunk__14111.cljs$core$IIndexed$_nth$arity$2(null,i__14113);\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row(\x22| \x22,\x22 | \x22,\x22 |\x22,row)], 0));\n\n\nvar G__15287 \x3d seq__14110;\nvar G__15288 \x3d chunk__14111;\nvar G__15289 \x3d count__14112;\nvar G__15290 \x3d (i__14113 + (1));\nseq__14110 \x3d G__15287;\nchunk__14111 \x3d G__15288;\ncount__14112 \x3d G__15289;\ni__14113 \x3d G__15290;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__14110);\nif(temp__5804__auto__){\nvar seq__14110__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__14110__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__14110__$1);\nvar G__15292 \x3d cljs.core.chunk_rest(seq__14110__$1);\nvar G__15293 \x3d c__5568__auto__;\nvar G__15294 \x3d cljs.core.count(c__5568__auto__);\nvar G__15295 \x3d (0);\nseq__14110 \x3d G__15292;\nchunk__14111 \x3d G__15293;\ncount__14112 \x3d G__15294;\ni__14113 \x3d G__15295;\ncontinue;\n} else {\nvar row \x3d cljs.core.first(seq__14110__$1);\ncljs.core.println.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_row(\x22| \x22,\x22 | \x22,\x22 |\x22,row)], 0));\n\n\nvar G__15296 \x3d cljs.core.next(seq__14110__$1);\nvar G__15297 \x3d null;\nvar G__15298 \x3d (0);\nvar G__15299 \x3d (0);\nseq__14110 \x3d G__15296;\nchunk__14111 \x3d G__15297;\ncount__14112 \x3d G__15298;\ni__14113 \x3d G__15299;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn null;\n}\n}));\n\n(cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$1 \x3d (function (rows){\nreturn cljs.pprint.print_table.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(cljs.core.first(rows)),rows);\n}));\n\n(cljs.pprint.print_table.cljs$lang$maxFixedArity \x3d 2);\n\n");
SHADOW_ENV.evalLoad("devtools.util.js", true , "goog.provide(\x27devtools.util\x27);\ndevtools.util.lib_info_style \x3d \x22color:black;font-weight:bold;\x22;\ndevtools.util.reset_style \x3d \x22color:black\x22;\ndevtools.util.advanced_build_explanation_url \x3d \x22https://github.com/binaryage/cljs-devtools/blob/master/docs/faq.md#why-custom-formatters-do-not-work-for-advanced-builds\x22;\ndevtools.util._STAR_custom_formatters_active_STAR_ \x3d false;\ndevtools.util._STAR_console_open_STAR_ \x3d false;\ndevtools.util._STAR_custom_formatters_warning_reported_STAR_ \x3d false;\ndevtools.util.pprint_str \x3d (function devtools$util$pprint_str(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14272 \x3d arguments.length;\nvar i__5770__auto___14273 \x3d (0);\nwhile(true){\nif((i__5770__auto___14273 \x3c len__5769__auto___14272)){\nargs__5775__auto__.push((arguments[i__5770__auto___14273]));\n\nvar G__14274 \x3d (i__5770__auto___14273 + (1));\ni__5770__auto___14273 \x3d G__14274;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\nvar sb__5690__auto__ \x3d (new goog.string.StringBuffer());\nvar _STAR_print_newline_STAR__orig_val__14121_14275 \x3d cljs.core._STAR_print_newline_STAR_;\nvar _STAR_print_fn_STAR__orig_val__14122_14276 \x3d cljs.core._STAR_print_fn_STAR_;\nvar _STAR_print_newline_STAR__temp_val__14123_14277 \x3d true;\nvar _STAR_print_fn_STAR__temp_val__14124_14278 \x3d (function (x__5691__auto__){\nreturn sb__5690__auto__.append(x__5691__auto__);\n});\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__temp_val__14123_14277);\n\n(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__temp_val__14124_14278);\n\ntry{var _STAR_print_level_STAR__orig_val__14129_14279 \x3d cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__14130_14280 \x3d (300);\n(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__temp_val__14130_14280);\n\ntry{cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.pprint.pprint,args);\n}finally {(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__orig_val__14129_14279);\n}}finally {(cljs.core._STAR_print_fn_STAR_ \x3d _STAR_print_fn_STAR__orig_val__14122_14276);\n\n(cljs.core._STAR_print_newline_STAR_ \x3d _STAR_print_newline_STAR__orig_val__14121_14275);\n}\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb__5690__auto__);\n}));\n\n(devtools.util.pprint_str.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.util.pprint_str.cljs$lang$applyTo \x3d (function (seq14116){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14116));\n}));\n\ndevtools.util.make_version_info \x3d (function devtools$util$make_version_info(){\nreturn \x221.0.6\x22;\n});\ndevtools.util.make_lib_info \x3d (function devtools$util$make_lib_info(){\nreturn [\x22CLJS DevTools \x22,devtools.util.make_version_info.call(null)].join(\x27\x27);\n});\ndevtools.util.get_lib_info \x3d (function devtools$util$get_lib_info(){\nreturn devtools.util.make_lib_info.call(null);\n});\ndevtools.util.get_node_info \x3d (function devtools$util$get_node_info(root){\ntry{var temp__5808__auto__ \x3d (root[\x22process\x22]);\nif((temp__5808__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar process__$1 \x3d temp__5808__auto__;\nvar version \x3d (process__$1[\x22version\x22]);\nvar platform \x3d (process__$1[\x22platform\x22]);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d version;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn platform;\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22version\x22,\x22version\x22,425292698),version,new cljs.core.Keyword(null,\x22platform\x22,\x22platform\x22,-1086422114),platform], null);\n} else {\nreturn null;\n}\n}\n}catch (e14143){var _ \x3d e14143;\nreturn null;\n}});\ndevtools.util.get_node_description \x3d (function devtools$util$get_node_description(node_info){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22platform\x22,\x22platform\x22,-1086422114).cljs$core$IFn$_invoke$arity$1(node_info);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \x22?\x22;\n}\n})()),\x22/\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22version\x22,\x22version\x22,425292698).cljs$core$IFn$_invoke$arity$1(node_info);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn \x22?\x22;\n}\n})())].join(\x27\x27);\n});\ndevtools.util.in_node_context_QMARK_ \x3d (function devtools$util$in_node_context_QMARK_(){\nreturn (!((devtools.util.get_node_info.call(null,devtools.context.get_root.call(null)) \x3d\x3d null)));\n});\ndevtools.util.get_js_context_description \x3d (function devtools$util$get_js_context_description(){\nvar temp__5802__auto__ \x3d devtools.util.get_node_info.call(null,devtools.context.get_root.call(null));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar node_info \x3d temp__5802__auto__;\nreturn [\x22node/\x22,devtools.util.get_node_description.call(null,node_info)].join(\x27\x27);\n} else {\nvar user_agent \x3d goog.userAgent.getUserAgentString();\nif(cljs.core.empty_QMARK_(user_agent)){\nreturn \x22\x3cunknown context\x3e\x22;\n} else {\nreturn user_agent;\n}\n}\n});\ndevtools.util.unknown_feature_msg \x3d (function devtools$util$unknown_feature_msg(feature,known_features,lib_info){\nreturn [\x22No such feature \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(feature),\x22 is currently available in \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(lib_info),\x22. \x22,\x22The list of supported features is \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([known_features], 0)),\x22.\x22].join(\x27\x27);\n});\ndevtools.util.feature_not_available_msg \x3d (function devtools$util$feature_not_available_msg(feature){\nreturn [\x22Feature \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(feature),\x22 cannot be installed. \x22,\x22Unsupported Javascript context: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.util.get_js_context_description.call(null)),\x22.\x22].join(\x27\x27);\n});\ndevtools.util.custom_formatters_not_active_msg \x3d (function devtools$util$custom_formatters_not_active_msg(){\nreturn [\x22CLJS DevTools: some custom formatters were not rendered.\\n\x22,\x22https://github.com/binaryage/cljs-devtools/blob/master/docs/faq.md#why-some-custom-formatters-were-not-rendered\x22].join(\x27\x27);\n});\ndevtools.util.formatter_key \x3d \x22devtoolsFormatters\x22;\ndevtools.util.get_formatters_safe \x3d (function devtools$util$get_formatters_safe(){\nvar formatters \x3d (devtools.context.get_root.call(null)[devtools.util.formatter_key]);\nif(cljs.core.array_QMARK_(formatters)){\nreturn formatters;\n} else {\nreturn [];\n}\n});\ndevtools.util.set_formatters_safe_BANG_ \x3d (function devtools$util$set_formatters_safe_BANG_(new_formatters){\nif((((new_formatters \x3d\x3d null)) || (cljs.core.array_QMARK_(new_formatters)))){\n} else {\nthrow (new Error(\x22Assert failed: (or (nil? new-formatters) (array? new-formatters))\x22));\n}\n\nreturn (devtools.context.get_root.call(null)[devtools.util.formatter_key] \x3d ((cljs.core.empty_QMARK_(new_formatters))?null:new_formatters));\n});\ndevtools.util.print_config_overrides_if_requested_BANG_ \x3d (function devtools$util$print_config_overrides_if_requested_BANG_(msg){\nif(cljs.core.truth_(devtools.prefs.pref(new cljs.core.Keyword(null,\x22print-config-overrides\x22,\x22print-config-overrides\x22,-274716965)))){\nvar diff \x3d cljs.core.second(clojure.data.diff(cljs.core.deref(devtools.prefs.default_config),devtools.prefs.get_prefs()));\nif((!(cljs.core.empty_QMARK_(diff)))){\nreturn devtools.context.get_console.call(null).info(msg,devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([diff], 0)));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\n\n/**\n* @constructor\n*/\ndevtools.util.CustomFormattersDetector \x3d (function (){\n});\n\n(devtools.util.CustomFormattersDetector.getBasis \x3d (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(devtools.util.CustomFormattersDetector.cljs$lang$type \x3d true);\n\n(devtools.util.CustomFormattersDetector.cljs$lang$ctorStr \x3d \x22devtools.util/CustomFormattersDetector\x22);\n\n(devtools.util.CustomFormattersDetector.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22devtools.util/CustomFormattersDetector\x22);\n}));\n\n/**\n * Positional factory function for devtools.util/CustomFormattersDetector.\n */\ndevtools.util.__GT_CustomFormattersDetector \x3d (function devtools$util$__GT_CustomFormattersDetector(){\nreturn (new devtools.util.CustomFormattersDetector());\n});\n\ndevtools.util.make_detector \x3d (function devtools$util$make_detector(){\nvar detector \x3d (new devtools.util.CustomFormattersDetector());\n(detector[\x22header\x22] \x3d (function (_object,_config){\n(devtools.util._STAR_custom_formatters_active_STAR_ \x3d true);\n\nreturn null;\n}));\n\n(detector[\x22hasBody\x22] \x3d cljs.core.constantly(false));\n\n(detector[\x22body\x22] \x3d cljs.core.constantly(null));\n\nreturn detector;\n});\ndevtools.util.install_detector_BANG_ \x3d (function devtools$util$install_detector_BANG_(detector){\nvar formatters \x3d devtools.util.get_formatters_safe();\nformatters.push(detector);\n\nreturn devtools.util.set_formatters_safe_BANG_(formatters);\n});\ndevtools.util.uninstall_detector_BANG_ \x3d (function devtools$util$uninstall_detector_BANG_(detector){\nvar current_formatters \x3d (devtools.context.get_root.call(null)[devtools.util.formatter_key]);\nif(cljs.core.array_QMARK_(current_formatters)){\nvar new_formatters \x3d current_formatters.filter((function (p1__14200_SHARP_){\nreturn (!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(detector,p1__14200_SHARP_)));\n}));\nreturn devtools.util.set_formatters_safe_BANG_(new_formatters);\n} else {\nreturn null;\n}\n});\ndevtools.util.check_custom_formatters_active_BANG_ \x3d (function devtools$util$check_custom_formatters_active_BANG_(){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d devtools.util._STAR_console_open_STAR_;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core.not(devtools.util._STAR_custom_formatters_active_STAR_);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nif(cljs.core.truth_(devtools.util._STAR_custom_formatters_warning_reported_STAR_)){\nreturn null;\n} else {\n(devtools.util._STAR_custom_formatters_warning_reported_STAR_ \x3d true);\n\nreturn devtools.context.get_console.call(null).warn(devtools.util.custom_formatters_not_active_msg.call(null));\n}\n} else {\nreturn null;\n}\n});\ndevtools.util.uninstall_detector_and_check_custom_formatters_active_BANG_ \x3d (function devtools$util$uninstall_detector_and_check_custom_formatters_active_BANG_(detector){\ndevtools.util.uninstall_detector_BANG_(detector);\n\nreturn devtools.util.check_custom_formatters_active_BANG_();\n});\ndevtools.util.make_detection_printer \x3d (function devtools$util$make_detection_printer(){\nvar f \x3d (function (){\nreturn null;\n});\nvar G__14203_14300 \x3d f;\nvar target__11525__auto___14301 \x3d G__14203_14300;\nif(cljs.core.truth_(target__11525__auto___14301)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22unable to locate object path \x22,null,\x22 in \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__14203_14300)].join(\x27\x27),\x22\\n\x22,\x22target__11525__auto__\x22].join(\x27\x27)));\n}\n\n(target__11525__auto___14301[\x22toString\x22] \x3d (function (){\n(devtools.util._STAR_console_open_STAR_ \x3d true);\n\nsetTimeout(devtools.util.check_custom_formatters_active_BANG_,(0));\n\nreturn \x22\x22;\n}));\n\n\nreturn f;\n});\ndevtools.util.wrap_with_custom_formatter_detection_BANG_ \x3d (function devtools$util$wrap_with_custom_formatter_detection_BANG_(f){\nif(cljs.core.not(devtools.prefs.pref(new cljs.core.Keyword(null,\x22dont-detect-custom-formatters\x22,\x22dont-detect-custom-formatters\x22,-29005804)))){\nvar detector \x3d devtools.util.make_detector();\ndevtools.util.install_detector_BANG_(detector);\n\nvar G__14205_14302 \x3d \x22%c%s\x22;\nvar G__14206_14303 \x3d \x22color:transparent\x22;\nvar G__14207_14304 \x3d devtools.util.make_detection_printer();\n(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14205_14302,G__14206_14303,G__14207_14304) : f.call(null,G__14205_14302,G__14206_14303,G__14207_14304));\n\nreturn setTimeout(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.util.uninstall_detector_and_check_custom_formatters_active_BANG_,detector),(0));\n} else {\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\ndevtools.util.feature_for_display \x3d (function devtools$util$feature_for_display(installed_features,feature){\nvar color \x3d (cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([feature]),installed_features))?\x22color:#0000ff\x22:\x22color:#ccc\x22);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22%c%s\x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [color,cljs.core.str.cljs$core$IFn$_invoke$arity$1(feature)], null)], null);\n});\ndevtools.util.feature_list_display \x3d (function devtools$util$feature_list_display(installed_features,feature_groups){\nvar labels \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.util.feature_for_display,installed_features),new cljs.core.Keyword(null,\x22all\x22,\x22all\x22,892129742).cljs$core$IFn$_invoke$arity$1(feature_groups));\nvar _STAR_ \x3d (function (accum,val){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(accum)),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(val))].join(\x27\x27),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.second(accum),cljs.core.second(val))], null);\n});\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,cljs.core.first(labels),cljs.core.rest(labels));\n});\ndevtools.util.display_banner_BANG_ \x3d (function devtools$util$display_banner_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14311 \x3d arguments.length;\nvar i__5770__auto___14313 \x3d (0);\nwhile(true){\nif((i__5770__auto___14313 \x3c len__5769__auto___14311)){\nargs__5775__auto__.push((arguments[i__5770__auto___14313]));\n\nvar G__14314 \x3d (i__5770__auto___14313 + (1));\ni__5770__auto___14313 \x3d G__14314;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((3) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn devtools.util.display_banner_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(devtools.util.display_banner_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (installed_features,feature_groups,fmt,params){\nvar vec__14221 \x3d devtools.util.feature_list_display(installed_features,feature_groups);\nvar fmt_str \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14221,(0),null);\nvar fmt_params \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14221,(1),null);\nreturn devtools.util.wrap_with_custom_formatter_detection_BANG_((function() { \nvar G__14318__delegate \x3d function (add_fmt,add_args){\nvar items \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [[cljs.core.str.cljs$core$IFn$_invoke$arity$1(fmt),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(fmt_str),cljs.core.str.cljs$core$IFn$_invoke$arity$1(add_fmt)].join(\x27\x27)], null),params,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fmt_params,add_args], 0));\nvar console__$1 \x3d devtools.context.get_console.call(null);\nreturn console__$1.info.apply(console__$1,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(items));\n};\nvar G__14318 \x3d function (add_fmt,var_args){\nvar add_args \x3d null;\nif (arguments.length \x3e 1) {\nvar G__14321__i \x3d 0, G__14321__a \x3d new Array(arguments.length -  1);\nwhile (G__14321__i \x3c G__14321__a.length) {G__14321__a[G__14321__i] \x3d arguments[G__14321__i + 1]; ++G__14321__i;}\n  add_args \x3d new cljs.core.IndexedSeq(G__14321__a,0,null);\n} \nreturn G__14318__delegate.call(this,add_fmt,add_args);};\nG__14318.cljs$lang$maxFixedArity \x3d 1;\nG__14318.cljs$lang$applyTo \x3d (function (arglist__14324){\nvar add_fmt \x3d cljs.core.first(arglist__14324);\nvar add_args \x3d cljs.core.rest(arglist__14324);\nreturn G__14318__delegate(add_fmt,add_args);\n});\nG__14318.cljs$core$IFn$_invoke$arity$variadic \x3d G__14318__delegate;\nreturn G__14318;\n})()\n);\n}));\n\n(devtools.util.display_banner_BANG_.cljs$lang$maxFixedArity \x3d (3));\n\n/** @this {Function} */\n(devtools.util.display_banner_BANG_.cljs$lang$applyTo \x3d (function (seq14215){\nvar G__14216 \x3d cljs.core.first(seq14215);\nvar seq14215__$1 \x3d cljs.core.next(seq14215);\nvar G__14217 \x3d cljs.core.first(seq14215__$1);\nvar seq14215__$2 \x3d cljs.core.next(seq14215__$1);\nvar G__14218 \x3d cljs.core.first(seq14215__$2);\nvar seq14215__$3 \x3d cljs.core.next(seq14215__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14216,G__14217,G__14218,seq14215__$3);\n}));\n\ndevtools.util.display_banner_if_needed_BANG_ \x3d (function devtools$util$display_banner_if_needed_BANG_(features_to_install,feature_groups){\nif(cljs.core.not(devtools.prefs.pref(new cljs.core.Keyword(null,\x22dont-display-banner\x22,\x22dont-display-banner\x22,-1175550370)))){\nvar banner \x3d \x22Installing %c%s%c and enabling features\x22;\nreturn devtools.util.display_banner_BANG_.cljs$core$IFn$_invoke$arity$variadic(features_to_install,feature_groups,banner,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.util.lib_info_style,devtools.util.get_lib_info(),devtools.util.reset_style], 0));\n} else {\nreturn (devtools.util._STAR_custom_formatters_active_STAR_ \x3d true);\n}\n});\ndevtools.util.report_unknown_features_BANG_ \x3d (function devtools$util$report_unknown_features_BANG_(features,known_features){\nvar lib_info \x3d devtools.util.get_lib_info();\nvar seq__14238 \x3d cljs.core.seq(features);\nvar chunk__14239 \x3d null;\nvar count__14240 \x3d (0);\nvar i__14241 \x3d (0);\nwhile(true){\nif((i__14241 \x3c count__14240)){\nvar feature \x3d chunk__14239.cljs$core$IIndexed$_nth$arity$2(null,i__14241);\nif(cljs.core.not(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([feature]),known_features))){\ndevtools.context.get_console.call(null).warn(devtools.util.unknown_feature_msg.call(null,feature,known_features,lib_info));\n} else {\n}\n\n\nvar G__14329 \x3d seq__14238;\nvar G__14330 \x3d chunk__14239;\nvar G__14331 \x3d count__14240;\nvar G__14332 \x3d (i__14241 + (1));\nseq__14238 \x3d G__14329;\nchunk__14239 \x3d G__14330;\ncount__14240 \x3d G__14331;\ni__14241 \x3d G__14332;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__14238);\nif(temp__5804__auto__){\nvar seq__14238__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__14238__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__14238__$1);\nvar G__14340 \x3d cljs.core.chunk_rest(seq__14238__$1);\nvar G__14341 \x3d c__5568__auto__;\nvar G__14342 \x3d cljs.core.count(c__5568__auto__);\nvar G__14343 \x3d (0);\nseq__14238 \x3d G__14340;\nchunk__14239 \x3d G__14341;\ncount__14240 \x3d G__14342;\ni__14241 \x3d G__14343;\ncontinue;\n} else {\nvar feature \x3d cljs.core.first(seq__14238__$1);\nif(cljs.core.not(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([feature]),known_features))){\ndevtools.context.get_console.call(null).warn(devtools.util.unknown_feature_msg.call(null,feature,known_features,lib_info));\n} else {\n}\n\n\nvar G__14345 \x3d cljs.core.next(seq__14238__$1);\nvar G__14346 \x3d null;\nvar G__14347 \x3d (0);\nvar G__14348 \x3d (0);\nseq__14238 \x3d G__14345;\nchunk__14239 \x3d G__14346;\ncount__14240 \x3d G__14347;\ni__14241 \x3d G__14348;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ndevtools.util.is_known_feature_QMARK_ \x3d (function devtools$util$is_known_feature_QMARK_(known_features,feature){\nreturn cljs.core.boolean$(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([feature]),known_features));\n});\ndevtools.util.convert_legacy_feature \x3d (function devtools$util$convert_legacy_feature(feature){\nvar G__14251 \x3d feature;\nvar G__14251__$1 \x3d (((G__14251 instanceof cljs.core.Keyword))?G__14251.fqn:null);\nswitch (G__14251__$1) {\ncase \x22custom-formatters\x22:\nreturn new cljs.core.Keyword(null,\x22formatters\x22,\x22formatters\x22,-1875637118);\n\nbreak;\ncase \x22sanity-hints\x22:\nreturn new cljs.core.Keyword(null,\x22hints\x22,\x22hints\x22,-991113151);\n\nbreak;\ndefault:\nreturn feature;\n\n}\n});\ndevtools.util.convert_legacy_features \x3d (function devtools$util$convert_legacy_features(features){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.util.convert_legacy_feature,features);\n});\ndevtools.util.sanititze_features_BANG_ \x3d (function devtools$util$sanititze_features_BANG_(features,feature_groups){\nvar known_features \x3d new cljs.core.Keyword(null,\x22all\x22,\x22all\x22,892129742).cljs$core$IFn$_invoke$arity$1(feature_groups);\nvar features__$1 \x3d devtools.util.convert_legacy_features(features);\ndevtools.util.report_unknown_features_BANG_(features__$1,known_features);\n\nreturn cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.util.is_known_feature_QMARK_,known_features),features__$1);\n});\ndevtools.util.resolve_features_BANG_ \x3d (function devtools$util$resolve_features_BANG_(features_desc,feature_groups){\nvar features \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d (features_desc instanceof cljs.core.Keyword);\nif(and__5043__auto__){\nreturn (features_desc.cljs$core$IFn$_invoke$arity$1 ? features_desc.cljs$core$IFn$_invoke$arity$1(feature_groups) : features_desc.call(null,feature_groups));\n} else {\nreturn and__5043__auto__;\n}\n})())?(features_desc.cljs$core$IFn$_invoke$arity$1 ? features_desc.cljs$core$IFn$_invoke$arity$1(feature_groups) : features_desc.call(null,feature_groups)):(((features_desc \x3d\x3d null))?new cljs.core.Keyword(null,\x22default\x22,\x22default\x22,-1987822328).cljs$core$IFn$_invoke$arity$1(feature_groups):((cljs.core.seqable_QMARK_(features_desc))?features_desc:new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [features_desc], null)\n)));\nreturn devtools.util.sanititze_features_BANG_(features,feature_groups);\n});\ndevtools.util.under_advanced_build_QMARK_ \x3d (function devtools$util$under_advanced_build_QMARK_(){\nif(cljs.core.not(devtools.prefs.pref(new cljs.core.Keyword(null,\x22disable-advanced-mode-check\x22,\x22disable-advanced-mode-check\x22,-968346539)))){\nreturn ((function (){var temp__5802__auto__ \x3d (devtools.context.get_root.call(null)[\x22devtools\x22]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar o14257 \x3d temp__5802__auto__;\nreturn (o14257[\x22version\x22]);\n} else {\nreturn null;\n}\n})() \x3d\x3d null);\n} else {\nreturn null;\n}\n});\ndevtools.util.display_advanced_build_warning_if_needed_BANG_ \x3d (function devtools$util$display_advanced_build_warning_if_needed_BANG_(){\nif(cljs.core.not(devtools.prefs.pref(new cljs.core.Keyword(null,\x22dont-display-advanced-build-warning\x22,\x22dont-display-advanced-build-warning\x22,-91321563)))){\nvar banner \x3d [\x22%cNOT%c installing %c%s%c under advanced build. See \x22,devtools.util.advanced_build_explanation_url,\x22.\x22].join(\x27\x27);\nreturn devtools.context.get_console.call(null).warn(banner,\x22font-weight:bold\x22,devtools.util.reset_style,devtools.util.lib_info_style,devtools.util.get_lib_info(),devtools.util.reset_style);\n} else {\nreturn null;\n}\n});\ndevtools.util.install_feature_BANG_ \x3d (function devtools$util$install_feature_BANG_(feature,features_to_install,available_fn,install_fn){\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([feature]),features_to_install))){\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d devtools.prefs.pref(new cljs.core.Keyword(null,\x22bypass-availability-checks\x22,\x22bypass-availability-checks\x22,1934691680));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (available_fn.cljs$core$IFn$_invoke$arity$1 ? available_fn.cljs$core$IFn$_invoke$arity$1(feature) : available_fn.call(null,feature));\n}\n})())){\nreturn (install_fn.cljs$core$IFn$_invoke$arity$0 ? install_fn.cljs$core$IFn$_invoke$arity$0() : install_fn.call(null));\n} else {\nreturn devtools.context.get_console.call(null).warn(devtools.util.feature_not_available_msg.call(null,feature));\n}\n} else {\nreturn null;\n}\n});\n");
SHADOW_ENV.evalLoad("devtools.format.js", true , "goog.provide(\x27devtools.format\x27);\n\n/**\n * @interface\n */\ndevtools.format.IDevtoolsFormat \x3d function(){};\n\nvar devtools$format$IDevtoolsFormat$_header$dyn_11965 \x3d (function (value){\nvar x__5393__auto__ \x3d (((value \x3d\x3d null))?null:value);\nvar m__5394__auto__ \x3d (devtools.format._header[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5394__auto__.call(null,value));\n} else {\nvar m__5392__auto__ \x3d (devtools.format._header[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5392__auto__.call(null,value));\n} else {\nthrow cljs.core.missing_protocol(\x22IDevtoolsFormat.-header\x22,value);\n}\n}\n});\ndevtools.format._header \x3d (function devtools$format$_header(value){\nif((((!((value \x3d\x3d null)))) \x26\x26 ((!((value.devtools$format$IDevtoolsFormat$_header$arity$1 \x3d\x3d null)))))){\nreturn value.devtools$format$IDevtoolsFormat$_header$arity$1(value);\n} else {\nreturn devtools$format$IDevtoolsFormat$_header$dyn_11965(value);\n}\n});\n\nvar devtools$format$IDevtoolsFormat$_has_body$dyn_11977 \x3d (function (value){\nvar x__5393__auto__ \x3d (((value \x3d\x3d null))?null:value);\nvar m__5394__auto__ \x3d (devtools.format._has_body[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5394__auto__.call(null,value));\n} else {\nvar m__5392__auto__ \x3d (devtools.format._has_body[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5392__auto__.call(null,value));\n} else {\nthrow cljs.core.missing_protocol(\x22IDevtoolsFormat.-has-body\x22,value);\n}\n}\n});\ndevtools.format._has_body \x3d (function devtools$format$_has_body(value){\nif((((!((value \x3d\x3d null)))) \x26\x26 ((!((value.devtools$format$IDevtoolsFormat$_has_body$arity$1 \x3d\x3d null)))))){\nreturn value.devtools$format$IDevtoolsFormat$_has_body$arity$1(value);\n} else {\nreturn devtools$format$IDevtoolsFormat$_has_body$dyn_11977(value);\n}\n});\n\nvar devtools$format$IDevtoolsFormat$_body$dyn_11987 \x3d (function (value){\nvar x__5393__auto__ \x3d (((value \x3d\x3d null))?null:value);\nvar m__5394__auto__ \x3d (devtools.format._body[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5394__auto__.call(null,value));\n} else {\nvar m__5392__auto__ \x3d (devtools.format._body[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5392__auto__.call(null,value));\n} else {\nthrow cljs.core.missing_protocol(\x22IDevtoolsFormat.-body\x22,value);\n}\n}\n});\ndevtools.format._body \x3d (function devtools$format$_body(value){\nif((((!((value \x3d\x3d null)))) \x26\x26 ((!((value.devtools$format$IDevtoolsFormat$_body$arity$1 \x3d\x3d null)))))){\nreturn value.devtools$format$IDevtoolsFormat$_body$arity$1(value);\n} else {\nreturn devtools$format$IDevtoolsFormat$_body$dyn_11987(value);\n}\n});\n\ndevtools.format.setup_BANG_ \x3d (function devtools$format$setup_BANG_(){\nif(cljs.core.truth_(devtools.format._STAR_setup_done_STAR_)){\nreturn null;\n} else {\n(devtools.format._STAR_setup_done_STAR_ \x3d true);\n\ndevtools.format.make_template_fn \x3d (function (){var temp__5802__auto__ \x3d (devtools.context.get_root.call(null)[\x22devtools\x22]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar o11616 \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d (o11616[\x22formatters\x22]);\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar o11617 \x3d temp__5802__auto____$1;\nvar temp__5802__auto____$2 \x3d (o11617[\x22templating\x22]);\nif(cljs.core.truth_(temp__5802__auto____$2)){\nvar o11618 \x3d temp__5802__auto____$2;\nreturn (o11618[\x22make_template\x22]);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\n\ndevtools.format.make_group_fn \x3d (function (){var temp__5802__auto__ \x3d (devtools.context.get_root.call(null)[\x22devtools\x22]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar o11627 \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d (o11627[\x22formatters\x22]);\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar o11628 \x3d temp__5802__auto____$1;\nvar temp__5802__auto____$2 \x3d (o11628[\x22templating\x22]);\nif(cljs.core.truth_(temp__5802__auto____$2)){\nvar o11629 \x3d temp__5802__auto____$2;\nreturn (o11629[\x22make_group\x22]);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\n\ndevtools.format.make_reference_fn \x3d (function (){var temp__5802__auto__ \x3d (devtools.context.get_root.call(null)[\x22devtools\x22]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar o11636 \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d (o11636[\x22formatters\x22]);\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar o11637 \x3d temp__5802__auto____$1;\nvar temp__5802__auto____$2 \x3d (o11637[\x22templating\x22]);\nif(cljs.core.truth_(temp__5802__auto____$2)){\nvar o11638 \x3d temp__5802__auto____$2;\nreturn (o11638[\x22make_reference\x22]);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\n\ndevtools.format.make_surrogate_fn \x3d (function (){var temp__5802__auto__ \x3d (devtools.context.get_root.call(null)[\x22devtools\x22]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar o11645 \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d (o11645[\x22formatters\x22]);\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar o11646 \x3d temp__5802__auto____$1;\nvar temp__5802__auto____$2 \x3d (o11646[\x22templating\x22]);\nif(cljs.core.truth_(temp__5802__auto____$2)){\nvar o11647 \x3d temp__5802__auto____$2;\nreturn (o11647[\x22make_surrogate\x22]);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\n\ndevtools.format.render_markup_fn \x3d (function (){var temp__5802__auto__ \x3d (devtools.context.get_root.call(null)[\x22devtools\x22]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar o11655 \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d (o11655[\x22formatters\x22]);\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar o11656 \x3d temp__5802__auto____$1;\nvar temp__5802__auto____$2 \x3d (o11656[\x22templating\x22]);\nif(cljs.core.truth_(temp__5802__auto____$2)){\nvar o11657 \x3d temp__5802__auto____$2;\nreturn (o11657[\x22render_markup\x22]);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\n\ndevtools.format._LT_header_GT__fn \x3d (function (){var temp__5802__auto__ \x3d (devtools.context.get_root.call(null)[\x22devtools\x22]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar o11664 \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d (o11664[\x22formatters\x22]);\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar o11665 \x3d temp__5802__auto____$1;\nvar temp__5802__auto____$2 \x3d (o11665[\x22markup\x22]);\nif(cljs.core.truth_(temp__5802__auto____$2)){\nvar o11666 \x3d temp__5802__auto____$2;\nreturn (o11666[\x22_LT_header_GT_\x22]);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\n\ndevtools.format._LT_standard_body_GT__fn \x3d (function (){var temp__5802__auto__ \x3d (devtools.context.get_root.call(null)[\x22devtools\x22]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar o11675 \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d (o11675[\x22formatters\x22]);\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar o11676 \x3d temp__5802__auto____$1;\nvar temp__5802__auto____$2 \x3d (o11676[\x22markup\x22]);\nif(cljs.core.truth_(temp__5802__auto____$2)){\nvar o11677 \x3d temp__5802__auto____$2;\nreturn (o11677[\x22_LT_standard_body_GT_\x22]);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\n\nif(cljs.core.truth_(devtools.format.make_template_fn)){\n} else {\nthrow (new Error(\x22Assert failed: make-template-fn\x22));\n}\n\nif(cljs.core.truth_(devtools.format.make_group_fn)){\n} else {\nthrow (new Error(\x22Assert failed: make-group-fn\x22));\n}\n\nif(cljs.core.truth_(devtools.format.make_reference_fn)){\n} else {\nthrow (new Error(\x22Assert failed: make-reference-fn\x22));\n}\n\nif(cljs.core.truth_(devtools.format.make_surrogate_fn)){\n} else {\nthrow (new Error(\x22Assert failed: make-surrogate-fn\x22));\n}\n\nif(cljs.core.truth_(devtools.format.render_markup_fn)){\n} else {\nthrow (new Error(\x22Assert failed: render-markup-fn\x22));\n}\n\nif(cljs.core.truth_(devtools.format._LT_header_GT__fn)){\n} else {\nthrow (new Error(\x22Assert failed: \x3cheader\x3e-fn\x22));\n}\n\nif(cljs.core.truth_(devtools.format._LT_standard_body_GT__fn)){\nreturn null;\n} else {\nthrow (new Error(\x22Assert failed: \x3cstandard-body\x3e-fn\x22));\n}\n}\n});\ndevtools.format.render_markup \x3d (function devtools$format$render_markup(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12047 \x3d arguments.length;\nvar i__5770__auto___12048 \x3d (0);\nwhile(true){\nif((i__5770__auto___12048 \x3c len__5769__auto___12047)){\nargs__5775__auto__.push((arguments[i__5770__auto___12048]));\n\nvar G__12049 \x3d (i__5770__auto___12048 + (1));\ni__5770__auto___12048 \x3d G__12049;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.format.render_markup.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.format.render_markup.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\ndevtools.format.setup_BANG_();\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.format.render_markup_fn,args);\n}));\n\n(devtools.format.render_markup.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.format.render_markup.cljs$lang$applyTo \x3d (function (seq11691){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11691));\n}));\n\ndevtools.format.make_template \x3d (function devtools$format$make_template(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12061 \x3d arguments.length;\nvar i__5770__auto___12062 \x3d (0);\nwhile(true){\nif((i__5770__auto___12062 \x3c len__5769__auto___12061)){\nargs__5775__auto__.push((arguments[i__5770__auto___12062]));\n\nvar G__12063 \x3d (i__5770__auto___12062 + (1));\ni__5770__auto___12062 \x3d G__12063;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.format.make_template.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.format.make_template.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\ndevtools.format.setup_BANG_();\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.format.make_template_fn,args);\n}));\n\n(devtools.format.make_template.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.format.make_template.cljs$lang$applyTo \x3d (function (seq11712){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11712));\n}));\n\ndevtools.format.make_group \x3d (function devtools$format$make_group(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12075 \x3d arguments.length;\nvar i__5770__auto___12079 \x3d (0);\nwhile(true){\nif((i__5770__auto___12079 \x3c len__5769__auto___12075)){\nargs__5775__auto__.push((arguments[i__5770__auto___12079]));\n\nvar G__12082 \x3d (i__5770__auto___12079 + (1));\ni__5770__auto___12079 \x3d G__12082;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.format.make_group.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.format.make_group.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\ndevtools.format.setup_BANG_();\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.format.make_group_fn,args);\n}));\n\n(devtools.format.make_group.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.format.make_group.cljs$lang$applyTo \x3d (function (seq11735){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11735));\n}));\n\ndevtools.format.make_surrogate \x3d (function devtools$format$make_surrogate(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12106 \x3d arguments.length;\nvar i__5770__auto___12107 \x3d (0);\nwhile(true){\nif((i__5770__auto___12107 \x3c len__5769__auto___12106)){\nargs__5775__auto__.push((arguments[i__5770__auto___12107]));\n\nvar G__12109 \x3d (i__5770__auto___12107 + (1));\ni__5770__auto___12107 \x3d G__12109;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.format.make_surrogate.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.format.make_surrogate.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\ndevtools.format.setup_BANG_();\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.format.make_surrogate_fn,args);\n}));\n\n(devtools.format.make_surrogate.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.format.make_surrogate.cljs$lang$applyTo \x3d (function (seq11743){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11743));\n}));\n\ndevtools.format.template \x3d (function devtools$format$template(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12114 \x3d arguments.length;\nvar i__5770__auto___12115 \x3d (0);\nwhile(true){\nif((i__5770__auto___12115 \x3c len__5769__auto___12114)){\nargs__5775__auto__.push((arguments[i__5770__auto___12115]));\n\nvar G__12118 \x3d (i__5770__auto___12115 + (1));\ni__5770__auto___12115 \x3d G__12118;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.format.template.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.format.template.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\ndevtools.format.setup_BANG_();\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.format.make_template_fn,args);\n}));\n\n(devtools.format.template.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.format.template.cljs$lang$applyTo \x3d (function (seq11755){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11755));\n}));\n\ndevtools.format.group \x3d (function devtools$format$group(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12133 \x3d arguments.length;\nvar i__5770__auto___12135 \x3d (0);\nwhile(true){\nif((i__5770__auto___12135 \x3c len__5769__auto___12133)){\nargs__5775__auto__.push((arguments[i__5770__auto___12135]));\n\nvar G__12139 \x3d (i__5770__auto___12135 + (1));\ni__5770__auto___12135 \x3d G__12139;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.format.group.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.format.group.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\ndevtools.format.setup_BANG_();\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.format.make_group_fn,args);\n}));\n\n(devtools.format.group.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.format.group.cljs$lang$applyTo \x3d (function (seq11777){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11777));\n}));\n\ndevtools.format.surrogate \x3d (function devtools$format$surrogate(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12150 \x3d arguments.length;\nvar i__5770__auto___12151 \x3d (0);\nwhile(true){\nif((i__5770__auto___12151 \x3c len__5769__auto___12150)){\nargs__5775__auto__.push((arguments[i__5770__auto___12151]));\n\nvar G__12155 \x3d (i__5770__auto___12151 + (1));\ni__5770__auto___12151 \x3d G__12155;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.format.surrogate.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.format.surrogate.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\ndevtools.format.setup_BANG_();\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.format.make_surrogate_fn,args);\n}));\n\n(devtools.format.surrogate.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.format.surrogate.cljs$lang$applyTo \x3d (function (seq11797){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11797));\n}));\n\ndevtools.format.reference \x3d (function devtools$format$reference(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12163 \x3d arguments.length;\nvar i__5770__auto___12164 \x3d (0);\nwhile(true){\nif((i__5770__auto___12164 \x3c len__5769__auto___12163)){\nargs__5775__auto__.push((arguments[i__5770__auto___12164]));\n\nvar G__12171 \x3d (i__5770__auto___12164 + (1));\ni__5770__auto___12164 \x3d G__12171;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.format.reference.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.format.reference.cljs$core$IFn$_invoke$arity$variadic \x3d (function (object,p__11862){\nvar vec__11863 \x3d p__11862;\nvar state_override \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11863,(0),null);\ndevtools.format.setup_BANG_();\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.format.make_reference_fn,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [object,(function (p1__11839_SHARP_){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1__11839_SHARP_,state_override], 0));\n})], null));\n}));\n\n(devtools.format.reference.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.format.reference.cljs$lang$applyTo \x3d (function (seq11842){\nvar G__11843 \x3d cljs.core.first(seq11842);\nvar seq11842__$1 \x3d cljs.core.next(seq11842);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11843,seq11842__$1);\n}));\n\ndevtools.format.standard_reference \x3d (function devtools$format$standard_reference(target){\ndevtools.format.setup_BANG_();\n\nvar G__11881 \x3d new cljs.core.Keyword(null,\x22ol\x22,\x22ol\x22,932524051);\nvar G__11882 \x3d new cljs.core.Keyword(null,\x22standard-ol-style\x22,\x22standard-ol-style\x22,2143825615);\nvar G__11883 \x3d (function (){var G__11884 \x3d new cljs.core.Keyword(null,\x22li\x22,\x22li\x22,723558921);\nvar G__11885 \x3d new cljs.core.Keyword(null,\x22standard-li-style\x22,\x22standard-li-style\x22,413442955);\nvar G__11886 \x3d (devtools.format.make_reference_fn.cljs$core$IFn$_invoke$arity$1 ? devtools.format.make_reference_fn.cljs$core$IFn$_invoke$arity$1(target) : devtools.format.make_reference_fn.call(null,target));\nreturn (devtools.format.make_template_fn.cljs$core$IFn$_invoke$arity$3 ? devtools.format.make_template_fn.cljs$core$IFn$_invoke$arity$3(G__11884,G__11885,G__11886) : devtools.format.make_template_fn.call(null,G__11884,G__11885,G__11886));\n})();\nreturn (devtools.format.make_template_fn.cljs$core$IFn$_invoke$arity$3 ? devtools.format.make_template_fn.cljs$core$IFn$_invoke$arity$3(G__11881,G__11882,G__11883) : devtools.format.make_template_fn.call(null,G__11881,G__11882,G__11883));\n});\ndevtools.format.build_header \x3d (function devtools$format$build_header(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12189 \x3d arguments.length;\nvar i__5770__auto___12190 \x3d (0);\nwhile(true){\nif((i__5770__auto___12190 \x3c len__5769__auto___12189)){\nargs__5775__auto__.push((arguments[i__5770__auto___12190]));\n\nvar G__12192 \x3d (i__5770__auto___12190 + (1));\ni__5770__auto___12190 \x3d G__12192;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.format.build_header.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.format.build_header.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\ndevtools.format.setup_BANG_();\n\nreturn devtools.format.render_markup.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.format._LT_header_GT__fn,args)], 0));\n}));\n\n(devtools.format.build_header.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.format.build_header.cljs$lang$applyTo \x3d (function (seq11896){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq11896));\n}));\n\ndevtools.format.standard_body_template \x3d (function devtools$format$standard_body_template(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12202 \x3d arguments.length;\nvar i__5770__auto___12203 \x3d (0);\nwhile(true){\nif((i__5770__auto___12203 \x3c len__5769__auto___12202)){\nargs__5775__auto__.push((arguments[i__5770__auto___12203]));\n\nvar G__12207 \x3d (i__5770__auto___12203 + (1));\ni__5770__auto___12203 \x3d G__12207;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.format.standard_body_template.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.format.standard_body_template.cljs$core$IFn$_invoke$arity$variadic \x3d (function (lines,rest){\ndevtools.format.setup_BANG_();\n\nvar args \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (x){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [x], null);\n}),lines)], null),rest);\nreturn devtools.format.render_markup.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.format._LT_standard_body_GT__fn,args)], 0));\n}));\n\n(devtools.format.standard_body_template.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.format.standard_body_template.cljs$lang$applyTo \x3d (function (seq11913){\nvar G__11914 \x3d cljs.core.first(seq11913);\nvar seq11913__$1 \x3d cljs.core.next(seq11913);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__11914,seq11913__$1);\n}));\n\n");
SHADOW_ENV.evalLoad("devtools.protocols.js", true , "goog.provide(\x27devtools.protocols\x27);\n\n/**\n * Marker protocol indicating a devtools template.\n * @interface\n */\ndevtools.protocols.ITemplate \x3d function(){};\n\n\n/**\n * Marker protocol indicating a devtools group.\n * @interface\n */\ndevtools.protocols.IGroup \x3d function(){};\n\n\n/**\n * Marker protocol indicating a devtools surrogate object.\n * @interface\n */\ndevtools.protocols.ISurrogate \x3d function(){};\n\n\n/**\n * @interface\n */\ndevtools.protocols.IFormat \x3d function(){};\n\nvar devtools$protocols$IFormat$_header$dyn_11608 \x3d (function (value){\nvar x__5393__auto__ \x3d (((value \x3d\x3d null))?null:value);\nvar m__5394__auto__ \x3d (devtools.protocols._header[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5394__auto__.call(null,value));\n} else {\nvar m__5392__auto__ \x3d (devtools.protocols._header[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5392__auto__.call(null,value));\n} else {\nthrow cljs.core.missing_protocol(\x22IFormat.-header\x22,value);\n}\n}\n});\ndevtools.protocols._header \x3d (function devtools$protocols$_header(value){\nif((((!((value \x3d\x3d null)))) \x26\x26 ((!((value.devtools$protocols$IFormat$_header$arity$1 \x3d\x3d null)))))){\nreturn value.devtools$protocols$IFormat$_header$arity$1(value);\n} else {\nreturn devtools$protocols$IFormat$_header$dyn_11608(value);\n}\n});\n\nvar devtools$protocols$IFormat$_has_body$dyn_11611 \x3d (function (value){\nvar x__5393__auto__ \x3d (((value \x3d\x3d null))?null:value);\nvar m__5394__auto__ \x3d (devtools.protocols._has_body[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5394__auto__.call(null,value));\n} else {\nvar m__5392__auto__ \x3d (devtools.protocols._has_body[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5392__auto__.call(null,value));\n} else {\nthrow cljs.core.missing_protocol(\x22IFormat.-has-body\x22,value);\n}\n}\n});\ndevtools.protocols._has_body \x3d (function devtools$protocols$_has_body(value){\nif((((!((value \x3d\x3d null)))) \x26\x26 ((!((value.devtools$protocols$IFormat$_has_body$arity$1 \x3d\x3d null)))))){\nreturn value.devtools$protocols$IFormat$_has_body$arity$1(value);\n} else {\nreturn devtools$protocols$IFormat$_has_body$dyn_11611(value);\n}\n});\n\nvar devtools$protocols$IFormat$_body$dyn_11621 \x3d (function (value){\nvar x__5393__auto__ \x3d (((value \x3d\x3d null))?null:value);\nvar m__5394__auto__ \x3d (devtools.protocols._body[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5394__auto__.call(null,value));\n} else {\nvar m__5392__auto__ \x3d (devtools.protocols._body[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(value) : m__5392__auto__.call(null,value));\n} else {\nthrow cljs.core.missing_protocol(\x22IFormat.-body\x22,value);\n}\n}\n});\ndevtools.protocols._body \x3d (function devtools$protocols$_body(value){\nif((((!((value \x3d\x3d null)))) \x26\x26 ((!((value.devtools$protocols$IFormat$_body$arity$1 \x3d\x3d null)))))){\nreturn value.devtools$protocols$IFormat$_body$arity$1(value);\n} else {\nreturn devtools$protocols$IFormat$_body$dyn_11621(value);\n}\n});\n\n");
SHADOW_ENV.evalLoad("devtools.reporter.js", true , "goog.provide(\x27devtools.reporter\x27);\ndevtools.reporter.issues_url \x3d \x22https://github.com/binaryage/cljs-devtools/issues\x22;\ndevtools.reporter.report_internal_error_BANG_ \x3d (function devtools$reporter$report_internal_error_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14357 \x3d arguments.length;\nvar i__5770__auto___14358 \x3d (0);\nwhile(true){\nif((i__5770__auto___14358 \x3c len__5769__auto___14357)){\nargs__5775__auto__.push((arguments[i__5770__auto___14358]));\n\nvar G__14360 \x3d (i__5770__auto___14358 + (1));\ni__5770__auto___14358 \x3d G__14360;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.reporter.report_internal_error_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.reporter.report_internal_error_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (e,p__14327){\nvar vec__14333 \x3d p__14327;\nvar context \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14333,(0),null);\nvar footer \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14333,(1),null);\nvar console__$1 \x3d devtools.context.get_console.call(null);\ntry{var message \x3d (((e instanceof Error))?(function (){var or__5045__auto__ \x3d e.message;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn e;\n}\n})():e);\nvar header \x3d [\x22%cCLJS DevTools Error%c%s\x22,\x22background-color:red;color:white;font-weight:bold;padding:0px 3px;border-radius:2px;\x22,\x22color:red\x22,[\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(message)].join(\x27\x27)];\nvar context_msg \x3d [\x22In \x22,devtools.util.get_lib_info(),(cljs.core.truth_(context)?[\x22, \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(context),\x22.\x22].join(\x27\x27):\x22.\x22),\x22\\n\\n\x22].join(\x27\x27);\nvar footer_msg \x3d (((!((footer \x3d\x3d null))))?footer:[\x22\\n\\n\x22,\x22---\\n\x22,\x22Please report the issue here: \x22,devtools.reporter.issues_url].join(\x27\x27));\nvar details \x3d [context_msg,e,footer_msg];\nvar group_collapsed \x3d (console__$1[\x22groupCollapsed\x22]);\nvar log \x3d (console__$1[\x22log\x22]);\nvar group_end \x3d (console__$1[\x22groupEnd\x22]);\nif(cljs.core.truth_(group_collapsed)){\n} else {\nthrow (new Error(\x22Assert failed: group-collapsed\x22));\n}\n\nif(cljs.core.truth_(log)){\n} else {\nthrow (new Error(\x22Assert failed: log\x22));\n}\n\nif(cljs.core.truth_(group_end)){\n} else {\nthrow (new Error(\x22Assert failed: group-end\x22));\n}\n\ngroup_collapsed.apply(console__$1,header);\n\nlog.apply(console__$1,details);\n\nreturn group_end.call(console__$1);\n}catch (e14344){var e__$1 \x3d e14344;\nreturn console__$1.error(\x22FATAL: report-internal-error! failed\x22,e__$1);\n}}));\n\n(devtools.reporter.report_internal_error_BANG_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.reporter.report_internal_error_BANG_.cljs$lang$applyTo \x3d (function (seq14310){\nvar G__14312 \x3d cljs.core.first(seq14310);\nvar seq14310__$1 \x3d cljs.core.next(seq14310);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14312,seq14310__$1);\n}));\n\n");
SHADOW_ENV.evalLoad("clojure.walk.js", true , "goog.provide(\x27clojure.walk\x27);\n/**\n * Traverses form, an arbitrary data structure.  inner and outer are\n *   functions.  Applies inner to each element of form, building up a\n *   data structure of the same type, then applies outer to the result.\n *   Recognizes all Clojure data structures. Consumes seqs as with doall.\n */\nclojure.walk.walk \x3d (function clojure$walk$walk(inner,outer,form){\nif(cljs.core.list_QMARK_(form)){\nvar G__12177 \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.list,cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form));\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__12177) : outer.call(null,G__12177));\n} else {\nif(cljs.core.map_entry_QMARK_(form)){\nvar G__12179 \x3d (new cljs.core.MapEntry((function (){var G__12180 \x3d cljs.core.key(form);\nreturn (inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(G__12180) : inner.call(null,G__12180));\n})(),(function (){var G__12181 \x3d cljs.core.val(form);\nreturn (inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(G__12181) : inner.call(null,G__12181));\n})(),null));\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__12179) : outer.call(null,G__12179));\n} else {\nif(cljs.core.seq_QMARK_(form)){\nvar G__12182 \x3d cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form));\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__12182) : outer.call(null,G__12182));\n} else {\nif(cljs.core.record_QMARK_(form)){\nvar G__12186 \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (r,x){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(r,(inner.cljs$core$IFn$_invoke$arity$1 ? inner.cljs$core$IFn$_invoke$arity$1(x) : inner.call(null,x)));\n}),form,form);\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__12186) : outer.call(null,G__12186));\n} else {\nif(cljs.core.coll_QMARK_(form)){\nvar G__12191 \x3d cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(form),cljs.core.map.cljs$core$IFn$_invoke$arity$2(inner,form));\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(G__12191) : outer.call(null,G__12191));\n} else {\nreturn (outer.cljs$core$IFn$_invoke$arity$1 ? outer.cljs$core$IFn$_invoke$arity$1(form) : outer.call(null,form));\n\n}\n}\n}\n}\n}\n});\n/**\n * Performs a depth-first, post-order traversal of form.  Calls f on\n *   each sub-form, uses f\x27s return value in place of the original.\n *   Recognizes all Clojure data structures. Consumes seqs as with doall.\n */\nclojure.walk.postwalk \x3d (function clojure$walk$postwalk(f,form){\nreturn clojure.walk.walk(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(clojure.walk.postwalk,f),f,form);\n});\n/**\n * Like postwalk, but does pre-order traversal.\n */\nclojure.walk.prewalk \x3d (function clojure$walk$prewalk(f,form){\nreturn clojure.walk.walk(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(clojure.walk.prewalk,f),cljs.core.identity,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(form) : f.call(null,form)));\n});\n/**\n * Recursively transforms all map keys from strings to keywords.\n */\nclojure.walk.keywordize_keys \x3d (function clojure$walk$keywordize_keys(m){\nvar f \x3d (function (p__12213){\nvar vec__12215 \x3d p__12213;\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12215,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12215,(1),null);\nif(typeof k \x3d\x3d\x3d \x27string\x27){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),v], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null);\n}\n});\nreturn clojure.walk.postwalk((function (x){\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,x));\n} else {\nreturn x;\n}\n}),m);\n});\n/**\n * Recursively transforms all map keys from keywords to strings.\n */\nclojure.walk.stringify_keys \x3d (function clojure$walk$stringify_keys(m){\nvar f \x3d (function (p__12231){\nvar vec__12232 \x3d p__12231;\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12232,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12232,(1),null);\nif((k instanceof cljs.core.Keyword)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.name(k),v], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,v], null);\n}\n});\nreturn clojure.walk.postwalk((function (x){\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,x));\n} else {\nreturn x;\n}\n}),m);\n});\n/**\n * Recursively transforms form by replacing keys in smap with their\n *   values.  Like clojure/replace but works on any data structure.  Does\n *   replacement at the root of the tree first.\n */\nclojure.walk.prewalk_replace \x3d (function clojure$walk$prewalk_replace(smap,form){\nreturn clojure.walk.prewalk((function (x){\nif(cljs.core.contains_QMARK_(smap,x)){\nreturn (smap.cljs$core$IFn$_invoke$arity$1 ? smap.cljs$core$IFn$_invoke$arity$1(x) : smap.call(null,x));\n} else {\nreturn x;\n}\n}),form);\n});\n/**\n * Recursively transforms form by replacing keys in smap with their\n *   values.  Like clojure/replace but works on any data structure.  Does\n *   replacement at the leaves of the tree first.\n */\nclojure.walk.postwalk_replace \x3d (function clojure$walk$postwalk_replace(smap,form){\nreturn clojure.walk.postwalk((function (x){\nif(cljs.core.contains_QMARK_(smap,x)){\nreturn (smap.cljs$core$IFn$_invoke$arity$1 ? smap.cljs$core$IFn$_invoke$arity$1(x) : smap.call(null,x));\n} else {\nreturn x;\n}\n}),form);\n});\n");
SHADOW_ENV.evalLoad("devtools.munging.js", true , "goog.provide(\x27devtools.munging\x27);\ngoog.scope(function(){\n  devtools.munging.goog$module$goog$object \x3d goog.module.get(\x27goog.object\x27);\n});\ndevtools.munging.dollar_replacement \x3d \x22~\\uFE69~\x22;\ndevtools.munging.max_fixed_arity_to_scan \x3d (64);\ndevtools.munging.get_global_scope \x3d (function devtools$munging$get_global_scope(){\nreturn devtools.context.get_root.call(null);\n});\ndevtools.munging.js_reserved_QMARK_ \x3d (function devtools$munging$js_reserved_QMARK_(x){\nvar temp__5802__auto__ \x3d (function (){var temp__5802__auto__ \x3d (devtools.munging.get_global_scope.call(null)[\x22cljs\x22]);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar o12183 \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d (o12183[\x22core\x22]);\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar o12184 \x3d temp__5802__auto____$1;\nreturn (o12184[\x22js_reserved_QMARK_\x22]);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(temp__5802__auto__)){\nvar js_reserved_fn \x3d temp__5802__auto__;\nreturn (js_reserved_fn.cljs$core$IFn$_invoke$arity$1 ? js_reserved_fn.cljs$core$IFn$_invoke$arity$1(x) : js_reserved_fn.call(null,x));\n} else {\nreturn null;\n}\n});\ndevtools.munging.get_fn_source_safely \x3d (function devtools$munging$get_fn_source_safely(f){\ntry{if(cljs.core.truth_(\x22toString\x22 in f)){\nvar o__11509__auto__ \x3d f;\nreturn (o__11509__auto__[\x22toString\x22]).call(o__11509__auto__);\n} else {\nreturn \x22\x22;\n}\n}catch (e12195){var _ \x3d e12195;\nreturn \x22\x22;\n}});\ndevtools.munging.get_fn_fixed_arity \x3d (function devtools$munging$get_fn_fixed_arity(f,n){\nreturn (f[[\x22cljs$core$IFn$_invoke$arity$\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n)].join(\x27\x27)]);\n});\ndevtools.munging.get_fn_variadic_arity \x3d (function devtools$munging$get_fn_variadic_arity(f){\nreturn (f[\x22cljs$core$IFn$_invoke$arity$variadic\x22]);\n});\ndevtools.munging.get_fn_max_fixed_arity \x3d (function devtools$munging$get_fn_max_fixed_arity(f){\nreturn (f[\x22cljs$lang$maxFixedArity\x22]);\n});\ndevtools.munging.get_type_name \x3d (function devtools$munging$get_type_name(t){\nvar sb \x3d (new goog.string.StringBuffer());\nvar writer \x3d (new cljs.core.StringBufferWriter(sb));\ntry{var o__11509__auto___12592 \x3d t;\n(o__11509__auto___12592[\x22cljs$lang$ctorPrWriter\x22]).call(o__11509__auto___12592,t,writer);\n}catch (e12228){var __12594 \x3d e12228;\n}\nwriter.cljs$core$IWriter$_flush$arity$1(null);\n\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(sb);\n});\n/**\n * Given a character with a single digit converts it into a subscript character.\n *   Zero character maps to unicode \x27SUBSCRIPT ZERO\x27 (U+2080).\n */\ndevtools.munging.char_to_subscript \x3d (function devtools$munging$char_to_subscript(char$){\nif(typeof char$ \x3d\x3d\x3d \x27string\x27){\n} else {\nthrow (new Error(\x22Assert failed: (string? char)\x22));\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(char$),(1))){\n} else {\nthrow (new Error(\x22Assert failed: (\x3d (count char) 1)\x22));\n}\n\nvar char_code \x3d (function (){var o__11509__auto__ \x3d (new String(char$));\nreturn (o__11509__auto__[\x22charCodeAt\x22]).call(o__11509__auto__,(0));\n})();\nvar num_code \x3d (char_code - (48));\nvar subscript_code \x3d ((8320) + num_code);\nvar o__11509__auto__ \x3d String;\nreturn (o__11509__auto__[\x22fromCharCode\x22]).call(o__11509__auto__,subscript_code);\n});\n/**\n * Given a subscript number converts it into a string representation consisting of unicode subscript characters (digits).\n */\ndevtools.munging.make_subscript \x3d (function devtools$munging$make_subscript(subscript){\nif(typeof subscript \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? subscript)\x22));\n}\n\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.munging.char_to_subscript,cljs.core.str.cljs$core$IFn$_invoke$arity$1(subscript)));\n});\n/**\n * Given a character with a single digit converts it into a superscript character.\n *   Zero character maps to unicode \x27SUPERSCRIPT ZERO\x27 (U+2070).\n */\ndevtools.munging.char_to_superscript \x3d (function devtools$munging$char_to_superscript(char$){\nif(typeof char$ \x3d\x3d\x3d \x27string\x27){\n} else {\nthrow (new Error(\x22Assert failed: (string? char)\x22));\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(char$),(1))){\n} else {\nthrow (new Error(\x22Assert failed: (\x3d (count char) 1)\x22));\n}\n\nvar char_code \x3d (function (){var o__11509__auto__ \x3d (new String(char$));\nreturn (o__11509__auto__[\x22charCodeAt\x22]).call(o__11509__auto__,(0));\n})();\nvar num_code \x3d (char_code - (48));\nvar superscript_code \x3d (function (){var G__12265 \x3d num_code;\nswitch (G__12265) {\ncase (1):\nreturn (185);\n\nbreak;\ncase (2):\nreturn (178);\n\nbreak;\ncase (3):\nreturn (179);\n\nbreak;\ndefault:\nreturn ((8304) + num_code);\n\n}\n})();\nvar o__11509__auto__ \x3d String;\nreturn (o__11509__auto__[\x22fromCharCode\x22]).call(o__11509__auto__,superscript_code);\n});\n/**\n * Given a superscript number converts it into a string representation consisting of unicode superscript characters (digits).\n */\ndevtools.munging.make_superscript \x3d (function devtools$munging$make_superscript(superscript){\nif(typeof superscript \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? superscript)\x22));\n}\n\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.munging.char_to_superscript,cljs.core.str.cljs$core$IFn$_invoke$arity$1(superscript)));\n});\n/**\n * Given a Javascript name answers if the name was likely generated by ClojureScript.\n *   We use a simple heuristic here:\n *  The name must contain at least two separate dollars because we assume two-segment namespaces.\n */\ndevtools.munging.cljs_fn_name_QMARK_ \x3d (function devtools$munging$cljs_fn_name_QMARK_(munged_name){\nif(typeof munged_name \x3d\x3d\x3d \x27string\x27){\nreturn (!((cljs.core.re_matches(/^[^$]*\\$[^$]+\\$.*$/,munged_name) \x3d\x3d null)));\n} else {\nreturn null;\n}\n});\n/**\n * Given a function source code parses out [name args]. Note that both strings are still munged.\n *   Suitable for further processing.\n * \n *   For example for input below the function will return [\x22devtools_sample$core$hello\x22 \x22name, unused_param\x22]:\n * \n *   function devtools_sample$core$hello(name, unused_param){\n *  return [cljs.core.str(\x22hello, \x22),cljs.core.str(name),cljs.core.str(\x22!\x22)].join(\x27\x27);\n *   }\n *   \n */\ndevtools.munging.parse_fn_source \x3d (function devtools$munging$parse_fn_source(fn_source){\nvar temp__5802__auto__ \x3d cljs.core.second(cljs.core.re_find(/function\\s(.*?)\\{/,fn_source));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar meat \x3d temp__5802__auto__;\nvar temp__5802__auto____$1 \x3d cljs.core.re_find(/(.*?)\\((.*)\\)/,meat);\nif(cljs.core.truth_(temp__5802__auto____$1)){\nvar match \x3d temp__5802__auto____$1;\nreturn cljs.core.rest(match);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ndevtools.munging.trivial_fn_source_QMARK_ \x3d (function devtools$munging$trivial_fn_source_QMARK_(fn_source){\nif(typeof fn_source \x3d\x3d\x3d \x27string\x27){\n} else {\nthrow (new Error(\x22Assert failed: (string? fn-source)\x22));\n}\n\nreturn (((!((cljs.core.re_matches(/function\\s*\\(\\s*\\)\\s*\\{\\s*\\}\\s*/,fn_source) \x3d\x3d null)))) || ((((!((cljs.core.re_matches(/function.*\\(\\)\\s*\\{\\s*\\[native code\\]\\s*\\}\\s*/,fn_source) \x3d\x3d null)))) || ((!((cljs.core.re_matches(/function anonymous\\(\\s*\\)\\s*\\{\\s*\\}/,fn_source) \x3d\x3d null)))))));\n});\n/**\n * Given a Javascript function object returns true if the function looks like a ClojureScript function.\n * \n *   Uses various heuristics:\n *  1. must be fn? (is javascript function or satisfies Fn and IFn protocols)\n *  2. and name must be cljs-fn-name? (name can come from f.name or parsed out of function source)\n *  3. or if anonymous function, must be non-trivial\n */\ndevtools.munging.cljs_fn_QMARK_ \x3d (function devtools$munging$cljs_fn_QMARK_(f){\nif(cljs.core.truth_((function (){try{return cljs.core.fn_QMARK_(f);\n}catch (e12278){var _e__11529__auto__ \x3d e12278;\nreturn false;\n}})())){\nvar name \x3d (f[cljs.core.name]);\nif((!(cljs.core.empty_QMARK_(name)))){\nreturn devtools.munging.cljs_fn_name_QMARK_(name);\n} else {\nvar fn_source \x3d devtools.munging.get_fn_source_safely(f);\nvar vec__12283 \x3d devtools.munging.parse_fn_source(fn_source);\nvar name__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12283,(0),null);\nif((!(cljs.core.empty_QMARK_(name__$1)))){\nreturn devtools.munging.cljs_fn_name_QMARK_(name__$1);\n} else {\nreturn (!(devtools.munging.trivial_fn_source_QMARK_(fn_source)));\n}\n}\n} else {\nreturn null;\n}\n});\n/**\n * Standard cljs.core/demunge is too aggressive in replacing dollars.\n *   This wrapper function works around it by leaving dollars intact.\n */\ndevtools.munging.dollar_preserving_demunge \x3d (function devtools$munging$dollar_preserving_demunge(munged_name){\nreturn clojure.string.replace(cljs.core.demunge(clojure.string.replace(munged_name,\x22$\x22,devtools.munging.dollar_replacement)),devtools.munging.dollar_replacement,\x22$\x22);\n});\ndevtools.munging.revert_reserved \x3d (function devtools$munging$revert_reserved(s){\nvar or__5045__auto__ \x3d (function (){var temp__5802__auto__ \x3d cljs.core.re_matches(/(.*)\\$/,s);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar m \x3d temp__5802__auto__;\nif(cljs.core.truth_(devtools.munging.js_reserved_QMARK_(cljs.core.second(m)))){\nreturn cljs.core.second(m);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn s;\n}\n});\ndevtools.munging.reserved_aware_demunge \x3d (function devtools$munging$reserved_aware_demunge(munged_name){\nreturn devtools.munging.revert_reserved(devtools.munging.dollar_preserving_demunge(munged_name));\n});\ndevtools.munging.proper_demunge \x3d (function devtools$munging$proper_demunge(munged_name){\nreturn devtools.munging.reserved_aware_demunge(munged_name);\n});\ndevtools.munging.proper_arg_demunge \x3d (function devtools$munging$proper_arg_demunge(munged_arg_name){\nreturn clojure.string.replace(devtools.munging.proper_demunge(munged_arg_name),/^-(.*)$/,\x22_$1\x22);\n});\ndevtools.munging.proper_ns_demunge \x3d (function devtools$munging$proper_ns_demunge(munged_ns_name){\nreturn clojure.string.replace(devtools.munging.proper_demunge(munged_ns_name),\x22$\x22,\x22.\x22);\n});\ndevtools.munging.ns_exists_QMARK_ \x3d (function devtools$munging$ns_exists_QMARK_(ns_module_name){\nif(typeof ns_module_name \x3d\x3d\x3d \x27string\x27){\n} else {\nthrow (new Error(\x22Assert failed: (string? ns-module-name)\x22));\n}\n\nvar temp__5806__auto__ \x3d devtools.munging.goog$module$goog$object.getValueByKeys(devtools.munging.get_global_scope.call(null),ns_module_name.split(\x22.\x22));\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar ns_obj \x3d temp__5806__auto__;\nreturn cljs.core.object_QMARK_(ns_obj);\n}\n});\n/**\n * Given a name broken into namespace parts returns [detected-ns remaining-parts],\n *   where detected-ns is a string representing longest detected existing namespace and\n *   remaining-parts is a vector of remaining input parts not included in the detected-ns concatenation.\n * \n *   For given input [\x22cljs\x22 \x22core\x22 \x22first\x22] returns [\x22cljs.core\x22 [\x22first\x22]] (assuming cljs.core exists)\n */\ndevtools.munging.detect_namespace_prefix \x3d (function devtools$munging$detect_namespace_prefix(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12610 \x3d arguments.length;\nvar i__5770__auto___12613 \x3d (0);\nwhile(true){\nif((i__5770__auto___12613 \x3c len__5769__auto___12610)){\nargs__5775__auto__.push((arguments[i__5770__auto___12613]));\n\nvar G__12615 \x3d (i__5770__auto___12613 + (1));\ni__5770__auto___12613 \x3d G__12615;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.munging.detect_namespace_prefix.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.munging.detect_namespace_prefix.cljs$core$IFn$_invoke$arity$variadic \x3d (function (tokens,p__12338){\nvar vec__12340 \x3d p__12338;\nvar ns_detector \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12340,(0),null);\nvar effective_detector \x3d (function (){var or__5045__auto__ \x3d ns_detector;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.munging.ns_exists_QMARK_;\n}\n})();\nvar name_tokens \x3d cljs.core.PersistentVector.EMPTY;\nvar remaining_tokens \x3d tokens;\nwhile(true){\nif(cljs.core.empty_QMARK_(remaining_tokens)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,name_tokens], null);\n} else {\nvar ns_name \x3d clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22.\x22,remaining_tokens);\nif(cljs.core.truth_((effective_detector.cljs$core$IFn$_invoke$arity$1 ? effective_detector.cljs$core$IFn$_invoke$arity$1(ns_name) : effective_detector.call(null,ns_name)))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_name,name_tokens], null);\n} else {\nvar G__12618 \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.last(remaining_tokens)], null),name_tokens);\nvar G__12619 \x3d cljs.core.butlast(remaining_tokens);\nname_tokens \x3d G__12618;\nremaining_tokens \x3d G__12619;\ncontinue;\n}\n}\nbreak;\n}\n}));\n\n(devtools.munging.detect_namespace_prefix.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.munging.detect_namespace_prefix.cljs$lang$applyTo \x3d (function (seq12330){\nvar G__12331 \x3d cljs.core.first(seq12330);\nvar seq12330__$1 \x3d cljs.core.next(seq12330);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12331,seq12330__$1);\n}));\n\ndevtools.munging.normalize_arity \x3d (function devtools$munging$normalize_arity(arity_tokens){\nif((!(cljs.core.empty_QMARK_(arity_tokens)))){\nvar arity \x3d cljs.core.first(arity_tokens);\nvar G__12354 \x3d arity;\nswitch (G__12354) {\ncase \x22variadic\x22:\nreturn arity;\n\nbreak;\ndefault:\nreturn parseInt(arity,(10));\n\n}\n} else {\nreturn null;\n}\n});\ndevtools.munging.strip_arity \x3d (function devtools$munging$strip_arity(tokens){\nvar vec__12357 \x3d cljs.core.split_with((function (p1__12356_SHARP_){\nreturn cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(p1__12356_SHARP_,\x22arity\x22);\n}),tokens);\nvar prefix_tokens \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12357,(0),null);\nvar arity_tokens \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12357,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [prefix_tokens,devtools.munging.normalize_arity(cljs.core.rest(arity_tokens))], null);\n});\ndevtools.munging.parse_protocol \x3d (function devtools$munging$parse_protocol(tokens,detector){\nvar remaining_tokens \x3d tokens;\nvar name_tokens \x3d cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(remaining_tokens)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [name_tokens], null);\n} else {\nvar vec__12370 \x3d devtools.munging.detect_namespace_prefix.cljs$core$IFn$_invoke$arity$variadic(remaining_tokens,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([detector], 0));\nvar protocol_ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12370,(0),null);\nvar name_and_method_tokens \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12370,(1),null);\nif(cljs.core.empty_QMARK_(protocol_ns)){\nvar G__12622 \x3d cljs.core.rest(remaining_tokens);\nvar G__12623 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(name_tokens,cljs.core.first(remaining_tokens));\nremaining_tokens \x3d G__12622;\nname_tokens \x3d G__12623;\ncontinue;\n} else {\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [name_tokens,protocol_ns,cljs.core.first(name_and_method_tokens),cljs.core.rest(name_and_method_tokens)], null);\n}\n}\nbreak;\n}\n});\n/**\n * Given a munged-name from Javascript lands attempts to break it into:\n *   [fn-ns fn-name protocol-ns protocol-name protocol-method arity].\n * \n *   Protocol and arity elements are optional. Function elements are always present or \x22\x22.\n * \n *   examples for input:\n *  cljs$core$rest \x3d\x3e [\x27cljs.core\x27, \x27rest\x27]\n *  cljs.core.reduce$cljs$core$IFn$_invoke$arity$3 \x3d\x3e [\x27cljs.core\x27 \x27reduce\x27 \x27cljs.core\x27 \x27IFn\x27 \x27_invoke\x27 3]\n */\ndevtools.munging.break_munged_name \x3d (function devtools$munging$break_munged_name(var_args){\nvar G__12383 \x3d arguments.length;\nswitch (G__12383) {\ncase 1:\nreturn devtools.munging.break_munged_name.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn devtools.munging.break_munged_name.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(devtools.munging.break_munged_name.cljs$core$IFn$_invoke$arity$1 \x3d (function (munged_name){\nreturn devtools.munging.break_munged_name.cljs$core$IFn$_invoke$arity$2(munged_name,null);\n}));\n\n(devtools.munging.break_munged_name.cljs$core$IFn$_invoke$arity$2 \x3d (function (munged_name,ns_detector){\nif(cljs.core.empty_QMARK_(munged_name)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,\x22\x22], null);\n} else {\nvar effective_detector \x3d (function (){var or__5045__auto__ \x3d ns_detector;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.munging.ns_exists_QMARK_;\n}\n})();\nvar tokens \x3d cljs.core.vec(munged_name.split(/[$.]/));\nvar vec__12402 \x3d devtools.munging.strip_arity(tokens);\nvar tokens__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12402,(0),null);\nvar arity \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12402,(1),null);\nvar vec__12405 \x3d devtools.munging.detect_namespace_prefix.cljs$core$IFn$_invoke$arity$variadic(tokens__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([effective_detector], 0));\nvar fn_ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12405,(0),null);\nvar tokens__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12405,(1),null);\nvar vec__12408 \x3d devtools.munging.parse_protocol(tokens__$2,effective_detector);\nvar fn_name_tokens \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12408,(0),null);\nvar protocol_ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12408,(1),null);\nvar protocol_name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12408,(2),null);\nvar protocol_method_tokens \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12408,(3),null);\nvar fn_name \x3d clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22$\x22,fn_name_tokens);\nvar protocol_method \x3d (cljs.core.truth_(protocol_method_tokens)?clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22$\x22,protocol_method_tokens):null);\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [fn_ns,fn_name,protocol_ns,protocol_name,protocol_method,arity], null);\n}\n}));\n\n(devtools.munging.break_munged_name.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Given a munged-name from Javascript lands attempts to break it into a namespace part and remaining short name.\n *   Then applies appropriate demunging on them and returns ClojureScript versions of the names.\n */\ndevtools.munging.break_and_demunge_name \x3d (function devtools$munging$break_and_demunge_name(var_args){\nvar G__12436 \x3d arguments.length;\nswitch (G__12436) {\ncase 1:\nreturn devtools.munging.break_and_demunge_name.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn devtools.munging.break_and_demunge_name.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(devtools.munging.break_and_demunge_name.cljs$core$IFn$_invoke$arity$1 \x3d (function (munged_name){\nreturn devtools.munging.break_and_demunge_name.cljs$core$IFn$_invoke$arity$2(munged_name,null);\n}));\n\n(devtools.munging.break_and_demunge_name.cljs$core$IFn$_invoke$arity$2 \x3d (function (munged_name,ns_detector){\nvar result \x3d devtools.munging.break_munged_name.cljs$core$IFn$_invoke$arity$2(munged_name,ns_detector);\nvar vec__12440 \x3d result;\nvar munged_ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12440,(0),null);\nvar munged_name__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12440,(1),null);\nvar munged_protocol_ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12440,(2),null);\nvar munged_protocol_name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12440,(3),null);\nvar munged_protocol_method \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12440,(4),null);\nvar arity \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12440,(5),null);\nreturn new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.munging.proper_ns_demunge(munged_ns),devtools.munging.proper_demunge(munged_name__$1),(cljs.core.truth_(munged_protocol_ns)?devtools.munging.proper_ns_demunge(munged_protocol_ns):null),(cljs.core.truth_(munged_protocol_name)?devtools.munging.proper_demunge(munged_protocol_name):null),(cljs.core.truth_(munged_protocol_method)?devtools.munging.proper_demunge(munged_protocol_method):null),arity], null);\n}));\n\n(devtools.munging.break_and_demunge_name.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Given function source code tries to retrieve [ns name \x26 args] on best effort basis, where\n *   ns is demunged namespace part of the function name (or \x22\x22 if namespace cannot be detected)\n *   name is demunged short name (or \x22\x22 if function is anonymous or name cannot be retrieved)\n *   args is optional number of demunged argument names.\n * \n *   Please note that this function always returns a vector with something. In worst cases [\x22\x22 \x22\x22].\n *   \n */\ndevtools.munging.parse_fn_source_info \x3d (function devtools$munging$parse_fn_source_info(fn_source){\nvar temp__5802__auto__ \x3d devtools.munging.parse_fn_source(fn_source);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar vec__12454 \x3d temp__5802__auto__;\nvar munged_name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12454,(0),null);\nvar args \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12454,(1),null);\nvar vec__12460 \x3d devtools.munging.break_and_demunge_name.cljs$core$IFn$_invoke$arity$1(munged_name);\nvar ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12460,(0),null);\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12460,(1),null);\nvar demunged_args \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.comp.cljs$core$IFn$_invoke$arity$2(devtools.munging.proper_arg_demunge,clojure.string.trim),clojure.string.split.cljs$core$IFn$_invoke$arity$2(args,/,/));\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,name], null),demunged_args);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22\x22,\x22\x22], null);\n}\n});\n/**\n * Given Javascript function object tries to retrieve [ns name \x26 args] as in parse-fn-source-info (on best effort basis).\n */\ndevtools.munging.parse_fn_info \x3d (function devtools$munging$parse_fn_info(f){\nvar fn_source \x3d devtools.munging.get_fn_source_safely(f);\nreturn devtools.munging.parse_fn_source_info(fn_source);\n});\n/**\n * Given a Javascript function object tries to retrieve [ns name \x26 args] as in parse-fn-info (on best effort basis).\n * \n *   The difference from parse-fn-info is that this function prefers to read args from arities if available.\n *   It recurse arbitrary deep following IFn protocol leads.\n * \n *   If we hit multi-arity situation in leaf, we don\x27t attempt to list arguments and return ::multi-arity placeholder instead.\n * \n *   The reason for reading arities is that it gives more accurate parameter names in some cases.\n *   We observed that variadic functions don\x27t always contain original parameter names, but individual IFn arity functions do.\n */\ndevtools.munging.parse_fn_info_deep \x3d (function devtools$munging$parse_fn_info_deep(f){\nvar fn_info \x3d devtools.munging.parse_fn_info(f);\nvar arities \x3d (devtools.munging.collect_fn_arities.cljs$core$IFn$_invoke$arity$1 ? devtools.munging.collect_fn_arities.cljs$core$IFn$_invoke$arity$1(f) : devtools.munging.collect_fn_arities.call(null,f));\nif((!((arities \x3d\x3d null)))){\nif((cljs.core.count(arities) \x3e (1))){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.take.cljs$core$IFn$_invoke$arity$2((2),fn_info),new cljs.core.Keyword(\x22devtools.munging\x22,\x22multi-arity\x22,\x22devtools.munging/multi-arity\x22,-2011705837));\n} else {\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.take.cljs$core$IFn$_invoke$arity$2((2),fn_info),cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),(function (){var G__12477 \x3d cljs.core.second(cljs.core.first(arities));\nreturn (devtools.munging.parse_fn_info_deep.cljs$core$IFn$_invoke$arity$1 ? devtools.munging.parse_fn_info_deep.cljs$core$IFn$_invoke$arity$1(G__12477) : devtools.munging.parse_fn_info_deep.call(null,G__12477));\n})()));\n}\n} else {\nreturn fn_info;\n}\n});\n/**\n * Given a demunged ClojureScript parameter name. Tries to detect human readable part and returns the index where it ends.\n *   Returns nil if no prefix can be detected.\n * \n *   The idea is to convert macro-generated parameters and other generated names to more friendly names.\n *   We observed that param names generated by gensym have prefix followed by big numbers.\n *   Other generated names contain two dashes after prefix (originally probably using underscores).\n */\ndevtools.munging.find_index_of_human_prefix \x3d (function devtools$munging$find_index_of_human_prefix(name){\nvar sep_start \x3d name.indexOf(\x22--\x22);\nvar num_prefix \x3d cljs.core.count(cljs.core.second(cljs.core.re_find(/(.*?)\\d{2,}/,name)));\nvar finds \x3d cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.pos_QMARK_,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [sep_start,num_prefix], null));\nif((!(cljs.core.empty_QMARK_(finds)))){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.min,finds);\n} else {\nreturn null;\n}\n});\n/**\n * Given a name and intermediate state. Convert name to a human readable version by keeping human readable prefix with\n *   optional subscript postfix and store it in ::result. Subscript number is picked based on state. State keeps track of\n *   previously assigned subscripts. Returns a new state.\n */\ndevtools.munging.humanize_name \x3d (function devtools$munging$humanize_name(state,name){\nvar index \x3d devtools.munging.find_index_of_human_prefix(name);\nvar prefix \x3d (((index \x3e (0)))?name.substring((0),index):name);\nvar temp__5802__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,prefix);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar subscript \x3d temp__5802__auto__;\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(\x22devtools.munging\x22,\x22result\x22,\x22devtools.munging/result\x22,1642759166),cljs.core.conj,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),devtools.munging.make_subscript(subscript)].join(\x27\x27)),prefix,cljs.core.inc);\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$4(state,new cljs.core.Keyword(\x22devtools.munging\x22,\x22result\x22,\x22devtools.munging/result\x22,1642759166),cljs.core.conj,prefix),prefix,(2));\n}\n});\n/**\n * Given a list of names, returns a list of human-readable versions of those names.\n *   It detects human-readable prefix using a simple heuristics. When names repeat it assigns simple subscripts starting with 2.\n *   Subscripts are assigned left-to-right.\n * \n *   Given [\x22p--a\x22 \x22p--b\x22 \x22x\x22 \x22p--c\x22] returns [\x22p\x22 \x22p\u2082\x22 \x22x\x22 \x22p\u2083\x22]\n */\ndevtools.munging.humanize_names \x3d (function devtools$munging$humanize_names(names){\nreturn cljs.core.with_meta(new cljs.core.Keyword(\x22devtools.munging\x22,\x22result\x22,\x22devtools.munging/result\x22,1642759166).cljs$core$IFn$_invoke$arity$1(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(devtools.munging.humanize_name,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\x22devtools.munging\x22,\x22result\x22,\x22devtools.munging/result\x22,1642759166),cljs.core.PersistentVector.EMPTY], null),names)),cljs.core.meta(names));\n});\ndevtools.munging.collect_fn_fixed_arities \x3d (function devtools$munging$collect_fn_fixed_arities(f,max_arity){\nvar arity \x3d (0);\nvar collection \x3d cljs.core.PersistentArrayMap.EMPTY;\nwhile(true){\nif((arity \x3e max_arity)){\nreturn collection;\n} else {\nvar G__12653 \x3d (arity + (1));\nvar G__12654 \x3d (function (){var temp__5802__auto__ \x3d devtools.munging.get_fn_fixed_arity(f,arity);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar arity_fn \x3d temp__5802__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(collection,arity,arity_fn);\n} else {\nreturn collection;\n}\n})();\narity \x3d G__12653;\ncollection \x3d G__12654;\ncontinue;\n}\nbreak;\n}\n});\ndevtools.munging.collect_fn_variadic_arities \x3d (function devtools$munging$collect_fn_variadic_arities(f){\nvar temp__5802__auto__ \x3d devtools.munging.get_fn_variadic_arity(f);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar variadic_arity \x3d temp__5802__auto__;\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\x22devtools.munging\x22,\x22variadic\x22,\x22devtools.munging/variadic\x22,1596047908),variadic_arity], null);\n} else {\nreturn null;\n}\n});\ndevtools.munging.review_arity \x3d (function devtools$munging$review_arity(p__12503){\nvar vec__12505 \x3d p__12503;\nvar arity \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12505,(0),null);\nvar arity_fn \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12505,(1),null);\nvar sub_arities \x3d (devtools.munging.collect_fn_arities.cljs$core$IFn$_invoke$arity$1 ? devtools.munging.collect_fn_arities.cljs$core$IFn$_invoke$arity$1(arity_fn) : devtools.munging.collect_fn_arities.call(null,arity_fn));\nif(cljs.core.truth_(new cljs.core.Keyword(\x22devtools.munging\x22,\x22variadic\x22,\x22devtools.munging/variadic\x22,1596047908).cljs$core$IFn$_invoke$arity$1(sub_arities))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\x22devtools.munging\x22,\x22variadic\x22,\x22devtools.munging/variadic\x22,1596047908),arity_fn], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [arity,arity_fn], null);\n}\n});\n/**\n * Some arities can be marked as fixed arity but in fact point to a variadic-arity function. We want to detect this case\n *   and turn such improperly categorized arities to ::variadic.\n */\ndevtools.munging.review_arities \x3d (function devtools$munging$review_arities(arities){\nif(cljs.core.truth_(new cljs.core.Keyword(\x22devtools.munging\x22,\x22variadic\x22,\x22devtools.munging/variadic\x22,1596047908).cljs$core$IFn$_invoke$arity$1(arities))){\nreturn arities;\n} else {\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.munging.review_arity,arities));\n}\n});\n/**\n * Given a Javascript function object, tries to inspect known arity properties generated by ClojureScript compiler and\n *   collects all available arity functions into a map. Arities are keyed by arity count and variadic arity gets ::variadic key.\n */\ndevtools.munging.collect_fn_arities \x3d (function devtools$munging$collect_fn_arities(f){\nvar max_fixed_arity \x3d devtools.munging.get_fn_max_fixed_arity(f);\nvar fixed_arities \x3d devtools.munging.collect_fn_fixed_arities(f,(function (){var or__5045__auto__ \x3d max_fixed_arity;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.munging.max_fixed_arity_to_scan;\n}\n})());\nvar variadic_arities \x3d devtools.munging.collect_fn_variadic_arities(f);\nvar arities \x3d devtools.munging.review_arities(cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fixed_arities,variadic_arities], 0)));\nif((!(cljs.core.empty_QMARK_(arities)))){\nreturn arities;\n} else {\nreturn null;\n}\n});\n/**\n * ::variadic goes last, other keywords compare by name.\n */\ndevtools.munging.arity_keywords_comparator \x3d (function devtools$munging$arity_keywords_comparator(x,y){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\x22devtools.munging\x22,\x22variadic\x22,\x22devtools.munging/variadic\x22,1596047908),x)){\nreturn (1);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\x22devtools.munging\x22,\x22variadic\x22,\x22devtools.munging/variadic\x22,1596047908),y)){\nreturn (-1);\n} else {\nreturn cljs.core.compare(cljs.core.name(x),cljs.core.name(y));\n\n}\n}\n});\n/**\n * numbers go first (ordered), then keywords (ordered by name), and then ::variadic sticks last\n */\ndevtools.munging.arities_key_comparator \x3d (function devtools$munging$arities_key_comparator(x,y){\nvar kx_QMARK_ \x3d (x instanceof cljs.core.Keyword);\nvar ky_QMARK_ \x3d (y instanceof cljs.core.Keyword);\nif(((kx_QMARK_) \x26\x26 (ky_QMARK_))){\nreturn devtools.munging.arity_keywords_comparator(x,y);\n} else {\nif(kx_QMARK_){\nreturn (1);\n} else {\nif(ky_QMARK_){\nreturn (-1);\n} else {\nreturn cljs.core.compare(x,y);\n\n}\n}\n}\n});\ndevtools.munging.arities_to_args_lists_STAR_ \x3d (function devtools$munging$arities_to_args_lists_STAR_(arities){\nvar sorted_keys \x3d cljs.core.sort.cljs$core$IFn$_invoke$arity$2(devtools.munging.arities_key_comparator,cljs.core.keys(arities));\nvar sorted_fns \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__12514_SHARP_){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(arities,p1__12514_SHARP_);\n}),sorted_keys);\nvar sorted_infos \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.munging.parse_fn_info_deep,sorted_fns);\nvar sorted_args_lists \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__12515_SHARP_){\nreturn cljs.core.drop.cljs$core$IFn$_invoke$arity$2((2),p1__12515_SHARP_);\n}),sorted_infos);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.last(sorted_keys),new cljs.core.Keyword(\x22devtools.munging\x22,\x22variadic\x22,\x22devtools.munging/variadic\x22,1596047908))){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.butlast(sorted_args_lists),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.vary_meta.cljs$core$IFn$_invoke$arity$4(cljs.core.last(sorted_args_lists),cljs.core.assoc,new cljs.core.Keyword(\x22devtools.munging\x22,\x22variadic\x22,\x22devtools.munging/variadic\x22,1596047908),true)], null));\n} else {\nreturn sorted_args_lists;\n}\n});\n/**\n * Given a map of arity functions. Tries to parse individual functions and prepare an arguments list for each arity.\n *   Returned list of arguments list is sorted by arity count, variadic arity goes last if available.\n * \n *   The function also optionally humanizes argument names in each arguments list if requested.\n */\ndevtools.munging.arities_to_args_lists \x3d (function devtools$munging$arities_to_args_lists(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12661 \x3d arguments.length;\nvar i__5770__auto___12662 \x3d (0);\nwhile(true){\nif((i__5770__auto___12662 \x3c len__5769__auto___12661)){\nargs__5775__auto__.push((arguments[i__5770__auto___12662]));\n\nvar G__12663 \x3d (i__5770__auto___12662 + (1));\ni__5770__auto___12662 \x3d G__12663;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.munging.arities_to_args_lists.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.munging.arities_to_args_lists.cljs$core$IFn$_invoke$arity$variadic \x3d (function (arities,p__12519){\nvar vec__12520 \x3d p__12519;\nvar humanize_QMARK_ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12520,(0),null);\nvar args_lists \x3d devtools.munging.arities_to_args_lists_STAR_(arities);\nif(cljs.core.truth_(humanize_QMARK_)){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.munging.humanize_names,args_lists);\n} else {\nreturn args_lists;\n}\n}));\n\n(devtools.munging.arities_to_args_lists.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.munging.arities_to_args_lists.cljs$lang$applyTo \x3d (function (seq12516){\nvar G__12517 \x3d cljs.core.first(seq12516);\nvar seq12516__$1 \x3d cljs.core.next(seq12516);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12517,seq12516__$1);\n}));\n\n/**\n * Converts a list of arguments lists into a list of strings suitable for UI presentation.\n */\ndevtools.munging.args_lists_to_strings \x3d (function devtools$munging$args_lists_to_strings(args_lists,spacer_symbol,multi_arity_symbol,rest_symbol){\nvar string_mapper \x3d (function (arg){\nvar G__12527 \x3d arg;\nvar G__12527__$1 \x3d (((G__12527 instanceof cljs.core.Keyword))?G__12527.fqn:null);\nswitch (G__12527__$1) {\ncase \x22devtools.munging/multi-arity\x22:\nreturn multi_arity_symbol;\n\nbreak;\ndefault:\nreturn arg;\n\n}\n});\nvar printer \x3d (function (args_list){\nvar variadic_QMARK_ \x3d new cljs.core.Keyword(\x22devtools.munging\x22,\x22variadic\x22,\x22devtools.munging/variadic\x22,1596047908).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(args_list));\nvar args_strings \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(string_mapper,args_list);\nreturn [clojure.string.join.cljs$core$IFn$_invoke$arity$2(spacer_symbol,cljs.core.butlast(args_strings)),cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(variadic_QMARK_)?rest_symbol:spacer_symbol)),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.last(args_strings))].join(\x27\x27);\n});\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(clojure.string.trim,cljs.core.map.cljs$core$IFn$_invoke$arity$2(printer,args_lists));\n});\ndevtools.munging.extract_arities \x3d (function devtools$munging$extract_arities(f,humanize_QMARK_,spacer_symbol,multi_arity_symbol,rest_symbol){\nreturn devtools.munging.args_lists_to_strings(devtools.munging.arities_to_args_lists.cljs$core$IFn$_invoke$arity$variadic((function (){var or__5045__auto__ \x3d devtools.munging.collect_fn_arities(f);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22naked\x22,\x22naked\x22,373474222),f], null);\n}\n})(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([humanize_QMARK_], 0)),spacer_symbol,multi_arity_symbol,rest_symbol);\n});\ndevtools.munging.common_protocol_QMARK_ \x3d (function devtools$munging$common_protocol_QMARK_(protocol_ns,protocol_name){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol_ns,\x22cljs.core\x22)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(protocol_name,\x22IFn\x22)));\n});\ndevtools.munging.present_fn_part \x3d (function devtools$munging$present_fn_part(fn_ns,fn_name,include_ns_QMARK_){\nreturn [(cljs.core.truth_((function (){var and__5043__auto__ \x3d include_ns_QMARK_;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (!(cljs.core.empty_QMARK_(fn_ns)));\n} else {\nreturn and__5043__auto__;\n}\n})())?[cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_ns),\x22/\x22].join(\x27\x27):null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_name)].join(\x27\x27);\n});\ndevtools.munging.present_protocol_part \x3d (function devtools$munging$present_protocol_part(protocol_ns,protocol_name,protocol_method,include_protocol_ns_QMARK_){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1((cljs.core.truth_(include_protocol_ns_QMARK_)?protocol_ns:null)),(((!(cljs.core.empty_QMARK_(protocol_name))))?[(cljs.core.truth_(include_protocol_ns_QMARK_)?\x22.\x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol_name)].join(\x27\x27):null),(((!(cljs.core.empty_QMARK_(protocol_method))))?[(cljs.core.truth_((function (){var or__5045__auto__ \x3d include_protocol_ns_QMARK_;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (!(cljs.core.empty_QMARK_(protocol_name)));\n}\n})())?\x22:\x22:null),cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol_method)].join(\x27\x27):null)].join(\x27\x27);\n});\n/**\n * Given javascript function name tries to present it as plain string for display in UI on best effort basis.\n */\ndevtools.munging.present_function_name \x3d (function devtools$munging$present_function_name(munged_name,options){\nvar map__12542 \x3d options;\nvar map__12542__$1 \x3d cljs.core.__destructure_map(map__12542);\nvar include_ns_QMARK_ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12542__$1,new cljs.core.Keyword(null,\x22include-ns?\x22,\x22include-ns?\x22,-341372810));\nvar include_protocol_ns_QMARK_ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12542__$1,new cljs.core.Keyword(null,\x22include-protocol-ns?\x22,\x22include-protocol-ns?\x22,989250951));\nvar silence_common_protocols_QMARK_ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12542__$1,new cljs.core.Keyword(null,\x22silence-common-protocols?\x22,\x22silence-common-protocols?\x22,2012431893));\nvar ns_detector \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12542__$1,new cljs.core.Keyword(null,\x22ns-detector\x22,\x22ns-detector\x22,-2041592760));\nvar vec__12543 \x3d devtools.munging.break_and_demunge_name.cljs$core$IFn$_invoke$arity$2(munged_name,ns_detector);\nvar fn_ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12543,(0),null);\nvar fn_name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12543,(1),null);\nvar protocol_ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12543,(2),null);\nvar protocol_name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12543,(3),null);\nvar protocol_method \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12543,(4),null);\nvar arity \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12543,(5),null);\nvar arity_str \x3d (((!((arity \x3d\x3d null))))?((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(arity,\x22variadic\x22))?\x22\\u207F\x22:devtools.munging.make_superscript(arity)):null);\nif(cljs.core.empty_QMARK_(fn_name)){\nreturn munged_name;\n} else {\nvar fn_part \x3d devtools.munging.present_fn_part(fn_ns,fn_name,include_ns_QMARK_);\nvar protocol_part \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d protocol_ns;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core.not((function (){var and__5043__auto____$1 \x3d silence_common_protocols_QMARK_;\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn devtools.munging.common_protocol_QMARK_(protocol_ns,protocol_name);\n} else {\nreturn and__5043__auto____$1;\n}\n})());\n} else {\nreturn and__5043__auto__;\n}\n})())?devtools.munging.present_protocol_part(protocol_ns,protocol_name,protocol_method,include_protocol_ns_QMARK_):null);\nreturn [(function (){var or__5045__auto__ \x3d protocol_part;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn fn_part;\n}\n})(),arity_str,(cljs.core.truth_(protocol_part)?[\x22 (\x22,fn_part,\x22)\x22].join(\x27\x27):null)].join(\x27\x27);\n}\n});\ndevtools.munging.get_basis \x3d (function devtools$munging$get_basis(f){\nvar o__11509__auto__ \x3d f;\nreturn (o__11509__auto__[\x22getBasis\x22]).call(o__11509__auto__);\n});\n/**\n * Given a Javascript constructor function tries to retrieve [ns name basis]. Returns nil if not a cljs type.\n */\ndevtools.munging.parse_constructor_info \x3d (function devtools$munging$parse_constructor_info(f){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d goog.isObject(f);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn f.cljs$lang$type;\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar type_name \x3d devtools.munging.get_type_name(f);\nvar parts \x3d type_name.split(/\\//);\nvar basis \x3d (function (){try{return devtools.munging.get_basis(f);\n}catch (e12552){var _e__11529__auto__ \x3d e12552;\nreturn cljs.core.PersistentVector.EMPTY;\n}})();\nif((cljs.core.count(parts) \x3c\x3d (2))){\n} else {\nthrow (new Error(\x22Assert failed: (\x3c\x3d (count parts) 2)\x22));\n}\n\nwhile(true){\nif((cljs.core.count(parts) \x3c (2))){\nparts.unshift(null);\n\ncontinue;\n} else {\n}\nbreak;\n}\n\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.vec(parts),basis);\n} else {\nreturn null;\n}\n});\ndevtools.munging.protocol_path \x3d (function devtools$munging$protocol_path(protocol_selector){\nreturn clojure.string.split.cljs$core$IFn$_invoke$arity$2(protocol_selector,/\\./);\n});\ndevtools.munging.get_protocol_object \x3d (function devtools$munging$get_protocol_object(protocol_selector){\nvar obj \x3d devtools.munging.get_global_scope.call(null);\nvar path \x3d devtools.munging.protocol_path(protocol_selector);\nwhile(true){\nif(cljs.core.empty_QMARK_(path)){\nreturn obj;\n} else {\nif(cljs.core.truth_(goog.isObject(obj))){\nvar G__12675 \x3d (obj[cljs.core.first(path)]);\nvar G__12676 \x3d cljs.core.rest(path);\nobj \x3d G__12675;\npath \x3d G__12676;\ncontinue;\n} else {\nreturn null;\n}\n}\nbreak;\n}\n});\ndevtools.munging.protocol_exists_QMARK_ \x3d (function devtools$munging$protocol_exists_QMARK_(protocol_selector){\nreturn (!((devtools.munging.get_protocol_object(protocol_selector) \x3d\x3d null)));\n});\ndevtools.munging.get_protocol_selector \x3d (function devtools$munging$get_protocol_selector(key){\nvar temp__5802__auto__ \x3d cljs.core.re_matches(/(.*)\\$$/,key);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar m \x3d temp__5802__auto__;\nif((!(clojure.string.includes_QMARK_(key,\x22cljs$lang$protocol_mask$partition\x22)))){\nvar protocol_selector \x3d clojure.string.replace(cljs.core.second(m),\x22$\x22,\x22.\x22);\nif(devtools.munging.protocol_exists_QMARK_(protocol_selector)){\nreturn protocol_selector;\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ndevtools.munging.demunge_protocol_selector \x3d (function devtools$munging$demunge_protocol_selector(protocol_selector){\nvar parts \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.munging.proper_demunge,devtools.munging.protocol_path(protocol_selector));\nvar _ \x3d (((cljs.core.count(parts) \x3e\x3d (2)))?null:(function(){throw (new Error([\x22Assert failed: \x22,[\x22expected protocol selector to contain at least one dot: \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(protocol_selector),\x22\x27\x22].join(\x27\x27),\x22\\n\x22,\x22(\x3e\x3d (count parts) 2)\x22].join(\x27\x27)))})());\nvar ns \x3d clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22.\x22,cljs.core.butlast(parts));\nvar name \x3d cljs.core.last(parts);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns,name,protocol_selector], null);\n});\ndevtools.munging.fast_path_protocols_lookup_table \x3d (new cljs.core.Delay((function (){\nreturn new cljs.core.PersistentArrayMap(null, 2, [(0),cljs.core.PersistentHashMap.fromArrays([(8192),(4096),(524288),(128),(1048576),(1),(32768),(4),(268435456),(512),(33554432),(32),(256),(1024),(134217728),(16777216),(64),(262144),(2),(4194304),(131072),(67108864),(8388608),(16),(2097152),(1073741824),(2147483648),(2048),(8),(65536),(16384)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IStack\x22,\x22cljs.core.IStack\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ISet\x22,\x22cljs.core.ISet\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IReduce\x22,\x22cljs.core.IReduce\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22INext\x22,\x22cljs.core.INext\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IKVReduce\x22,\x22cljs.core.IKVReduce\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IFn\x22,\x22cljs.core.IFn\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IDeref\x22,\x22cljs.core.IDeref\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IEmptyableCollection\x22,\x22cljs.core.IEmptyableCollection\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ISorted\x22,\x22cljs.core.ISorted\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IAssociative\x22,\x22cljs.core.IAssociative\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IList\x22,\x22cljs.core.IList\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ASeq\x22,\x22cljs.core.ASeq\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ILookup\x22,\x22cljs.core.ILookup\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IMap\x22,\x22cljs.core.IMap\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IReversible\x22,\x22cljs.core.IReversible\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ISequential\x22,\x22cljs.core.ISequential\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ISeq\x22,\x22cljs.core.ISeq\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IWithMeta\x22,\x22cljs.core.IWithMeta\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ICounted\x22,\x22cljs.core.ICounted\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IHash\x22,\x22cljs.core.IHash\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IMeta\x22,\x22cljs.core.IMeta\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IRecord\x22,\x22cljs.core.IRecord\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ISeqable\x22,\x22cljs.core.ISeqable\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IIndexed\x22,\x22cljs.core.IIndexed\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IEquiv\x22,\x22cljs.core.IEquiv\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IWriter\x22,\x22cljs.core.IWriter\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IPrintWithWriter\x22,\x22cljs.core.IPrintWithWriter\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IMapEntry\x22,\x22cljs.core.IMapEntry\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ICollection\x22,\x22cljs.core.ICollection\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IDerefWithTimeout\x22,\x22cljs.core.IDerefWithTimeout\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IVector\x22,\x22cljs.core.IVector\x22], null)]),(1),cljs.core.PersistentHashMap.fromArrays([(8192),(4096),(128),(1),(32768),(4),(512),(32),(256),(1024),(64),(2),(131072),(16),(2048),(8),(65536),(16384)],[new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ICloneable\x22,\x22cljs.core.ICloneable\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22INamed\x22,\x22cljs.core.INamed\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ITransientSet\x22,\x22cljs.core.ITransientSet\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IPending\x22,\x22cljs.core.IPending\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IReset\x22,\x22cljs.core.IReset\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IEditableCollection\x22,\x22cljs.core.IEditableCollection\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IChunkedSeq\x22,\x22cljs.core.IChunkedSeq\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ITransientMap\x22,\x22cljs.core.ITransientMap\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IMultiFn\x22,\x22cljs.core.IMultiFn\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IChunkedNext\x22,\x22cljs.core.IChunkedNext\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ITransientVector\x22,\x22cljs.core.ITransientVector\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IWatchable\x22,\x22cljs.core.IWatchable\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IIterable\x22,\x22cljs.core.IIterable\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ITransientAssociative\x22,\x22cljs.core.ITransientAssociative\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IComparable\x22,\x22cljs.core.IComparable\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ITransientCollection\x22,\x22cljs.core.ITransientCollection\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22ISwap\x22,\x22cljs.core.ISwap\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22cljs.core\x22,\x22IAtom\x22,\x22cljs.core.IAtom\x22], null)])], null);\n}),null));\ndevtools.munging.key_for_protocol_partition \x3d (function devtools$munging$key_for_protocol_partition(partition){\nreturn [\x22cljs$lang$protocol_mask$partition\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(partition),\x22$\x22].join(\x27\x27);\n});\ndevtools.munging.scan_fast_path_protocols_partition \x3d (function devtools$munging$scan_fast_path_protocols_partition(obj,partition){\nif(typeof partition \x3d\x3d\x3d \x27number\x27){\n} else {\nthrow (new Error(\x22Assert failed: (number? partition)\x22));\n}\n\nvar partition_key \x3d devtools.munging.key_for_protocol_partition(partition);\nvar partition_bits \x3d (function (){var or__5045__auto__ \x3d (obj[partition_key]);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (0);\n}\n})();\nif((partition_bits \x3e (0))){\nvar lookup_table \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(devtools.munging.fast_path_protocols_lookup_table),partition);\nvar _ \x3d ((cljs.core.map_QMARK_(lookup_table))?null:(function(){throw (new Error([\x22Assert failed: \x22,[\x22fast-path-protocols-lookup-table does not contain lookup table for partition \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(partition)].join(\x27\x27),\x22\\n\x22,\x22(map? lookup-table)\x22].join(\x27\x27)))})());\nvar _STAR_ \x3d (function (accum,p__12565){\nvar vec__12566 \x3d p__12565;\nvar bit \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12566,(0),null);\nvar protocol \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12566,(1),null);\nif(((partition_bits \x26 bit) \x3d\x3d\x3d (0))){\nreturn accum;\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(accum,protocol);\n}\n});\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,cljs.core.PersistentVector.EMPTY,lookup_table);\n} else {\nreturn null;\n}\n});\ndevtools.munging.scan_fast_path_protocols \x3d (function devtools$munging$scan_fast_path_protocols(obj){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.munging.scan_fast_path_protocols_partition,obj),cljs.core.range.cljs$core$IFn$_invoke$arity$1((2))));\n});\ndevtools.munging.scan_slow_path_protocols \x3d (function devtools$munging$scan_slow_path_protocols(obj){\nvar keys \x3d devtools.munging.goog$module$goog$object.getKeys(obj);\nvar selectors \x3d cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.munging.get_protocol_selector,keys);\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.munging.demunge_protocol_selector,selectors);\n});\ndevtools.munging.make_protocol_descriptor \x3d (function devtools$munging$make_protocol_descriptor(ns,name,selector,fast_QMARK_){\nreturn new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22ns\x22,\x22ns\x22,441598760),ns,new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),name,new cljs.core.Keyword(null,\x22selector\x22,\x22selector\x22,762528866),selector,new cljs.core.Keyword(null,\x22fast?\x22,\x22fast?\x22,-1813307150),fast_QMARK_], null);\n});\ndevtools.munging.convert_to_protocol_descriptor \x3d (function devtools$munging$convert_to_protocol_descriptor(fast_QMARK_,p__12570){\nvar vec__12571 \x3d p__12570;\nvar ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12571,(0),null);\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12571,(1),null);\nvar selector \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12571,(2),null);\nreturn devtools.munging.make_protocol_descriptor(ns,name,selector,fast_QMARK_);\n});\ndevtools.munging.protocol_descriptors_comparator \x3d (function devtools$munging$protocol_descriptors_comparator(a,b){\nreturn cljs.core.compare(new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177).cljs$core$IFn$_invoke$arity$1(a),new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177).cljs$core$IFn$_invoke$arity$1(b));\n});\ndevtools.munging.scan_protocols \x3d (function devtools$munging$scan_protocols(obj){\nvar fast_path_protocols \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.munging.convert_to_protocol_descriptor,true),devtools.munging.scan_fast_path_protocols(obj));\nvar slow_path_protocols \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.munging.convert_to_protocol_descriptor,false),devtools.munging.scan_slow_path_protocols(obj));\nvar all_protocols \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$2(fast_path_protocols,slow_path_protocols);\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2(devtools.munging.protocol_descriptors_comparator,all_protocols);\n});\ndevtools.munging.collect_protocol_methods \x3d (function devtools$munging$collect_protocol_methods(obj,protocol_selector){\nvar key_prefix \x3d clojure.string.replace(protocol_selector,/\\./,\x22\\\\$\x22);\nvar pattern \x3d cljs.core.re_pattern([\x22^\x22,key_prefix,\x22\\\\$(.*)\\\\$arity\\\\$(\\\\d+)$\x22].join(\x27\x27));\nvar all_keys \x3d devtools.munging.goog$module$goog$object.getKeys(obj);\nvar matches \x3d cljs.core.keep.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.re_matches,pattern),all_keys);\nvar methods$ \x3d cljs.core.group_by(cljs.core.second,matches);\nvar match_to_arity \x3d (function (match){\nvar arity \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(match,(2));\nreturn parseInt(arity,(10));\n});\nvar match_arity_comparator \x3d (function (a,b){\nreturn cljs.core.compare(match_to_arity(a),match_to_arity(b));\n});\nvar post_process \x3d (function (p__12581){\nvar vec__12582 \x3d p__12581;\nvar munged_name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12582,(0),null);\nvar matches__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12582,(1),null);\nvar name \x3d devtools.munging.proper_demunge(munged_name);\nvar sorted_matches \x3d cljs.core.sort.cljs$core$IFn$_invoke$arity$2(match_arity_comparator,matches__$1);\nvar sorted_fns \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__12578_SHARP_){\nreturn (obj[cljs.core.first(p1__12578_SHARP_)]);\n}),sorted_matches);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [name,sorted_fns], null);\n});\nvar by_name_comparator \x3d (function (a,b){\nreturn cljs.core.compare(cljs.core.first(a),cljs.core.first(b));\n});\nreturn cljs.core.sort.cljs$core$IFn$_invoke$arity$2(by_name_comparator,cljs.core.map.cljs$core$IFn$_invoke$arity$2(post_process,methods$));\n});\n");
SHADOW_ENV.evalLoad("devtools.formatters.helpers.js", true , "goog.provide(\x27devtools.formatters.helpers\x27);\ndevtools.formatters.helpers.pref \x3d (function devtools$formatters$helpers$pref(v){\nwhile(true){\nif((v instanceof cljs.core.Keyword)){\nvar G__12660 \x3d devtools.prefs.pref(v);\nv \x3d G__12660;\ncontinue;\n} else {\nreturn v;\n}\nbreak;\n}\n});\ndevtools.formatters.helpers.get_prototype \x3d (function devtools$formatters$helpers$get_prototype(o){\nreturn o.prototype;\n});\ndevtools.formatters.helpers.get_constructor \x3d (function devtools$formatters$helpers$get_constructor(o){\nreturn o.constructor;\n});\ndevtools.formatters.helpers.is_prototype_QMARK_ \x3d (function devtools$formatters$helpers$is_prototype_QMARK_(o){\nreturn (devtools.formatters.helpers.get_prototype(devtools.formatters.helpers.get_constructor(o)) \x3d\x3d\x3d o);\n});\ndevtools.formatters.helpers.is_js_symbol_QMARK_ \x3d (function devtools$formatters$helpers$is_js_symbol_QMARK_(o){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(goog.typeOf(o),\x22symbol\x22);\n});\ndevtools.formatters.helpers.cljs_function_QMARK_ \x3d (function devtools$formatters$helpers$cljs_function_QMARK_(value){\nvar and__5043__auto__ \x3d cljs.core.not(devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22disable-cljs-fn-formatting\x22,\x22disable-cljs-fn-formatting\x22,1903786837)));\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d (!(cljs.core.var_QMARK_(value)));\nif(and__5043__auto____$1){\nreturn devtools.munging.cljs_fn_QMARK_(value);\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n});\ndevtools.formatters.helpers.has_formatting_protocol_QMARK_ \x3d (function devtools$formatters$helpers$has_formatting_protocol_QMARK_(value){\nvar or__5045__auto__ \x3d (function (){try{if((!((value \x3d\x3d null)))){\nif((((value.cljs$lang$protocol_mask$partition0$ \x26 (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.cljs$core$IPrintWithWriter$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,value);\n}\n}catch (e12603){var _e__11529__auto__ \x3d e12603;\nreturn false;\n}})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (function (){try{if((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n}\n}catch (e12608){var _e__11529__auto__ \x3d e12608;\nreturn false;\n}})();\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\ntry{if((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n}\n}catch (e12616){var _e__11529__auto__ \x3d e12616;\nreturn false;\n}}\n}\n});\ndevtools.formatters.helpers.cljs_type_QMARK_ \x3d (function devtools$formatters$helpers$cljs_type_QMARK_(f){\nvar and__5043__auto__ \x3d goog.isObject(f);\nif(cljs.core.truth_(and__5043__auto__)){\nvar and__5043__auto____$1 \x3d (!(devtools.formatters.helpers.is_prototype_QMARK_(f)));\nif(and__5043__auto____$1){\nreturn f.cljs$lang$type;\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n});\ndevtools.formatters.helpers.cljs_instance_QMARK_ \x3d (function devtools$formatters$helpers$cljs_instance_QMARK_(value){\nvar and__5043__auto__ \x3d goog.isObject(value);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn devtools.formatters.helpers.cljs_type_QMARK_(devtools.formatters.helpers.get_constructor(value));\n} else {\nreturn and__5043__auto__;\n}\n});\ndevtools.formatters.helpers.cljs_land_value_QMARK_ \x3d (function devtools$formatters$helpers$cljs_land_value_QMARK_(value){\nvar or__5045__auto__ \x3d devtools.formatters.helpers.cljs_instance_QMARK_(value);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.helpers.has_formatting_protocol_QMARK_(value);\n}\n});\ndevtools.formatters.helpers.cljs_value_QMARK_ \x3d (function devtools$formatters$helpers$cljs_value_QMARK_(value){\nvar and__5043__auto__ \x3d (function (){var or__5045__auto__ \x3d devtools.formatters.helpers.cljs_land_value_QMARK_(value);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.helpers.cljs_function_QMARK_(value);\n}\n})();\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (((!(devtools.formatters.helpers.is_prototype_QMARK_(value)))) \x26\x26 ((!(devtools.formatters.helpers.is_js_symbol_QMARK_(value)))));\n} else {\nreturn and__5043__auto__;\n}\n});\ndevtools.formatters.helpers.bool_QMARK_ \x3d (function devtools$formatters$helpers$bool_QMARK_(value){\nreturn ((value \x3d\x3d\x3d true) || (value \x3d\x3d\x3d false));\n});\ndevtools.formatters.helpers.instance_of_a_well_known_type_QMARK_ \x3d (function devtools$formatters$helpers$instance_of_a_well_known_type_QMARK_(value){\nvar well_known_types \x3d devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22well-known-types\x22,\x22well-known-types\x22,70638649));\nvar constructor_fn \x3d devtools.formatters.helpers.get_constructor(value);\nvar vec__12626 \x3d devtools.munging.parse_constructor_info(constructor_fn);\nvar ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12626,(0),null);\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12626,(1),null);\nvar fully_qualified_type_name \x3d [cljs.core.str.cljs$core$IFn$_invoke$arity$1(ns),\x22/\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)].join(\x27\x27);\nreturn cljs.core.contains_QMARK_(well_known_types,fully_qualified_type_name);\n});\ndevtools.formatters.helpers.should_render_instance_QMARK_ \x3d (function devtools$formatters$helpers$should_render_instance_QMARK_(value){\nvar and__5043__auto__ \x3d devtools.formatters.helpers.cljs_instance_QMARK_(value);\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (!(devtools.formatters.helpers.instance_of_a_well_known_type_QMARK_(value)));\n} else {\nreturn and__5043__auto__;\n}\n});\ndevtools.formatters.helpers.directly_printable_QMARK_ \x3d (function devtools$formatters$helpers$directly_printable_QMARK_(value){\nreturn ((typeof value \x3d\x3d\x3d \x27string\x27) || (((typeof value \x3d\x3d\x3d \x27number\x27) || (devtools.formatters.helpers.bool_QMARK_(value)))));\n});\ndevtools.formatters.helpers.abbreviated_QMARK_ \x3d (function devtools$formatters$helpers$abbreviated_QMARK_(template){\nreturn cljs.core.some((function (p1__12637_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22more-marker\x22,\x22more-marker\x22,-14717935)),p1__12637_SHARP_);\n}),template);\n});\ndevtools.formatters.helpers.abbreviate_long_string \x3d (function devtools$formatters$helpers$abbreviate_long_string(string,marker,prefix_limit,postfix_limit){\nvar prefix \x3d string.slice((0),prefix_limit);\nvar postfix \x3d string.slice((string.length - postfix_limit));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(prefix),cljs.core.str.cljs$core$IFn$_invoke$arity$1(marker),cljs.core.str.cljs$core$IFn$_invoke$arity$1(postfix)].join(\x27\x27);\n});\ndevtools.formatters.helpers.get_more_marker \x3d (function devtools$formatters$helpers$get_more_marker(more_count){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22plus-symbol\x22,\x22plus-symbol\x22,-1984915189))),cljs.core.str.cljs$core$IFn$_invoke$arity$1(more_count),cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22more-symbol\x22,\x22more-symbol\x22,-2139760242)))].join(\x27\x27);\n});\ndevtools.formatters.helpers.wrap_arity \x3d (function devtools$formatters$helpers$wrap_arity(arity){\nvar args_open_symbol \x3d devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22args-open-symbol\x22,\x22args-open-symbol\x22,-1336957557));\nvar args_close_symbol \x3d devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22args-close-symbol\x22,\x22args-close-symbol\x22,777697973));\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(args_open_symbol),cljs.core.str.cljs$core$IFn$_invoke$arity$1(arity),cljs.core.str.cljs$core$IFn$_invoke$arity$1(args_close_symbol)].join(\x27\x27);\n});\ndevtools.formatters.helpers.fetch_field_value \x3d (function devtools$formatters$helpers$fetch_field_value(obj,field){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [field,(obj[cljs.core.munge(field)])], null);\n});\ndevtools.formatters.helpers.fetch_fields_values \x3d (function devtools$formatters$helpers$fetch_fields_values(obj,fields){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.fetch_field_value,obj),fields);\n});\ndevtools.formatters.helpers.expandable_QMARK_ \x3d (function devtools$formatters$helpers$expandable_QMARK_(obj){\nif((((!((obj \x3d\x3d null))))?(((((obj.cljs$lang$protocol_mask$partition0$ \x26 (8388608))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.cljs$core$ISeqable$))))?true:(((!obj.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,obj):false)):cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,obj))){\nvar temp__5802__auto__ \x3d devtools.formatters.helpers.pref(((devtools.formatters.helpers.instance_of_a_well_known_type_QMARK_(obj))?new cljs.core.Keyword(null,\x22min-expandable-sequable-count-for-well-known-types\x22,\x22min-expandable-sequable-count-for-well-known-types\x22,-1879576081):new cljs.core.Keyword(null,\x22min-expandable-sequable-count\x22,\x22min-expandable-sequable-count\x22,63566227)));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar min_count \x3d temp__5802__auto__;\nif((!(cljs.core.empty_QMARK_(obj)))){\nvar actual_count \x3d cljs.core.bounded_count(min_count,obj);\nreturn (actual_count \x3e\x3d min_count);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\ndevtools.formatters.helpers.should_render_QMARK_ \x3d (function devtools$formatters$helpers$should_render_QMARK_(pref_key,value,default_check){\nvar temp__5802__auto__ \x3d devtools.formatters.helpers.pref(pref_key);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar render_pref \x3d temp__5802__auto__;\nif(render_pref \x3d\x3d\x3d true){\nreturn (default_check.cljs$core$IFn$_invoke$arity$1 ? default_check.cljs$core$IFn$_invoke$arity$1(value) : default_check.call(null,value));\n} else {\nif(cljs.core.fn_QMARK_(render_pref)){\nreturn (render_pref.cljs$core$IFn$_invoke$arity$1 ? render_pref.cljs$core$IFn$_invoke$arity$1(value) : render_pref.call(null,value));\n} else {\nreturn null;\n}\n}\n} else {\nreturn null;\n}\n});\n");
SHADOW_ENV.evalLoad("devtools.formatters.state.js", true , "goog.provide(\x27devtools.formatters.state\x27);\ndevtools.formatters.state._STAR_current_state_STAR_ \x3d null;\ndevtools.formatters.state.valid_current_state_QMARK_ \x3d (function devtools$formatters$state$valid_current_state_QMARK_(){\nreturn (!((devtools.formatters.state._STAR_current_state_STAR_ \x3d\x3d null)));\n});\ndevtools.formatters.state.get_default_state \x3d (function devtools$formatters$state$get_default_state(){\nreturn cljs.core.PersistentArrayMap.EMPTY;\n});\ndevtools.formatters.state.get_current_state \x3d (function devtools$formatters$state$get_current_state(){\nif(devtools.formatters.state.valid_current_state_QMARK_()){\n} else {\nthrow (new Error(\x22Assert failed: (valid-current-state?)\x22));\n}\n\nreturn devtools.formatters.state._STAR_current_state_STAR_;\n});\ndevtools.formatters.state.update_current_state_BANG_ \x3d (function devtools$formatters$state$update_current_state_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12523 \x3d arguments.length;\nvar i__5770__auto___12524 \x3d (0);\nwhile(true){\nif((i__5770__auto___12524 \x3c len__5769__auto___12523)){\nargs__5775__auto__.push((arguments[i__5770__auto___12524]));\n\nvar G__12525 \x3d (i__5770__auto___12524 + (1));\ni__5770__auto___12524 \x3d G__12525;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.state.update_current_state_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.state.update_current_state_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nif(devtools.formatters.state.valid_current_state_QMARK_()){\n} else {\nthrow (new Error(\x22Assert failed: (valid-current-state?)\x22));\n}\n\nreturn (devtools.formatters.state._STAR_current_state_STAR_ \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,devtools.formatters.state._STAR_current_state_STAR_,args));\n}));\n\n(devtools.formatters.state.update_current_state_BANG_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.state.update_current_state_BANG_.cljs$lang$applyTo \x3d (function (seq12362){\nvar G__12363 \x3d cljs.core.first(seq12362);\nvar seq12362__$1 \x3d cljs.core.next(seq12362);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12363,seq12362__$1);\n}));\n\ndevtools.formatters.state.push_object_to_current_history_BANG_ \x3d (function devtools$formatters$state$push_object_to_current_history_BANG_(object){\nreturn devtools.formatters.state.update_current_state_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22history\x22,\x22history\x22,-247395220),cljs.core.conj,object], 0));\n});\ndevtools.formatters.state.get_current_history \x3d (function devtools$formatters$state$get_current_history(){\nreturn new cljs.core.Keyword(null,\x22history\x22,\x22history\x22,-247395220).cljs$core$IFn$_invoke$arity$1(devtools.formatters.state.get_current_state());\n});\ndevtools.formatters.state.is_circular_QMARK_ \x3d (function devtools$formatters$state$is_circular_QMARK_(object){\nvar history__$1 \x3d devtools.formatters.state.get_current_history();\nreturn cljs.core.some((function (p1__12391_SHARP_){\nreturn (p1__12391_SHARP_ \x3d\x3d\x3d object);\n}),history__$1);\n});\ndevtools.formatters.state.get_last_object_from_current_history \x3d (function devtools$formatters$state$get_last_object_from_current_history(){\nreturn cljs.core.first(devtools.formatters.state.get_current_history());\n});\ndevtools.formatters.state.get_second_last_object_from_current_history \x3d (function devtools$formatters$state$get_second_last_object_from_current_history(){\nreturn cljs.core.second(devtools.formatters.state.get_current_history());\n});\ndevtools.formatters.state.present_path_segment \x3d (function devtools$formatters$state$present_path_segment(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12528 \x3d arguments.length;\nvar i__5770__auto___12529 \x3d (0);\nwhile(true){\nif((i__5770__auto___12529 \x3c len__5769__auto___12528)){\nargs__5775__auto__.push((arguments[i__5770__auto___12529]));\n\nvar G__12531 \x3d (i__5770__auto___12529 + (1));\ni__5770__auto___12529 \x3d G__12531;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.state.present_path_segment.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.state.present_path_segment.cljs$core$IFn$_invoke$arity$variadic \x3d (function (v,p__12430){\nvar vec__12432 \x3d p__12430;\nvar starting_index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12432,(0),null);\nif(typeof v \x3d\x3d\x3d \x27string\x27){\nreturn v;\n} else {\nif((v instanceof cljs.core.Keyword)){\nreturn v;\n} else {\nif(((typeof v \x3d\x3d\x3d \x27number\x27) \x26\x26 (typeof starting_index \x3d\x3d\x3d \x27number\x27))){\nreturn (v + starting_index);\n} else {\nif(typeof v \x3d\x3d\x3d \x27number\x27){\nreturn v;\n} else {\nreturn \x22?\x22;\n\n}\n}\n}\n}\n}));\n\n(devtools.formatters.state.present_path_segment.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.state.present_path_segment.cljs$lang$applyTo \x3d (function (seq12424){\nvar G__12425 \x3d cljs.core.first(seq12424);\nvar seq12424__$1 \x3d cljs.core.next(seq12424);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12425,seq12424__$1);\n}));\n\ndevtools.formatters.state.seek_path_segment \x3d (function devtools$formatters$state$seek_path_segment(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12535 \x3d arguments.length;\nvar i__5770__auto___12536 \x3d (0);\nwhile(true){\nif((i__5770__auto___12536 \x3c len__5769__auto___12535)){\nargs__5775__auto__.push((arguments[i__5770__auto___12536]));\n\nvar G__12537 \x3d (i__5770__auto___12536 + (1));\ni__5770__auto___12536 \x3d G__12537;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.state.seek_path_segment.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.state.seek_path_segment.cljs$core$IFn$_invoke$arity$variadic \x3d (function (coll,val,p__12450){\nvar vec__12451 \x3d p__12450;\nvar seq_SINGLEQUOTE_d_map_QMARK_ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12451,(0),null);\nvar starting_index \x3d new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(devtools.formatters.state.get_last_object_from_current_history()));\nvar _STAR_ \x3d (function (p__12463){\nvar vec__12464 \x3d p__12463;\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12464,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12464,(1),null);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d seq_SINGLEQUOTE_d_map_QMARK_;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (k \x3d\x3d\x3d val);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn devtools.formatters.state.present_path_segment(k);\n} else {\nif((v \x3d\x3d\x3d val)){\nreturn devtools.formatters.state.present_path_segment.cljs$core$IFn$_invoke$arity$variadic(k,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([starting_index], 0));\n} else {\nreturn null;\n}\n}\n});\nreturn cljs.core.some(_STAR_,coll);\n}));\n\n(devtools.formatters.state.seek_path_segment.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(devtools.formatters.state.seek_path_segment.cljs$lang$applyTo \x3d (function (seq12443){\nvar G__12444 \x3d cljs.core.first(seq12443);\nvar seq12443__$1 \x3d cljs.core.next(seq12443);\nvar G__12445 \x3d cljs.core.first(seq12443__$1);\nvar seq12443__$2 \x3d cljs.core.next(seq12443__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12444,G__12445,seq12443__$2);\n}));\n\ndevtools.formatters.state.build_path_segment \x3d (function devtools$formatters$state$build_path_segment(parent_object,object){\nif(cljs.core.map_QMARK_(parent_object)){\nreturn devtools.formatters.state.seek_path_segment.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(parent_object),object,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([true], 0));\n} else {\nif(cljs.core.sequential_QMARK_(parent_object)){\nreturn devtools.formatters.state.seek_path_segment(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2((function (i,x){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i,x], null);\n}),parent_object),object);\n} else {\nif(((cljs.core.set_QMARK_(parent_object)) \x26\x26 (((cljs.core.contains_QMARK_(parent_object,object)) \x26\x26 (((typeof object \x3d\x3d\x3d \x27string\x27) || ((((object instanceof cljs.core.Keyword)) || (cljs.core.integer_QMARK_(object)))))))))){\nreturn object;\n} else {\nif(((cljs.core.set_QMARK_(parent_object)) \x26\x26 (cljs.core.contains_QMARK_(parent_object,object)))){\nreturn devtools.formatters.state.seek_path_segment(cljs.core.map_indexed.cljs$core$IFn$_invoke$arity$2((function (i,x){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [i,x], null);\n}),parent_object),object);\n} else {\nreturn null;\n}\n}\n}\n}\n});\ndevtools.formatters.state.mapping_QMARK_ \x3d (function devtools$formatters$state$mapping_QMARK_(history,obj){\nvar first_kw \x3d ((((cljs.core.vector_QMARK_(obj)) \x26\x26 (cljs.core.map_QMARK_(history))))?cljs.core.nth.cljs$core$IFn$_invoke$arity$3(obj,(0),null):null);\nvar valid_kw_QMARK_ \x3d (function (){var and__5043__auto__ \x3d first_kw;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (((((first_kw instanceof cljs.core.Keyword)) || (((typeof first_kw \x3d\x3d\x3d \x27string\x27) || (typeof first_kw \x3d\x3d\x3d \x27number\x27))))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(obj),(2))));\n} else {\nreturn and__5043__auto__;\n}\n})();\nif(cljs.core.truth_(valid_kw_QMARK_)){\nreturn cljs.core.contains_QMARK_(history,first_kw);\n} else {\nreturn null;\n}\n});\ndevtools.formatters.state.ignore_path_in_fake_vector \x3d (function devtools$formatters$state$ignore_path_in_fake_vector(history,obj,path){\nif(cljs.core.truth_(devtools.formatters.state.mapping_QMARK_(history,obj))){\nvar or__5045__auto__ \x3d path;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentVector.EMPTY;\n}\n} else {\nreturn null;\n}\n});\ndevtools.formatters.state.find_path_in_fake_vector \x3d (function devtools$formatters$state$find_path_in_fake_vector(history,path){\nvar second_last_history \x3d devtools.formatters.state.get_second_last_object_from_current_history();\nif(cljs.core.truth_(devtools.formatters.state.mapping_QMARK_(second_last_history,history))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5045__auto__ \x3d path;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentVector.EMPTY;\n}\n})(),cljs.core.nth.cljs$core$IFn$_invoke$arity$3(history,(0),null));\n} else {\nreturn null;\n}\n});\ndevtools.formatters.state.find_path \x3d (function devtools$formatters$state$find_path(history,obj,path){\nvar path_segment \x3d devtools.formatters.state.build_path_segment(history,obj);\nif((!((path_segment \x3d\x3d null)))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__5045__auto__ \x3d path;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.PersistentVector.EMPTY;\n}\n})(),path_segment);\n} else {\nreturn null;\n}\n});\ndevtools.formatters.state.extend_path_info \x3d (function devtools$formatters$state$extend_path_info(path_info,object){\nvar parent_object \x3d devtools.formatters.state.get_last_object_from_current_history();\nvar or__5045__auto__ \x3d devtools.formatters.state.ignore_path_in_fake_vector(parent_object,object,path_info);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d devtools.formatters.state.find_path_in_fake_vector(parent_object,path_info);\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 \x3d devtools.formatters.state.find_path(parent_object,object,path_info);\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nreturn path_info;\n}\n}\n}\n});\ndevtools.formatters.state.add_object_to_current_path_info_BANG_ \x3d (function devtools$formatters$state$add_object_to_current_path_info_BANG_(object){\nreturn devtools.formatters.state.update_current_state_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.update,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22path-info\x22,\x22path-info\x22,-1932254250),devtools.formatters.state.extend_path_info,object], 0));\n});\ndevtools.formatters.state.get_current_path_info \x3d (function devtools$formatters$state$get_current_path_info(){\nreturn new cljs.core.Keyword(null,\x22path-info\x22,\x22path-info\x22,-1932254250).cljs$core$IFn$_invoke$arity$1(devtools.formatters.state.get_current_state());\n});\ndevtools.formatters.state.prevent_recursion_QMARK_ \x3d (function devtools$formatters$state$prevent_recursion_QMARK_(){\nreturn cljs.core.boolean$(new cljs.core.Keyword(null,\x22prevent-recursion\x22,\x22prevent-recursion\x22,-1498371606).cljs$core$IFn$_invoke$arity$1(devtools.formatters.state.get_current_state()));\n});\ndevtools.formatters.state.set_prevent_recursion \x3d (function devtools$formatters$state$set_prevent_recursion(state,val){\nif((!((val \x3d\x3d null)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(null,\x22prevent-recursion\x22,\x22prevent-recursion\x22,-1498371606),val);\n} else {\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22prevent-recursion\x22,\x22prevent-recursion\x22,-1498371606));\n}\n});\ndevtools.formatters.state.get_managed_print_level \x3d (function devtools$formatters$state$get_managed_print_level(){\nreturn new cljs.core.Keyword(null,\x22managed-print-level\x22,\x22managed-print-level\x22,-844058473).cljs$core$IFn$_invoke$arity$1(devtools.formatters.state.get_current_state());\n});\ndevtools.formatters.state.set_managed_print_level \x3d (function devtools$formatters$state$set_managed_print_level(state,val){\nif((!((val \x3d\x3d null)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(null,\x22managed-print-level\x22,\x22managed-print-level\x22,-844058473),val);\n} else {\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22managed-print-level\x22,\x22managed-print-level\x22,-844058473));\n}\n});\ndevtools.formatters.state.get_depth_budget \x3d (function devtools$formatters$state$get_depth_budget(){\nreturn new cljs.core.Keyword(null,\x22depth-budget\x22,\x22depth-budget\x22,-335905888).cljs$core$IFn$_invoke$arity$1(devtools.formatters.state.get_current_state());\n});\ndevtools.formatters.state.set_depth_budget \x3d (function devtools$formatters$state$set_depth_budget(state,val){\nif((!((val \x3d\x3d null)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(null,\x22depth-budget\x22,\x22depth-budget\x22,-335905888),val);\n} else {\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22depth-budget\x22,\x22depth-budget\x22,-335905888));\n}\n});\ndevtools.formatters.state.reset_depth_limits \x3d (function devtools$formatters$state$reset_depth_limits(state){\nreturn devtools.formatters.state.set_managed_print_level(devtools.formatters.state.set_depth_budget(state,null),null);\n});\n");
SHADOW_ENV.evalLoad("devtools.formatters.templating.js", true , "goog.provide(\x27devtools.formatters.templating\x27);\ndevtools.formatters.templating.mark_as_group_BANG_ \x3d (function devtools$formatters$templating$mark_as_group_BANG_(value){\nvar x14307_14651 \x3d value;\n(x14307_14651.devtools$protocols$IGroup$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n\nreturn value;\n});\ndevtools.formatters.templating.group_QMARK_ \x3d (function devtools$formatters$templating$group_QMARK_(value){\nif((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$protocols$IGroup$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IGroup,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IGroup,value);\n}\n});\ndevtools.formatters.templating.mark_as_template_BANG_ \x3d (function devtools$formatters$templating$mark_as_template_BANG_(value){\nvar x14337_14652 \x3d value;\n(x14337_14652.devtools$protocols$ITemplate$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n\nreturn value;\n});\ndevtools.formatters.templating.template_QMARK_ \x3d (function devtools$formatters$templating$template_QMARK_(value){\nif((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$protocols$ITemplate$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ITemplate,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ITemplate,value);\n}\n});\ndevtools.formatters.templating.mark_as_surrogate_BANG_ \x3d (function devtools$formatters$templating$mark_as_surrogate_BANG_(value){\nvar x14352_14656 \x3d value;\n(x14352_14656.devtools$protocols$ISurrogate$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n\nreturn value;\n});\ndevtools.formatters.templating.surrogate_QMARK_ \x3d (function devtools$formatters$templating$surrogate_QMARK_(value){\nif((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$protocols$ISurrogate$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ISurrogate,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.ISurrogate,value);\n}\n});\ndevtools.formatters.templating.reference_QMARK_ \x3d (function devtools$formatters$templating$reference_QMARK_(value){\nreturn ((devtools.formatters.templating.group_QMARK_(value)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((value[(0)]),\x22object\x22)));\n});\ndevtools.formatters.templating.make_group \x3d (function devtools$formatters$templating$make_group(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14660 \x3d arguments.length;\nvar i__5770__auto___14661 \x3d (0);\nwhile(true){\nif((i__5770__auto___14661 \x3c len__5769__auto___14660)){\nargs__5775__auto__.push((arguments[i__5770__auto___14661]));\n\nvar G__14662 \x3d (i__5770__auto___14661 + (1));\ni__5770__auto___14661 \x3d G__14662;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic \x3d (function (items){\nvar group \x3d devtools.formatters.templating.mark_as_group_BANG_([]);\nvar seq__14364_14666 \x3d cljs.core.seq(items);\nvar chunk__14366_14667 \x3d null;\nvar count__14367_14668 \x3d (0);\nvar i__14368_14669 \x3d (0);\nwhile(true){\nif((i__14368_14669 \x3c count__14367_14668)){\nvar item_14670 \x3d chunk__14366_14667.cljs$core$IIndexed$_nth$arity$2(null,i__14368_14669);\nif((!((item_14670 \x3d\x3d null)))){\nif(cljs.core.coll_QMARK_(item_14670)){\n(group[\x22push\x22]).apply(group,devtools.formatters.templating.mark_as_group_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(item_14670)));\n} else {\ngroup.push(devtools.formatters.helpers.pref(item_14670));\n}\n} else {\n}\n\n\nvar G__14671 \x3d seq__14364_14666;\nvar G__14672 \x3d chunk__14366_14667;\nvar G__14673 \x3d count__14367_14668;\nvar G__14674 \x3d (i__14368_14669 + (1));\nseq__14364_14666 \x3d G__14671;\nchunk__14366_14667 \x3d G__14672;\ncount__14367_14668 \x3d G__14673;\ni__14368_14669 \x3d G__14674;\ncontinue;\n} else {\nvar temp__5804__auto___14675 \x3d cljs.core.seq(seq__14364_14666);\nif(temp__5804__auto___14675){\nvar seq__14364_14676__$1 \x3d temp__5804__auto___14675;\nif(cljs.core.chunked_seq_QMARK_(seq__14364_14676__$1)){\nvar c__5568__auto___14677 \x3d cljs.core.chunk_first(seq__14364_14676__$1);\nvar G__14678 \x3d cljs.core.chunk_rest(seq__14364_14676__$1);\nvar G__14679 \x3d c__5568__auto___14677;\nvar G__14680 \x3d cljs.core.count(c__5568__auto___14677);\nvar G__14681 \x3d (0);\nseq__14364_14666 \x3d G__14678;\nchunk__14366_14667 \x3d G__14679;\ncount__14367_14668 \x3d G__14680;\ni__14368_14669 \x3d G__14681;\ncontinue;\n} else {\nvar item_14683 \x3d cljs.core.first(seq__14364_14676__$1);\nif((!((item_14683 \x3d\x3d null)))){\nif(cljs.core.coll_QMARK_(item_14683)){\n(group[\x22push\x22]).apply(group,devtools.formatters.templating.mark_as_group_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(item_14683)));\n} else {\ngroup.push(devtools.formatters.helpers.pref(item_14683));\n}\n} else {\n}\n\n\nvar G__14692 \x3d cljs.core.next(seq__14364_14676__$1);\nvar G__14693 \x3d null;\nvar G__14694 \x3d (0);\nvar G__14695 \x3d (0);\nseq__14364_14666 \x3d G__14692;\nchunk__14366_14667 \x3d G__14693;\ncount__14367_14668 \x3d G__14694;\ni__14368_14669 \x3d G__14695;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn group;\n}));\n\n(devtools.formatters.templating.make_group.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.formatters.templating.make_group.cljs$lang$applyTo \x3d (function (seq14361){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14361));\n}));\n\ndevtools.formatters.templating.make_template \x3d (function devtools$formatters$templating$make_template(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14696 \x3d arguments.length;\nvar i__5770__auto___14697 \x3d (0);\nwhile(true){\nif((i__5770__auto___14697 \x3c len__5769__auto___14696)){\nargs__5775__auto__.push((arguments[i__5770__auto___14697]));\n\nvar G__14698 \x3d (i__5770__auto___14697 + (1));\ni__5770__auto___14697 \x3d G__14698;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic \x3d (function (tag,style,children){\nvar tag__$1 \x3d devtools.formatters.helpers.pref(tag);\nvar style__$1 \x3d devtools.formatters.helpers.pref(style);\nvar template \x3d devtools.formatters.templating.mark_as_template_BANG_([tag__$1,((cljs.core.empty_QMARK_(style__$1))?({}):({\x22style\x22: style__$1}))]);\nvar seq__14383_14699 \x3d cljs.core.seq(children);\nvar chunk__14384_14700 \x3d null;\nvar count__14385_14701 \x3d (0);\nvar i__14386_14702 \x3d (0);\nwhile(true){\nif((i__14386_14702 \x3c count__14385_14701)){\nvar child_14703 \x3d chunk__14384_14700.cljs$core$IIndexed$_nth$arity$2(null,i__14386_14702);\nif((!((child_14703 \x3d\x3d null)))){\nif(cljs.core.coll_QMARK_(child_14703)){\n(template[\x22push\x22]).apply(template,devtools.formatters.templating.mark_as_template_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,child_14703))));\n} else {\nvar temp__5802__auto___14704 \x3d devtools.formatters.helpers.pref(child_14703);\nif(cljs.core.truth_(temp__5802__auto___14704)){\nvar child_value_14707 \x3d temp__5802__auto___14704;\ntemplate.push(child_value_14707);\n} else {\n}\n}\n} else {\n}\n\n\nvar G__14708 \x3d seq__14383_14699;\nvar G__14709 \x3d chunk__14384_14700;\nvar G__14710 \x3d count__14385_14701;\nvar G__14711 \x3d (i__14386_14702 + (1));\nseq__14383_14699 \x3d G__14708;\nchunk__14384_14700 \x3d G__14709;\ncount__14385_14701 \x3d G__14710;\ni__14386_14702 \x3d G__14711;\ncontinue;\n} else {\nvar temp__5804__auto___14712 \x3d cljs.core.seq(seq__14383_14699);\nif(temp__5804__auto___14712){\nvar seq__14383_14713__$1 \x3d temp__5804__auto___14712;\nif(cljs.core.chunked_seq_QMARK_(seq__14383_14713__$1)){\nvar c__5568__auto___14714 \x3d cljs.core.chunk_first(seq__14383_14713__$1);\nvar G__14715 \x3d cljs.core.chunk_rest(seq__14383_14713__$1);\nvar G__14716 \x3d c__5568__auto___14714;\nvar G__14717 \x3d cljs.core.count(c__5568__auto___14714);\nvar G__14718 \x3d (0);\nseq__14383_14699 \x3d G__14715;\nchunk__14384_14700 \x3d G__14716;\ncount__14385_14701 \x3d G__14717;\ni__14386_14702 \x3d G__14718;\ncontinue;\n} else {\nvar child_14719 \x3d cljs.core.first(seq__14383_14713__$1);\nif((!((child_14719 \x3d\x3d null)))){\nif(cljs.core.coll_QMARK_(child_14719)){\n(template[\x22push\x22]).apply(template,devtools.formatters.templating.mark_as_template_BANG_(cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,child_14719))));\n} else {\nvar temp__5802__auto___14720 \x3d devtools.formatters.helpers.pref(child_14719);\nif(cljs.core.truth_(temp__5802__auto___14720)){\nvar child_value_14721 \x3d temp__5802__auto___14720;\ntemplate.push(child_value_14721);\n} else {\n}\n}\n} else {\n}\n\n\nvar G__14722 \x3d cljs.core.next(seq__14383_14713__$1);\nvar G__14723 \x3d null;\nvar G__14724 \x3d (0);\nvar G__14725 \x3d (0);\nseq__14383_14699 \x3d G__14722;\nchunk__14384_14700 \x3d G__14723;\ncount__14385_14701 \x3d G__14724;\ni__14386_14702 \x3d G__14725;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn template;\n}));\n\n(devtools.formatters.templating.make_template.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(devtools.formatters.templating.make_template.cljs$lang$applyTo \x3d (function (seq14372){\nvar G__14373 \x3d cljs.core.first(seq14372);\nvar seq14372__$1 \x3d cljs.core.next(seq14372);\nvar G__14374 \x3d cljs.core.first(seq14372__$1);\nvar seq14372__$2 \x3d cljs.core.next(seq14372__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14373,G__14374,seq14372__$2);\n}));\n\ndevtools.formatters.templating.concat_templates_BANG_ \x3d (function devtools$formatters$templating$concat_templates_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14726 \x3d arguments.length;\nvar i__5770__auto___14727 \x3d (0);\nwhile(true){\nif((i__5770__auto___14727 \x3c len__5769__auto___14726)){\nargs__5775__auto__.push((arguments[i__5770__auto___14727]));\n\nvar G__14731 \x3d (i__5770__auto___14727 + (1));\ni__5770__auto___14727 \x3d G__14731;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (template,templates){\nreturn devtools.formatters.templating.mark_as_template_BANG_((template[\x22concat\x22]).apply(template,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.into_array,cljs.core.keep.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,templates)))));\n}));\n\n(devtools.formatters.templating.concat_templates_BANG_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.templating.concat_templates_BANG_.cljs$lang$applyTo \x3d (function (seq14418){\nvar G__14419 \x3d cljs.core.first(seq14418);\nvar seq14418__$1 \x3d cljs.core.next(seq14418);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14419,seq14418__$1);\n}));\n\ndevtools.formatters.templating.extend_template_BANG_ \x3d (function devtools$formatters$templating$extend_template_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14732 \x3d arguments.length;\nvar i__5770__auto___14733 \x3d (0);\nwhile(true){\nif((i__5770__auto___14733 \x3c len__5769__auto___14732)){\nargs__5775__auto__.push((arguments[i__5770__auto___14733]));\n\nvar G__14734 \x3d (i__5770__auto___14733 + (1));\ni__5770__auto___14733 \x3d G__14734;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.extend_template_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.templating.extend_template_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (template,args){\nreturn devtools.formatters.templating.concat_templates_BANG_.cljs$core$IFn$_invoke$arity$variadic(template,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([args], 0));\n}));\n\n(devtools.formatters.templating.extend_template_BANG_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.templating.extend_template_BANG_.cljs$lang$applyTo \x3d (function (seq14449){\nvar G__14450 \x3d cljs.core.first(seq14449);\nvar seq14449__$1 \x3d cljs.core.next(seq14449);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14450,seq14449__$1);\n}));\n\ndevtools.formatters.templating.make_surrogate \x3d (function devtools$formatters$templating$make_surrogate(var_args){\nvar G__14464 \x3d arguments.length;\nswitch (G__14464) {\ncase 1:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$1 \x3d (function (object){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2(object,null);\n}));\n\n(devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$2 \x3d (function (object,header){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3(object,header,null);\n}));\n\n(devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$3 \x3d (function (object,header,body){\nreturn devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4(object,header,body,(0));\n}));\n\n(devtools.formatters.templating.make_surrogate.cljs$core$IFn$_invoke$arity$4 \x3d (function (object,header,body,start_index){\nreturn devtools.formatters.templating.mark_as_surrogate_BANG_((function (){var obj14482 \x3d ({\x22target\x22:object,\x22header\x22:header,\x22body\x22:body,\x22startIndex\x22:(function (){var or__5045__auto__ \x3d start_index;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (0);\n}\n})()});\nreturn obj14482;\n})());\n}));\n\n(devtools.formatters.templating.make_surrogate.cljs$lang$maxFixedArity \x3d 4);\n\ndevtools.formatters.templating.get_surrogate_target \x3d (function devtools$formatters$templating$get_surrogate_target(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\x22Assert failed: (surrogate? surrogate)\x22));\n}\n\nreturn (surrogate[\x22target\x22]);\n});\ndevtools.formatters.templating.get_surrogate_header \x3d (function devtools$formatters$templating$get_surrogate_header(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\x22Assert failed: (surrogate? surrogate)\x22));\n}\n\nreturn (surrogate[\x22header\x22]);\n});\ndevtools.formatters.templating.get_surrogate_body \x3d (function devtools$formatters$templating$get_surrogate_body(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\x22Assert failed: (surrogate? surrogate)\x22));\n}\n\nreturn (surrogate[\x22body\x22]);\n});\ndevtools.formatters.templating.get_surrogate_start_index \x3d (function devtools$formatters$templating$get_surrogate_start_index(surrogate){\nif(devtools.formatters.templating.surrogate_QMARK_(surrogate)){\n} else {\nthrow (new Error(\x22Assert failed: (surrogate? surrogate)\x22));\n}\n\nreturn (surrogate[\x22startIndex\x22]);\n});\ndevtools.formatters.templating.make_reference \x3d (function devtools$formatters$templating$make_reference(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___14744 \x3d arguments.length;\nvar i__5770__auto___14745 \x3d (0);\nwhile(true){\nif((i__5770__auto___14745 \x3c len__5769__auto___14744)){\nargs__5775__auto__.push((arguments[i__5770__auto___14745]));\n\nvar G__14747 \x3d (i__5770__auto___14745 + (1));\ni__5770__auto___14745 \x3d G__14747;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.templating.make_reference.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.templating.make_reference.cljs$core$IFn$_invoke$arity$variadic \x3d (function (object,p__14545){\nvar vec__14546 \x3d p__14545;\nvar state_override_fn \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14546,(0),null);\nif((((state_override_fn \x3d\x3d null)) || (cljs.core.fn_QMARK_(state_override_fn)))){\n} else {\nthrow (new Error(\x22Assert failed: (or (nil? state-override-fn) (fn? state-override-fn))\x22));\n}\n\nif((object \x3d\x3d null)){\nreturn devtools.formatters.templating.make_template.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991),new cljs.core.Keyword(null,\x22nil-style\x22,\x22nil-style\x22,-1505044832),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22nil-label\x22,\x22nil-label\x22,-587789203)], 0));\n} else {\nvar sub_state \x3d (((!((state_override_fn \x3d\x3d null))))?(function (){var G__14555 \x3d devtools.formatters.state.get_current_state();\nreturn (state_override_fn.cljs$core$IFn$_invoke$arity$1 ? state_override_fn.cljs$core$IFn$_invoke$arity$1(G__14555) : state_override_fn.call(null,G__14555));\n})():devtools.formatters.state.get_current_state());\nreturn devtools.formatters.templating.make_group.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22object\x22,({\x22object\x22: object, \x22config\x22: sub_state})], 0));\n}\n}));\n\n(devtools.formatters.templating.make_reference.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.templating.make_reference.cljs$lang$applyTo \x3d (function (seq14526){\nvar G__14527 \x3d cljs.core.first(seq14526);\nvar seq14526__$1 \x3d cljs.core.next(seq14526);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14527,seq14526__$1);\n}));\n\ndevtools.formatters.templating.make_annotation \x3d (function devtools$formatters$templating$make_annotation(data,markups){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.templating.make_group,\x22annotation\x22,cljs.core.clj__GT_js(data),markups);\n});\ndevtools.formatters.templating._STAR_current_render_stack_STAR_ \x3d cljs.core.PersistentVector.EMPTY;\ndevtools.formatters.templating._STAR_current_render_path_STAR_ \x3d cljs.core.PersistentVector.EMPTY;\ndevtools.formatters.templating.print_preview \x3d (function devtools$formatters$templating$print_preview(markup){\nvar _STAR_print_level_STAR__orig_val__14558 \x3d cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__14559 \x3d (1);\n(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__temp_val__14559);\n\ntry{return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([markup], 0));\n}finally {(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__orig_val__14558);\n}});\ndevtools.formatters.templating.add_stack_separators \x3d (function devtools$formatters$templating$add_stack_separators(stack){\nreturn cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(\x22-------------\x22,stack);\n});\ndevtools.formatters.templating.replace_fns_with_markers \x3d (function devtools$formatters$templating$replace_fns_with_markers(stack){\nvar f \x3d (function (v){\nif(cljs.core.fn_QMARK_(v)){\nreturn \x22##fn##\x22;\n} else {\nreturn v;\n}\n});\nreturn clojure.walk.prewalk(f,stack);\n});\ndevtools.formatters.templating.pprint_render_calls \x3d (function devtools$formatters$templating$pprint_render_calls(stack){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.util.pprint_str,stack);\n});\ndevtools.formatters.templating.pprint_render_stack \x3d (function devtools$formatters$templating$pprint_render_stack(stack){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22\\n\x22,devtools.formatters.templating.add_stack_separators(devtools.formatters.templating.pprint_render_calls(devtools.formatters.templating.replace_fns_with_markers(cljs.core.reverse(stack)))));\n});\ndevtools.formatters.templating.pprint_render_path \x3d (function devtools$formatters$templating$pprint_render_path(path){\nreturn devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0));\n});\ndevtools.formatters.templating.assert_markup_error \x3d (function devtools$formatters$templating$assert_markup_error(msg){\nthrow (new Error([\x22Assert failed: \x22,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(msg),\x22\\n\x22,\x22Render path: \x22,devtools.formatters.templating.pprint_render_path(devtools.formatters.templating._STAR_current_render_path_STAR_),\x22\\n\x22,\x22Render stack:\\n\x22,devtools.formatters.templating.pprint_render_stack(devtools.formatters.templating._STAR_current_render_stack_STAR_)].join(\x27\x27),\x22\\n\x22,\x22false\x22].join(\x27\x27)));\n\n});\ndevtools.formatters.templating.surrogate_markup_QMARK_ \x3d (function devtools$formatters$templating$surrogate_markup_QMARK_(markup){\nreturn ((cljs.core.sequential_QMARK_(markup)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(markup),\x22surrogate\x22)));\n});\ndevtools.formatters.templating.render_special \x3d (function devtools$formatters$templating$render_special(name,args){\nvar G__14589 \x3d name;\nswitch (G__14589) {\ncase \x22surrogate\x22:\nvar obj \x3d cljs.core.first(args);\nvar converted_args \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.rest(args));\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.make_surrogate,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [obj], null),converted_args));\n\nbreak;\ncase \x22reference\x22:\nvar obj \x3d cljs.core.first(args);\nvar converted_obj \x3d ((devtools.formatters.templating.surrogate_markup_QMARK_(obj))?(devtools.formatters.templating.render_json_ml_STAR_.cljs$core$IFn$_invoke$arity$1 ? devtools.formatters.templating.render_json_ml_STAR_.cljs$core$IFn$_invoke$arity$1(obj) : devtools.formatters.templating.render_json_ml_STAR_.call(null,obj)):obj);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.make_reference,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [converted_obj], null),cljs.core.rest(args)));\n\nbreak;\ncase \x22annotation\x22:\nvar data \x3d cljs.core.first(args);\nvar converted_args \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.rest(args));\nreturn devtools.formatters.templating.make_annotation(data,converted_args);\n\nbreak;\ndefault:\nreturn devtools.formatters.templating.assert_markup_error([\x22no matching special tag name: \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\x22\x27\x22].join(\x27\x27));\n\n}\n});\ndevtools.formatters.templating.emptyish_QMARK_ \x3d (function devtools$formatters$templating$emptyish_QMARK_(v){\nif(((cljs.core.seqable_QMARK_(v)) || (((cljs.core.array_QMARK_(v)) || (typeof v \x3d\x3d\x3d \x27string\x27))))){\nreturn cljs.core.empty_QMARK_(v);\n} else {\nreturn false;\n}\n});\ndevtools.formatters.templating.render_subtree \x3d (function devtools$formatters$templating$render_subtree(tag,children){\nvar vec__14611 \x3d tag;\nvar html_tag \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14611,(0),null);\nvar style \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14611,(1),null);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.templating.make_template,html_tag,style,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.render_json_ml_STAR_,cljs.core.remove.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating.emptyish_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.pref,children))));\n});\ndevtools.formatters.templating.render_json_ml_STAR_ \x3d (function devtools$formatters$templating$render_json_ml_STAR_(markup){\nif((!(cljs.core.sequential_QMARK_(markup)))){\nreturn markup;\n} else {\nvar _STAR_current_render_path_STAR__orig_val__14617 \x3d devtools.formatters.templating._STAR_current_render_path_STAR_;\nvar _STAR_current_render_path_STAR__temp_val__14618 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_path_STAR_,cljs.core.first(markup));\n(devtools.formatters.templating._STAR_current_render_path_STAR_ \x3d _STAR_current_render_path_STAR__temp_val__14618);\n\ntry{var tag \x3d devtools.formatters.helpers.pref(cljs.core.first(markup));\nif(typeof tag \x3d\x3d\x3d \x27string\x27){\nreturn devtools.formatters.templating.render_special(tag,cljs.core.rest(markup));\n} else {\nif(cljs.core.sequential_QMARK_(tag)){\nreturn devtools.formatters.templating.render_subtree(tag,cljs.core.rest(markup));\n} else {\nreturn devtools.formatters.templating.assert_markup_error([\x22invalid json-ml markup at \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.formatters.templating.print_preview(markup)),\x22:\x22].join(\x27\x27));\n\n}\n}\n}finally {(devtools.formatters.templating._STAR_current_render_path_STAR_ \x3d _STAR_current_render_path_STAR__orig_val__14617);\n}}\n});\ndevtools.formatters.templating.render_json_ml \x3d (function devtools$formatters$templating$render_json_ml(markup){\nvar _STAR_current_render_stack_STAR__orig_val__14623 \x3d devtools.formatters.templating._STAR_current_render_stack_STAR_;\nvar _STAR_current_render_path_STAR__orig_val__14624 \x3d devtools.formatters.templating._STAR_current_render_path_STAR_;\nvar _STAR_current_render_stack_STAR__temp_val__14625 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_stack_STAR_,markup);\nvar _STAR_current_render_path_STAR__temp_val__14626 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(devtools.formatters.templating._STAR_current_render_path_STAR_,\x22\x3crender-json-ml\x3e\x22);\n(devtools.formatters.templating._STAR_current_render_stack_STAR_ \x3d _STAR_current_render_stack_STAR__temp_val__14625);\n\n(devtools.formatters.templating._STAR_current_render_path_STAR_ \x3d _STAR_current_render_path_STAR__temp_val__14626);\n\ntry{return devtools.formatters.templating.render_json_ml_STAR_(markup);\n}finally {(devtools.formatters.templating._STAR_current_render_path_STAR_ \x3d _STAR_current_render_path_STAR__orig_val__14624);\n\n(devtools.formatters.templating._STAR_current_render_stack_STAR_ \x3d _STAR_current_render_stack_STAR__orig_val__14623);\n}});\ndevtools.formatters.templating.assert_failed_markup_rendering \x3d (function devtools$formatters$templating$assert_failed_markup_rendering(initial_value,value){\nthrow (new Error([\x22Assert failed: \x22,[\x22result of markup rendering must be a template,\\n\x22,\x22resolved to \x22,devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),\x22initial value: \x22,devtools.util.pprint_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([initial_value], 0))].join(\x27\x27),\x22\\n\x22,\x22false\x22].join(\x27\x27)));\n\n});\ndevtools.formatters.templating.render_markup_STAR_ \x3d (function devtools$formatters$templating$render_markup_STAR_(initial_value,value){\nwhile(true){\nif(cljs.core.fn_QMARK_(value)){\nvar G__14808 \x3d initial_value;\nvar G__14809 \x3d (value.cljs$core$IFn$_invoke$arity$0 ? value.cljs$core$IFn$_invoke$arity$0() : value.call(null));\ninitial_value \x3d G__14808;\nvalue \x3d G__14809;\ncontinue;\n} else {\nif((value instanceof cljs.core.Keyword)){\nvar G__14810 \x3d initial_value;\nvar G__14811 \x3d devtools.formatters.helpers.pref(value);\ninitial_value \x3d G__14810;\nvalue \x3d G__14811;\ncontinue;\n} else {\nif(cljs.core.sequential_QMARK_(value)){\nvar G__14812 \x3d initial_value;\nvar G__14813 \x3d devtools.formatters.templating.render_json_ml(value);\ninitial_value \x3d G__14812;\nvalue \x3d G__14813;\ncontinue;\n} else {\nif(devtools.formatters.templating.template_QMARK_(value)){\nreturn value;\n} else {\nif(devtools.formatters.templating.surrogate_QMARK_(value)){\nreturn value;\n} else {\nif(devtools.formatters.templating.reference_QMARK_(value)){\nreturn value;\n} else {\nreturn devtools.formatters.templating.assert_failed_markup_rendering.call(null,initial_value,value);\n\n}\n}\n}\n}\n}\n}\nbreak;\n}\n});\ndevtools.formatters.templating.render_markup \x3d (function devtools$formatters$templating$render_markup(value){\nreturn devtools.formatters.templating.render_markup_STAR_(value,value);\n});\n");
SHADOW_ENV.evalLoad("devtools.formatters.printing.js", true , "goog.provide(\x27devtools.formatters.printing\x27);\ndevtools.formatters.printing.markup_QMARK_ \x3d (function devtools$formatters$printing$markup_QMARK_(value){\nreturn new cljs.core.Keyword(\x22devtools.formatters.printing\x22,\x22markup\x22,\x22devtools.formatters.printing/markup\x22,-1990109186).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(value));\n});\ndevtools.formatters.printing.mark_as_markup \x3d (function devtools$formatters$printing$mark_as_markup(value){\nreturn cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(\x22devtools.formatters.printing\x22,\x22markup\x22,\x22devtools.formatters.printing/markup\x22,-1990109186),true], null));\n});\ndevtools.formatters.printing.build_markup \x3d (function devtools$formatters$printing$build_markup(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___12758 \x3d arguments.length;\nvar i__5770__auto___12759 \x3d (0);\nwhile(true){\nif((i__5770__auto___12759 \x3c len__5769__auto___12758)){\nargs__5775__auto__.push((arguments[i__5770__auto___12759]));\n\nvar G__12760 \x3d (i__5770__auto___12759 + (1));\ni__5770__auto___12759 \x3d G__12760;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic \x3d (function (markup_db,fn_key,args){\nvar f \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(markup_db,fn_key);\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22missing markup method in markup-db: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(fn_key)].join(\x27\x27),\x22\\n\x22,\x22f\x22].join(\x27\x27)));\n}\n\nreturn devtools.formatters.printing.mark_as_markup(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args));\n}));\n\n(devtools.formatters.printing.build_markup.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(devtools.formatters.printing.build_markup.cljs$lang$applyTo \x3d (function (seq12671){\nvar G__12672 \x3d cljs.core.first(seq12671);\nvar seq12671__$1 \x3d cljs.core.next(seq12671);\nvar G__12673 \x3d cljs.core.first(seq12671__$1);\nvar seq12671__$2 \x3d cljs.core.next(seq12671__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__12672,G__12673,seq12671__$2);\n}));\n\ndevtools.formatters.printing.wrap_value_as_reference_if_needed \x3d (function devtools$formatters$printing$wrap_value_as_reference_if_needed(markup_db,value){\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d devtools.formatters.helpers.directly_printable_QMARK_(value);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.printing.markup_QMARK_(value);\n}\n})())){\nreturn value;\n} else {\nreturn devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\x22reference-surrogate\x22,\x22reference-surrogate\x22,274031791),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0));\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWriter}\n*/\ndevtools.formatters.printing.TemplateWriter \x3d (function (group,markup_db){\nthis.group \x3d group;\nthis.markup_db \x3d markup_db;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 1073741824;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(devtools.formatters.printing.TemplateWriter.prototype.merge \x3d (function (a){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.group \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,a));\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.get_group \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn self__.group;\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_write$arity$2 \x3d (function (_,o){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (self__.group \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$2(self__.group,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.wrap_value_as_reference_if_needed(self__.markup_db,o)], null)));\n}));\n\n(devtools.formatters.printing.TemplateWriter.prototype.cljs$core$IWriter$_flush$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn null;\n}));\n\n(devtools.formatters.printing.TemplateWriter.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22group\x22,\x22group\x22,-2071839637,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22markup-db\x22,\x22markup-db\x22,-1841597035,null)], null);\n}));\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$type \x3d true);\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$ctorStr \x3d \x22devtools.formatters.printing/TemplateWriter\x22);\n\n(devtools.formatters.printing.TemplateWriter.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22devtools.formatters.printing/TemplateWriter\x22);\n}));\n\n/**\n * Positional factory function for devtools.formatters.printing/TemplateWriter.\n */\ndevtools.formatters.printing.__GT_TemplateWriter \x3d (function devtools$formatters$printing$__GT_TemplateWriter(group,markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(group,markup_db));\n});\n\ndevtools.formatters.printing.make_template_writer \x3d (function devtools$formatters$printing$make_template_writer(markup_db){\nreturn (new devtools.formatters.printing.TemplateWriter(cljs.core.PersistentVector.EMPTY,markup_db));\n});\ndevtools.formatters.printing.already_reference_QMARK_ \x3d (function devtools$formatters$printing$already_reference_QMARK_(group){\nvar temp__5802__auto__ \x3d cljs.core.first(cljs.core.first(group));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar tag \x3d temp__5802__auto__;\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(tag,\x22reference\x22);\n} else {\nreturn null;\n}\n});\ndevtools.formatters.printing.wrap_group_in_reference_if_needed \x3d (function devtools$formatters$printing$wrap_group_in_reference_if_needed(group,obj,markup_db){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d cljs.core.not(devtools.formatters.printing.already_reference_QMARK_(group));\nif(and__5043__auto__){\nvar or__5045__auto__ \x3d devtools.formatters.helpers.expandable_QMARK_(obj);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.helpers.abbreviated_QMARK_(group);\n}\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar expandable_markup \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\x22expandable\x22,\x22expandable\x22,-704609097),group);\nvar surrogate_markup \x3d devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\x22raw-surrogate\x22,\x22raw-surrogate\x22,904931181),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,expandable_markup,new cljs.core.Keyword(null,\x22target\x22,\x22target\x22,253001721)], 0));\nvar reference_markup \x3d devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\x22reference\x22,\x22reference\x22,-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([surrogate_markup], 0));\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [reference_markup], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_circular_warning_if_needed \x3d (function devtools$formatters$printing$wrap_group_in_circular_warning_if_needed(group,markup_db,circular_QMARK_){\nif(cljs.core.truth_(circular_QMARK_)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$4(devtools.formatters.printing.build_markup,markup_db,new cljs.core.Keyword(null,\x22circular-reference\x22,\x22circular-reference\x22,970308727),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.wrap_group_in_meta_if_needed \x3d (function devtools$formatters$printing$wrap_group_in_meta_if_needed(group,value,markup_db){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\x22render-metas\x22,\x22render-metas\x22,1141294116),value,(function (p1__12696_SHARP_){\nreturn (!((cljs.core.meta(p1__12696_SHARP_) \x3d\x3d null)));\n})))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22meta-wrapper\x22,\x22meta-wrapper\x22,-1989845587).cljs$core$IFn$_invoke$arity$1(markup_db),cljs.core.meta(value)),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.detect_edge_case_and_patch_it \x3d (function devtools$formatters$printing$detect_edge_case_and_patch_it(group,obj,markup_db){\nif(((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\x22#object[\x22)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\x22\\\x22]\x22)))))) || (((((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(5))) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\x22#object[\x22)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(4)),\x22]\x22)))))) || (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\x22#object[\x22)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\x22]\x22)))))))))){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\x22native-reference\x22,\x22native-reference\x22,-2013708658),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0))], null);\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(group),(3))) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),\x22#\x3c\x22)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.str.cljs$core$IFn$_invoke$arity$1(obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(1)))) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2)),\x22\x3e\x22)))))))){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(0)),devtools.formatters.printing.build_markup(new cljs.core.Keyword(null,\x22native-reference\x22,\x22native-reference\x22,-2013708658),obj),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(group,(2))], null);\n} else {\nreturn group;\n\n}\n}\n});\ndevtools.formatters.printing.wrap_group_with_path_annotation \x3d (function devtools$formatters$printing$wrap_group_with_path_annotation(group,path_info){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d devtools.prefs.pref(new cljs.core.Keyword(null,\x22render-path-annotations\x22,\x22render-path-annotations\x22,-1890931512));\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (!((path_info \x3d\x3d null)));\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22annotation\x22,new cljs.core.PersistentArrayMap(null, 1, [\x22path\x22,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(path_info)], null)], null),group)], null);\n} else {\nreturn group;\n}\n});\ndevtools.formatters.printing.post_process_printed_output \x3d (function devtools$formatters$printing$post_process_printed_output(output_group,obj,markup_db,circular_QMARK_,path_info){\nreturn devtools.formatters.printing.wrap_group_with_path_annotation(devtools.formatters.printing.wrap_group_in_meta_if_needed(devtools.formatters.printing.wrap_group_in_circular_warning_if_needed(devtools.formatters.printing.wrap_group_in_reference_if_needed(devtools.formatters.printing.detect_edge_case_and_patch_it(output_group,obj,markup_db),obj,markup_db),markup_db,circular_QMARK_),obj,markup_db),path_info);\n});\ndevtools.formatters.printing.alt_printer_job \x3d (function devtools$formatters$printing$alt_printer_job(obj,writer,opts){\nvar map__12713 \x3d opts;\nvar map__12713__$1 \x3d cljs.core.__destructure_map(map__12713);\nvar markup_db \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12713__$1,new cljs.core.Keyword(null,\x22markup-db\x22,\x22markup-db\x22,812838734));\nif(cljs.core.truth_((function (){var or__5045__auto__ \x3d (function (){try{if((!((obj \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,obj);\n}\n}catch (e12714){var _e__11529__auto__ \x3d e12714;\nreturn false;\n}})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\ntry{if((!((obj \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d obj.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!obj.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,obj);\n}\n}catch (e12719){var _e__11529__auto__ \x3d e12719;\nreturn false;\n}}\n})())){\nreturn cljs.core._write(writer,devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\x22reference\x22,\x22reference\x22,-1711695023),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\n} else {\nvar temp__5802__auto__ \x3d devtools.formatters.printing.build_markup.cljs$core$IFn$_invoke$arity$variadic(markup_db,new cljs.core.Keyword(null,\x22atomic\x22,\x22atomic\x22,-120459460),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar atomic_markup \x3d temp__5802__auto__;\nreturn cljs.core._write(writer,atomic_markup);\n} else {\nvar default_impl \x3d new cljs.core.Keyword(null,\x22fallback-impl\x22,\x22fallback-impl\x22,-1501286995).cljs$core$IFn$_invoke$arity$1(opts);\nvar inner_opts \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_print_level_STAR_,(1)))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\x22print-length\x22,\x22print-length\x22,1931866356),(0)):opts);\nreturn (default_impl.cljs$core$IFn$_invoke$arity$3 ? default_impl.cljs$core$IFn$_invoke$arity$3(obj,writer,inner_opts) : default_impl.call(null,obj,writer,inner_opts));\n}\n}\n});\ndevtools.formatters.printing.alt_printer_impl \x3d (function devtools$formatters$printing$alt_printer_impl(obj,writer,opts){\nvar _STAR_current_state_STAR__orig_val__12726 \x3d devtools.formatters.state._STAR_current_state_STAR_;\nvar _STAR_current_state_STAR__temp_val__12727 \x3d devtools.formatters.state.get_current_state();\n(devtools.formatters.state._STAR_current_state_STAR_ \x3d _STAR_current_state_STAR__temp_val__12727);\n\ntry{if(cljs.core.truth_(devtools.prefs.pref(new cljs.core.Keyword(null,\x22render-path-annotations\x22,\x22render-path-annotations\x22,-1890931512)))){\ndevtools.formatters.state.add_object_to_current_path_info_BANG_(obj);\n} else {\n}\n\nvar map__12733 \x3d opts;\nvar map__12733__$1 \x3d cljs.core.__destructure_map(map__12733);\nvar markup_db \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12733__$1,new cljs.core.Keyword(null,\x22markup-db\x22,\x22markup-db\x22,812838734));\nvar circular_QMARK_ \x3d devtools.formatters.state.is_circular_QMARK_(obj);\nvar inner_writer \x3d devtools.formatters.printing.make_template_writer(new cljs.core.Keyword(null,\x22markup-db\x22,\x22markup-db\x22,812838734).cljs$core$IFn$_invoke$arity$1(opts));\nvar path_info \x3d devtools.formatters.state.get_current_path_info();\ndevtools.formatters.state.push_object_to_current_history_BANG_(obj);\n\ndevtools.formatters.printing.alt_printer_job(obj,inner_writer,opts);\n\nreturn writer.merge(devtools.formatters.printing.post_process_printed_output(inner_writer.get_group(),obj,markup_db,circular_QMARK_,path_info));\n}finally {(devtools.formatters.state._STAR_current_state_STAR_ \x3d _STAR_current_state_STAR__orig_val__12726);\n}});\ndevtools.formatters.printing.managed_print \x3d (function devtools$formatters$printing$managed_print(tag,markup_db,printer){\nvar writer \x3d devtools.formatters.printing.make_template_writer(markup_db);\nvar opts \x3d new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22alt-impl\x22,\x22alt-impl\x22,670969595),devtools.formatters.printing.alt_printer_impl,new cljs.core.Keyword(null,\x22markup-db\x22,\x22markup-db\x22,812838734),markup_db,new cljs.core.Keyword(null,\x22print-length\x22,\x22print-length\x22,1931866356),devtools.prefs.pref(new cljs.core.Keyword(null,\x22max-header-elements\x22,\x22max-header-elements\x22,713629864)),new cljs.core.Keyword(null,\x22more-marker\x22,\x22more-marker\x22,-14717935),devtools.prefs.pref(new cljs.core.Keyword(null,\x22more-marker\x22,\x22more-marker\x22,-14717935))], null);\nvar job_fn \x3d (function (){\nreturn (printer.cljs$core$IFn$_invoke$arity$2 ? printer.cljs$core$IFn$_invoke$arity$2(writer,opts) : printer.call(null,writer,opts));\n});\nvar temp__5802__auto___12776 \x3d devtools.formatters.state.get_managed_print_level();\nif(cljs.core.truth_(temp__5802__auto___12776)){\nvar managed_print_level_12777 \x3d temp__5802__auto___12776;\nvar _STAR_print_level_STAR__orig_val__12754_12778 \x3d cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__12755_12779 \x3d managed_print_level_12777;\n(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__temp_val__12755_12779);\n\ntry{devtools.formatters.state.update_current_state_BANG_((function (p1__12746_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__12746_SHARP_,null);\n}));\n\njob_fn();\n}finally {(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__orig_val__12754_12778);\n}} else {\njob_fn();\n}\n\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.prefs.pref(tag)], null),writer.get_group());\n});\ndevtools.formatters.printing.managed_print_via_writer \x3d (function devtools$formatters$printing$managed_print_via_writer(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core.pr_seq_writer(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [value], null),writer,opts);\n}));\n});\ndevtools.formatters.printing.managed_print_via_protocol \x3d (function devtools$formatters$printing$managed_print_via_protocol(value,tag,markup_db){\nreturn devtools.formatters.printing.managed_print(tag,markup_db,(function (writer,opts){\nreturn cljs.core._pr_writer(value,writer,opts);\n}));\n});\n");
SHADOW_ENV.evalLoad("devtools.formatters.markup.js", true , "goog.provide(\x27devtools.formatters.markup\x27);\ndevtools.formatters.markup.print_with \x3d (function devtools$formatters$markup$print_with(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15401 \x3d arguments.length;\nvar i__5770__auto___15402 \x3d (0);\nwhile(true){\nif((i__5770__auto___15402 \x3c len__5769__auto___15401)){\nargs__5775__auto__.push((arguments[i__5770__auto___15402]));\n\nvar G__15403 \x3d (i__5770__auto___15402 + (1));\ni__5770__auto___15402 \x3d G__15403;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((3) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic \x3d (function (method,value,tag,p__14895){\nvar vec__14896 \x3d p__14895;\nvar max_level \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14896,(0),null);\nvar job_fn \x3d (function (){\nvar G__14902 \x3d value;\nvar G__14903 \x3d tag;\nvar G__14904 \x3d (devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0 ? devtools.formatters.markup.get_markup_db.cljs$core$IFn$_invoke$arity$0() : devtools.formatters.markup.get_markup_db.call(null));\nreturn (method.cljs$core$IFn$_invoke$arity$3 ? method.cljs$core$IFn$_invoke$arity$3(G__14902,G__14903,G__14904) : method.call(null,G__14902,G__14903,G__14904));\n});\nif((!((max_level \x3d\x3d null)))){\nvar _STAR_print_level_STAR__orig_val__14909 \x3d cljs.core._STAR_print_level_STAR_;\nvar _STAR_print_level_STAR__temp_val__14910 \x3d (max_level + (1));\n(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__temp_val__14910);\n\ntry{return job_fn();\n}finally {(cljs.core._STAR_print_level_STAR_ \x3d _STAR_print_level_STAR__orig_val__14909);\n}} else {\nreturn job_fn();\n}\n}));\n\n(devtools.formatters.markup.print_with.cljs$lang$maxFixedArity \x3d (3));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_with.cljs$lang$applyTo \x3d (function (seq14851){\nvar G__14853 \x3d cljs.core.first(seq14851);\nvar seq14851__$1 \x3d cljs.core.next(seq14851);\nvar G__14854 \x3d cljs.core.first(seq14851__$1);\nvar seq14851__$2 \x3d cljs.core.next(seq14851__$1);\nvar G__14855 \x3d cljs.core.first(seq14851__$2);\nvar seq14851__$3 \x3d cljs.core.next(seq14851__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14853,G__14854,G__14855,seq14851__$3);\n}));\n\ndevtools.formatters.markup.print_via_writer \x3d (function devtools$formatters$markup$print_via_writer(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15404 \x3d arguments.length;\nvar i__5770__auto___15405 \x3d (0);\nwhile(true){\nif((i__5770__auto___15405 \x3c len__5769__auto___15404)){\nargs__5775__auto__.push((arguments[i__5770__auto___15405]));\n\nvar G__15406 \x3d (i__5770__auto___15405 + (1));\ni__5770__auto___15405 \x3d G__15406;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic \x3d (function (value,tag,p__14931){\nvar vec__14932 \x3d p__14931;\nvar max_level \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14932,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_writer,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_writer.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_writer.cljs$lang$applyTo \x3d (function (seq14927){\nvar G__14928 \x3d cljs.core.first(seq14927);\nvar seq14927__$1 \x3d cljs.core.next(seq14927);\nvar G__14929 \x3d cljs.core.first(seq14927__$1);\nvar seq14927__$2 \x3d cljs.core.next(seq14927__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14928,G__14929,seq14927__$2);\n}));\n\ndevtools.formatters.markup.print_via_protocol \x3d (function devtools$formatters$markup$print_via_protocol(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15411 \x3d arguments.length;\nvar i__5770__auto___15413 \x3d (0);\nwhile(true){\nif((i__5770__auto___15413 \x3c len__5769__auto___15411)){\nargs__5775__auto__.push((arguments[i__5770__auto___15413]));\n\nvar G__15414 \x3d (i__5770__auto___15413 + (1));\ni__5770__auto___15413 \x3d G__15414;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup.print_via_protocol.cljs$core$IFn$_invoke$arity$variadic \x3d (function (value,tag,p__14947){\nvar vec__14948 \x3d p__14947;\nvar max_level \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14948,(0),null);\nreturn devtools.formatters.markup.print_with.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.printing.managed_print_via_protocol,value,tag,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([max_level], 0));\n}));\n\n(devtools.formatters.markup.print_via_protocol.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(devtools.formatters.markup.print_via_protocol.cljs$lang$applyTo \x3d (function (seq14940){\nvar G__14941 \x3d cljs.core.first(seq14940);\nvar seq14940__$1 \x3d cljs.core.next(seq14940);\nvar G__14942 \x3d cljs.core.first(seq14940__$1);\nvar seq14940__$2 \x3d cljs.core.next(seq14940__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__14941,G__14942,seq14940__$2);\n}));\n\ndevtools.formatters.markup._LT_expandable_GT_ \x3d (function devtools$formatters$markup$_LT_expandable_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15417 \x3d arguments.length;\nvar i__5770__auto___15418 \x3d (0);\nwhile(true){\nif((i__5770__auto___15418 \x3c len__5769__auto___15417)){\nargs__5775__auto__.push((arguments[i__5770__auto___15418]));\n\nvar G__15419 \x3d (i__5770__auto___15418 + (1));\ni__5770__auto___15418 \x3d G__15419;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (children){\nvar inner_markup \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22expandable-inner-tag\x22,\x22expandable-inner-tag\x22,-799648560)], null),children);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22expandable-tag\x22,\x22expandable-tag\x22,151027578),new cljs.core.Keyword(null,\x22expandable-symbol\x22,\x22expandable-symbol\x22,1644611290),inner_markup], null);\n}));\n\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_expandable_GT_.cljs$lang$applyTo \x3d (function (seq14953){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14953));\n}));\n\ndevtools.formatters.markup._LT_raw_surrogate_GT_ \x3d (function devtools$formatters$markup$_LT_raw_surrogate_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15423 \x3d arguments.length;\nvar i__5770__auto___15424 \x3d (0);\nwhile(true){\nif((i__5770__auto___15424 \x3c len__5769__auto___15423)){\nargs__5775__auto__.push((arguments[i__5770__auto___15424]));\n\nvar G__15425 \x3d (i__5770__auto___15424 + (1));\ni__5770__auto___15424 \x3d G__15425;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22surrogate\x22], null),args);\n}));\n\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$lang$applyTo \x3d (function (seq14969){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14969));\n}));\n\ndevtools.formatters.markup._LT_surrogate_GT_ \x3d (function devtools$formatters$markup$_LT_surrogate_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15427 \x3d arguments.length;\nvar i__5770__auto___15428 \x3d (0);\nwhile(true){\nif((i__5770__auto___15428 \x3c len__5769__auto___15427)){\nargs__5775__auto__.push((arguments[i__5770__auto___15428]));\n\nvar G__15429 \x3d (i__5770__auto___15428 + (1));\ni__5770__auto___15428 \x3d G__15429;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (p__14976){\nvar vec__14977 \x3d p__14976;\nvar object \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14977,(0),null);\nvar header \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14977,(1),null);\nvar body \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14977,(2),null);\nvar start_index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14977,(3),null);\nvar header__$1 \x3d (((!((body \x3d\x3d null))))?devtools.formatters.markup._LT_expandable_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header], 0)):header);\nreturn devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,header__$1,body,start_index], 0));\n}));\n\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_surrogate_GT_.cljs$lang$applyTo \x3d (function (seq14973){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14973));\n}));\n\ndevtools.formatters.markup._LT_reference_GT_ \x3d (function devtools$formatters$markup$_LT_reference_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15434 \x3d arguments.length;\nvar i__5770__auto___15435 \x3d (0);\nwhile(true){\nif((i__5770__auto___15435 \x3c len__5769__auto___15434)){\nargs__5775__auto__.push((arguments[i__5770__auto___15435]));\n\nvar G__15436 \x3d (i__5770__auto___15435 + (1));\ni__5770__auto___15435 \x3d G__15436;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x22reference\x22], null),args);\n}));\n\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_GT_.cljs$lang$applyTo \x3d (function (seq14983){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14983));\n}));\n\ndevtools.formatters.markup._LT_reference_surrogate_GT_ \x3d (function devtools$formatters$markup$_LT_reference_surrogate_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15439 \x3d arguments.length;\nvar i__5770__auto___15440 \x3d (0);\nwhile(true){\nif((i__5770__auto___15440 \x3c len__5769__auto___15439)){\nargs__5775__auto__.push((arguments[i__5770__auto___15440]));\n\nvar G__15441 \x3d (i__5770__auto___15440 + (1));\ni__5770__auto___15440 \x3d G__15441;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_surrogate_GT_,args)], 0));\n}));\n\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$lang$applyTo \x3d (function (seq14995){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq14995));\n}));\n\ndevtools.formatters.markup._LT_circular_reference_GT_ \x3d (function devtools$formatters$markup$_LT_circular_reference_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15446 \x3d arguments.length;\nvar i__5770__auto___15447 \x3d (0);\nwhile(true){\nif((i__5770__auto___15447 \x3c len__5769__auto___15446)){\nargs__5775__auto__.push((arguments[i__5770__auto___15447]));\n\nvar G__15449 \x3d (i__5770__auto___15447 + (1));\ni__5770__auto___15447 \x3d G__15449;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (children){\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22circular-reference-tag\x22,\x22circular-reference-tag\x22,858973471),new cljs.core.Keyword(null,\x22circular-ref-icon\x22,\x22circular-ref-icon\x22,-2087682919)], null),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22circular-reference-body-tag\x22,\x22circular-reference-body-tag\x22,-1301830023)], null),children)], 0));\n}));\n\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_circular_reference_GT_.cljs$lang$applyTo \x3d (function (seq15001){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15001));\n}));\n\ndevtools.formatters.markup._LT_native_reference_GT_ \x3d (function devtools$formatters$markup$_LT_native_reference_GT_(object){\nvar reference \x3d devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,(function (p1__15002_SHARP_){\nreturn devtools.formatters.state.set_prevent_recursion(p1__15002_SHARP_,true);\n})], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22native-reference-wrapper-tag\x22,\x22native-reference-wrapper-tag\x22,2047690940),new cljs.core.Keyword(null,\x22native-reference-background\x22,\x22native-reference-background\x22,-286129550),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22native-reference-tag\x22,\x22native-reference-tag\x22,-1516119079),reference], null)], null);\n});\ndevtools.formatters.markup._LT_header_expander_GT_ \x3d (function devtools$formatters$markup$_LT_header_expander_GT_(object){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_raw_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([object,new cljs.core.Keyword(null,\x22header-expander-symbol\x22,\x22header-expander-symbol\x22,907531743),new cljs.core.Keyword(null,\x22target\x22,\x22target\x22,253001721)], 0)),devtools.formatters.state.reset_depth_limits], 0));\n});\ndevtools.formatters.markup._LT_cljs_land_GT_ \x3d (function devtools$formatters$markup$_LT_cljs_land_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15452 \x3d arguments.length;\nvar i__5770__auto___15453 \x3d (0);\nwhile(true){\nif((i__5770__auto___15453 \x3c len__5769__auto___15452)){\nargs__5775__auto__.push((arguments[i__5770__auto___15453]));\n\nvar G__15454 \x3d (i__5770__auto___15453 + (1));\ni__5770__auto___15453 \x3d G__15454;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22cljs-land-tag\x22,\x22cljs-land-tag\x22,-7524377)], null),children);\n}));\n\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_cljs_land_GT_.cljs$lang$applyTo \x3d (function (seq15003){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15003));\n}));\n\ndevtools.formatters.markup._LT_nil_GT_ \x3d (function devtools$formatters$markup$_LT_nil_GT_(){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22nil-tag\x22,\x22nil-tag\x22,-1587449115),new cljs.core.Keyword(null,\x22nil-label\x22,\x22nil-label\x22,-587789203)], null);\n});\ndevtools.formatters.markup._LT_bool_GT_ \x3d (function devtools$formatters$markup$_LT_bool_GT_(bool){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22bool-tag\x22,\x22bool-tag\x22,-10409808),cljs.core.str.cljs$core$IFn$_invoke$arity$1(bool)], null);\n});\ndevtools.formatters.markup._LT_keyword_GT_ \x3d (function devtools$formatters$markup$_LT_keyword_GT_(keyword){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22keyword-tag\x22,\x22keyword-tag\x22,1587228387),cljs.core.str.cljs$core$IFn$_invoke$arity$1(keyword)], null);\n});\ndevtools.formatters.markup._LT_symbol_GT_ \x3d (function devtools$formatters$markup$_LT_symbol_GT_(symbol){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22symbol-tag\x22,\x22symbol-tag\x22,-100807517),cljs.core.str.cljs$core$IFn$_invoke$arity$1(symbol)], null);\n});\ndevtools.formatters.markup._LT_number_GT_ \x3d (function devtools$formatters$markup$_LT_number_GT_(number){\nif(cljs.core.truth_(isFinite(number))){\nif(cljs.core.integer_QMARK_(number)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22integer-tag\x22,\x22integer-tag\x22,698000472),number], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22float-tag\x22,\x22float-tag\x22,-390834106),number], null);\n}\n} else {\nif(cljs.core.truth_(isNaN(number))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22float-nan-tag\x22,\x22float-nan-tag\x22,557403379),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22float-infinity-tag\x22,\x22float-infinity-tag\x22,-289254297),cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([number], 0))], null);\n}\n}\n});\ndevtools.formatters.markup._LT_string_GT_ \x3d (function devtools$formatters$markup$_LT_string_GT_(string){\nvar dq \x3d devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22dq\x22,\x22dq\x22,-1690275860));\nvar re_nl \x3d (new RegExp(\x22\\n\x22,\x22g\x22));\nvar nl_marker \x3d devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22new-line-string-replacer\x22,\x22new-line-string-replacer\x22,-753206206));\nvar inline_string \x3d string.replace(re_nl,nl_marker);\nvar max_inline_string_size \x3d (devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22string-prefix-limit\x22,\x22string-prefix-limit\x22,1256106332)) + devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22string-postfix-limit\x22,\x22string-postfix-limit\x22,-1282205963)));\nvar quote_string \x3d (function (s){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq),cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),cljs.core.str.cljs$core$IFn$_invoke$arity$1(dq)].join(\x27\x27);\n});\nvar should_abbreviate_QMARK_ \x3d (cljs.core.count(inline_string) \x3e max_inline_string_size);\nif(should_abbreviate_QMARK_){\nvar abbreviated_string \x3d devtools.formatters.helpers.abbreviate_long_string(inline_string,devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22string-abbreviation-marker\x22,\x22string-abbreviation-marker\x22,-347785112)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22string-prefix-limit\x22,\x22string-prefix-limit\x22,1256106332)),devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22string-postfix-limit\x22,\x22string-postfix-limit\x22,-1282205963)));\nvar abbreviated_string_markup \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22string-tag\x22,\x22string-tag\x22,1639024494),quote_string(abbreviated_string)], null);\nvar string_with_nl_markers \x3d string.replace(re_nl,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(nl_marker),\x22\\n\x22].join(\x27\x27));\nvar details_markup \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22expanded-string-tag\x22,\x22expanded-string-tag\x22,-2125162127),string_with_nl_markers], null);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([string,abbreviated_string_markup,details_markup], 0));\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22string-tag\x22,\x22string-tag\x22,1639024494),quote_string(inline_string)], null);\n}\n});\ndevtools.formatters.markup._LT_preview_GT_ \x3d (function devtools$formatters$markup$_LT_preview_GT_(value){\nreturn devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\x22header-tag\x22,\x22header-tag\x22,1594852433),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22max-print-level\x22,\x22max-print-level\x22,-462237413))], 0));\n});\ndevtools.formatters.markup._LT_body_GT_ \x3d (function devtools$formatters$markup$_LT_body_GT_(markup){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22body-tag\x22,\x22body-tag\x22,433527431),markup], null);\n});\ndevtools.formatters.markup._LT_aligned_body_GT_ \x3d (function devtools$formatters$markup$_LT_aligned_body_GT_(markups_lists){\nvar prepend_li_tag \x3d (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22aligned-li-tag\x22,\x22aligned-li-tag\x22,1727029722)], null),line);\n} else {\nreturn null;\n}\n});\nvar aligned_lines \x3d cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn devtools.formatters.markup._LT_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22standard-ol-no-margin-tag\x22,\x22standard-ol-no-margin-tag\x22,583023747)], null),aligned_lines));\n});\ndevtools.formatters.markup._LT_standard_body_GT_ \x3d (function devtools$formatters$markup$_LT_standard_body_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15468 \x3d arguments.length;\nvar i__5770__auto___15469 \x3d (0);\nwhile(true){\nif((i__5770__auto___15469 \x3c len__5769__auto___15468)){\nargs__5775__auto__.push((arguments[i__5770__auto___15469]));\n\nvar G__15470 \x3d (i__5770__auto___15469 + (1));\ni__5770__auto___15469 \x3d G__15470;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (markups_lists,p__15012){\nvar vec__15013 \x3d p__15012;\nvar no_margin_QMARK_ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15013,(0),null);\nvar ol_tag \x3d (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\x22standard-ol-no-margin-tag\x22,\x22standard-ol-no-margin-tag\x22,583023747):new cljs.core.Keyword(null,\x22standard-ol-tag\x22,\x22standard-ol-tag\x22,1120081433));\nvar li_tag \x3d (cljs.core.truth_(no_margin_QMARK_)?new cljs.core.Keyword(null,\x22standard-li-no-margin-tag\x22,\x22standard-li-no-margin-tag\x22,-844555468):new cljs.core.Keyword(null,\x22standard-li-tag\x22,\x22standard-li-tag\x22,-932749876));\nvar prepend_li_tag \x3d (function (line){\nif(cljs.core.truth_(line)){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [li_tag], null),line);\n} else {\nreturn null;\n}\n});\nvar lines_markups \x3d cljs.core.keep.cljs$core$IFn$_invoke$arity$2(prepend_li_tag,markups_lists);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [ol_tag], null),lines_markups);\n}));\n\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standard_body_GT_.cljs$lang$applyTo \x3d (function (seq15006){\nvar G__15007 \x3d cljs.core.first(seq15006);\nvar seq15006__$1 \x3d cljs.core.next(seq15006);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15007,seq15006__$1);\n}));\n\ndevtools.formatters.markup._LT_standard_body_reference_GT_ \x3d (function devtools$formatters$markup$_LT_standard_body_reference_GT_(o){\nreturn devtools.formatters.markup._LT_standard_body_GT_(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([o], 0))], null)], null));\n});\ndevtools.formatters.markup._LT_index_GT_ \x3d (function devtools$formatters$markup$_LT_index_GT_(value){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22index-tag\x22,\x22index-tag\x22,693492486),value,new cljs.core.Keyword(null,\x22line-index-separator\x22,\x22line-index-separator\x22,-1735989246)], null);\n});\ndevtools.formatters.markup.body_line \x3d (function devtools$formatters$markup$body_line(index,value){\nvar index_markup \x3d devtools.formatters.markup._LT_index_GT_(index);\nvar value_markup \x3d devtools.formatters.markup.print_via_writer.cljs$core$IFn$_invoke$arity$variadic(value,new cljs.core.Keyword(null,\x22item-tag\x22,\x22item-tag\x22,-988763304),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22body-line-max-print-level\x22,\x22body-line-max-print-level\x22,571158623))], 0));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index_markup,value_markup], null);\n});\ndevtools.formatters.markup.prepare_body_lines \x3d (function devtools$formatters$markup$prepare_body_lines(data,starting_index){\nvar work \x3d data;\nvar index \x3d starting_index;\nvar lines \x3d cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(work)){\nreturn lines;\n} else {\nvar G__15478 \x3d cljs.core.rest(work);\nvar G__15479 \x3d (index + (1));\nvar G__15480 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,devtools.formatters.markup.body_line(index,cljs.core.first(work)));\nwork \x3d G__15478;\nindex \x3d G__15479;\nlines \x3d G__15480;\ncontinue;\n}\nbreak;\n}\n});\ndevtools.formatters.markup.body_lines \x3d (function devtools$formatters$markup$body_lines(value,starting_index){\nvar seq \x3d cljs.core.seq(value);\nvar max_number_body_items \x3d devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22max-number-body-items\x22,\x22max-number-body-items\x22,299914624));\nvar chunk \x3d cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar rest \x3d cljs.core.drop.cljs$core$IFn$_invoke$arity$2(max_number_body_items,seq);\nvar lines \x3d devtools.formatters.markup.prepare_body_lines(chunk,starting_index);\nvar continue_QMARK_ \x3d (!(cljs.core.empty_QMARK_(cljs.core.take.cljs$core$IFn$_invoke$arity$2((1),rest))));\nif((!(continue_QMARK_))){\nreturn lines;\n} else {\nvar more_label_markup \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22body-items-more-tag\x22,\x22body-items-more-tag\x22,867141569),new cljs.core.Keyword(null,\x22body-items-more-label\x22,\x22body-items-more-label\x22,-1561152123)], null);\nvar start_index \x3d (starting_index + max_number_body_items);\nvar more_markup \x3d devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([rest,more_label_markup,new cljs.core.Keyword(null,\x22target\x22,\x22target\x22,253001721),start_index], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(lines,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [more_markup], null));\n}\n});\ndevtools.formatters.markup._LT_details_GT_ \x3d (function devtools$formatters$markup$_LT_details_GT_(value,starting_index){\ndevtools.formatters.state.push_object_to_current_history_BANG_(cljs.core.with_meta(value,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),starting_index], null)));\n\nvar has_continuation_QMARK_ \x3d (starting_index \x3e (0));\nvar body_markup \x3d devtools.formatters.markup._LT_standard_body_GT_.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup.body_lines(value,starting_index),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([has_continuation_QMARK_], 0));\nif(has_continuation_QMARK_){\nreturn body_markup;\n} else {\nreturn devtools.formatters.markup._LT_body_GT_(body_markup);\n}\n});\ndevtools.formatters.markup._LT_list_details_GT_ \x3d (function devtools$formatters$markup$_LT_list_details_GT_(items,_opts){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,items));\n});\ndevtools.formatters.markup._LT_list_GT_ \x3d (function devtools$formatters$markup$_LT_list_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15487 \x3d arguments.length;\nvar i__5770__auto___15488 \x3d (0);\nwhile(true){\nif((i__5770__auto___15488 \x3c len__5769__auto___15487)){\nargs__5775__auto__.push((arguments[i__5770__auto___15488]));\n\nvar G__15489 \x3d (i__5770__auto___15488 + (1));\ni__5770__auto___15488 \x3d G__15489;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (items,max_count,p__15140){\nvar vec__15142 \x3d p__15140;\nvar opts \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15142,(0),null);\nvar items_markups \x3d cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_count,items);\nvar more_count \x3d (cljs.core.count(items) - max_count);\nvar more_QMARK_ \x3d (more_count \x3e (0));\nvar separator \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22list-separator\x22,\x22list-separator\x22,900562185);\n}\n})();\nvar more_symbol \x3d ((more_QMARK_)?(function (){var temp__5802__auto__ \x3d new cljs.core.Keyword(null,\x22more-symbol\x22,\x22more-symbol\x22,-2139760242).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar more_symbol \x3d temp__5802__auto__;\nif(cljs.core.fn_QMARK_(more_symbol)){\nreturn (more_symbol.cljs$core$IFn$_invoke$arity$1 ? more_symbol.cljs$core$IFn$_invoke$arity$1(more_count) : more_symbol.call(null,more_count));\n} else {\nreturn more_symbol;\n}\n} else {\nreturn devtools.formatters.helpers.get_more_marker(more_count);\n}\n})():null);\nvar preview_markup \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22list-tag\x22,\x22list-tag\x22,1555796884);\n}\n})(),(function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22open-symbol\x22,\x22open-symbol\x22,674247825).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22list-open-symbol\x22,\x22list-open-symbol\x22,-1162287443);\n}\n})()], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(separator,items_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [separator,more_symbol], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22close-symbol\x22,\x22close-symbol\x22,1051951165).cljs$core$IFn$_invoke$arity$1(opts);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22list-close-symbol\x22,\x22list-close-symbol\x22,-1120016586);\n}\n})()], null)], 0));\nif(more_QMARK_){\nvar details_markup \x3d new cljs.core.Keyword(null,\x22details\x22,\x22details\x22,1956795411).cljs$core$IFn$_invoke$arity$1(opts);\nvar default_details_fn \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$3(devtools.formatters.markup._LT_list_details_GT_,items,opts);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,(function (){var or__5045__auto__ \x3d details_markup;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn default_details_fn;\n}\n})()], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_list_GT_.cljs$lang$applyTo \x3d (function (seq15124){\nvar G__15125 \x3d cljs.core.first(seq15124);\nvar seq15124__$1 \x3d cljs.core.next(seq15124);\nvar G__15126 \x3d cljs.core.first(seq15124__$1);\nvar seq15124__$2 \x3d cljs.core.next(seq15124__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15125,G__15126,seq15124__$2);\n}));\n\ndevtools.formatters.markup._LT_meta_GT_ \x3d (function devtools$formatters$markup$_LT_meta_GT_(metadata){\nvar body_fn \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meta-body-tag\x22,\x22meta-body-tag\x22,1689183121),devtools.formatters.markup._LT_preview_GT_(metadata)], null);\n});\nvar header \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meta-header-tag\x22,\x22meta-header-tag\x22,-1207812581),\x22meta\x22], null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meta-reference-tag\x22,\x22meta-reference-tag\x22,914791936),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([metadata,header,body_fn], 0))], null);\n});\ndevtools.formatters.markup._LT_meta_wrapper_GT_ \x3d (function devtools$formatters$markup$_LT_meta_wrapper_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15492 \x3d arguments.length;\nvar i__5770__auto___15493 \x3d (0);\nwhile(true){\nif((i__5770__auto___15493 \x3c len__5769__auto___15492)){\nargs__5775__auto__.push((arguments[i__5770__auto___15493]));\n\nvar G__15494 \x3d (i__5770__auto___15493 + (1));\ni__5770__auto___15493 \x3d G__15494;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (metadata,children){\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meta-wrapper-tag\x22,\x22meta-wrapper-tag\x22,1927429038)], null),children,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [devtools.formatters.markup._LT_meta_GT_(metadata)], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_meta_wrapper_GT_.cljs$lang$applyTo \x3d (function (seq15185){\nvar G__15186 \x3d cljs.core.first(seq15185);\nvar seq15185__$1 \x3d cljs.core.next(seq15185);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15186,seq15185__$1);\n}));\n\ndevtools.formatters.markup._LT_function_details_GT_ \x3d (function devtools$formatters$markup$_LT_function_details_GT_(fn_obj,ns,_name,arities,prefix){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\x22Assert failed: (fn? fn-obj)\x22));\n}\n\nvar arities__$1 \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.helpers.wrap_arity,arities);\nvar make_arity_markup_list \x3d (function (arity){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fn-multi-arity-args-indent-tag\x22,\x22fn-multi-arity-args-indent-tag\x22,-1931373734),prefix], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fn-args-tag\x22,\x22fn-args-tag\x22,549126831),arity], null)], null);\n});\nvar arities_markupts_lists \x3d (((cljs.core.count(arities__$1) \x3e (1)))?cljs.core.map.cljs$core$IFn$_invoke$arity$2(make_arity_markup_list,arities__$1):null);\nvar ns_markups_list \x3d (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22ns-icon\x22,\x22ns-icon\x22,725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fn-ns-name-tag\x22,\x22fn-ns-name-tag\x22,-900073712),ns], null)], null):null);\nvar native_markups_list \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22native-icon\x22,\x22native-icon\x22,-126040824),devtools.formatters.markup._LT_native_reference_GT_(fn_obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(arities_markupts_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_arities_GT_ \x3d (function devtools$formatters$markup$_LT_arities_GT_(arities){\nvar multi_arity_QMARK_ \x3d (cljs.core.count(arities) \x3e (1));\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fn-args-tag\x22,\x22fn-args-tag\x22,549126831),devtools.formatters.helpers.wrap_arity(((multi_arity_QMARK_)?devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22multi-arity-symbol\x22,\x22multi-arity-symbol\x22,-420139653)):cljs.core.first(arities)))], null);\n});\ndevtools.formatters.markup._LT_function_GT_ \x3d (function devtools$formatters$markup$_LT_function_GT_(fn_obj){\nif(cljs.core.fn_QMARK_(fn_obj)){\n} else {\nthrow (new Error(\x22Assert failed: (fn? fn-obj)\x22));\n}\n\nvar vec__15258 \x3d devtools.munging.parse_fn_info(fn_obj);\nvar ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15258,(0),null);\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15258,(1),null);\nvar lambda_QMARK_ \x3d cljs.core.empty_QMARK_(name);\nvar spacer_symbol \x3d devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22spacer\x22,\x22spacer\x22,2067425139));\nvar rest_symbol \x3d devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22rest-symbol\x22,\x22rest-symbol\x22,1021371174));\nvar multi_arity_symbol \x3d devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22multi-arity-symbol\x22,\x22multi-arity-symbol\x22,-420139653));\nvar arities \x3d devtools.munging.extract_arities(fn_obj,true,spacer_symbol,multi_arity_symbol,rest_symbol);\nvar arities_markup \x3d devtools.formatters.markup._LT_arities_GT_(arities);\nvar name_markup \x3d (((!(lambda_QMARK_)))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fn-name-tag\x22,\x22fn-name-tag\x22,555823755),name], null):null);\nvar icon_markup \x3d ((lambda_QMARK_)?new cljs.core.Keyword(null,\x22lambda-icon\x22,\x22lambda-icon\x22,980753546):new cljs.core.Keyword(null,\x22fn-icon\x22,\x22fn-icon\x22,-1412665288));\nvar prefix_markup \x3d new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fn-prefix-tag\x22,\x22fn-prefix-tag\x22,1947411856),icon_markup,name_markup], null);\nvar preview_markup \x3d new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fn-header-tag\x22,\x22fn-header-tag\x22,-1262068349),prefix_markup,arities_markup], null);\nvar details_fn \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_function_details_GT_,fn_obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arities,prefix_markup], 0));\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([fn_obj,preview_markup,details_fn], 0));\n});\ndevtools.formatters.markup._LT_type_basis_item_GT_ \x3d (function devtools$formatters$markup$_LT_type_basis_item_GT_(basis_item){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-basis-item-tag\x22,\x22type-basis-item-tag\x22,50612816),cljs.core.name(basis_item)], null);\n});\ndevtools.formatters.markup._LT_type_basis_GT_ \x3d (function devtools$formatters$markup$_LT_type_basis_GT_(basis){\nvar item_markups \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_type_basis_item_GT_,basis);\nvar children_markups \x3d cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22type-basis-item-separator\x22,\x22type-basis-item-separator\x22,-2029193896),item_markups);\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-basis-tag\x22,\x22type-basis-tag\x22,-2122159204)], null),children_markups);\n});\ndevtools.formatters.markup._LT_type_details_GT_ \x3d (function devtools$formatters$markup$_LT_type_details_GT_(constructor_fn,ns,_name,basis){\nvar ns_markup \x3d (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22ns-icon\x22,\x22ns-icon\x22,725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fn-ns-name-tag\x22,\x22fn-ns-name-tag\x22,-900073712),ns], null)], null):null);\nvar basis_markup \x3d ((cljs.core.empty_QMARK_(basis))?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22empty-basis-symbol\x22,\x22empty-basis-symbol\x22,-1971559593)], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22basis-icon\x22,\x22basis-icon\x22,1917779567),devtools.formatters.markup._LT_type_basis_GT_(basis)], null));\nvar native_markup \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22native-icon\x22,\x22native-icon\x22,-126040824),devtools.formatters.markup._LT_native_reference_GT_(constructor_fn)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [basis_markup,ns_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_type_GT_ \x3d (function devtools$formatters$markup$_LT_type_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15502 \x3d arguments.length;\nvar i__5770__auto___15503 \x3d (0);\nwhile(true){\nif((i__5770__auto___15503 \x3c len__5769__auto___15502)){\nargs__5775__auto__.push((arguments[i__5770__auto___15503]));\n\nvar G__15504 \x3d (i__5770__auto___15503 + (1));\ni__5770__auto___15503 \x3d G__15504;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (constructor_fn,p__15279){\nvar vec__15280 \x3d p__15279;\nvar header_tag \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15280,(0),null);\nvar vec__15284 \x3d devtools.munging.parse_constructor_info(constructor_fn);\nvar ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15284,(0),null);\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15284,(1),null);\nvar basis \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15284,(2),null);\nvar name_markup \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-name-tag\x22,\x22type-name-tag\x22,-1317275511),name], null);\nvar preview_markup \x3d new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5045__auto__ \x3d header_tag;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22type-header-tag\x22,\x22type-header-tag\x22,1645372265);\n}\n})(),new cljs.core.Keyword(null,\x22type-symbol\x22,\x22type-symbol\x22,-941894755),name_markup], null);\nvar details_markup_fn \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_type_details_GT_,constructor_fn,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([basis], 0));\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-wrapper-tag\x22,\x22type-wrapper-tag\x22,-1732366004),new cljs.core.Keyword(null,\x22type-header-background\x22,\x22type-header-background\x22,-810861696),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22type-ref-tag\x22,\x22type-ref-tag\x22,2126727355),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([constructor_fn,preview_markup,details_markup_fn], 0))], null)], null);\n}));\n\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_type_GT_.cljs$lang$applyTo \x3d (function (seq15273){\nvar G__15274 \x3d cljs.core.first(seq15273);\nvar seq15273__$1 \x3d cljs.core.next(seq15273);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15274,seq15273__$1);\n}));\n\ndevtools.formatters.markup._LT_standalone_type_GT_ \x3d (function devtools$formatters$markup$_LT_standalone_type_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15509 \x3d arguments.length;\nvar i__5770__auto___15510 \x3d (0);\nwhile(true){\nif((i__5770__auto___15510 \x3c len__5769__auto___15509)){\nargs__5775__auto__.push((arguments[i__5770__auto___15510]));\n\nvar G__15511 \x3d (i__5770__auto___15510 + (1));\ni__5770__auto___15510 \x3d G__15511;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (constructor_fn,p__15302){\nvar vec__15303 \x3d p__15302;\nvar header_tag \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15303,(0),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22standalone-type-tag\x22,\x22standalone-type-tag\x22,-1677164791),devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([header_tag], 0))], null);\n}));\n\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_standalone_type_GT_.cljs$lang$applyTo \x3d (function (seq15300){\nvar G__15301 \x3d cljs.core.first(seq15300);\nvar seq15300__$1 \x3d cljs.core.next(seq15300);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15301,seq15300__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_arity_GT_ \x3d (function devtools$formatters$markup$_LT_protocol_method_arity_GT_(arity_fn){\nreturn devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([arity_fn], 0));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_details_GT_ \x3d (function devtools$formatters$markup$_LT_protocol_method_arities_details_GT_(fns){\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,fns));\n});\ndevtools.formatters.markup._LT_protocol_method_arities_GT_ \x3d (function devtools$formatters$markup$_LT_protocol_method_arities_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15520 \x3d arguments.length;\nvar i__5770__auto___15521 \x3d (0);\nwhile(true){\nif((i__5770__auto___15521 \x3c len__5769__auto___15520)){\nargs__5775__auto__.push((arguments[i__5770__auto___15521]));\n\nvar G__15523 \x3d (i__5770__auto___15521 + (1));\ni__5770__auto___15521 \x3d G__15523;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (fns,p__15308){\nvar vec__15309 \x3d p__15308;\nvar max_fns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15309,(0),null);\nvar max_fns__$1 \x3d (function (){var or__5045__auto__ \x3d max_fns;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22max-protocol-method-arities-list\x22,\x22max-protocol-method-arities-list\x22,-45936465));\n}\n})();\nvar more_QMARK_ \x3d (cljs.core.count(fns) \x3e max_fns__$1);\nvar aritites_markups \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arity_GT_,cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fns__$1,fns));\nvar preview_markup \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22protocol-method-arities-header-tag\x22,\x22protocol-method-arities-header-tag\x22,734407707),new cljs.core.Keyword(null,\x22protocol-method-arities-header-open-symbol\x22,\x22protocol-method-arities-header-open-symbol\x22,1704200465)], null),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22protocol-method-arities-list-header-separator\x22,\x22protocol-method-arities-list-header-separator\x22,-115158954),aritites_markups),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((more_QMARK_)?new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22protocol-method-arities-more-symbol\x22,\x22protocol-method-arities-more-symbol\x22,-477018522)], null):null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22protocol-method-arities-header-close-symbol\x22,\x22protocol-method-arities-header-close-symbol\x22,-1375237120)], null)], 0));\nif(more_QMARK_){\nvar details_markup_fn \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_method_arities_details_GT_,fns);\nreturn devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([null,preview_markup,details_markup_fn], 0));\n} else {\nreturn preview_markup;\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_method_arities_GT_.cljs$lang$applyTo \x3d (function (seq15306){\nvar G__15307 \x3d cljs.core.first(seq15306);\nvar seq15306__$1 \x3d cljs.core.next(seq15306);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15307,seq15306__$1);\n}));\n\ndevtools.formatters.markup._LT_protocol_method_GT_ \x3d (function devtools$formatters$markup$_LT_protocol_method_GT_(name,arities){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22protocol-method-tag\x22,\x22protocol-method-tag\x22,2032279830),new cljs.core.Keyword(null,\x22method-icon\x22,\x22method-icon\x22,-1678775281),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22protocol-method-name-tag\x22,\x22protocol-method-name-tag\x22,-1030376744),name], null),devtools.formatters.markup._LT_protocol_method_arities_GT_(arities)], null);\n});\ndevtools.formatters.markup._LT_protocol_details_GT_ \x3d (function devtools$formatters$markup$_LT_protocol_details_GT_(obj,ns,_name,selector,_fast_QMARK_){\nvar protocol_obj \x3d devtools.munging.get_protocol_object(selector);\nvar ns_markups_list \x3d (((!(cljs.core.empty_QMARK_(ns))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22ns-icon\x22,\x22ns-icon\x22,725601214),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22protocol-ns-name-tag\x22,\x22protocol-ns-name-tag\x22,1832081510),ns], null)], null):null);\nvar native_markups_list \x3d (((!((protocol_obj \x3d\x3d null))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22native-icon\x22,\x22native-icon\x22,-126040824),devtools.formatters.markup._LT_native_reference_GT_(protocol_obj)], null):null);\nvar methods$ \x3d devtools.munging.collect_protocol_methods(obj,selector);\nvar methods_markups \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__15312){\nvar vec__15313 \x3d p__15312;\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15313,(0),null);\nvar arities \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15313,(1),null);\nreturn devtools.formatters.markup._LT_protocol_method_GT_(name,arities);\n}),methods$);\nvar methods_markups_lists \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.list,methods_markups);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(cljs.core.concat.cljs$core$IFn$_invoke$arity$2(methods_markups_lists,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [ns_markups_list,native_markups_list], null)));\n});\ndevtools.formatters.markup._LT_protocol_GT_ \x3d (function devtools$formatters$markup$_LT_protocol_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15531 \x3d arguments.length;\nvar i__5770__auto___15532 \x3d (0);\nwhile(true){\nif((i__5770__auto___15532 \x3c len__5769__auto___15531)){\nargs__5775__auto__.push((arguments[i__5770__auto___15532]));\n\nvar G__15533 \x3d (i__5770__auto___15532 + (1));\ni__5770__auto___15532 \x3d G__15533;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (obj,protocol,p__15329){\nvar vec__15330 \x3d p__15329;\nvar tag \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15330,(0),null);\nvar map__15333 \x3d protocol;\nvar map__15333__$1 \x3d cljs.core.__destructure_map(map__15333);\nvar ns \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15333__$1,new cljs.core.Keyword(null,\x22ns\x22,\x22ns\x22,441598760));\nvar name \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15333__$1,new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177));\nvar selector \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15333__$1,new cljs.core.Keyword(null,\x22selector\x22,\x22selector\x22,762528866));\nvar fast_QMARK_ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__15333__$1,new cljs.core.Keyword(null,\x22fast?\x22,\x22fast?\x22,-1813307150));\nvar preview_markup \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var or__5045__auto__ \x3d tag;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22protocol-name-tag\x22,\x22protocol-name-tag\x22,1508238310);\n}\n})(),name], null);\nvar prefix_markup \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(cljs.core.truth_(fast_QMARK_)?new cljs.core.Keyword(null,\x22fast-protocol-tag\x22,\x22fast-protocol-tag\x22,2066025065):new cljs.core.Keyword(null,\x22slow-protocol-tag\x22,\x22slow-protocol-tag\x22,2061129467)),new cljs.core.Keyword(null,\x22protocol-background\x22,\x22protocol-background\x22,1111513794)], null);\nif((!((obj \x3d\x3d null)))){\nvar details_markup_fn \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$variadic(devtools.formatters.markup._LT_protocol_details_GT_,obj,ns,name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([selector,fast_QMARK_], 0));\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj,preview_markup,details_markup_fn], 0)));\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(prefix_markup,preview_markup);\n}\n}));\n\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocol_GT_.cljs$lang$applyTo \x3d (function (seq15320){\nvar G__15321 \x3d cljs.core.first(seq15320);\nvar seq15320__$1 \x3d cljs.core.next(seq15320);\nvar G__15322 \x3d cljs.core.first(seq15320__$1);\nvar seq15320__$2 \x3d cljs.core.next(seq15320__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15321,G__15322,seq15320__$2);\n}));\n\ndevtools.formatters.markup._LT_more_protocols_GT_ \x3d (function devtools$formatters$markup$_LT_more_protocols_GT_(more_count){\nvar fake_protocol \x3d new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177),devtools.formatters.helpers.get_more_marker(more_count)], null);\nreturn devtools.formatters.markup._LT_protocol_GT_.cljs$core$IFn$_invoke$arity$variadic(null,fake_protocol,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22protocol-more-tag\x22,\x22protocol-more-tag\x22,2098702865)], 0));\n});\ndevtools.formatters.markup._LT_protocols_list_GT_ \x3d (function devtools$formatters$markup$_LT_protocols_list_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15538 \x3d arguments.length;\nvar i__5770__auto___15539 \x3d (0);\nwhile(true){\nif((i__5770__auto___15539 \x3c len__5769__auto___15538)){\nargs__5775__auto__.push((arguments[i__5770__auto___15539]));\n\nvar G__15540 \x3d (i__5770__auto___15539 + (1));\ni__5770__auto___15539 \x3d G__15540;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (obj,protocols,p__15350){\nvar vec__15351 \x3d p__15350;\nvar max_protocols \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15351,(0),null);\nvar max_protocols__$1 \x3d (function (){var or__5045__auto__ \x3d max_protocols;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22max-list-protocols\x22,\x22max-list-protocols\x22,-537135129));\n}\n})();\nvar protocols_markups \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_protocol_GT_,obj),protocols);\nreturn devtools.formatters.markup._LT_list_GT_.cljs$core$IFn$_invoke$arity$variadic(protocols_markups,max_protocols__$1,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Keyword(null,\x22protocols-header-tag\x22,\x22protocols-header-tag\x22,-734413384),new cljs.core.Keyword(null,\x22open-symbol\x22,\x22open-symbol\x22,674247825),new cljs.core.Keyword(null,\x22protocols-list-open-symbol\x22,\x22protocols-list-open-symbol\x22,-729713043),new cljs.core.Keyword(null,\x22close-symbol\x22,\x22close-symbol\x22,1051951165),new cljs.core.Keyword(null,\x22protocols-list-close-symbol\x22,\x22protocols-list-close-symbol\x22,652072902),new cljs.core.Keyword(null,\x22separator\x22,\x22separator\x22,-1628749125),new cljs.core.Keyword(null,\x22header-protocol-separator\x22,\x22header-protocol-separator\x22,445531439),new cljs.core.Keyword(null,\x22more-symbol\x22,\x22more-symbol\x22,-2139760242),devtools.formatters.markup._LT_more_protocols_GT_], null)], 0));\n}));\n\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_protocols_list_GT_.cljs$lang$applyTo \x3d (function (seq15344){\nvar G__15345 \x3d cljs.core.first(seq15344);\nvar seq15344__$1 \x3d cljs.core.next(seq15344);\nvar G__15346 \x3d cljs.core.first(seq15344__$1);\nvar seq15344__$2 \x3d cljs.core.next(seq15344__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15345,G__15346,seq15344__$2);\n}));\n\ndevtools.formatters.markup._LT_field_GT_ \x3d (function devtools$formatters$markup$_LT_field_GT_(name,value){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22header-field-tag\x22,\x22header-field-tag\x22,-1403476101),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22header-field-name-tag\x22,\x22header-field-name-tag\x22,82291956),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null),new cljs.core.Keyword(null,\x22header-field-value-spacer\x22,\x22header-field-value-spacer\x22,-1210630679),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22header-field-value-tag\x22,\x22header-field-value-tag\x22,-1708691701),devtools.formatters.markup._LT_reference_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0)),(function (p1__15362_SHARP_){\nreturn devtools.formatters.state.set_managed_print_level(p1__15362_SHARP_,(1));\n})], 0))], null),new cljs.core.Keyword(null,\x22header-field-separator\x22,\x22header-field-separator\x22,-774444018)], null);\n});\ndevtools.formatters.markup._LT_fields_details_row_GT_ \x3d (function devtools$formatters$markup$_LT_fields_details_row_GT_(field){\nvar vec__15365 \x3d field;\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15365,(0),null);\nvar value \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15365,(1),null);\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22body-field-tr-tag\x22,\x22body-field-tr-tag\x22,37280691),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22body-field-td1-tag\x22,\x22body-field-td1-tag\x22,256357429),new cljs.core.Keyword(null,\x22body-field-symbol\x22,\x22body-field-symbol\x22,256897537),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22body-field-name-tag\x22,\x22body-field-name-tag\x22,917867601),cljs.core.str.cljs$core$IFn$_invoke$arity$1(name)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22body-field-td2-tag\x22,\x22body-field-td2-tag\x22,94501500),new cljs.core.Keyword(null,\x22body-field-value-spacer\x22,\x22body-field-value-spacer\x22,1279911362)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22body-field-td3-tag\x22,\x22body-field-td3-tag\x22,-803119922),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22body-field-value-tag\x22,\x22body-field-value-tag\x22,800789079),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value], 0))], null)], null)], null);\n});\ndevtools.formatters.markup._LT_fields_GT_ \x3d (function devtools$formatters$markup$_LT_fields_GT_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15549 \x3d arguments.length;\nvar i__5770__auto___15550 \x3d (0);\nwhile(true){\nif((i__5770__auto___15550 \x3c len__5769__auto___15549)){\nargs__5775__auto__.push((arguments[i__5770__auto___15550]));\n\nvar G__15551 \x3d (i__5770__auto___15550 + (1));\ni__5770__auto___15550 \x3d G__15551;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (fields,p__15374){\nvar vec__15375 \x3d p__15374;\nvar max_fields \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15375,(0),null);\nif((cljs.core.count(fields) \x3d\x3d\x3d (0))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fields-header-tag\x22,\x22fields-header-tag\x22,1339134308),new cljs.core.Keyword(null,\x22fields-header-no-fields-symbol\x22,\x22fields-header-no-fields-symbol\x22,-1749204979)], null);\n} else {\nvar max_fields__$1 \x3d (function (){var or__5045__auto__ \x3d max_fields;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22max-instance-header-fields\x22,\x22max-instance-header-fields\x22,-126007269));\n}\n})();\nvar more_QMARK_ \x3d (cljs.core.count(fields) \x3e max_fields__$1);\nvar fields_markups \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p__15379){\nvar vec__15381 \x3d p__15379;\nvar name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15381,(0),null);\nvar value \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15381,(1),null);\nreturn devtools.formatters.markup._LT_field_GT_(name,value);\n}),cljs.core.take.cljs$core$IFn$_invoke$arity$2(max_fields__$1,fields));\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fields-header-tag\x22,\x22fields-header-tag\x22,1339134308),new cljs.core.Keyword(null,\x22fields-header-open-symbol\x22,\x22fields-header-open-symbol\x22,-26243798)], null),fields_markups,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [((more_QMARK_)?new cljs.core.Keyword(null,\x22more-fields-symbol\x22,\x22more-fields-symbol\x22,720022882):null),new cljs.core.Keyword(null,\x22fields-header-close-symbol\x22,\x22fields-header-close-symbol\x22,1615181116)], null)], 0));\n}\n}));\n\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(devtools.formatters.markup._LT_fields_GT_.cljs$lang$applyTo \x3d (function (seq15371){\nvar G__15372 \x3d cljs.core.first(seq15371);\nvar seq15371__$1 \x3d cljs.core.next(seq15371);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__15372,seq15371__$1);\n}));\n\ndevtools.formatters.markup._LT_fields_details_GT_ \x3d (function devtools$formatters$markup$_LT_fields_details_GT_(fields,obj){\nvar protocols \x3d devtools.munging.scan_protocols(obj);\nvar has_protocols_QMARK_ \x3d (!(cljs.core.empty_QMARK_(protocols)));\nvar fields_markup \x3d (((!((cljs.core.count(fields) \x3d\x3d\x3d (0)))))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22fields-icon\x22,\x22fields-icon\x22,-436030420),cljs.core.concat.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22instance-body-fields-table-tag\x22,\x22instance-body-fields-table-tag\x22,1306340776)], null),cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.markup._LT_fields_details_row_GT_,fields))], null):null);\nvar protocols_list_markup \x3d ((has_protocols_QMARK_)?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22protocols-icon\x22,\x22protocols-icon\x22,-517302494),devtools.formatters.markup._LT_protocols_list_GT_(obj,protocols)], null):null);\nvar native_markup \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22native-icon\x22,\x22native-icon\x22,-126040824),devtools.formatters.markup._LT_native_reference_GT_(obj)], null);\nreturn devtools.formatters.markup._LT_aligned_body_GT_(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [fields_markup,protocols_list_markup,native_markup], null));\n});\ndevtools.formatters.markup._LT_instance_GT_ \x3d (function devtools$formatters$markup$_LT_instance_GT_(value){\nvar constructor_fn \x3d devtools.formatters.helpers.get_constructor(value);\nvar vec__15388 \x3d devtools.munging.parse_constructor_info(constructor_fn);\nvar _ns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15388,(0),null);\nvar _name \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15388,(1),null);\nvar basis \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15388,(2),null);\nvar custom_printing_QMARK_ \x3d (((!((value \x3d\x3d null))))?(((((value.cljs$lang$protocol_mask$partition0$ \x26 (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.cljs$core$IPrintWithWriter$))))?true:false):false);\nvar type_markup \x3d devtools.formatters.markup._LT_type_GT_.cljs$core$IFn$_invoke$arity$variadic(constructor_fn,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22instance-type-header-tag\x22,\x22instance-type-header-tag\x22,-1015702989)], 0));\nvar fields \x3d devtools.formatters.helpers.fetch_fields_values(value,basis);\nvar fields_markup \x3d devtools.formatters.markup._LT_fields_GT_.cljs$core$IFn$_invoke$arity$variadic(fields,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([((custom_printing_QMARK_)?(0):null)], 0));\nvar fields_details_markup_fn \x3d (function (){\nreturn devtools.formatters.markup._LT_fields_details_GT_(fields,value);\n});\nvar fields_preview_markup \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22instance-value-tag\x22,\x22instance-value-tag\x22,-1739593896),devtools.formatters.markup._LT_reference_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([value,fields_markup,fields_details_markup_fn], 0))], null);\nvar custom_printing_markup \x3d ((custom_printing_QMARK_)?new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22instance-custom-printing-wrapper-tag\x22,\x22instance-custom-printing-wrapper-tag\x22,1461890684),new cljs.core.Keyword(null,\x22instance-custom-printing-background\x22,\x22instance-custom-printing-background\x22,-248433646),devtools.formatters.markup.print_via_protocol(value,new cljs.core.Keyword(null,\x22instance-custom-printing-tag\x22,\x22instance-custom-printing-tag\x22,-67034432))], null):null);\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22instance-header-tag\x22,\x22instance-header-tag\x22,903623870),new cljs.core.Keyword(null,\x22instance-header-background\x22,\x22instance-header-background\x22,1510357287),fields_preview_markup,custom_printing_markup,type_markup], null);\n});\ndevtools.formatters.markup._LT_header_GT_ \x3d (function devtools$formatters$markup$_LT_header_GT_(value){\nreturn devtools.formatters.markup._LT_cljs_land_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([devtools.formatters.markup._LT_preview_GT_(value)], 0));\n});\ndevtools.formatters.markup._LT_surrogate_header_GT_ \x3d (function devtools$formatters$markup$_LT_surrogate_header_GT_(surrogate){\nvar or__5045__auto__ \x3d devtools.formatters.templating.get_surrogate_header(surrogate);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.markup._LT_preview_GT_(devtools.formatters.templating.get_surrogate_target(surrogate));\n}\n});\ndevtools.formatters.markup._LT_surrogate_target_GT_ \x3d (function devtools$formatters$markup$_LT_surrogate_target_GT_(surrogate){\nvar target \x3d devtools.formatters.templating.get_surrogate_target(surrogate);\nif(cljs.core.seqable_QMARK_(target)){\nvar starting_index \x3d devtools.formatters.templating.get_surrogate_start_index(surrogate);\nreturn devtools.formatters.markup._LT_details_GT_(target,starting_index);\n} else {\nreturn devtools.formatters.markup._LT_standard_body_reference_GT_(target);\n}\n});\ndevtools.formatters.markup._LT_surrogate_body_GT_ \x3d (function devtools$formatters$markup$_LT_surrogate_body_GT_(surrogate){\nvar temp__5802__auto__ \x3d devtools.formatters.templating.get_surrogate_body(surrogate);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar body \x3d temp__5802__auto__;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22target\x22,\x22target\x22,253001721),body)){\nreturn devtools.formatters.markup._LT_surrogate_target_GT_(surrogate);\n} else {\nreturn body;\n}\n} else {\nreturn null;\n}\n});\ndevtools.formatters.markup._LT_atomic_GT_ \x3d (function devtools$formatters$markup$_LT_atomic_GT_(value){\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\x22render-nils\x22,\x22render-nils\x22,1360008699),value,cljs.core.nil_QMARK_))){\nreturn devtools.formatters.markup._LT_nil_GT_();\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\x22render-bools\x22,\x22render-bools\x22,1793659724),value,devtools.formatters.helpers.bool_QMARK_))){\nreturn devtools.formatters.markup._LT_bool_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\x22render-strings\x22,\x22render-strings\x22,-1497177335),value,cljs.core.string_QMARK_))){\nreturn devtools.formatters.markup._LT_string_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\x22render-numbers\x22,\x22render-numbers\x22,-1385392009),value,cljs.core.number_QMARK_))){\nreturn devtools.formatters.markup._LT_number_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\x22render-keywords\x22,\x22render-keywords\x22,1200455875),value,cljs.core.keyword_QMARK_))){\nreturn devtools.formatters.markup._LT_keyword_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\x22render-symbols\x22,\x22render-symbols\x22,-887705016),value,cljs.core.symbol_QMARK_))){\nreturn devtools.formatters.markup._LT_symbol_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\x22render-instances\x22,\x22render-instances\x22,-1803579686),value,devtools.formatters.helpers.should_render_instance_QMARK_))){\nreturn devtools.formatters.markup._LT_instance_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\x22render-types\x22,\x22render-types\x22,-129927851),value,devtools.formatters.helpers.cljs_type_QMARK_))){\nreturn devtools.formatters.markup._LT_standalone_type_GT_(value);\n} else {\nif(cljs.core.truth_(devtools.formatters.helpers.should_render_QMARK_(new cljs.core.Keyword(null,\x22render-functions\x22,\x22render-functions\x22,1273333002),value,devtools.formatters.helpers.cljs_function_QMARK_))){\nreturn devtools.formatters.markup._LT_function_GT_(value);\n} else {\nreturn null;\n}\n}\n}\n}\n}\n}\n}\n}\n}\n});\ndevtools.formatters.markup.get_markup_db \x3d (function devtools$formatters$markup$get_markup_db(){\nif((devtools.formatters.markup._STAR_markup_db_STAR_ \x3d\x3d null)){\n(devtools.formatters.markup._STAR_markup_db_STAR_ \x3d cljs.core.PersistentHashMap.fromArrays([new cljs.core.Keyword(null,\x22aligned-body\x22,\x22aligned-body\x22,-2124118747),new cljs.core.Keyword(null,\x22native-reference\x22,\x22native-reference\x22,-2013708658),new cljs.core.Keyword(null,\x22reference-surrogate\x22,\x22reference-surrogate\x22,274031791),new cljs.core.Keyword(null,\x22keyword\x22,\x22keyword\x22,811389747),new cljs.core.Keyword(null,\x22protocol-method-arities\x22,\x22protocol-method-arities\x22,-545542044),new cljs.core.Keyword(null,\x22surrogate-header\x22,\x22surrogate-header\x22,1705524526),new cljs.core.Keyword(null,\x22details\x22,\x22details\x22,1956795411),new cljs.core.Keyword(null,\x22more-protocols\x22,\x22more-protocols\x22,359555207),new cljs.core.Keyword(null,\x22field\x22,\x22field\x22,-1302436500),new cljs.core.Keyword(null,\x22symbol\x22,\x22symbol\x22,-1038572696),new cljs.core.Keyword(null,\x22fields-details\x22,\x22fields-details\x22,-269572714),new cljs.core.Keyword(null,\x22atomic\x22,\x22atomic\x22,-120459460),new cljs.core.Keyword(null,\x22string\x22,\x22string\x22,-1989541586),new cljs.core.Keyword(null,\x22standard-body\x22,\x22standard-body\x22,-1563020798),new cljs.core.Keyword(null,\x22type-basis\x22,\x22type-basis\x22,-1825246054),new cljs.core.Keyword(null,\x22bool\x22,\x22bool\x22,1444635321),new cljs.core.Keyword(null,\x22standalone-type\x22,\x22standalone-type\x22,-802565278),new cljs.core.Keyword(null,\x22preview\x22,\x22preview\x22,451279890),new cljs.core.Keyword(null,\x22header\x22,\x22header\x22,119441134),new cljs.core.Keyword(null,\x22protocol-method\x22,\x22protocol-method\x22,1794903206),new cljs.core.Keyword(null,\x22cljs-land\x22,\x22cljs-land\x22,1255896927),new cljs.core.Keyword(null,\x22type-basis-item\x22,\x22type-basis-item\x22,-1662150132),new cljs.core.Keyword(null,\x22protocol-method-arities-details\x22,\x22protocol-method-arities-details\x22,1944702118),new cljs.core.Keyword(null,\x22fields-details-row\x22,\x22fields-details-row\x22,2066344936),new cljs.core.Keyword(null,\x22standard-body-reference\x22,\x22standard-body-reference\x22,1513301561),new cljs.core.Keyword(null,\x22surrogate-body\x22,\x22surrogate-body\x22,-1618569585),new cljs.core.Keyword(null,\x22expandable\x22,\x22expandable\x22,-704609097),new cljs.core.Keyword(null,\x22type\x22,\x22type\x22,1174270348),new cljs.core.Keyword(null,\x22protocol-method-arity\x22,\x22protocol-method-arity\x22,-1861927833),new cljs.core.Keyword(null,\x22raw-surrogate\x22,\x22raw-surrogate\x22,904931181),new cljs.core.Keyword(null,\x22type-details\x22,\x22type-details\x22,477755178),new cljs.core.Keyword(null,\x22list\x22,\x22list\x22,765357683),new cljs.core.Keyword(null,\x22meta-wrapper\x22,\x22meta-wrapper\x22,-1989845587),new cljs.core.Keyword(null,\x22protocol\x22,\x22protocol\x22,652470118),new cljs.core.Keyword(null,\x22index\x22,\x22index\x22,-1531685915),new cljs.core.Keyword(null,\x22surrogate\x22,\x22surrogate\x22,2122284260),new cljs.core.Keyword(null,\x22protocols-list\x22,\x22protocols-list\x22,371434187),new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964),new cljs.core.Keyword(null,\x22instance\x22,\x22instance\x22,-2121349050),new cljs.core.Keyword(null,\x22reference\x22,\x22reference\x22,-1711695023),new cljs.core.Keyword(null,\x22function-details\x22,\x22function-details\x22,1501147310),new cljs.core.Keyword(null,\x22function\x22,\x22function\x22,-2127255473),new cljs.core.Keyword(null,\x22arities\x22,\x22arities\x22,-1781122917),new cljs.core.Keyword(null,\x22header-expander\x22,\x22header-expander\x22,-1606368578),new cljs.core.Keyword(null,\x22list-details\x22,\x22list-details\x22,46031799),new cljs.core.Keyword(null,\x22circular-reference\x22,\x22circular-reference\x22,970308727),new cljs.core.Keyword(null,\x22surrogate-target\x22,\x22surrogate-target\x22,-1262730220),new cljs.core.Keyword(null,\x22fields\x22,\x22fields\x22,-1932066230),new cljs.core.Keyword(null,\x22nil\x22,\x22nil\x22,99600501),new cljs.core.Keyword(null,\x22body\x22,\x22body\x22,-2049205669),new cljs.core.Keyword(null,\x22number\x22,\x22number\x22,1570378438),new cljs.core.Keyword(null,\x22protocol-details\x22,\x22protocol-details\x22,-121549824)],[devtools.formatters.markup._LT_aligned_body_GT_,devtools.formatters.markup._LT_native_reference_GT_,devtools.formatters.markup._LT_reference_surrogate_GT_,devtools.formatters.markup._LT_keyword_GT_,devtools.formatters.markup._LT_protocol_method_arities_GT_,devtools.formatters.markup._LT_surrogate_header_GT_,devtools.formatters.markup._LT_details_GT_,devtools.formatters.markup._LT_more_protocols_GT_,devtools.formatters.markup._LT_field_GT_,devtools.formatters.markup._LT_symbol_GT_,devtools.formatters.markup._LT_fields_details_GT_,devtools.formatters.markup._LT_atomic_GT_,devtools.formatters.markup._LT_string_GT_,devtools.formatters.markup._LT_standard_body_GT_,devtools.formatters.markup._LT_type_basis_GT_,devtools.formatters.markup._LT_bool_GT_,devtools.formatters.markup._LT_standalone_type_GT_,devtools.formatters.markup._LT_preview_GT_,devtools.formatters.markup._LT_header_GT_,devtools.formatters.markup._LT_protocol_method_GT_,devtools.formatters.markup._LT_cljs_land_GT_,devtools.formatters.markup._LT_type_basis_item_GT_,devtools.formatters.markup._LT_protocol_method_arities_details_GT_,devtools.formatters.markup._LT_fields_details_row_GT_,devtools.formatters.markup._LT_standard_body_reference_GT_,devtools.formatters.markup._LT_surrogate_body_GT_,devtools.formatters.markup._LT_expandable_GT_,devtools.formatters.markup._LT_type_GT_,devtools.formatters.markup._LT_protocol_method_arity_GT_,devtools.formatters.markup._LT_raw_surrogate_GT_,devtools.formatters.markup._LT_type_details_GT_,devtools.formatters.markup._LT_list_GT_,devtools.formatters.markup._LT_meta_wrapper_GT_,devtools.formatters.markup._LT_protocol_GT_,devtools.formatters.markup._LT_index_GT_,devtools.formatters.markup._LT_surrogate_GT_,devtools.formatters.markup._LT_protocols_list_GT_,devtools.formatters.markup._LT_meta_GT_,devtools.formatters.markup._LT_instance_GT_,devtools.formatters.markup._LT_reference_GT_,devtools.formatters.markup._LT_function_details_GT_,devtools.formatters.markup._LT_function_GT_,devtools.formatters.markup._LT_arities_GT_,devtools.formatters.markup._LT_header_expander_GT_,devtools.formatters.markup._LT_list_details_GT_,devtools.formatters.markup._LT_circular_reference_GT_,devtools.formatters.markup._LT_surrogate_target_GT_,devtools.formatters.markup._LT_fields_GT_,devtools.formatters.markup._LT_nil_GT_,devtools.formatters.markup._LT_body_GT_,devtools.formatters.markup._LT_number_GT_,devtools.formatters.markup._LT_protocol_details_GT_]));\n} else {\n}\n\nreturn devtools.formatters.markup._STAR_markup_db_STAR_;\n});\n");
SHADOW_ENV.evalLoad("devtools.formatters.budgeting.js", true , "goog.provide(\x27devtools.formatters.budgeting\x27);\ndevtools.formatters.budgeting.header_expander_depth_cost \x3d (2);\ndevtools.formatters.budgeting.over_budget_values \x3d (((typeof WeakSet !\x3d\x3d \x27undefined\x27))?(new WeakSet()):cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY));\ndevtools.formatters.budgeting.add_over_budget_value_BANG_ \x3d (function devtools$formatters$budgeting$add_over_budget_value_BANG_(value){\nif(cljs.core.volatile_QMARK_(devtools.formatters.budgeting.over_budget_values)){\nreturn cljs.core.vreset_BANG_(devtools.formatters.budgeting.over_budget_values,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(devtools.formatters.budgeting.over_budget_values),value));\n} else {\nvar o__11509__auto__ \x3d devtools.formatters.budgeting.over_budget_values;\nreturn (o__11509__auto__[\x22add\x22]).call(o__11509__auto__,value);\n}\n});\ndevtools.formatters.budgeting.delete_over_budget_value_BANG_ \x3d (function devtools$formatters$budgeting$delete_over_budget_value_BANG_(value){\nif(cljs.core.volatile_QMARK_(devtools.formatters.budgeting.over_budget_values)){\nreturn cljs.core.vreset_BANG_(devtools.formatters.budgeting.over_budget_values,cljs.core.disj.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(devtools.formatters.budgeting.over_budget_values),value));\n} else {\nvar o__11509__auto__ \x3d devtools.formatters.budgeting.over_budget_values;\nreturn (o__11509__auto__[\x22delete\x22]).call(o__11509__auto__,value);\n}\n});\ndevtools.formatters.budgeting.has_over_budget_value_QMARK_ \x3d (function devtools$formatters$budgeting$has_over_budget_value_QMARK_(value){\nif(cljs.core.volatile_QMARK_(devtools.formatters.budgeting.over_budget_values)){\nreturn cljs.core.contains_QMARK_(cljs.core.deref(devtools.formatters.budgeting.over_budget_values),value);\n} else {\nvar o__11509__auto__ \x3d devtools.formatters.budgeting.over_budget_values;\nreturn (o__11509__auto__[\x22has\x22]).call(o__11509__auto__,value);\n}\n});\ndevtools.formatters.budgeting.object_reference_QMARK_ \x3d (function devtools$formatters$budgeting$object_reference_QMARK_(json_ml){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(json_ml),\x22object\x22);\n});\ndevtools.formatters.budgeting.determine_depth \x3d (function devtools$formatters$budgeting$determine_depth(json_ml){\nif(cljs.core.array_QMARK_(json_ml)){\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.max,cljs.core.map.cljs$core$IFn$_invoke$arity$2(devtools.formatters.budgeting.determine_depth,json_ml)) + (1));\n} else {\nreturn (0);\n}\n});\ndevtools.formatters.budgeting.has_any_object_reference_QMARK_ \x3d (function devtools$formatters$budgeting$has_any_object_reference_QMARK_(json_ml){\nif(cljs.core.array_QMARK_(json_ml)){\nif(devtools.formatters.budgeting.object_reference_QMARK_(json_ml)){\nreturn true;\n} else {\nreturn cljs.core.some(devtools.formatters.budgeting.has_any_object_reference_QMARK_,json_ml);\n}\n} else {\nreturn null;\n}\n});\ndevtools.formatters.budgeting.transfer_remaining_depth_budget_BANG_ \x3d (function devtools$formatters$budgeting$transfer_remaining_depth_budget_BANG_(object_reference,depth_budget){\nif((!((depth_budget \x3c (0))))){\n} else {\nthrow (new Error(\x22Assert failed: (not (neg? depth-budget))\x22));\n}\n\nvar data \x3d cljs.core.second(object_reference);\nvar _ \x3d ((cljs.core.object_QMARK_(data))?null:(function(){throw (new Error(\x22Assert failed: (object? data)\x22))})());\nvar config \x3d (data[\x22config\x22]);\nvar G__15515 \x3d data;\nvar target__11525__auto__ \x3d G__15515;\nif(cljs.core.truth_(target__11525__auto__)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22unable to locate object path \x22,null,\x22 in \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__15515)].join(\x27\x27),\x22\\n\x22,\x22target__11525__auto__\x22].join(\x27\x27)));\n}\n\n(target__11525__auto__[\x22config\x22] \x3d devtools.formatters.state.set_depth_budget(config,depth_budget));\n\nreturn G__15515;\n});\ndevtools.formatters.budgeting.distribute_budget_BANG_ \x3d (function devtools$formatters$budgeting$distribute_budget_BANG_(json_ml,depth_budget){\nif((!((depth_budget \x3c (0))))){\n} else {\nthrow (new Error(\x22Assert failed: (not (neg? depth-budget))\x22));\n}\n\nif(cljs.core.array_QMARK_(json_ml)){\nvar new_depth_budget_15568 \x3d (depth_budget - (1));\nif(devtools.formatters.budgeting.object_reference_QMARK_(json_ml)){\ndevtools.formatters.budgeting.transfer_remaining_depth_budget_BANG_(json_ml,new_depth_budget_15568);\n} else {\nvar seq__15524_15569 \x3d cljs.core.seq(json_ml);\nvar chunk__15525_15570 \x3d null;\nvar count__15526_15571 \x3d (0);\nvar i__15527_15572 \x3d (0);\nwhile(true){\nif((i__15527_15572 \x3c count__15526_15571)){\nvar item_15573 \x3d chunk__15525_15570.cljs$core$IIndexed$_nth$arity$2(null,i__15527_15572);\n(devtools.formatters.budgeting.distribute_budget_BANG_.cljs$core$IFn$_invoke$arity$2 ? devtools.formatters.budgeting.distribute_budget_BANG_.cljs$core$IFn$_invoke$arity$2(item_15573,new_depth_budget_15568) : devtools.formatters.budgeting.distribute_budget_BANG_.call(null,item_15573,new_depth_budget_15568));\n\n\nvar G__15575 \x3d seq__15524_15569;\nvar G__15576 \x3d chunk__15525_15570;\nvar G__15577 \x3d count__15526_15571;\nvar G__15578 \x3d (i__15527_15572 + (1));\nseq__15524_15569 \x3d G__15575;\nchunk__15525_15570 \x3d G__15576;\ncount__15526_15571 \x3d G__15577;\ni__15527_15572 \x3d G__15578;\ncontinue;\n} else {\nvar temp__5804__auto___15579 \x3d cljs.core.seq(seq__15524_15569);\nif(temp__5804__auto___15579){\nvar seq__15524_15580__$1 \x3d temp__5804__auto___15579;\nif(cljs.core.chunked_seq_QMARK_(seq__15524_15580__$1)){\nvar c__5568__auto___15581 \x3d cljs.core.chunk_first(seq__15524_15580__$1);\nvar G__15582 \x3d cljs.core.chunk_rest(seq__15524_15580__$1);\nvar G__15583 \x3d c__5568__auto___15581;\nvar G__15584 \x3d cljs.core.count(c__5568__auto___15581);\nvar G__15585 \x3d (0);\nseq__15524_15569 \x3d G__15582;\nchunk__15525_15570 \x3d G__15583;\ncount__15526_15571 \x3d G__15584;\ni__15527_15572 \x3d G__15585;\ncontinue;\n} else {\nvar item_15586 \x3d cljs.core.first(seq__15524_15580__$1);\n(devtools.formatters.budgeting.distribute_budget_BANG_.cljs$core$IFn$_invoke$arity$2 ? devtools.formatters.budgeting.distribute_budget_BANG_.cljs$core$IFn$_invoke$arity$2(item_15586,new_depth_budget_15568) : devtools.formatters.budgeting.distribute_budget_BANG_.call(null,item_15586,new_depth_budget_15568));\n\n\nvar G__15588 \x3d cljs.core.next(seq__15524_15580__$1);\nvar G__15589 \x3d null;\nvar G__15590 \x3d (0);\nvar G__15591 \x3d (0);\nseq__15524_15569 \x3d G__15588;\nchunk__15525_15570 \x3d G__15589;\ncount__15526_15571 \x3d G__15590;\ni__15527_15572 \x3d G__15591;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n}\n} else {\n}\n\nreturn json_ml;\n});\ndevtools.formatters.budgeting.was_over_budget_QMARK__BANG_ \x3d (function devtools$formatters$budgeting$was_over_budget_QMARK__BANG_(value){\nif(cljs.core.truth_(devtools.formatters.budgeting.has_over_budget_value_QMARK_(value))){\ndevtools.formatters.budgeting.delete_over_budget_value_BANG_(value);\n\nreturn true;\n} else {\nreturn null;\n}\n});\ndevtools.formatters.budgeting.alter_json_ml_to_fit_in_remaining_budget_BANG_ \x3d (function devtools$formatters$budgeting$alter_json_ml_to_fit_in_remaining_budget_BANG_(value,json_ml){\nvar temp__5802__auto__ \x3d devtools.formatters.helpers.pref(new cljs.core.Keyword(null,\x22initial-hierarchy-depth-budget\x22,\x22initial-hierarchy-depth-budget\x22,-482715807));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar initial_hierarchy_depth_budget \x3d temp__5802__auto__;\nvar remaining_depth_budget \x3d (function (){var or__5045__auto__ \x3d devtools.formatters.state.get_depth_budget();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (initial_hierarchy_depth_budget - (1));\n}\n})();\nvar depth \x3d devtools.formatters.budgeting.determine_depth(json_ml);\nvar final_QMARK_ \x3d cljs.core.not(devtools.formatters.budgeting.has_any_object_reference_QMARK_(json_ml));\nvar needed_depth \x3d ((final_QMARK_)?depth:(depth + devtools.formatters.budgeting.header_expander_depth_cost));\nif((remaining_depth_budget \x3e\x3d needed_depth)){\nreturn devtools.formatters.budgeting.distribute_budget_BANG_(json_ml,remaining_depth_budget);\n} else {\nvar expander_ml \x3d devtools.formatters.templating.render_markup(devtools.formatters.markup._LT_header_expander_GT_(value));\ndevtools.formatters.budgeting.add_over_budget_value_BANG_(value);\n\nreturn expander_ml;\n}\n} else {\nreturn json_ml;\n}\n});\n");
SHADOW_ENV.evalLoad("devtools.formatters.core.js", true , "goog.provide(\x27devtools.formatters.core\x27);\ndevtools.formatters.core.want_value_QMARK__STAR_ \x3d (function devtools$formatters$core$want_value_QMARK__STAR_(value){\nvar and__5043__auto__ \x3d cljs.core.not(devtools.formatters.state.prevent_recursion_QMARK_());\nif(and__5043__auto__){\nvar or__5045__auto__ \x3d devtools.formatters.helpers.cljs_value_QMARK_(value);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.templating.surrogate_QMARK_(value);\n}\n} else {\nreturn and__5043__auto__;\n}\n});\ndevtools.formatters.core.header_STAR_ \x3d (function devtools$formatters$core$header_STAR_(value){\nvar json_ml \x3d ((devtools.formatters.templating.surrogate_QMARK_(value))?devtools.formatters.templating.render_markup(devtools.formatters.markup._LT_surrogate_header_GT_(value)):(cljs.core.truth_((function (){try{if((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n}\n}catch (e15604){var _e__11529__auto__ \x3d e15604;\nreturn false;\n}})())?devtools.format._header(value):(cljs.core.truth_((function (){try{if((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n}\n}catch (e15620){var _e__11529__auto__ \x3d e15620;\nreturn false;\n}})())?devtools.protocols._header(value):devtools.formatters.templating.render_markup(devtools.formatters.markup._LT_header_GT_(value))\n)));\nreturn devtools.formatters.budgeting.alter_json_ml_to_fit_in_remaining_budget_BANG_(value,json_ml);\n});\ndevtools.formatters.core.has_body_STAR_ \x3d (function devtools$formatters$core$has_body_STAR_(value){\nif(cljs.core.truth_(devtools.formatters.budgeting.was_over_budget_QMARK__BANG_(value))){\nreturn false;\n} else {\nreturn cljs.core.boolean$(((devtools.formatters.templating.surrogate_QMARK_(value))?(!((devtools.formatters.templating.get_surrogate_body(value) \x3d\x3d null))):(cljs.core.truth_((function (){try{if((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n}\n}catch (e15653){var _e__11529__auto__ \x3d e15653;\nreturn false;\n}})())?devtools.format._has_body(value):(cljs.core.truth_((function (){try{if((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n}\n}catch (e15656){var _e__11529__auto__ \x3d e15656;\nreturn false;\n}})())?devtools.protocols._has_body(value):false\n))));\n}\n});\ndevtools.formatters.core.body_STAR_ \x3d (function devtools$formatters$core$body_STAR_(value){\ndevtools.formatters.state.update_current_state_BANG_(devtools.formatters.state.reset_depth_limits);\n\nif(devtools.formatters.templating.surrogate_QMARK_(value)){\nreturn devtools.formatters.templating.render_markup(devtools.formatters.markup._LT_surrogate_body_GT_(value));\n} else {\nif(cljs.core.truth_((function (){try{if((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$format$IDevtoolsFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.format.IDevtoolsFormat,value);\n}\n}catch (e15659){var _e__11529__auto__ \x3d e15659;\nreturn false;\n}})())){\nreturn devtools.format._body(value);\n} else {\nif(cljs.core.truth_((function (){try{if((!((value \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d value.devtools$protocols$IFormat$)))){\nreturn true;\n} else {\nif((!value.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(devtools.protocols.IFormat,value);\n}\n}catch (e15667){var _e__11529__auto__ \x3d e15667;\nreturn false;\n}})())){\nreturn devtools.protocols._body(value);\n} else {\nreturn null;\n}\n}\n}\n});\ndevtools.formatters.core.config_wrapper \x3d (function devtools$formatters$core$config_wrapper(raw_fn){\nreturn (function (value,config){\nvar _STAR_current_state_STAR__orig_val__15669 \x3d devtools.formatters.state._STAR_current_state_STAR_;\nvar _STAR_current_state_STAR__temp_val__15670 \x3d (function (){var or__5045__auto__ \x3d config;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn devtools.formatters.state.get_default_state();\n}\n})();\n(devtools.formatters.state._STAR_current_state_STAR_ \x3d _STAR_current_state_STAR__temp_val__15670);\n\ntry{return (raw_fn.cljs$core$IFn$_invoke$arity$1 ? raw_fn.cljs$core$IFn$_invoke$arity$1(value) : raw_fn.call(null,value));\n}finally {(devtools.formatters.state._STAR_current_state_STAR_ \x3d _STAR_current_state_STAR__orig_val__15669);\n}});\n});\ndevtools.formatters.core.want_value_QMARK_ \x3d devtools.formatters.core.config_wrapper(devtools.formatters.core.want_value_QMARK__STAR_);\ndevtools.formatters.core.header \x3d devtools.formatters.core.config_wrapper(devtools.formatters.core.header_STAR_);\ndevtools.formatters.core.has_body \x3d devtools.formatters.core.config_wrapper(devtools.formatters.core.has_body_STAR_);\ndevtools.formatters.core.body \x3d devtools.formatters.core.config_wrapper(devtools.formatters.core.body_STAR_);\ndevtools.formatters.core.wrap_with_exception_guard \x3d (function devtools$formatters$core$wrap_with_exception_guard(f){\nreturn (function() { \nvar G__15688__delegate \x3d function (args){\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);\n}catch (e15672){var e \x3d e15672;\ndevtools.reporter.report_internal_error_BANG_.cljs$core$IFn$_invoke$arity$variadic(e,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22an exception was raised during value formatting\x22], 0));\n\nreturn null;\n}};\nvar G__15688 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15691__i \x3d 0, G__15691__a \x3d new Array(arguments.length -  0);\nwhile (G__15691__i \x3c G__15691__a.length) {G__15691__a[G__15691__i] \x3d arguments[G__15691__i + 0]; ++G__15691__i;}\n  args \x3d new cljs.core.IndexedSeq(G__15691__a,0,null);\n} \nreturn G__15688__delegate.call(this,args);};\nG__15688.cljs$lang$maxFixedArity \x3d 0;\nG__15688.cljs$lang$applyTo \x3d (function (arglist__15697){\nvar args \x3d cljs.core.seq(arglist__15697);\nreturn G__15688__delegate(args);\n});\nG__15688.cljs$core$IFn$_invoke$arity$variadic \x3d G__15688__delegate;\nreturn G__15688;\n})()\n;\n});\ndevtools.formatters.core.build_api_call \x3d (function devtools$formatters$core$build_api_call(raw_fn,pre_handler_key,post_handler_key){\n\nvar handler \x3d (function (value,config){\nvar pre_handler \x3d (function (){var or__5045__auto__ \x3d devtools.prefs.pref(pre_handler_key);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.identity;\n}\n})();\nvar post_handler \x3d (function (){var or__5045__auto__ \x3d devtools.prefs.pref(post_handler_key);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.identity;\n}\n})();\nvar preprocessed_value \x3d (pre_handler.cljs$core$IFn$_invoke$arity$1 ? pre_handler.cljs$core$IFn$_invoke$arity$1(value) : pre_handler.call(null,value));\nvar result \x3d (cljs.core.truth_(devtools.formatters.core.want_value_QMARK_(preprocessed_value,config))?(raw_fn.cljs$core$IFn$_invoke$arity$2 ? raw_fn.cljs$core$IFn$_invoke$arity$2(preprocessed_value,config) : raw_fn.call(null,preprocessed_value,config)):null);\nreturn (post_handler.cljs$core$IFn$_invoke$arity$1 ? post_handler.cljs$core$IFn$_invoke$arity$1(result) : post_handler.call(null,result));\n});\nreturn devtools.formatters.core.wrap_with_exception_guard(handler);\n});\ndevtools.formatters.core.header_api_call \x3d devtools.formatters.core.build_api_call(devtools.formatters.core.header,new cljs.core.Keyword(null,\x22header-pre-handler\x22,\x22header-pre-handler\x22,-1997722262),new cljs.core.Keyword(null,\x22header-post-handler\x22,\x22header-post-handler\x22,514828618));\ndevtools.formatters.core.has_body_api_call \x3d devtools.formatters.core.build_api_call(devtools.formatters.core.has_body,new cljs.core.Keyword(null,\x22has-body-pre-handler\x22,\x22has-body-pre-handler\x22,1787020038),new cljs.core.Keyword(null,\x22has-body-post-handler\x22,\x22has-body-post-handler\x22,-863451271));\ndevtools.formatters.core.body_api_call \x3d devtools.formatters.core.build_api_call(devtools.formatters.core.body,new cljs.core.Keyword(null,\x22body-pre-handler\x22,\x22body-pre-handler\x22,1211926529),new cljs.core.Keyword(null,\x22body-post-handler\x22,\x22body-post-handler\x22,-1040905424));\n");
SHADOW_ENV.evalLoad("devtools.formatters.js", true , "goog.provide(\x27devtools.formatters\x27);\ngoog.scope(function(){\n  devtools.formatters.goog$module$goog$labs$userAgent$browser \x3d goog.module.get(\x27goog.labs.userAgent.browser\x27);\n});\ndevtools.formatters._STAR_installed_STAR_ \x3d false;\ndevtools.formatters._STAR_sanitizer_enabled_STAR_ \x3d true;\ndevtools.formatters._STAR_monitor_enabled_STAR_ \x3d false;\ndevtools.formatters.obsolete_formatter_key \x3d \x22devtoolsFormatter\x22;\ndevtools.formatters.available_QMARK_ \x3d (function devtools$formatters$available_QMARK_(){\nvar or__5045__auto__ \x3d devtools.util.in_node_context_QMARK_.call(null);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nvar and__5043__auto__ \x3d devtools.formatters.goog$module$goog$labs$userAgent$browser.isChrome();\nif(cljs.core.truth_(and__5043__auto__)){\nreturn devtools.formatters.goog$module$goog$labs$userAgent$browser.isVersionOrHigher((47));\n} else {\nreturn and__5043__auto__;\n}\n}\n});\n\n/**\n* @constructor\n*/\ndevtools.formatters.CLJSDevtoolsFormatter \x3d (function (){\n});\n\n(devtools.formatters.CLJSDevtoolsFormatter.getBasis \x3d (function (){\nreturn cljs.core.PersistentVector.EMPTY;\n}));\n\n(devtools.formatters.CLJSDevtoolsFormatter.cljs$lang$type \x3d true);\n\n(devtools.formatters.CLJSDevtoolsFormatter.cljs$lang$ctorStr \x3d \x22devtools.formatters/CLJSDevtoolsFormatter\x22);\n\n(devtools.formatters.CLJSDevtoolsFormatter.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22devtools.formatters/CLJSDevtoolsFormatter\x22);\n}));\n\n/**\n * Positional factory function for devtools.formatters/CLJSDevtoolsFormatter.\n */\ndevtools.formatters.__GT_CLJSDevtoolsFormatter \x3d (function devtools$formatters$__GT_CLJSDevtoolsFormatter(){\nreturn (new devtools.formatters.CLJSDevtoolsFormatter());\n});\n\ndevtools.formatters.find_fn_in_debug_ns \x3d (function devtools$formatters$find_fn_in_debug_ns(fn_name){\ntry{return (devtools.context.get_root.call(null)[\x22devtools\x22][\x22debug\x22][fn_name]);\n}catch (e15713){var _ \x3d e15713;\nreturn null;\n}});\ndevtools.formatters.monitor_api_call_if_avail \x3d (function devtools$formatters$monitor_api_call_if_avail(name,api_call,args){\nvar temp__5802__auto__ \x3d devtools.formatters.find_fn_in_debug_ns(\x22monitor_api_call\x22);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar monitor_api_call \x3d temp__5802__auto__;\nreturn (monitor_api_call.cljs$core$IFn$_invoke$arity$3 ? monitor_api_call.cljs$core$IFn$_invoke$arity$3(name,api_call,args) : monitor_api_call.call(null,name,api_call,args));\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(api_call,args);\n}\n});\ndevtools.formatters.log_exception_if_avail \x3d (function devtools$formatters$log_exception_if_avail(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___15743 \x3d arguments.length;\nvar i__5770__auto___15744 \x3d (0);\nwhile(true){\nif((i__5770__auto___15744 \x3c len__5769__auto___15743)){\nargs__5775__auto__.push((arguments[i__5770__auto___15744]));\n\nvar G__15745 \x3d (i__5770__auto___15744 + (1));\ni__5770__auto___15744 \x3d G__15745;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn devtools.formatters.log_exception_if_avail.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(devtools.formatters.log_exception_if_avail.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\nvar temp__5802__auto__ \x3d devtools.formatters.find_fn_in_debug_ns(\x22log_exception\x22);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar log_exception \x3d temp__5802__auto__;\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(log_exception,args);\n} else {\nreturn null;\n}\n}));\n\n(devtools.formatters.log_exception_if_avail.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(devtools.formatters.log_exception_if_avail.cljs$lang$applyTo \x3d (function (seq15726){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq15726));\n}));\n\ndevtools.formatters.monitor_api_calls \x3d (function devtools$formatters$monitor_api_calls(name,api_call){\nreturn (function() { \nvar G__15748__delegate \x3d function (args){\nif(cljs.core.not(devtools.formatters._STAR_monitor_enabled_STAR_)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(api_call,args);\n} else {\nreturn devtools.formatters.monitor_api_call_if_avail(name,api_call,args);\n}\n};\nvar G__15748 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15749__i \x3d 0, G__15749__a \x3d new Array(arguments.length -  0);\nwhile (G__15749__i \x3c G__15749__a.length) {G__15749__a[G__15749__i] \x3d arguments[G__15749__i + 0]; ++G__15749__i;}\n  args \x3d new cljs.core.IndexedSeq(G__15749__a,0,null);\n} \nreturn G__15748__delegate.call(this,args);};\nG__15748.cljs$lang$maxFixedArity \x3d 0;\nG__15748.cljs$lang$applyTo \x3d (function (arglist__15750){\nvar args \x3d cljs.core.seq(arglist__15750);\nreturn G__15748__delegate(args);\n});\nG__15748.cljs$core$IFn$_invoke$arity$variadic \x3d G__15748__delegate;\nreturn G__15748;\n})()\n;\n});\ndevtools.formatters.sanitize \x3d (function devtools$formatters$sanitize(name,api_call){\nreturn (function() { \nvar G__15751__delegate \x3d function (args){\nif(cljs.core.not(devtools.formatters._STAR_sanitizer_enabled_STAR_)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(api_call,args);\n} else {\ntry{return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(api_call,args);\n}catch (e15728){var e \x3d e15728;\ndevtools.formatters.log_exception_if_avail.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[cljs.core.str.cljs$core$IFn$_invoke$arity$1(name),\x22: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(\x27\x27)], 0));\n\nreturn null;\n}}\n};\nvar G__15751 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__15754__i \x3d 0, G__15754__a \x3d new Array(arguments.length -  0);\nwhile (G__15754__i \x3c G__15754__a.length) {G__15754__a[G__15754__i] \x3d arguments[G__15754__i + 0]; ++G__15754__i;}\n  args \x3d new cljs.core.IndexedSeq(G__15754__a,0,null);\n} \nreturn G__15751__delegate.call(this,args);};\nG__15751.cljs$lang$maxFixedArity \x3d 0;\nG__15751.cljs$lang$applyTo \x3d (function (arglist__15755){\nvar args \x3d cljs.core.seq(arglist__15755);\nreturn G__15751__delegate(args);\n});\nG__15751.cljs$core$IFn$_invoke$arity$variadic \x3d G__15751__delegate;\nreturn G__15751;\n})()\n;\n});\ndevtools.formatters.build_cljs_formatter \x3d (function devtools$formatters$build_cljs_formatter(){\nvar wrap \x3d (function (name,api_call){\nvar monitor \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.monitor_api_calls,name);\nvar sanitizer \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$2(devtools.formatters.sanitize,name);\ncljs.core.comp.cljs$core$IFn$_invoke$arity$2(monitor,sanitizer)(api_call);\n\nreturn api_call;\n});\nvar formatter \x3d (new devtools.formatters.CLJSDevtoolsFormatter());\nvar define_BANG_ \x3d (function (name,fn){\nreturn (formatter[name] \x3d wrap(name,fn));\n});\ndefine_BANG_(\x22header\x22,devtools.formatters.core.header_api_call);\n\ndefine_BANG_(\x22hasBody\x22,devtools.formatters.core.has_body_api_call);\n\ndefine_BANG_(\x22body\x22,devtools.formatters.core.body_api_call);\n\nreturn formatter;\n});\ndevtools.formatters.is_ours_QMARK_ \x3d (function devtools$formatters$is_ours_QMARK_(o){\nreturn (o instanceof devtools.formatters.CLJSDevtoolsFormatter);\n});\ndevtools.formatters.install_our_formatter_BANG_ \x3d (function devtools$formatters$install_our_formatter_BANG_(formatter){\nvar formatters \x3d devtools.util.get_formatters_safe().slice();\nformatters.push(formatter);\n\ndevtools.util.set_formatters_safe_BANG_(formatters);\n\nif(cljs.core.truth_(devtools.prefs.pref(new cljs.core.Keyword(null,\x22legacy-formatter\x22,\x22legacy-formatter\x22,-1954119499)))){\nreturn (devtools.context.get_root.call(null)[devtools.formatters.obsolete_formatter_key] \x3d formatter);\n} else {\nreturn null;\n}\n});\ndevtools.formatters.uninstall_our_formatters_BANG_ \x3d (function devtools$formatters$uninstall_our_formatters_BANG_(){\nvar new_formatters \x3d cljs.core.remove.cljs$core$IFn$_invoke$arity$2(devtools.formatters.is_ours_QMARK_,cljs.core.vec(devtools.util.get_formatters_safe()));\nvar new_formatters_js \x3d ((cljs.core.empty_QMARK_(new_formatters))?null:cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(new_formatters));\nreturn devtools.util.set_formatters_safe_BANG_(new_formatters_js);\n});\ndevtools.formatters.installed_QMARK_ \x3d (function devtools$formatters$installed_QMARK_(){\nreturn devtools.formatters._STAR_installed_STAR_;\n});\ndevtools.formatters.install_BANG_ \x3d (function devtools$formatters$install_BANG_(){\nif(cljs.core.truth_(devtools.formatters._STAR_installed_STAR_)){\nreturn null;\n} else {\n(devtools.formatters._STAR_installed_STAR_ \x3d true);\n\ndevtools.formatters.install_our_formatter_BANG_(devtools.formatters.build_cljs_formatter());\n\nreturn true;\n}\n});\ndevtools.formatters.uninstall_BANG_ \x3d (function devtools$formatters$uninstall_BANG_(){\nif(cljs.core.truth_(devtools.formatters._STAR_installed_STAR_)){\n(devtools.formatters._STAR_installed_STAR_ \x3d false);\n\nreturn devtools.formatters.uninstall_our_formatters_BANG_();\n} else {\nreturn null;\n}\n});\ndevtools.formatters.present_QMARK_ \x3d (function devtools$formatters$present_QMARK_(){\nvar formatters \x3d devtools.util.get_formatters_safe();\nreturn cljs.core.boolean$(cljs.core.some(devtools.formatters.is_ours_QMARK_,formatters));\n});\n");
SHADOW_ENV.evalLoad("goog.debug.entrypointregistry.js", true , "goog.provide(\x22goog.debug.EntryPointMonitor\x22);\ngoog.provide(\x22goog.debug.entryPointRegistry\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.debug.entryPointRegistry.EntryPointMonitor \x3d function() {\n};\ngoog.debug.entryPointRegistry.EntryPointMonitor.prototype.wrap;\ngoog.debug.entryPointRegistry.EntryPointMonitor.prototype.unwrap;\ngoog.debug.EntryPointMonitor \x3d goog.debug.entryPointRegistry.EntryPointMonitor;\ngoog.debug.entryPointRegistry.refList_ \x3d [];\ngoog.debug.entryPointRegistry.monitors_ \x3d [];\ngoog.debug.entryPointRegistry.monitorsMayExist_ \x3d false;\ngoog.debug.entryPointRegistry.register \x3d function(callback) {\n  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] \x3d callback;\n  if (goog.debug.entryPointRegistry.monitorsMayExist_) {\n    var monitors \x3d goog.debug.entryPointRegistry.monitors_;\n    for (var i \x3d 0; i \x3c monitors.length; i++) {\n      callback(goog.bind(monitors[i].wrap, monitors[i]));\n    }\n  }\n};\ngoog.debug.entryPointRegistry.monitorAll \x3d function(monitor) {\n  goog.debug.entryPointRegistry.monitorsMayExist_ \x3d true;\n  var transformer \x3d goog.bind(monitor.wrap, monitor);\n  for (var i \x3d 0; i \x3c goog.debug.entryPointRegistry.refList_.length; i++) {\n    goog.debug.entryPointRegistry.refList_[i](transformer);\n  }\n  goog.debug.entryPointRegistry.monitors_.push(monitor);\n};\ngoog.debug.entryPointRegistry.unmonitorAllIfPossible \x3d function(monitor) {\n  var monitors \x3d goog.debug.entryPointRegistry.monitors_;\n  goog.asserts.assert(monitor \x3d\x3d monitors[monitors.length - 1], \x22Only the most recent monitor can be unwrapped.\x22);\n  var transformer \x3d goog.bind(monitor.unwrap, monitor);\n  for (var i \x3d 0; i \x3c goog.debug.entryPointRegistry.refList_.length; i++) {\n    goog.debug.entryPointRegistry.refList_[i](transformer);\n  }\n  monitors.length--;\n};\n");
SHADOW_ENV.evalLoad("goog.dom.browserfeature.js", true , "goog.provide(\x22goog.dom.BrowserFeature\x22);\ngoog.require(\x22goog.userAgent\x22);\ngoog.dom.BrowserFeature.ASSUME_NO_OFFSCREEN_CANVAS \x3d goog.define(\x22goog.dom.ASSUME_NO_OFFSCREEN_CANVAS\x22, false);\ngoog.dom.BrowserFeature.ASSUME_OFFSCREEN_CANVAS \x3d goog.define(\x22goog.dom.ASSUME_OFFSCREEN_CANVAS\x22, false);\ngoog.dom.BrowserFeature.detectOffscreenCanvas_ \x3d function(contextName) {\n  try {\n    return Boolean((new self.OffscreenCanvas(0, 0)).getContext(contextName));\n  } catch (ex) {\n  }\n  return false;\n};\ngoog.dom.BrowserFeature.OFFSCREEN_CANVAS_2D \x3d !goog.dom.BrowserFeature.ASSUME_NO_OFFSCREEN_CANVAS \x26\x26 (goog.dom.BrowserFeature.ASSUME_OFFSCREEN_CANVAS || goog.dom.BrowserFeature.detectOffscreenCanvas_(\x222d\x22));\ngoog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES \x3d true;\ngoog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE \x3d true;\ngoog.dom.BrowserFeature.CAN_USE_INNER_TEXT \x3d false;\ngoog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY \x3d goog.userAgent.IE || goog.userAgent.WEBKIT;\ngoog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT \x3d goog.userAgent.IE;\n");
SHADOW_ENV.evalLoad("goog.math.math.js", true , "goog.provide(\x22goog.math\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.math.randomInt \x3d function(a) {\n  return Math.floor(Math.random() * a);\n};\ngoog.math.uniformRandom \x3d function(a, b) {\n  return a + Math.random() * (b - a);\n};\ngoog.math.clamp \x3d function(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n};\ngoog.math.modulo \x3d function(a, b) {\n  var r \x3d a % b;\n  return r * b \x3c 0 ? r + b : r;\n};\ngoog.math.lerp \x3d function(a, b, x) {\n  return a + x * (b - a);\n};\ngoog.math.nearlyEquals \x3d function(a, b, opt_tolerance) {\n  return Math.abs(a - b) \x3c\x3d (opt_tolerance || 0.000001);\n};\ngoog.math.standardAngle \x3d function(angle) {\n  return goog.math.modulo(angle, 360);\n};\ngoog.math.standardAngleInRadians \x3d function(angle) {\n  return goog.math.modulo(angle, 2 * Math.PI);\n};\ngoog.math.toRadians \x3d function(angleDegrees) {\n  return angleDegrees * Math.PI / 180;\n};\ngoog.math.toDegrees \x3d function(angleRadians) {\n  return angleRadians * 180 / Math.PI;\n};\ngoog.math.angleDx \x3d function(degrees, radius) {\n  return radius * Math.cos(goog.math.toRadians(degrees));\n};\ngoog.math.angleDy \x3d function(degrees, radius) {\n  return radius * Math.sin(goog.math.toRadians(degrees));\n};\ngoog.math.angle \x3d function(x1, y1, x2, y2) {\n  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));\n};\ngoog.math.angleDifference \x3d function(startAngle, endAngle) {\n  var d \x3d goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);\n  if (d \x3e 180) {\n    d \x3d d - 360;\n  } else if (d \x3c\x3d -180) {\n    d \x3d 360 + d;\n  }\n  return d;\n};\ngoog.math.sign \x3d function(x) {\n  if (x \x3e 0) {\n    return 1;\n  }\n  if (x \x3c 0) {\n    return -1;\n  }\n  return x;\n};\ngoog.math.longestCommonSubsequence \x3d function(array1, array2, opt_compareFn, opt_collectorFn) {\n  var compare \x3d opt_compareFn || function(a, b) {\n    return a \x3d\x3d b;\n  };\n  var collect \x3d opt_collectorFn || function(i1, i2) {\n    return array1[i1];\n  };\n  var length1 \x3d array1.length;\n  var length2 \x3d array2.length;\n  var arr \x3d [];\n  for (var i \x3d 0; i \x3c length1 + 1; i++) {\n    arr[i] \x3d [];\n    arr[i][0] \x3d 0;\n  }\n  for (var j \x3d 0; j \x3c length2 + 1; j++) {\n    arr[0][j] \x3d 0;\n  }\n  for (i \x3d 1; i \x3c\x3d length1; i++) {\n    for (j \x3d 1; j \x3c\x3d length2; j++) {\n      if (compare(array1[i - 1], array2[j - 1])) {\n        arr[i][j] \x3d arr[i - 1][j - 1] + 1;\n      } else {\n        arr[i][j] \x3d Math.max(arr[i - 1][j], arr[i][j - 1]);\n      }\n    }\n  }\n  var result \x3d [];\n  var i \x3d length1, j \x3d length2;\n  while (i \x3e 0 \x26\x26 j \x3e 0) {\n    if (compare(array1[i - 1], array2[j - 1])) {\n      result.unshift(collect(i - 1, j - 1));\n      i--;\n      j--;\n    } else {\n      if (arr[i - 1][j] \x3e arr[i][j - 1]) {\n        i--;\n      } else {\n        j--;\n      }\n    }\n  }\n  return result;\n};\ngoog.math.sum \x3d function(var_args) {\n  return Array.prototype.reduce.call(arguments, function(sum, value) {\n    return sum + value;\n  }, 0);\n};\ngoog.math.average \x3d function(var_args) {\n  return goog.math.sum.apply(null, arguments) / arguments.length;\n};\ngoog.math.sampleVariance \x3d function(var_args) {\n  var sampleSize \x3d arguments.length;\n  if (sampleSize \x3c 2) {\n    return 0;\n  }\n  var mean \x3d goog.math.average.apply(null, arguments);\n  var variance \x3d goog.math.sum.apply(null, Array.prototype.map.call(arguments, function(val) {\n    return Math.pow(val - mean, 2);\n  })) / (sampleSize - 1);\n  return variance;\n};\ngoog.math.standardDeviation \x3d function(var_args) {\n  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));\n};\ngoog.math.isInt \x3d function(num) {\n  return isFinite(num) \x26\x26 num % 1 \x3d\x3d 0;\n};\ngoog.math.isFiniteNumber \x3d function(num) {\n  return isFinite(num);\n};\ngoog.math.isNegativeZero \x3d function(num) {\n  return num \x3d\x3d 0 \x26\x26 1 / num \x3c 0;\n};\ngoog.math.log10Floor \x3d function(num) {\n  if (num \x3e 0) {\n    var x \x3d Math.round(Math.log(num) * Math.LOG10E);\n    return x - (parseFloat(\x221e\x22 + x) \x3e num ? 1 : 0);\n  }\n  return num \x3d\x3d 0 ? -Infinity : NaN;\n};\ngoog.math.safeFloor \x3d function(num, opt_epsilon) {\n  goog.asserts.assert(opt_epsilon \x3d\x3d\x3d undefined || opt_epsilon \x3e 0);\n  return Math.floor(num + (opt_epsilon || 2e-15));\n};\ngoog.math.safeCeil \x3d function(num, opt_epsilon) {\n  goog.asserts.assert(opt_epsilon \x3d\x3d\x3d undefined || opt_epsilon \x3e 0);\n  return Math.ceil(num - (opt_epsilon || 2e-15));\n};\n");
SHADOW_ENV.evalLoad("goog.math.coordinate.js", true , "goog.provide(\x22goog.math.Coordinate\x22);\ngoog.require(\x22goog.math\x22);\ngoog.math.Coordinate \x3d function(opt_x, opt_y) {\n  this.x \x3d opt_x !\x3d\x3d undefined ? opt_x : 0;\n  this.y \x3d opt_y !\x3d\x3d undefined ? opt_y : 0;\n};\ngoog.math.Coordinate.prototype.clone \x3d function() {\n  return new goog.math.Coordinate(this.x, this.y);\n};\nif (goog.DEBUG) {\n  goog.math.Coordinate.prototype.toString \x3d function() {\n    return \x22(\x22 + this.x + \x22, \x22 + this.y + \x22)\x22;\n  };\n}\ngoog.math.Coordinate.prototype.equals \x3d function(other) {\n  return other instanceof goog.math.Coordinate \x26\x26 goog.math.Coordinate.equals(this, other);\n};\ngoog.math.Coordinate.equals \x3d function(a, b) {\n  if (a \x3d\x3d b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  return a.x \x3d\x3d b.x \x26\x26 a.y \x3d\x3d b.y;\n};\ngoog.math.Coordinate.distance \x3d function(a, b) {\n  var dx \x3d a.x - b.x;\n  var dy \x3d a.y - b.y;\n  return Math.sqrt(dx * dx + dy * dy);\n};\ngoog.math.Coordinate.magnitude \x3d function(a) {\n  return Math.sqrt(a.x * a.x + a.y * a.y);\n};\ngoog.math.Coordinate.azimuth \x3d function(a) {\n  return goog.math.angle(0, 0, a.x, a.y);\n};\ngoog.math.Coordinate.squaredDistance \x3d function(a, b) {\n  var dx \x3d a.x - b.x;\n  var dy \x3d a.y - b.y;\n  return dx * dx + dy * dy;\n};\ngoog.math.Coordinate.difference \x3d function(a, b) {\n  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);\n};\ngoog.math.Coordinate.sum \x3d function(a, b) {\n  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);\n};\ngoog.math.Coordinate.prototype.ceil \x3d function() {\n  this.x \x3d Math.ceil(this.x);\n  this.y \x3d Math.ceil(this.y);\n  return this;\n};\ngoog.math.Coordinate.prototype.floor \x3d function() {\n  this.x \x3d Math.floor(this.x);\n  this.y \x3d Math.floor(this.y);\n  return this;\n};\ngoog.math.Coordinate.prototype.round \x3d function() {\n  this.x \x3d Math.round(this.x);\n  this.y \x3d Math.round(this.y);\n  return this;\n};\ngoog.math.Coordinate.prototype.translate \x3d function(tx, opt_ty) {\n  if (tx instanceof goog.math.Coordinate) {\n    this.x +\x3d tx.x;\n    this.y +\x3d tx.y;\n  } else {\n    this.x +\x3d Number(tx);\n    if (typeof opt_ty \x3d\x3d\x3d \x22number\x22) {\n      this.y +\x3d opt_ty;\n    }\n  }\n  return this;\n};\ngoog.math.Coordinate.prototype.scale \x3d function(sx, opt_sy) {\n  var sy \x3d typeof opt_sy \x3d\x3d\x3d \x22number\x22 ? opt_sy : sx;\n  this.x *\x3d sx;\n  this.y *\x3d sy;\n  return this;\n};\ngoog.math.Coordinate.prototype.rotateRadians \x3d function(radians, opt_center) {\n  var center \x3d opt_center || new goog.math.Coordinate(0, 0);\n  var x \x3d this.x;\n  var y \x3d this.y;\n  var cos \x3d Math.cos(radians);\n  var sin \x3d Math.sin(radians);\n  this.x \x3d (x - center.x) * cos - (y - center.y) * sin + center.x;\n  this.y \x3d (x - center.x) * sin + (y - center.y) * cos + center.y;\n};\ngoog.math.Coordinate.prototype.rotateDegrees \x3d function(degrees, opt_center) {\n  this.rotateRadians(goog.math.toRadians(degrees), opt_center);\n};\n");
SHADOW_ENV.evalLoad("goog.math.size.js", true , "goog.provide(\x22goog.math.Size\x22);\ngoog.math.Size \x3d function(width, height) {\n  this.width \x3d width;\n  this.height \x3d height;\n};\ngoog.math.Size.equals \x3d function(a, b) {\n  if (a \x3d\x3d b) {\n    return true;\n  }\n  if (!a || !b) {\n    return false;\n  }\n  return a.width \x3d\x3d b.width \x26\x26 a.height \x3d\x3d b.height;\n};\ngoog.math.Size.prototype.clone \x3d function() {\n  return new goog.math.Size(this.width, this.height);\n};\nif (goog.DEBUG) {\n  goog.math.Size.prototype.toString \x3d function() {\n    return \x22(\x22 + this.width + \x22 x \x22 + this.height + \x22)\x22;\n  };\n}\ngoog.math.Size.prototype.getLongest \x3d function() {\n  return Math.max(this.width, this.height);\n};\ngoog.math.Size.prototype.getShortest \x3d function() {\n  return Math.min(this.width, this.height);\n};\ngoog.math.Size.prototype.area \x3d function() {\n  return this.width * this.height;\n};\ngoog.math.Size.prototype.perimeter \x3d function() {\n  return (this.width + this.height) * 2;\n};\ngoog.math.Size.prototype.aspectRatio \x3d function() {\n  return this.width / this.height;\n};\ngoog.math.Size.prototype.isEmpty \x3d function() {\n  return !this.area();\n};\ngoog.math.Size.prototype.ceil \x3d function() {\n  this.width \x3d Math.ceil(this.width);\n  this.height \x3d Math.ceil(this.height);\n  return this;\n};\ngoog.math.Size.prototype.fitsInside \x3d function(target) {\n  return this.width \x3c\x3d target.width \x26\x26 this.height \x3c\x3d target.height;\n};\ngoog.math.Size.prototype.floor \x3d function() {\n  this.width \x3d Math.floor(this.width);\n  this.height \x3d Math.floor(this.height);\n  return this;\n};\ngoog.math.Size.prototype.round \x3d function() {\n  this.width \x3d Math.round(this.width);\n  this.height \x3d Math.round(this.height);\n  return this;\n};\ngoog.math.Size.prototype.scale \x3d function(sx, opt_sy) {\n  const sy \x3d typeof opt_sy \x3d\x3d\x3d \x22number\x22 ? opt_sy : sx;\n  this.width *\x3d sx;\n  this.height *\x3d sy;\n  return this;\n};\ngoog.math.Size.prototype.scaleToCover \x3d function(target) {\n  const s \x3d this.aspectRatio() \x3c\x3d target.aspectRatio() ? target.width / this.width : target.height / this.height;\n  return this.scale(s);\n};\ngoog.math.Size.prototype.scaleToFit \x3d function(target) {\n  const s \x3d this.aspectRatio() \x3e target.aspectRatio() ? target.width / this.width : target.height / this.height;\n  return this.scale(s);\n};\n");
SHADOW_ENV.evalLoad("goog.dom.dom.js", true , "goog.provide(\x22goog.dom\x22);\ngoog.provide(\x22goog.dom.Appendable\x22);\ngoog.provide(\x22goog.dom.DomHelper\x22);\ngoog.require(\x22goog.array\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.dom.BrowserFeature\x22);\ngoog.require(\x22goog.dom.NodeType\x22);\ngoog.require(\x22goog.dom.TagName\x22);\ngoog.require(\x22goog.dom.safe\x22);\ngoog.require(\x22goog.html.SafeHtml\x22);\ngoog.require(\x22goog.html.uncheckedconversions\x22);\ngoog.require(\x22goog.math.Coordinate\x22);\ngoog.require(\x22goog.math.Size\x22);\ngoog.require(\x22goog.object\x22);\ngoog.require(\x22goog.string\x22);\ngoog.require(\x22goog.string.Const\x22);\ngoog.require(\x22goog.string.Unicode\x22);\ngoog.require(\x22goog.userAgent\x22);\ngoog.dom.ASSUME_QUIRKS_MODE \x3d goog.define(\x22goog.dom.ASSUME_QUIRKS_MODE\x22, false);\ngoog.dom.ASSUME_STANDARDS_MODE \x3d goog.define(\x22goog.dom.ASSUME_STANDARDS_MODE\x22, false);\ngoog.dom.COMPAT_MODE_KNOWN_ \x3d goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;\ngoog.dom.getDomHelper \x3d function(opt_element) {\n  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ \x3d new goog.dom.DomHelper());\n};\ngoog.dom.defaultDomHelper_;\ngoog.dom.getDocument \x3d function() {\n  return document;\n};\ngoog.dom.getElement \x3d function(element) {\n  return goog.dom.getElementHelper_(document, element);\n};\ngoog.dom.getHTMLElement \x3d function(id) {\n  const element \x3d goog.dom.getElement(id);\n  if (!element) {\n    return null;\n  }\n  return goog.asserts.assertInstanceof(element, HTMLElement);\n};\ngoog.dom.getElementHelper_ \x3d function(doc, element) {\n  return typeof element \x3d\x3d\x3d \x22string\x22 ? doc.getElementById(element) : element;\n};\ngoog.dom.getRequiredElement \x3d function(id) {\n  return goog.dom.getRequiredElementHelper_(document, id);\n};\ngoog.dom.getRequiredHTMLElement \x3d function(id) {\n  return goog.asserts.assertInstanceof(goog.dom.getRequiredElementHelper_(document, id), HTMLElement);\n};\ngoog.dom.getRequiredElementHelper_ \x3d function(doc, id) {\n  goog.asserts.assertString(id);\n  var element \x3d goog.dom.getElementHelper_(doc, id);\n  element \x3d goog.asserts.assertElement(element, \x22No element found with id: \x22 + id);\n  return element;\n};\ngoog.dom.$ \x3d goog.dom.getElement;\ngoog.dom.getElementsByTagName \x3d function(tagName, opt_parent) {\n  var parent \x3d opt_parent || document;\n  return parent.getElementsByTagName(String(tagName));\n};\ngoog.dom.getElementsByTagNameAndClass \x3d function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);\n};\ngoog.dom.getElementByTagNameAndClass \x3d function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(document, opt_tag, opt_class, opt_el);\n};\ngoog.dom.getElementsByClass \x3d function(className, opt_el) {\n  var parent \x3d opt_el || document;\n  if (goog.dom.canUseQuerySelector_(parent)) {\n    return parent.querySelectorAll(\x22.\x22 + className);\n  }\n  return goog.dom.getElementsByTagNameAndClass_(document, \x22*\x22, className, opt_el);\n};\ngoog.dom.getElementByClass \x3d function(className, opt_el) {\n  var parent \x3d opt_el || document;\n  var retVal \x3d null;\n  if (parent.getElementsByClassName) {\n    retVal \x3d parent.getElementsByClassName(className)[0];\n  } else {\n    retVal \x3d goog.dom.getElementByTagNameAndClass_(document, \x22*\x22, className, opt_el);\n  }\n  return retVal || null;\n};\ngoog.dom.getHTMLElementByClass \x3d function(className, opt_parent) {\n  const element \x3d goog.dom.getElementByClass(className, opt_parent);\n  if (!element) {\n    return null;\n  }\n  return goog.asserts.assertInstanceof(element, HTMLElement);\n};\ngoog.dom.getRequiredElementByClass \x3d function(className, opt_root) {\n  var retValue \x3d goog.dom.getElementByClass(className, opt_root);\n  return goog.asserts.assert(retValue, \x22No element found with className: \x22 + className);\n};\ngoog.dom.getRequiredHTMLElementByClass \x3d function(className, opt_parent) {\n  const retValue \x3d goog.dom.getElementByClass(className, opt_parent);\n  return goog.asserts.assertInstanceof(retValue, HTMLElement, \x22No HTMLElement found with className: \x22 + className);\n};\ngoog.dom.canUseQuerySelector_ \x3d function(parent) {\n  return !!(parent.querySelectorAll \x26\x26 parent.querySelector);\n};\ngoog.dom.getElementsByTagNameAndClass_ \x3d function(doc, opt_tag, opt_class, opt_el) {\n  var parent \x3d opt_el || doc;\n  var tagName \x3d opt_tag \x26\x26 opt_tag !\x3d \x22*\x22 ? String(opt_tag).toUpperCase() : \x22\x22;\n  if (goog.dom.canUseQuerySelector_(parent) \x26\x26 (tagName || opt_class)) {\n    var query \x3d tagName + (opt_class ? \x22.\x22 + opt_class : \x22\x22);\n    return parent.querySelectorAll(query);\n  }\n  if (opt_class \x26\x26 parent.getElementsByClassName) {\n    var els \x3d parent.getElementsByClassName(opt_class);\n    if (tagName) {\n      var arrayLike \x3d {};\n      var len \x3d 0;\n      for (var i \x3d 0, el; el \x3d els[i]; i++) {\n        if (tagName \x3d\x3d el.nodeName) {\n          arrayLike[len++] \x3d el;\n        }\n      }\n      arrayLike.length \x3d len;\n      return arrayLike;\n    } else {\n      return els;\n    }\n  }\n  var els \x3d parent.getElementsByTagName(tagName || \x22*\x22);\n  if (opt_class) {\n    var arrayLike \x3d {};\n    var len \x3d 0;\n    for (var i \x3d 0, el; el \x3d els[i]; i++) {\n      var className \x3d el.className;\n      if (typeof className.split \x3d\x3d \x22function\x22 \x26\x26 goog.array.contains(className.split(/\\s+/), opt_class)) {\n        arrayLike[len++] \x3d el;\n      }\n    }\n    arrayLike.length \x3d len;\n    return arrayLike;\n  } else {\n    return els;\n  }\n};\ngoog.dom.getElementByTagNameAndClass_ \x3d function(doc, opt_tag, opt_class, opt_el) {\n  var parent \x3d opt_el || doc;\n  var tag \x3d opt_tag \x26\x26 opt_tag !\x3d \x22*\x22 ? String(opt_tag).toUpperCase() : \x22\x22;\n  if (goog.dom.canUseQuerySelector_(parent) \x26\x26 (tag || opt_class)) {\n    return parent.querySelector(tag + (opt_class ? \x22.\x22 + opt_class : \x22\x22));\n  }\n  var elements \x3d goog.dom.getElementsByTagNameAndClass_(doc, opt_tag, opt_class, opt_el);\n  return elements[0] || null;\n};\ngoog.dom.$$ \x3d goog.dom.getElementsByTagNameAndClass;\ngoog.dom.setProperties \x3d function(element, properties) {\n  goog.object.forEach(properties, function(val, key) {\n    if (val \x26\x26 typeof val \x3d\x3d \x22object\x22 \x26\x26 val.implementsGoogStringTypedString) {\n      val \x3d val.getTypedStringValue();\n    }\n    if (key \x3d\x3d \x22style\x22) {\n      element.style.cssText \x3d val;\n    } else if (key \x3d\x3d \x22class\x22) {\n      element.className \x3d val;\n    } else if (key \x3d\x3d \x22for\x22) {\n      element.htmlFor \x3d val;\n    } else if (goog.dom.DIRECT_ATTRIBUTE_MAP_.hasOwnProperty(key)) {\n      element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);\n    } else if (goog.string.startsWith(key, \x22aria-\x22) || goog.string.startsWith(key, \x22data-\x22)) {\n      element.setAttribute(key, val);\n    } else {\n      element[key] \x3d val;\n    }\n  });\n};\ngoog.dom.DIRECT_ATTRIBUTE_MAP_ \x3d {\x22cellpadding\x22:\x22cellPadding\x22, \x22cellspacing\x22:\x22cellSpacing\x22, \x22colspan\x22:\x22colSpan\x22, \x22frameborder\x22:\x22frameBorder\x22, \x22height\x22:\x22height\x22, \x22maxlength\x22:\x22maxLength\x22, \x22nonce\x22:\x22nonce\x22, \x22role\x22:\x22role\x22, \x22rowspan\x22:\x22rowSpan\x22, \x22type\x22:\x22type\x22, \x22usemap\x22:\x22useMap\x22, \x22valign\x22:\x22vAlign\x22, \x22width\x22:\x22width\x22};\ngoog.dom.getViewportSize \x3d function(opt_window) {\n  return goog.dom.getViewportSize_(opt_window || window);\n};\ngoog.dom.getViewportSize_ \x3d function(win) {\n  var doc \x3d win.document;\n  var el \x3d goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;\n  return new goog.math.Size(el.clientWidth, el.clientHeight);\n};\ngoog.dom.getDocumentHeight \x3d function() {\n  return goog.dom.getDocumentHeight_(window);\n};\ngoog.dom.getDocumentHeightForWindow \x3d function(win) {\n  return goog.dom.getDocumentHeight_(win);\n};\ngoog.dom.getDocumentHeight_ \x3d function(win) {\n  var doc \x3d win.document;\n  var height \x3d 0;\n  if (doc) {\n    var body \x3d doc.body;\n    var docEl \x3d doc.documentElement;\n    if (!(docEl \x26\x26 body)) {\n      return 0;\n    }\n    var vh \x3d goog.dom.getViewportSize_(win).height;\n    if (goog.dom.isCss1CompatMode_(doc) \x26\x26 docEl.scrollHeight) {\n      height \x3d docEl.scrollHeight !\x3d vh ? docEl.scrollHeight : docEl.offsetHeight;\n    } else {\n      var sh \x3d docEl.scrollHeight;\n      var oh \x3d docEl.offsetHeight;\n      if (docEl.clientHeight !\x3d oh) {\n        sh \x3d body.scrollHeight;\n        oh \x3d body.offsetHeight;\n      }\n      if (sh \x3e vh) {\n        height \x3d sh \x3e oh ? sh : oh;\n      } else {\n        height \x3d sh \x3c oh ? sh : oh;\n      }\n    }\n  }\n  return height;\n};\ngoog.dom.getPageScroll \x3d function(opt_window) {\n  var win \x3d opt_window || goog.global || window;\n  return goog.dom.getDomHelper(win.document).getDocumentScroll();\n};\ngoog.dom.getDocumentScroll \x3d function() {\n  return goog.dom.getDocumentScroll_(document);\n};\ngoog.dom.getDocumentScroll_ \x3d function(doc) {\n  var el \x3d goog.dom.getDocumentScrollElement_(doc);\n  var win \x3d goog.dom.getWindow_(doc);\n  if (goog.userAgent.IE \x26\x26 goog.userAgent.isVersionOrHigher(\x2210\x22) \x26\x26 win.pageYOffset !\x3d el.scrollTop) {\n    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);\n  }\n  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);\n};\ngoog.dom.getDocumentScrollElement \x3d function() {\n  return goog.dom.getDocumentScrollElement_(document);\n};\ngoog.dom.getDocumentScrollElement_ \x3d function(doc) {\n  if (doc.scrollingElement) {\n    return doc.scrollingElement;\n  }\n  if (!goog.userAgent.WEBKIT \x26\x26 goog.dom.isCss1CompatMode_(doc)) {\n    return doc.documentElement;\n  }\n  return doc.body || doc.documentElement;\n};\ngoog.dom.getWindow \x3d function(opt_doc) {\n  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;\n};\ngoog.dom.getWindow_ \x3d function(doc) {\n  return doc.parentWindow || doc.defaultView;\n};\ngoog.dom.createDom \x3d function(tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(document, arguments);\n};\ngoog.dom.createDom_ \x3d function(doc, args) {\n  var tagName \x3d String(args[0]);\n  var attributes \x3d args[1];\n  var element \x3d goog.dom.createElement_(doc, tagName);\n  if (attributes) {\n    if (typeof attributes \x3d\x3d\x3d \x22string\x22) {\n      element.className \x3d attributes;\n    } else if (Array.isArray(attributes)) {\n      element.className \x3d attributes.join(\x22 \x22);\n    } else {\n      goog.dom.setProperties(element, attributes);\n    }\n  }\n  if (args.length \x3e 2) {\n    goog.dom.append_(doc, element, args, 2);\n  }\n  return element;\n};\ngoog.dom.append_ \x3d function(doc, parent, args, startIndex) {\n  function childHandler(child) {\n    if (child) {\n      parent.appendChild(typeof child \x3d\x3d\x3d \x22string\x22 ? doc.createTextNode(child) : child);\n    }\n  }\n  for (var i \x3d startIndex; i \x3c args.length; i++) {\n    var arg \x3d args[i];\n    if (goog.isArrayLike(arg) \x26\x26 !goog.dom.isNodeLike(arg)) {\n      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);\n    } else {\n      childHandler(arg);\n    }\n  }\n};\ngoog.dom.$dom \x3d goog.dom.createDom;\ngoog.dom.createElement \x3d function(name) {\n  return goog.dom.createElement_(document, name);\n};\ngoog.dom.createElement_ \x3d function(doc, name) {\n  name \x3d String(name);\n  if (doc.contentType \x3d\x3d\x3d \x22application/xhtml+xml\x22) {\n    name \x3d name.toLowerCase();\n  }\n  return doc.createElement(name);\n};\ngoog.dom.createTextNode \x3d function(content) {\n  return document.createTextNode(String(content));\n};\ngoog.dom.createTable \x3d function(rows, columns, opt_fillWithNbsp) {\n  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);\n};\ngoog.dom.createTable_ \x3d function(doc, rows, columns, fillWithNbsp) {\n  var table \x3d goog.dom.createElement_(doc, goog.dom.TagName.TABLE);\n  var tbody \x3d table.appendChild(goog.dom.createElement_(doc, goog.dom.TagName.TBODY));\n  for (var i \x3d 0; i \x3c rows; i++) {\n    var tr \x3d goog.dom.createElement_(doc, goog.dom.TagName.TR);\n    for (var j \x3d 0; j \x3c columns; j++) {\n      var td \x3d goog.dom.createElement_(doc, goog.dom.TagName.TD);\n      if (fillWithNbsp) {\n        goog.dom.setTextContent(td, goog.string.Unicode.NBSP);\n      }\n      tr.appendChild(td);\n    }\n    tbody.appendChild(tr);\n  }\n  return table;\n};\ngoog.dom.constHtmlToNode \x3d function(var_args) {\n  var stringArray \x3d Array.prototype.map.call(arguments, goog.string.Const.unwrap);\n  var safeHtml \x3d goog.html.uncheckedconversions.safeHtmlFromStringKnownToSatisfyTypeContract(goog.string.Const.from(\x22Constant HTML string, that gets turned into a \x22 + \x22Node later, so it will be automatically balanced.\x22), stringArray.join(\x22\x22));\n  return goog.dom.safeHtmlToNode(safeHtml);\n};\ngoog.dom.safeHtmlToNode \x3d function(html) {\n  return goog.dom.safeHtmlToNode_(document, html);\n};\ngoog.dom.safeHtmlToNode_ \x3d function(doc, html) {\n  var tempDiv \x3d goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {\n    goog.dom.safe.setInnerHtml(tempDiv, goog.html.SafeHtml.concat(goog.html.SafeHtml.BR, html));\n    tempDiv.removeChild(goog.asserts.assert(tempDiv.firstChild));\n  } else {\n    goog.dom.safe.setInnerHtml(tempDiv, html);\n  }\n  return goog.dom.childrenToNode_(doc, tempDiv);\n};\ngoog.dom.childrenToNode_ \x3d function(doc, tempDiv) {\n  if (tempDiv.childNodes.length \x3d\x3d 1) {\n    return tempDiv.removeChild(goog.asserts.assert(tempDiv.firstChild));\n  } else {\n    var fragment \x3d doc.createDocumentFragment();\n    while (tempDiv.firstChild) {\n      fragment.appendChild(tempDiv.firstChild);\n    }\n    return fragment;\n  }\n};\ngoog.dom.isCss1CompatMode \x3d function() {\n  return goog.dom.isCss1CompatMode_(document);\n};\ngoog.dom.isCss1CompatMode_ \x3d function(doc) {\n  if (goog.dom.COMPAT_MODE_KNOWN_) {\n    return goog.dom.ASSUME_STANDARDS_MODE;\n  }\n  return doc.compatMode \x3d\x3d \x22CSS1Compat\x22;\n};\ngoog.dom.canHaveChildren \x3d function(node) {\n  if (node.nodeType !\x3d goog.dom.NodeType.ELEMENT) {\n    return false;\n  }\n  switch(node.tagName) {\n    case String(goog.dom.TagName.APPLET):\n    case String(goog.dom.TagName.AREA):\n    case String(goog.dom.TagName.BASE):\n    case String(goog.dom.TagName.BR):\n    case String(goog.dom.TagName.COL):\n    case String(goog.dom.TagName.COMMAND):\n    case String(goog.dom.TagName.EMBED):\n    case String(goog.dom.TagName.FRAME):\n    case String(goog.dom.TagName.HR):\n    case String(goog.dom.TagName.IMG):\n    case String(goog.dom.TagName.INPUT):\n    case String(goog.dom.TagName.IFRAME):\n    case String(goog.dom.TagName.ISINDEX):\n    case String(goog.dom.TagName.KEYGEN):\n    case String(goog.dom.TagName.LINK):\n    case String(goog.dom.TagName.NOFRAMES):\n    case String(goog.dom.TagName.NOSCRIPT):\n    case String(goog.dom.TagName.META):\n    case String(goog.dom.TagName.OBJECT):\n    case String(goog.dom.TagName.PARAM):\n    case String(goog.dom.TagName.SCRIPT):\n    case String(goog.dom.TagName.SOURCE):\n    case String(goog.dom.TagName.STYLE):\n    case String(goog.dom.TagName.TRACK):\n    case String(goog.dom.TagName.WBR):\n      return false;\n  }\n  return true;\n};\ngoog.dom.appendChild \x3d function(parent, child) {\n  goog.asserts.assert(parent !\x3d null \x26\x26 child !\x3d null, \x22goog.dom.appendChild expects non-null arguments\x22);\n  parent.appendChild(child);\n};\ngoog.dom.append \x3d function(parent, var_args) {\n  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);\n};\ngoog.dom.removeChildren \x3d function(node) {\n  var child;\n  while (child \x3d node.firstChild) {\n    node.removeChild(child);\n  }\n};\ngoog.dom.insertSiblingBefore \x3d function(newNode, refNode) {\n  goog.asserts.assert(newNode !\x3d null \x26\x26 refNode !\x3d null, \x22goog.dom.insertSiblingBefore expects non-null arguments\x22);\n  if (refNode.parentNode) {\n    refNode.parentNode.insertBefore(newNode, refNode);\n  }\n};\ngoog.dom.insertSiblingAfter \x3d function(newNode, refNode) {\n  goog.asserts.assert(newNode !\x3d null \x26\x26 refNode !\x3d null, \x22goog.dom.insertSiblingAfter expects non-null arguments\x22);\n  if (refNode.parentNode) {\n    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);\n  }\n};\ngoog.dom.insertChildAt \x3d function(parent, child, index) {\n  goog.asserts.assert(parent !\x3d null, \x22goog.dom.insertChildAt expects a non-null parent\x22);\n  parent.insertBefore(child, parent.childNodes[index] || null);\n};\ngoog.dom.removeNode \x3d function(node) {\n  return node \x26\x26 node.parentNode ? node.parentNode.removeChild(node) : null;\n};\ngoog.dom.replaceNode \x3d function(newNode, oldNode) {\n  goog.asserts.assert(newNode !\x3d null \x26\x26 oldNode !\x3d null, \x22goog.dom.replaceNode expects non-null arguments\x22);\n  var parent \x3d oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n};\ngoog.dom.copyContents \x3d function(target, source) {\n  goog.asserts.assert(target !\x3d null \x26\x26 source !\x3d null, \x22goog.dom.copyContents expects non-null arguments\x22);\n  var childNodes \x3d source.cloneNode(true).childNodes;\n  goog.dom.removeChildren(target);\n  while (childNodes.length) {\n    target.appendChild(childNodes[0]);\n  }\n};\ngoog.dom.flattenElement \x3d function(element) {\n  var child, parent \x3d element.parentNode;\n  if (parent \x26\x26 parent.nodeType !\x3d goog.dom.NodeType.DOCUMENT_FRAGMENT) {\n    if (element.removeNode) {\n      return element.removeNode(false);\n    } else {\n      while (child \x3d element.firstChild) {\n        parent.insertBefore(child, element);\n      }\n      return goog.dom.removeNode(element);\n    }\n  }\n};\ngoog.dom.getChildren \x3d function(element) {\n  if (element.children !\x3d undefined) {\n    return element.children;\n  }\n  return Array.prototype.filter.call(element.childNodes, function(node) {\n    return node.nodeType \x3d\x3d goog.dom.NodeType.ELEMENT;\n  });\n};\ngoog.dom.getFirstElementChild \x3d function(node) {\n  if (node.firstElementChild !\x3d\x3d undefined) {\n    return node.firstElementChild;\n  }\n  return goog.dom.getNextElementNode_(node.firstChild, true);\n};\ngoog.dom.getLastElementChild \x3d function(node) {\n  if (node.lastElementChild !\x3d\x3d undefined) {\n    return node.lastElementChild;\n  }\n  return goog.dom.getNextElementNode_(node.lastChild, false);\n};\ngoog.dom.getNextElementSibling \x3d function(node) {\n  if (node.nextElementSibling !\x3d\x3d undefined) {\n    return node.nextElementSibling;\n  }\n  return goog.dom.getNextElementNode_(node.nextSibling, true);\n};\ngoog.dom.getPreviousElementSibling \x3d function(node) {\n  if (node.previousElementSibling !\x3d\x3d undefined) {\n    return node.previousElementSibling;\n  }\n  return goog.dom.getNextElementNode_(node.previousSibling, false);\n};\ngoog.dom.getNextElementNode_ \x3d function(node, forward) {\n  while (node \x26\x26 node.nodeType !\x3d goog.dom.NodeType.ELEMENT) {\n    node \x3d forward ? node.nextSibling : node.previousSibling;\n  }\n  return node;\n};\ngoog.dom.getNextNode \x3d function(node) {\n  if (!node) {\n    return null;\n  }\n  if (node.firstChild) {\n    return node.firstChild;\n  }\n  while (node \x26\x26 !node.nextSibling) {\n    node \x3d node.parentNode;\n  }\n  return node ? node.nextSibling : null;\n};\ngoog.dom.getPreviousNode \x3d function(node) {\n  if (!node) {\n    return null;\n  }\n  if (!node.previousSibling) {\n    return node.parentNode;\n  }\n  node \x3d node.previousSibling;\n  while (node \x26\x26 node.lastChild) {\n    node \x3d node.lastChild;\n  }\n  return node;\n};\ngoog.dom.isNodeLike \x3d function(obj) {\n  return goog.isObject(obj) \x26\x26 obj.nodeType \x3e 0;\n};\ngoog.dom.isElement \x3d function(obj) {\n  return goog.isObject(obj) \x26\x26 obj.nodeType \x3d\x3d goog.dom.NodeType.ELEMENT;\n};\ngoog.dom.isWindow \x3d function(obj) {\n  return goog.isObject(obj) \x26\x26 obj[\x22window\x22] \x3d\x3d obj;\n};\ngoog.dom.getParentElement \x3d function(element) {\n  var parent;\n  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {\n    var isIe9 \x3d goog.userAgent.IE \x26\x26 goog.userAgent.isVersionOrHigher(\x229\x22) \x26\x26 !goog.userAgent.isVersionOrHigher(\x2210\x22);\n    if (!(isIe9 \x26\x26 goog.global[\x22SVGElement\x22] \x26\x26 element instanceof goog.global[\x22SVGElement\x22])) {\n      parent \x3d element.parentElement;\n      if (parent) {\n        return parent;\n      }\n    }\n  }\n  parent \x3d element.parentNode;\n  return goog.dom.isElement(parent) ? parent : null;\n};\ngoog.dom.contains \x3d function(parent, descendant) {\n  if (!parent || !descendant) {\n    return false;\n  }\n  if (parent.contains \x26\x26 descendant.nodeType \x3d\x3d goog.dom.NodeType.ELEMENT) {\n    return parent \x3d\x3d descendant || parent.contains(descendant);\n  }\n  if (typeof parent.compareDocumentPosition !\x3d \x22undefined\x22) {\n    return parent \x3d\x3d descendant || Boolean(parent.compareDocumentPosition(descendant) \x26 16);\n  }\n  while (descendant \x26\x26 parent !\x3d descendant) {\n    descendant \x3d descendant.parentNode;\n  }\n  return descendant \x3d\x3d parent;\n};\ngoog.dom.compareNodeOrder \x3d function(node1, node2) {\n  if (node1 \x3d\x3d node2) {\n    return 0;\n  }\n  if (node1.compareDocumentPosition) {\n    return node1.compareDocumentPosition(node2) \x26 2 ? 1 : -1;\n  }\n  if (goog.userAgent.IE \x26\x26 !goog.userAgent.isDocumentModeOrHigher(9)) {\n    if (node1.nodeType \x3d\x3d goog.dom.NodeType.DOCUMENT) {\n      return -1;\n    }\n    if (node2.nodeType \x3d\x3d goog.dom.NodeType.DOCUMENT) {\n      return 1;\n    }\n  }\n  if (\x22sourceIndex\x22 in node1 || node1.parentNode \x26\x26 \x22sourceIndex\x22 in node1.parentNode) {\n    var isElement1 \x3d node1.nodeType \x3d\x3d goog.dom.NodeType.ELEMENT;\n    var isElement2 \x3d node2.nodeType \x3d\x3d goog.dom.NodeType.ELEMENT;\n    if (isElement1 \x26\x26 isElement2) {\n      return node1.sourceIndex - node2.sourceIndex;\n    } else {\n      var parent1 \x3d node1.parentNode;\n      var parent2 \x3d node2.parentNode;\n      if (parent1 \x3d\x3d parent2) {\n        return goog.dom.compareSiblingOrder_(node1, node2);\n      }\n      if (!isElement1 \x26\x26 goog.dom.contains(parent1, node2)) {\n        return -1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);\n      }\n      if (!isElement2 \x26\x26 goog.dom.contains(parent2, node1)) {\n        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);\n      }\n      return (isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);\n    }\n  }\n  var doc \x3d goog.dom.getOwnerDocument(node1);\n  var range1, range2;\n  range1 \x3d doc.createRange();\n  range1.selectNode(node1);\n  range1.collapse(true);\n  range2 \x3d doc.createRange();\n  range2.selectNode(node2);\n  range2.collapse(true);\n  return range1.compareBoundaryPoints(goog.global[\x22Range\x22].START_TO_END, range2);\n};\ngoog.dom.compareParentsDescendantNodeIe_ \x3d function(textNode, node) {\n  var parent \x3d textNode.parentNode;\n  if (parent \x3d\x3d node) {\n    return -1;\n  }\n  var sibling \x3d node;\n  while (sibling.parentNode !\x3d parent) {\n    sibling \x3d sibling.parentNode;\n  }\n  return goog.dom.compareSiblingOrder_(sibling, textNode);\n};\ngoog.dom.compareSiblingOrder_ \x3d function(node1, node2) {\n  var s \x3d node2;\n  while (s \x3d s.previousSibling) {\n    if (s \x3d\x3d node1) {\n      return -1;\n    }\n  }\n  return 1;\n};\ngoog.dom.findCommonAncestor \x3d function(var_args) {\n  var i, count \x3d arguments.length;\n  if (!count) {\n    return null;\n  } else if (count \x3d\x3d 1) {\n    return arguments[0];\n  }\n  var paths \x3d [];\n  var minLength \x3d Infinity;\n  for (i \x3d 0; i \x3c count; i++) {\n    var ancestors \x3d [];\n    var node \x3d arguments[i];\n    while (node) {\n      ancestors.unshift(node);\n      node \x3d node.parentNode;\n    }\n    paths.push(ancestors);\n    minLength \x3d Math.min(minLength, ancestors.length);\n  }\n  var output \x3d null;\n  for (i \x3d 0; i \x3c minLength; i++) {\n    var first \x3d paths[0][i];\n    for (var j \x3d 1; j \x3c count; j++) {\n      if (first !\x3d paths[j][i]) {\n        return output;\n      }\n    }\n    output \x3d first;\n  }\n  return output;\n};\ngoog.dom.isInDocument \x3d function(node) {\n  return (node.ownerDocument.compareDocumentPosition(node) \x26 16) \x3d\x3d 16;\n};\ngoog.dom.getOwnerDocument \x3d function(node) {\n  goog.asserts.assert(node, \x22Node cannot be null or undefined.\x22);\n  return node.nodeType \x3d\x3d goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document;\n};\ngoog.dom.getFrameContentDocument \x3d function(frame) {\n  return frame.contentDocument || frame.contentWindow.document;\n};\ngoog.dom.getFrameContentWindow \x3d function(frame) {\n  try {\n    return frame.contentWindow || (frame.contentDocument ? goog.dom.getWindow(frame.contentDocument) : null);\n  } catch (e) {\n  }\n  return null;\n};\ngoog.dom.setTextContent \x3d function(node, text) {\n  goog.asserts.assert(node !\x3d null, \x22goog.dom.setTextContent expects a non-null value for node\x22);\n  if (\x22textContent\x22 in node) {\n    node.textContent \x3d text;\n  } else if (node.nodeType \x3d\x3d goog.dom.NodeType.TEXT) {\n    node.data \x3d String(text);\n  } else if (node.firstChild \x26\x26 node.firstChild.nodeType \x3d\x3d goog.dom.NodeType.TEXT) {\n    while (node.lastChild !\x3d node.firstChild) {\n      node.removeChild(goog.asserts.assert(node.lastChild));\n    }\n    node.firstChild.data \x3d String(text);\n  } else {\n    goog.dom.removeChildren(node);\n    var doc \x3d goog.dom.getOwnerDocument(node);\n    node.appendChild(doc.createTextNode(String(text)));\n  }\n};\ngoog.dom.getOuterHtml \x3d function(element) {\n  goog.asserts.assert(element !\x3d\x3d null, \x22goog.dom.getOuterHtml expects a non-null value for element\x22);\n  if (\x22outerHTML\x22 in element) {\n    return element.outerHTML;\n  } else {\n    var doc \x3d goog.dom.getOwnerDocument(element);\n    var div \x3d goog.dom.createElement_(doc, goog.dom.TagName.DIV);\n    div.appendChild(element.cloneNode(true));\n    return div.innerHTML;\n  }\n};\ngoog.dom.findNode \x3d function(root, p) {\n  var rv \x3d [];\n  var found \x3d goog.dom.findNodes_(root, p, rv, true);\n  return found ? rv[0] : undefined;\n};\ngoog.dom.findNodes \x3d function(root, p) {\n  var rv \x3d [];\n  goog.dom.findNodes_(root, p, rv, false);\n  return rv;\n};\ngoog.dom.findNodes_ \x3d function(root, p, rv, findOne) {\n  if (root !\x3d null) {\n    var child \x3d root.firstChild;\n    while (child) {\n      if (p(child)) {\n        rv.push(child);\n        if (findOne) {\n          return true;\n        }\n      }\n      if (goog.dom.findNodes_(child, p, rv, findOne)) {\n        return true;\n      }\n      child \x3d child.nextSibling;\n    }\n  }\n  return false;\n};\ngoog.dom.findElement \x3d function(root, pred) {\n  var stack \x3d goog.dom.getChildrenReverse_(root);\n  while (stack.length \x3e 0) {\n    var next \x3d stack.pop();\n    if (pred(next)) {\n      return next;\n    }\n    for (var c \x3d next.lastElementChild; c; c \x3d c.previousElementSibling) {\n      stack.push(c);\n    }\n  }\n  return null;\n};\ngoog.dom.findElements \x3d function(root, pred) {\n  var result \x3d [], stack \x3d goog.dom.getChildrenReverse_(root);\n  while (stack.length \x3e 0) {\n    var next \x3d stack.pop();\n    if (pred(next)) {\n      result.push(next);\n    }\n    for (var c \x3d next.lastElementChild; c; c \x3d c.previousElementSibling) {\n      stack.push(c);\n    }\n  }\n  return result;\n};\ngoog.dom.getChildrenReverse_ \x3d function(node) {\n  if (node.nodeType \x3d\x3d goog.dom.NodeType.DOCUMENT) {\n    return [node.documentElement];\n  } else {\n    var children \x3d [];\n    for (var c \x3d node.lastElementChild; c; c \x3d c.previousElementSibling) {\n      children.push(c);\n    }\n    return children;\n  }\n};\ngoog.dom.TAGS_TO_IGNORE_ \x3d {\x22SCRIPT\x22:1, \x22STYLE\x22:1, \x22HEAD\x22:1, \x22IFRAME\x22:1, \x22OBJECT\x22:1};\ngoog.dom.PREDEFINED_TAG_VALUES_ \x3d {\x22IMG\x22:\x22 \x22, \x22BR\x22:\x22\\n\x22};\ngoog.dom.isFocusableTabIndex \x3d function(element) {\n  return goog.dom.hasSpecifiedTabIndex_(element) \x26\x26 goog.dom.isTabIndexFocusable_(element);\n};\ngoog.dom.setFocusableTabIndex \x3d function(element, enable) {\n  if (enable) {\n    element.tabIndex \x3d 0;\n  } else {\n    element.tabIndex \x3d -1;\n    element.removeAttribute(\x22tabIndex\x22);\n  }\n};\ngoog.dom.isFocusable \x3d function(element) {\n  var focusable;\n  if (goog.dom.nativelySupportsFocus_(element)) {\n    focusable \x3d !element.disabled \x26\x26 (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));\n  } else {\n    focusable \x3d goog.dom.isFocusableTabIndex(element);\n  }\n  return focusable \x26\x26 goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;\n};\ngoog.dom.hasSpecifiedTabIndex_ \x3d function(element) {\n  return element.hasAttribute(\x22tabindex\x22);\n};\ngoog.dom.isTabIndexFocusable_ \x3d function(element) {\n  var index \x3d element.tabIndex;\n  return typeof index \x3d\x3d\x3d \x22number\x22 \x26\x26 index \x3e\x3d 0 \x26\x26 index \x3c 32768;\n};\ngoog.dom.nativelySupportsFocus_ \x3d function(element) {\n  return element.tagName \x3d\x3d goog.dom.TagName.A \x26\x26 element.hasAttribute(\x22href\x22) || element.tagName \x3d\x3d goog.dom.TagName.INPUT || element.tagName \x3d\x3d goog.dom.TagName.TEXTAREA || element.tagName \x3d\x3d goog.dom.TagName.SELECT || element.tagName \x3d\x3d goog.dom.TagName.BUTTON;\n};\ngoog.dom.hasNonZeroBoundingRect_ \x3d function(element) {\n  var rect;\n  if (typeof element[\x22getBoundingClientRect\x22] !\x3d\x3d \x22function\x22 || goog.userAgent.IE \x26\x26 element.parentElement \x3d\x3d null) {\n    rect \x3d {\x22height\x22:element.offsetHeight, \x22width\x22:element.offsetWidth};\n  } else {\n    rect \x3d element.getBoundingClientRect();\n  }\n  return rect !\x3d null \x26\x26 rect.height \x3e 0 \x26\x26 rect.width \x3e 0;\n};\ngoog.dom.getTextContent \x3d function(node) {\n  var textContent;\n  var buf \x3d [];\n  goog.dom.getTextContent_(node, buf, true);\n  textContent \x3d buf.join(\x22\x22);\n  textContent \x3d textContent.replace(/ \\xAD /g, \x22 \x22).replace(/\\xAD/g, \x22\x22);\n  textContent \x3d textContent.replace(/\\u200B/g, \x22\x22);\n  textContent \x3d textContent.replace(/ +/g, \x22 \x22);\n  if (textContent !\x3d \x22 \x22) {\n    textContent \x3d textContent.replace(/^\\s*/, \x22\x22);\n  }\n  return textContent;\n};\ngoog.dom.getRawTextContent \x3d function(node) {\n  var buf \x3d [];\n  goog.dom.getTextContent_(node, buf, false);\n  return buf.join(\x22\x22);\n};\ngoog.dom.getTextContent_ \x3d function(node, buf, normalizeWhitespace) {\n  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {\n  } else if (node.nodeType \x3d\x3d goog.dom.NodeType.TEXT) {\n    if (normalizeWhitespace) {\n      buf.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, \x22\x22));\n    } else {\n      buf.push(node.nodeValue);\n    }\n  } else if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n    buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);\n  } else {\n    var child \x3d node.firstChild;\n    while (child) {\n      goog.dom.getTextContent_(child, buf, normalizeWhitespace);\n      child \x3d child.nextSibling;\n    }\n  }\n};\ngoog.dom.getNodeTextLength \x3d function(node) {\n  return goog.dom.getTextContent(node).length;\n};\ngoog.dom.getNodeTextOffset \x3d function(node, opt_offsetParent) {\n  var root \x3d opt_offsetParent || goog.dom.getOwnerDocument(node).body;\n  var buf \x3d [];\n  while (node \x26\x26 node !\x3d root) {\n    var cur \x3d node;\n    while (cur \x3d cur.previousSibling) {\n      buf.unshift(goog.dom.getTextContent(cur));\n    }\n    node \x3d node.parentNode;\n  }\n  return goog.string.trimLeft(buf.join(\x22\x22)).replace(/ +/g, \x22 \x22).length;\n};\ngoog.dom.getNodeAtOffset \x3d function(parent, offset, opt_result) {\n  var stack \x3d [parent], pos \x3d 0, cur \x3d null;\n  while (stack.length \x3e 0 \x26\x26 pos \x3c offset) {\n    cur \x3d stack.pop();\n    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {\n    } else if (cur.nodeType \x3d\x3d goog.dom.NodeType.TEXT) {\n      var text \x3d cur.nodeValue.replace(/(\\r\\n|\\r|\\n)/g, \x22\x22).replace(/ +/g, \x22 \x22);\n      pos +\x3d text.length;\n    } else if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {\n      pos +\x3d goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;\n    } else {\n      for (var i \x3d cur.childNodes.length - 1; i \x3e\x3d 0; i--) {\n        stack.push(cur.childNodes[i]);\n      }\n    }\n  }\n  if (goog.isObject(opt_result)) {\n    opt_result.remainder \x3d cur ? cur.nodeValue.length + offset - pos - 1 : 0;\n    opt_result.node \x3d cur;\n  }\n  return cur;\n};\ngoog.dom.isNodeList \x3d function(val) {\n  if (val \x26\x26 typeof val.length \x3d\x3d \x22number\x22) {\n    if (goog.isObject(val)) {\n      return typeof val.item \x3d\x3d \x22function\x22 || typeof val.item \x3d\x3d \x22string\x22;\n    } else if (typeof val \x3d\x3d\x3d \x22function\x22) {\n      return typeof val.item \x3d\x3d \x22function\x22;\n    }\n  }\n  return false;\n};\ngoog.dom.getAncestorByTagNameAndClass \x3d function(element, opt_tag, opt_class, opt_maxSearchSteps) {\n  if (!opt_tag \x26\x26 !opt_class) {\n    return null;\n  }\n  var tagName \x3d opt_tag ? String(opt_tag).toUpperCase() : null;\n  return goog.dom.getAncestor(element, function(node) {\n    return (!tagName || node.nodeName \x3d\x3d tagName) \x26\x26 (!opt_class || typeof node.className \x3d\x3d\x3d \x22string\x22 \x26\x26 goog.array.contains(node.className.split(/\\s+/), opt_class));\n  }, true, opt_maxSearchSteps);\n};\ngoog.dom.getAncestorByClass \x3d function(element, className, opt_maxSearchSteps) {\n  return goog.dom.getAncestorByTagNameAndClass(element, null, className, opt_maxSearchSteps);\n};\ngoog.dom.getAncestor \x3d function(element, matcher, opt_includeNode, opt_maxSearchSteps) {\n  if (element \x26\x26 !opt_includeNode) {\n    element \x3d element.parentNode;\n  }\n  var steps \x3d 0;\n  while (element \x26\x26 (opt_maxSearchSteps \x3d\x3d null || steps \x3c\x3d opt_maxSearchSteps)) {\n    goog.asserts.assert(element.name !\x3d \x22parentNode\x22);\n    if (matcher(element)) {\n      return element;\n    }\n    element \x3d element.parentNode;\n    steps++;\n  }\n  return null;\n};\ngoog.dom.getActiveElement \x3d function(doc) {\n  try {\n    var activeElement \x3d doc \x26\x26 doc.activeElement;\n    return activeElement \x26\x26 activeElement.nodeName ? activeElement : null;\n  } catch (e) {\n    return null;\n  }\n};\ngoog.dom.getPixelRatio \x3d function() {\n  var win \x3d goog.dom.getWindow();\n  if (win.devicePixelRatio !\x3d\x3d undefined) {\n    return win.devicePixelRatio;\n  } else if (win.matchMedia) {\n    return goog.dom.matchesPixelRatio_(3) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(1) || .75;\n  }\n  return 1;\n};\ngoog.dom.matchesPixelRatio_ \x3d function(pixelRatio) {\n  var win \x3d goog.dom.getWindow();\n  var dpiPerDppx \x3d 96;\n  var query \x3d \x22(min-resolution: \x22 + pixelRatio + \x22dppx),\x22 + \x22(min--moz-device-pixel-ratio: \x22 + pixelRatio + \x22),\x22 + \x22(min-resolution: \x22 + pixelRatio * dpiPerDppx + \x22dpi)\x22;\n  return win.matchMedia(query).matches ? pixelRatio : 0;\n};\ngoog.dom.getCanvasContext2D \x3d function(canvas) {\n  return canvas.getContext(\x222d\x22);\n};\ngoog.dom.DomHelper \x3d function(opt_document) {\n  this.document_ \x3d opt_document || goog.global.document || document;\n};\ngoog.dom.DomHelper.prototype.getDomHelper \x3d goog.dom.getDomHelper;\ngoog.dom.DomHelper.prototype.setDocument \x3d function(document) {\n  this.document_ \x3d document;\n};\ngoog.dom.DomHelper.prototype.getDocument \x3d function() {\n  return this.document_;\n};\ngoog.dom.DomHelper.prototype.getElement \x3d function(element) {\n  return goog.dom.getElementHelper_(this.document_, element);\n};\ngoog.dom.DomHelper.prototype.getRequiredElement \x3d function(id) {\n  return goog.dom.getRequiredElementHelper_(this.document_, id);\n};\ngoog.dom.DomHelper.prototype.$ \x3d goog.dom.DomHelper.prototype.getElement;\ngoog.dom.DomHelper.prototype.getElementsByTagName \x3d function(tagName, opt_parent) {\n  var parent \x3d opt_parent || this.document_;\n  return parent.getElementsByTagName(String(tagName));\n};\ngoog.dom.DomHelper.prototype.getElementsByTagNameAndClass \x3d function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);\n};\ngoog.dom.DomHelper.prototype.getElementByTagNameAndClass \x3d function(opt_tag, opt_class, opt_el) {\n  return goog.dom.getElementByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);\n};\ngoog.dom.DomHelper.prototype.getElementsByClass \x3d function(className, opt_el) {\n  var doc \x3d opt_el || this.document_;\n  return goog.dom.getElementsByClass(className, doc);\n};\ngoog.dom.DomHelper.prototype.getElementByClass \x3d function(className, opt_el) {\n  var doc \x3d opt_el || this.document_;\n  return goog.dom.getElementByClass(className, doc);\n};\ngoog.dom.DomHelper.prototype.getRequiredElementByClass \x3d function(className, opt_root) {\n  var root \x3d opt_root || this.document_;\n  return goog.dom.getRequiredElementByClass(className, root);\n};\ngoog.dom.DomHelper.prototype.$$ \x3d goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;\ngoog.dom.DomHelper.prototype.setProperties \x3d goog.dom.setProperties;\ngoog.dom.DomHelper.prototype.getViewportSize \x3d function(opt_window) {\n  return goog.dom.getViewportSize(opt_window || this.getWindow());\n};\ngoog.dom.DomHelper.prototype.getDocumentHeight \x3d function() {\n  return goog.dom.getDocumentHeight_(this.getWindow());\n};\ngoog.dom.Appendable;\ngoog.dom.DomHelper.prototype.createDom \x3d function(tagName, opt_attributes, var_args) {\n  return goog.dom.createDom_(this.document_, arguments);\n};\ngoog.dom.DomHelper.prototype.$dom \x3d goog.dom.DomHelper.prototype.createDom;\ngoog.dom.DomHelper.prototype.createElement \x3d function(name) {\n  return goog.dom.createElement_(this.document_, name);\n};\ngoog.dom.DomHelper.prototype.createTextNode \x3d function(content) {\n  return this.document_.createTextNode(String(content));\n};\ngoog.dom.DomHelper.prototype.createTable \x3d function(rows, columns, opt_fillWithNbsp) {\n  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);\n};\ngoog.dom.DomHelper.prototype.safeHtmlToNode \x3d function(html) {\n  return goog.dom.safeHtmlToNode_(this.document_, html);\n};\ngoog.dom.DomHelper.prototype.isCss1CompatMode \x3d function() {\n  return goog.dom.isCss1CompatMode_(this.document_);\n};\ngoog.dom.DomHelper.prototype.getWindow \x3d function() {\n  return goog.dom.getWindow_(this.document_);\n};\ngoog.dom.DomHelper.prototype.getDocumentScrollElement \x3d function() {\n  return goog.dom.getDocumentScrollElement_(this.document_);\n};\ngoog.dom.DomHelper.prototype.getDocumentScroll \x3d function() {\n  return goog.dom.getDocumentScroll_(this.document_);\n};\ngoog.dom.DomHelper.prototype.getActiveElement \x3d function(opt_doc) {\n  return goog.dom.getActiveElement(opt_doc || this.document_);\n};\ngoog.dom.DomHelper.prototype.appendChild \x3d goog.dom.appendChild;\ngoog.dom.DomHelper.prototype.append \x3d goog.dom.append;\ngoog.dom.DomHelper.prototype.canHaveChildren \x3d goog.dom.canHaveChildren;\ngoog.dom.DomHelper.prototype.removeChildren \x3d goog.dom.removeChildren;\ngoog.dom.DomHelper.prototype.insertSiblingBefore \x3d goog.dom.insertSiblingBefore;\ngoog.dom.DomHelper.prototype.insertSiblingAfter \x3d goog.dom.insertSiblingAfter;\ngoog.dom.DomHelper.prototype.insertChildAt \x3d goog.dom.insertChildAt;\ngoog.dom.DomHelper.prototype.removeNode \x3d goog.dom.removeNode;\ngoog.dom.DomHelper.prototype.replaceNode \x3d goog.dom.replaceNode;\ngoog.dom.DomHelper.prototype.copyContents \x3d goog.dom.copyContents;\ngoog.dom.DomHelper.prototype.flattenElement \x3d goog.dom.flattenElement;\ngoog.dom.DomHelper.prototype.getChildren \x3d goog.dom.getChildren;\ngoog.dom.DomHelper.prototype.getFirstElementChild \x3d goog.dom.getFirstElementChild;\ngoog.dom.DomHelper.prototype.getLastElementChild \x3d goog.dom.getLastElementChild;\ngoog.dom.DomHelper.prototype.getNextElementSibling \x3d goog.dom.getNextElementSibling;\ngoog.dom.DomHelper.prototype.getPreviousElementSibling \x3d goog.dom.getPreviousElementSibling;\ngoog.dom.DomHelper.prototype.getNextNode \x3d goog.dom.getNextNode;\ngoog.dom.DomHelper.prototype.getPreviousNode \x3d goog.dom.getPreviousNode;\ngoog.dom.DomHelper.prototype.isNodeLike \x3d goog.dom.isNodeLike;\ngoog.dom.DomHelper.prototype.isElement \x3d goog.dom.isElement;\ngoog.dom.DomHelper.prototype.isWindow \x3d goog.dom.isWindow;\ngoog.dom.DomHelper.prototype.getParentElement \x3d goog.dom.getParentElement;\ngoog.dom.DomHelper.prototype.contains \x3d goog.dom.contains;\ngoog.dom.DomHelper.prototype.compareNodeOrder \x3d goog.dom.compareNodeOrder;\ngoog.dom.DomHelper.prototype.findCommonAncestor \x3d goog.dom.findCommonAncestor;\ngoog.dom.DomHelper.prototype.getOwnerDocument \x3d goog.dom.getOwnerDocument;\ngoog.dom.DomHelper.prototype.getFrameContentDocument \x3d goog.dom.getFrameContentDocument;\ngoog.dom.DomHelper.prototype.getFrameContentWindow \x3d goog.dom.getFrameContentWindow;\ngoog.dom.DomHelper.prototype.setTextContent \x3d goog.dom.setTextContent;\ngoog.dom.DomHelper.prototype.getOuterHtml \x3d goog.dom.getOuterHtml;\ngoog.dom.DomHelper.prototype.findNode \x3d goog.dom.findNode;\ngoog.dom.DomHelper.prototype.findNodes \x3d goog.dom.findNodes;\ngoog.dom.DomHelper.prototype.isFocusableTabIndex \x3d goog.dom.isFocusableTabIndex;\ngoog.dom.DomHelper.prototype.setFocusableTabIndex \x3d goog.dom.setFocusableTabIndex;\ngoog.dom.DomHelper.prototype.isFocusable \x3d goog.dom.isFocusable;\ngoog.dom.DomHelper.prototype.getTextContent \x3d goog.dom.getTextContent;\ngoog.dom.DomHelper.prototype.getNodeTextLength \x3d goog.dom.getNodeTextLength;\ngoog.dom.DomHelper.prototype.getNodeTextOffset \x3d goog.dom.getNodeTextOffset;\ngoog.dom.DomHelper.prototype.getNodeAtOffset \x3d goog.dom.getNodeAtOffset;\ngoog.dom.DomHelper.prototype.isNodeList \x3d goog.dom.isNodeList;\ngoog.dom.DomHelper.prototype.getAncestorByTagNameAndClass \x3d goog.dom.getAncestorByTagNameAndClass;\ngoog.dom.DomHelper.prototype.getAncestorByClass \x3d goog.dom.getAncestorByClass;\ngoog.dom.DomHelper.prototype.getAncestor \x3d goog.dom.getAncestor;\ngoog.dom.DomHelper.prototype.getCanvasContext2D \x3d goog.dom.getCanvasContext2D;\n");
SHADOW_ENV.evalLoad("goog.async.nexttick.js", true , "goog.provide(\x22goog.async.nextTick\x22);\ngoog.require(\x22goog.debug.entryPointRegistry\x22);\ngoog.require(\x22goog.dom\x22);\ngoog.require(\x22goog.dom.TagName\x22);\ngoog.require(\x22goog.functions\x22);\ngoog.require(\x22goog.labs.userAgent.browser\x22);\ngoog.require(\x22goog.labs.userAgent.engine\x22);\ngoog.async.nextTick \x3d function(callback, opt_context, opt_useSetImmediate) {\n  var cb \x3d callback;\n  if (opt_context) {\n    cb \x3d goog.bind(callback, opt_context);\n  }\n  cb \x3d goog.async.nextTick.wrapCallback_(cb);\n  if (typeof goog.global.setImmediate \x3d\x3d\x3d \x22function\x22 \x26\x26 (opt_useSetImmediate || goog.async.nextTick.useSetImmediate_())) {\n    goog.global.setImmediate(cb);\n    return;\n  }\n  if (!goog.async.nextTick.setImmediate_) {\n    goog.async.nextTick.setImmediate_ \x3d goog.async.nextTick.getSetImmediateEmulator_();\n  }\n  goog.async.nextTick.setImmediate_(cb);\n};\ngoog.async.nextTick.useSetImmediate_ \x3d function() {\n  if (!goog.global.Window || !goog.global.Window.prototype) {\n    return true;\n  }\n  if (goog.labs.userAgent.browser.isEdge() || goog.global.Window.prototype.setImmediate !\x3d goog.global.setImmediate) {\n    return true;\n  }\n  return false;\n};\ngoog.async.nextTick.setImmediate_;\ngoog.async.nextTick.getSetImmediateEmulator_ \x3d function() {\n  var Channel \x3d goog.global[\x22MessageChannel\x22];\n  if (typeof Channel \x3d\x3d\x3d \x22undefined\x22 \x26\x26 typeof window !\x3d\x3d \x22undefined\x22 \x26\x26 window.postMessage \x26\x26 window.addEventListener \x26\x26 !goog.labs.userAgent.engine.isPresto()) {\n    Channel \x3d function() {\n      var iframe \x3d goog.dom.createElement(goog.dom.TagName.IFRAME);\n      iframe.style.display \x3d \x22none\x22;\n      document.documentElement.appendChild(iframe);\n      var win \x3d iframe.contentWindow;\n      var doc \x3d win.document;\n      doc.open();\n      doc.close();\n      var message \x3d \x22callImmediate\x22 + Math.random();\n      var origin \x3d win.location.protocol \x3d\x3d \x22file:\x22 ? \x22*\x22 : win.location.protocol + \x22//\x22 + win.location.host;\n      var onmessage \x3d goog.bind(function(e) {\n        if (origin !\x3d \x22*\x22 \x26\x26 e.origin !\x3d origin || e.data !\x3d message) {\n          return;\n        }\n        this[\x22port1\x22].onmessage();\n      }, this);\n      win.addEventListener(\x22message\x22, onmessage, false);\n      this[\x22port1\x22] \x3d {};\n      this[\x22port2\x22] \x3d {postMessage:function() {\n        win.postMessage(message, origin);\n      }};\n    };\n  }\n  if (typeof Channel !\x3d\x3d \x22undefined\x22 \x26\x26 !goog.labs.userAgent.browser.isIE()) {\n    var channel \x3d new Channel();\n    var head \x3d {};\n    var tail \x3d head;\n    channel[\x22port1\x22].onmessage \x3d function() {\n      if (head.next !\x3d\x3d undefined) {\n        head \x3d head.next;\n        var cb \x3d head.cb;\n        head.cb \x3d null;\n        cb();\n      }\n    };\n    return function(cb) {\n      tail.next \x3d {cb:cb};\n      tail \x3d tail.next;\n      channel[\x22port2\x22].postMessage(0);\n    };\n  }\n  return function(cb) {\n    goog.global.setTimeout(cb, 0);\n  };\n};\ngoog.async.nextTick.wrapCallback_ \x3d goog.functions.identity;\ngoog.debug.entryPointRegistry.register(function(transformer) {\n  goog.async.nextTick.wrapCallback_ \x3d transformer;\n});\n");
SHADOW_ENV.evalLoad("devtools.async.js", true , "goog.provide(\x27devtools.async\x27);\ngoog.scope(function(){\n  devtools.async.goog$module$goog$labs$userAgent$browser \x3d goog.module.get(\x27goog.labs.userAgent.browser\x27);\n});\ndevtools.async.available_QMARK_ \x3d (function devtools$async$available_QMARK_(){\nreturn (typeof Promise !\x3d\x3d \x27undefined\x27);\n});\ndevtools.async.fixed_chrome_version_for_async \x3d \x2265.0.3321\x22;\ndevtools.async.needed_QMARK_ \x3d (function devtools$async$needed_QMARK_(){\nreturn cljs.core.not((function (){var and__5043__auto__ \x3d devtools.async.goog$module$goog$labs$userAgent$browser.isChrome();\nif(cljs.core.truth_(and__5043__auto__)){\nreturn devtools.async.goog$module$goog$labs$userAgent$browser.isVersionOrHigher(devtools.async.fixed_chrome_version_for_async);\n} else {\nreturn and__5043__auto__;\n}\n})());\n});\ndevtools.async.get_not_needed_message \x3d (function devtools$async$get_not_needed_message(){\nreturn [\x22cljs-devtools: the :async feature is no longer needed since Chrome \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(devtools.async.fixed_chrome_version_for_async),\x22, \x22,\x22see https://github.com/binaryage/cljs-devtools/issues/20\x22].join(\x27\x27);\n});\ndevtools.async._STAR_installed_STAR_ \x3d false;\ndevtools.async._STAR_original_set_immediate_STAR_ \x3d null;\ndevtools.async.rethrow_outside_promise \x3d (function devtools$async$rethrow_outside_promise(e){\nreturn setTimeout((function (){\nthrow e;\n}),(0));\n});\ndevtools.async.promise_based_set_immediate \x3d (function devtools$async$promise_based_set_immediate(callback){\nvar o__11509__auto___12753 \x3d (function (){var o__11509__auto___12753 \x3d (function (){var o__11509__auto___12753 \x3d Promise;\nreturn (o__11509__auto___12753[\x22resolve\x22]).call(o__11509__auto___12753);\n})();\nreturn (o__11509__auto___12753[\x22then\x22]).call(o__11509__auto___12753,callback);\n})();\n(o__11509__auto___12753[\x22catch\x22]).call(o__11509__auto___12753,devtools.async.rethrow_outside_promise);\n\nreturn null;\n});\ndevtools.async.install_async_set_immediate_BANG_ \x3d (function devtools$async$install_async_set_immediate_BANG_(){\n(devtools.async._STAR_original_set_immediate_STAR_ \x3d goog.async.nextTick.setImmediate_);\n\nreturn (goog.async.nextTick.setImmediate_ \x3d devtools.async.promise_based_set_immediate);\n});\ndevtools.async.uninstall_async_set_immediate_BANG_ \x3d (function devtools$async$uninstall_async_set_immediate_BANG_(){\nreturn (goog.async.nextTick.setImmediate_ \x3d devtools.async._STAR_original_set_immediate_STAR_);\n});\ndevtools.async.installed_QMARK_ \x3d (function devtools$async$installed_QMARK_(){\nreturn devtools.async._STAR_installed_STAR_;\n});\ndevtools.async.install_BANG_ \x3d (function devtools$async$install_BANG_(){\nif(cljs.core.truth_(devtools.async._STAR_installed_STAR_)){\nreturn null;\n} else {\n(devtools.async._STAR_installed_STAR_ \x3d true);\n\nvar G__12742_12756 \x3d Error;\nvar target__11525__auto___12757 \x3d G__12742_12756;\nif(cljs.core.truth_(target__11525__auto___12757)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22unable to locate object path \x22,null,\x22 in \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__12742_12756)].join(\x27\x27),\x22\\n\x22,\x22target__11525__auto__\x22].join(\x27\x27)));\n}\n\n(target__11525__auto___12757[\x22stackTraceLimit\x22] \x3d Infinity);\n\n\ndevtools.async.install_async_set_immediate_BANG_();\n\nif(devtools.async.needed_QMARK_.call(null)){\n} else {\ndevtools.context.get_console.call(null).info(devtools.async.get_not_needed_message.call(null));\n}\n\nreturn true;\n}\n});\ndevtools.async.uninstall_BANG_ \x3d (function devtools$async$uninstall_BANG_(){\nif(cljs.core.truth_(devtools.async._STAR_installed_STAR_)){\n(devtools.async._STAR_installed_STAR_ \x3d false);\n\nreturn devtools.async.uninstall_async_set_immediate_BANG_();\n} else {\nreturn null;\n}\n});\n");
SHADOW_ENV.evalLoad("devtools.toolbox.js", true , "goog.provide(\x27devtools.toolbox\x27);\n/**\n * This is a simple wrapper for logging \x22busy\x22 objects.\n *   This is especially handy when you happen to be logging javascript objects with many properties.\n *   Standard javascript console renderer tends to print a lot of infomation in the header in some cases and that can make\n *   console output pretty busy. By using envelope you can force your own short header and let the details expand on demand\n *   via disclosure triangle. The header can be styled and you can optionally specify preferred wrapping tag (advanced).\n */\ndevtools.toolbox.envelope \x3d (function devtools$toolbox$envelope(var_args){\nvar G__15491 \x3d arguments.length;\nswitch (G__15491) {\ncase 1:\nreturn devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 4:\nreturn devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$4((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$1 \x3d (function (obj){\nreturn devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$2(obj,new cljs.core.Keyword(null,\x22default-envelope-header\x22,\x22default-envelope-header\x22,-90723598));\n}));\n\n(devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$2 \x3d (function (obj,header){\nreturn devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$3(obj,header,new cljs.core.Keyword(null,\x22default-envelope-style\x22,\x22default-envelope-style\x22,-1676750479));\n}));\n\n(devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$3 \x3d (function (obj,header,style){\nreturn devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$4(obj,header,style,new cljs.core.Keyword(null,\x22span\x22,\x22span\x22,1394872991));\n}));\n\n(devtools.toolbox.envelope.cljs$core$IFn$_invoke$arity$4 \x3d (function (obj,header,style,tag){\nif((typeof devtools !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof devtools.toolbox !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof devtools.toolbox.t_devtools$toolbox15499 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {devtools.protocols.IFormat}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n*/\ndevtools.toolbox.t_devtools$toolbox15499 \x3d (function (obj,header,style,tag,meta15500){\nthis.obj \x3d obj;\nthis.header \x3d header;\nthis.style \x3d style;\nthis.tag \x3d tag;\nthis.meta15500 \x3d meta15500;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 393216;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(devtools.toolbox.t_devtools$toolbox15499.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_15501,meta15500__$1){\nvar self__ \x3d this;\nvar _15501__$1 \x3d this;\nreturn (new devtools.toolbox.t_devtools$toolbox15499(self__.obj,self__.header,self__.style,self__.tag,meta15500__$1));\n}));\n\n(devtools.toolbox.t_devtools$toolbox15499.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_15501){\nvar self__ \x3d this;\nvar _15501__$1 \x3d this;\nreturn self__.meta15500;\n}));\n\n(devtools.toolbox.t_devtools$toolbox15499.prototype.devtools$protocols$IFormat$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(devtools.toolbox.t_devtools$toolbox15499.prototype.devtools$protocols$IFormat$_header$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn devtools.formatters.templating.render_markup(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.tag,self__.style], null),((cljs.core.fn_QMARK_(self__.header))?(self__.header.cljs$core$IFn$_invoke$arity$1 ? self__.header.cljs$core$IFn$_invoke$arity$1(self__.obj) : self__.header.call(null,self__.obj)):self__.header)], null));\n}));\n\n(devtools.toolbox.t_devtools$toolbox15499.prototype.devtools$protocols$IFormat$_has_body$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn true;\n}));\n\n(devtools.toolbox.t_devtools$toolbox15499.prototype.devtools$protocols$IFormat$_body$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn devtools.formatters.templating.render_markup(devtools.formatters.markup._LT_body_GT_(devtools.formatters.markup._LT_standard_body_reference_GT_(self__.obj)));\n}));\n\n(devtools.toolbox.t_devtools$toolbox15499.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22obj\x22,\x22obj\x22,-1672671807,null),new cljs.core.Symbol(null,\x22header\x22,\x22header\x22,1759972661,null),new cljs.core.Symbol(null,\x22style\x22,\x22style\x22,1143888791,null),new cljs.core.Symbol(null,\x22tag\x22,\x22tag\x22,350170304,null),new cljs.core.Symbol(null,\x22meta15500\x22,\x22meta15500\x22,-20889557,null)], null);\n}));\n\n(devtools.toolbox.t_devtools$toolbox15499.cljs$lang$type \x3d true);\n\n(devtools.toolbox.t_devtools$toolbox15499.cljs$lang$ctorStr \x3d \x22devtools.toolbox/t_devtools$toolbox15499\x22);\n\n(devtools.toolbox.t_devtools$toolbox15499.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22devtools.toolbox/t_devtools$toolbox15499\x22);\n}));\n\n/**\n * Positional factory function for devtools.toolbox/t_devtools$toolbox15499.\n */\ndevtools.toolbox.__GT_t_devtools$toolbox15499 \x3d (function devtools$toolbox$__GT_t_devtools$toolbox15499(obj__$1,header__$1,style__$1,tag__$1,meta15500){\nreturn (new devtools.toolbox.t_devtools$toolbox15499(obj__$1,header__$1,style__$1,tag__$1,meta15500));\n});\n\n}\n\nreturn (new devtools.toolbox.t_devtools$toolbox15499(obj,header,style,tag,cljs.core.PersistentArrayMap.EMPTY));\n}));\n\n(devtools.toolbox.envelope.cljs$lang$maxFixedArity \x3d 4);\n\n/**\n * Forces object to be rendered by cljs-devtools during console logging.\n * \n *   Unfortunately custom formatters subsystem in DevTools is not applied to primitive values like numbers, strings, null, etc.\n *   This wrapper can be used as a workaround if you really need to force cljs-devtools rendering:\n * \n *  (.log js/console nil) ; will render \x27null\x27\n *  (.log js/console (force-format nil)) ; will render \x27nil\x27 and not \x27null\x27\n * \n *   See https://github.com/binaryage/cljs-devtools/issues/17\n *   \n */\ndevtools.toolbox.force_format \x3d (function devtools$toolbox$force_format(obj){\nreturn devtools.formatters.templating.render_markup(devtools.formatters.markup._LT_surrogate_GT_.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([obj], 0)));\n});\n");
SHADOW_ENV.evalLoad("devtools.core.js", true , "goog.provide(\x27devtools.core\x27);\ndevtools.core.is_feature_available_QMARK_ \x3d (function devtools$core$is_feature_available_QMARK_(feature){\nvar G__17257 \x3d feature;\nvar G__17257__$1 \x3d (((G__17257 instanceof cljs.core.Keyword))?G__17257.fqn:null);\nswitch (G__17257__$1) {\ncase \x22formatters\x22:\nreturn devtools.formatters.available_QMARK_.call(null);\n\nbreak;\ncase \x22hints\x22:\nreturn devtools.hints.available_QMARK_.call(null);\n\nbreak;\ncase \x22async\x22:\nreturn devtools.async.available_QMARK_.call(null);\n\nbreak;\ndefault:\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__17257__$1)].join(\x27\x27)));\n\n}\n});\ndevtools.core.available_QMARK_ \x3d (function devtools$core$available_QMARK_(var_args){\nvar G__17261 \x3d arguments.length;\nswitch (G__17261) {\ncase 0:\nreturn devtools.core.available_QMARK_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn devtools.core.available_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(devtools.core.available_QMARK_.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn devtools.core.available_QMARK_.cljs$core$IFn$_invoke$arity$1(devtools.prefs.pref(new cljs.core.Keyword(null,\x22features-to-install\x22,\x22features-to-install\x22,102899261)));\n}));\n\n(devtools.core.available_QMARK_.cljs$core$IFn$_invoke$arity$1 \x3d (function (features_desc){\nvar features \x3d devtools.util.resolve_features_BANG_(features_desc,cljs.core.deref(devtools.defaults.feature_groups));\nif(cljs.core.empty_QMARK_(features)){\nreturn false;\n} else {\nreturn cljs.core.every_QMARK_(devtools.core.is_feature_available_QMARK_,features);\n}\n}));\n\n(devtools.core.available_QMARK_.cljs$lang$maxFixedArity \x3d 1);\n\ndevtools.core.is_feature_installed_QMARK_ \x3d (function devtools$core$is_feature_installed_QMARK_(feature){\nvar G__17266 \x3d feature;\nvar G__17266__$1 \x3d (((G__17266 instanceof cljs.core.Keyword))?G__17266.fqn:null);\nswitch (G__17266__$1) {\ncase \x22formatters\x22:\nreturn devtools.formatters.installed_QMARK_();\n\nbreak;\ncase \x22hints\x22:\nreturn devtools.hints.installed_QMARK_();\n\nbreak;\ncase \x22async\x22:\nreturn devtools.async.installed_QMARK_();\n\nbreak;\ndefault:\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__17266__$1)].join(\x27\x27)));\n\n}\n});\ndevtools.core.installed_QMARK_ \x3d (function devtools$core$installed_QMARK_(var_args){\nvar G__17276 \x3d arguments.length;\nswitch (G__17276) {\ncase 0:\nreturn devtools.core.installed_QMARK_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn devtools.core.installed_QMARK_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(devtools.core.installed_QMARK_.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn devtools.core.installed_QMARK_.cljs$core$IFn$_invoke$arity$1(devtools.prefs.pref(new cljs.core.Keyword(null,\x22features-to-install\x22,\x22features-to-install\x22,102899261)));\n}));\n\n(devtools.core.installed_QMARK_.cljs$core$IFn$_invoke$arity$1 \x3d (function (features_desc){\nvar features \x3d devtools.util.resolve_features_BANG_(features_desc,cljs.core.deref(devtools.defaults.feature_groups));\nif(cljs.core.empty_QMARK_(features)){\nreturn false;\n} else {\nreturn cljs.core.every_QMARK_(devtools.core.is_feature_installed_QMARK_,features);\n}\n}));\n\n(devtools.core.installed_QMARK_.cljs$lang$maxFixedArity \x3d 1);\n\ndevtools.core.install_BANG_ \x3d (function devtools$core$install_BANG_(var_args){\nvar G__17291 \x3d arguments.length;\nswitch (G__17291) {\ncase 0:\nreturn devtools.core.install_BANG_.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn devtools.core.install_BANG_.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(devtools.core.install_BANG_.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn devtools.core.install_BANG_.cljs$core$IFn$_invoke$arity$1(devtools.prefs.pref(new cljs.core.Keyword(null,\x22features-to-install\x22,\x22features-to-install\x22,102899261)));\n}));\n\n(devtools.core.install_BANG_.cljs$core$IFn$_invoke$arity$1 \x3d (function (features_desc){\nif(cljs.core.truth_(devtools.util.under_advanced_build_QMARK_())){\nreturn devtools.util.display_advanced_build_warning_if_needed_BANG_();\n} else {\nvar features \x3d devtools.util.resolve_features_BANG_(features_desc,cljs.core.deref(devtools.defaults.feature_groups));\ndevtools.util.display_banner_if_needed_BANG_(features,cljs.core.deref(devtools.defaults.feature_groups));\n\ndevtools.util.print_config_overrides_if_requested_BANG_(\x22config overrides prior install:\\n\x22);\n\ndevtools.util.install_feature_BANG_(new cljs.core.Keyword(null,\x22formatters\x22,\x22formatters\x22,-1875637118),features,devtools.core.is_feature_available_QMARK_,devtools.formatters.install_BANG_);\n\ndevtools.util.install_feature_BANG_(new cljs.core.Keyword(null,\x22hints\x22,\x22hints\x22,-991113151),features,devtools.core.is_feature_available_QMARK_,devtools.hints.install_BANG_);\n\nreturn devtools.util.install_feature_BANG_(new cljs.core.Keyword(null,\x22async\x22,\x22async\x22,1050769601),features,devtools.core.is_feature_available_QMARK_,devtools.async.install_BANG_);\n}\n}));\n\n(devtools.core.install_BANG_.cljs$lang$maxFixedArity \x3d 1);\n\ndevtools.core.uninstall_BANG_ \x3d (function devtools$core$uninstall_BANG_(){\ndevtools.formatters.uninstall_BANG_();\n\ndevtools.hints.uninstall_BANG_();\n\nreturn devtools.async.uninstall_BANG_();\n});\ndevtools.core.set_prefs_BANG_ \x3d (function devtools$core$set_prefs_BANG_(new_prefs){\nreturn devtools.prefs.set_prefs_BANG_(new_prefs);\n});\ndevtools.core.get_prefs \x3d (function devtools$core$get_prefs(){\nreturn devtools.prefs.get_prefs();\n});\ndevtools.core.set_pref_BANG_ \x3d (function devtools$core$set_pref_BANG_(pref,val){\nreturn devtools.prefs.set_pref_BANG_(pref,val);\n});\n");
SHADOW_ENV.evalLoad("devtools.preload.js", true , "goog.provide(\x27devtools.preload\x27);\nif(cljs.core.not(devtools.prefs.pref(new cljs.core.Keyword(null,\x22suppress-preload-install\x22,\x22suppress-preload-install\x22,1724845090)))){\ndevtools.core.install_BANG_.cljs$core$IFn$_invoke$arity$0();\n} else {\n}\n");
SHADOW_ENV.evalLoad("shadow.js.shim.module$react_dom.js", true , "goog.provide(\x22shadow.js.shim.module$react_dom\x22);\ngoog.provide(\x22module$shadow_js_shim_module$react_dom\x22);\nshadow.js.shim.module$react_dom \x3d shadow$bridge(\x22react-dom\x22);\nmodule$shadow_js_shim_module$react_dom.default \x3d shadow.js.shim.module$react_dom;\n");
SHADOW_ENV.evalLoad("reagent.debug.js", true , "goog.provide(\x27reagent.debug\x27);\nreagent.debug.has_console \x3d (typeof console !\x3d\x3d \x27undefined\x27);\nreagent.debug.tracking \x3d false;\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.debug !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.debug.warnings !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.debug.warnings \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\n}\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.debug !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.debug.track_console !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.debug.track_console \x3d (function (){var o \x3d ({});\n(o.warn \x3d (function() { \nvar G__21330__delegate \x3d function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__21330 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__21331__i \x3d 0, G__21331__a \x3d new Array(arguments.length -  0);\nwhile (G__21331__i \x3c G__21331__a.length) {G__21331__a[G__21331__i] \x3d arguments[G__21331__i + 0]; ++G__21331__i;}\n  args \x3d new cljs.core.IndexedSeq(G__21331__a,0,null);\n} \nreturn G__21330__delegate.call(this,args);};\nG__21330.cljs$lang$maxFixedArity \x3d 0;\nG__21330.cljs$lang$applyTo \x3d (function (arglist__21332){\nvar args \x3d cljs.core.seq(arglist__21332);\nreturn G__21330__delegate(args);\n});\nG__21330.cljs$core$IFn$_invoke$arity$variadic \x3d G__21330__delegate;\nreturn G__21330;\n})()\n);\n\n(o.error \x3d (function() { \nvar G__21333__delegate \x3d function (args){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(reagent.debug.warnings,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032)], null),cljs.core.conj,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,args)], 0));\n};\nvar G__21333 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__21334__i \x3d 0, G__21334__a \x3d new Array(arguments.length -  0);\nwhile (G__21334__i \x3c G__21334__a.length) {G__21334__a[G__21334__i] \x3d arguments[G__21334__i + 0]; ++G__21334__i;}\n  args \x3d new cljs.core.IndexedSeq(G__21334__a,0,null);\n} \nreturn G__21333__delegate.call(this,args);};\nG__21333.cljs$lang$maxFixedArity \x3d 0;\nG__21333.cljs$lang$applyTo \x3d (function (arglist__21335){\nvar args \x3d cljs.core.seq(arglist__21335);\nreturn G__21333__delegate(args);\n});\nG__21333.cljs$core$IFn$_invoke$arity$variadic \x3d G__21333__delegate;\nreturn G__21333;\n})()\n);\n\nreturn o;\n})();\n}\nreagent.debug.track_warnings \x3d (function reagent$debug$track_warnings(f){\n(reagent.debug.tracking \x3d true);\n\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\n(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n\nvar warns \x3d cljs.core.deref(reagent.debug.warnings);\ncljs.core.reset_BANG_(reagent.debug.warnings,null);\n\n(reagent.debug.tracking \x3d false);\n\nreturn warns;\n});\n");
SHADOW_ENV.evalLoad("reagent.impl.util.js", true , "goog.provide(\x27reagent.impl.util\x27);\ngoog.scope(function(){\n  reagent.impl.util.goog$module$goog$object \x3d goog.module.get(\x27goog.object\x27);\n});\nreagent.impl.util.is_client \x3d (((typeof window !\x3d\x3d \x27undefined\x27)) \x26\x26 ((!((window.document \x3d\x3d null)))));\nreagent.impl.util._STAR_non_reactive_STAR_ \x3d false;\nreagent.impl.util.memoize_1 \x3d (function reagent$impl$util$memoize_1(f){\nvar mem \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nreturn (function (arg){\nvar v \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(mem),arg);\nif((!((v \x3d\x3d null)))){\nreturn v;\n} else {\nvar ret \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(arg) : f.call(null,arg));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,arg,ret);\n\nreturn ret;\n}\n});\n});\nreagent.impl.util.dont_camel_case \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [\x22aria\x22,null,\x22data\x22,null], null), null);\nreagent.impl.util.capitalize \x3d (function reagent$impl$util$capitalize(s){\nif((cljs.core.count(s) \x3c (2))){\nreturn clojure.string.upper_case(s);\n} else {\nreturn [clojure.string.upper_case(cljs.core.subs.cljs$core$IFn$_invoke$arity$3(s,(0),(1))),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(1))].join(\x27\x27);\n}\n});\nreagent.impl.util.dash_to_prop_name \x3d (function reagent$impl$util$dash_to_prop_name(dashed){\nif(typeof dashed \x3d\x3d\x3d \x27string\x27){\nreturn dashed;\n} else {\nvar name_str \x3d cljs.core.name(dashed);\nvar vec__21358 \x3d clojure.string.split.cljs$core$IFn$_invoke$arity$2(name_str,/-/);\nvar seq__21359 \x3d cljs.core.seq(vec__21358);\nvar first__21360 \x3d cljs.core.first(seq__21359);\nvar seq__21359__$1 \x3d cljs.core.next(seq__21359);\nvar start \x3d first__21360;\nvar parts \x3d seq__21359__$1;\nif(cljs.core.truth_((reagent.impl.util.dont_camel_case.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.util.dont_camel_case.cljs$core$IFn$_invoke$arity$1(start) : reagent.impl.util.dont_camel_case.call(null,start)))){\nreturn name_str;\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str,start,cljs.core.map.cljs$core$IFn$_invoke$arity$2(reagent.impl.util.capitalize,parts));\n}\n}\n});\nreagent.impl.util.dash_to_method_name \x3d (function reagent$impl$util$dash_to_method_name(dashed){\nif(typeof dashed \x3d\x3d\x3d \x27string\x27){\nreturn dashed;\n} else {\nvar name_str \x3d cljs.core.name(dashed);\nvar name_str__$1 \x3d clojure.string.replace(name_str,/(unsafe|UNSAFE)[-_]/,\x22UNSAFE_\x22);\nvar vec__21378 \x3d clojure.string.split.cljs$core$IFn$_invoke$arity$2(name_str__$1,/-/);\nvar seq__21379 \x3d cljs.core.seq(vec__21378);\nvar first__21380 \x3d cljs.core.first(seq__21379);\nvar seq__21379__$1 \x3d cljs.core.next(seq__21379);\nvar start \x3d first__21380;\nvar parts \x3d seq__21379__$1;\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.str,start,cljs.core.map.cljs$core$IFn$_invoke$arity$2(reagent.impl.util.capitalize,parts));\n}\n});\nreagent.impl.util.fun_name \x3d (function reagent$impl$util$fun_name(f){\nvar n \x3d (function (){var or__5045__auto__ \x3d (function (){var and__5043__auto__ \x3d cljs.core.fn_QMARK_(f);\nif(and__5043__auto__){\nvar or__5045__auto__ \x3d f.displayName;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar n \x3d f.name;\nif(((typeof n \x3d\x3d\x3d \x27string\x27) \x26\x26 (cljs.core.seq(n)))){\nreturn n;\n} else {\nreturn null;\n}\n}\n} else {\nreturn and__5043__auto__;\n}\n})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d (function (){var and__5043__auto__ \x3d (((!((f \x3d\x3d null))))?(((((f.cljs$lang$protocol_mask$partition1$ \x26 (4096))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d f.cljs$core$INamed$))))?true:false):false);\nif(and__5043__auto__){\nreturn cljs.core.name(f);\n} else {\nreturn and__5043__auto__;\n}\n})();\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar m \x3d cljs.core.meta(f);\nif(cljs.core.map_QMARK_(m)){\nreturn new cljs.core.Keyword(null,\x22name\x22,\x22name\x22,1843675177).cljs$core$IFn$_invoke$arity$1(m);\n} else {\nreturn null;\n}\n}\n}\n})();\nif(cljs.core.truth_(n)){\nreturn clojure.string.replace(cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22$\x22,\x22.\x22);\n} else {\nreturn null;\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IFn}\n * @implements {cljs.core.Fn}\n*/\nreagent.impl.util.PartialFn \x3d (function (pfn,f,args){\nthis.pfn \x3d pfn;\nthis.f \x3d f;\nthis.args \x3d args;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 6291457;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(reagent.impl.util.PartialFn.prototype.cljs$core$Fn$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.impl.util.PartialFn.prototype.call \x3d (function (unused__10304__auto__){\nvar self__ \x3d this;\nvar self__ \x3d this;\nvar G__21422 \x3d (arguments.length - (1));\nswitch (G__21422) {\ncase (0):\nreturn self__.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase (1):\nreturn self__.cljs$core$IFn$_invoke$arity$1((arguments[(1)]));\n\nbreak;\ncase (2):\nreturn self__.cljs$core$IFn$_invoke$arity$2((arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase (3):\nreturn self__.cljs$core$IFn$_invoke$arity$3((arguments[(1)]),(arguments[(2)]),(arguments[(3)]));\n\nbreak;\ncase (4):\nreturn self__.cljs$core$IFn$_invoke$arity$4((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ncase (5):\nreturn self__.cljs$core$IFn$_invoke$arity$5((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]));\n\nbreak;\ncase (6):\nreturn self__.cljs$core$IFn$_invoke$arity$6((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]));\n\nbreak;\ncase (7):\nreturn self__.cljs$core$IFn$_invoke$arity$7((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]));\n\nbreak;\ncase (8):\nreturn self__.cljs$core$IFn$_invoke$arity$8((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]));\n\nbreak;\ncase (9):\nreturn self__.cljs$core$IFn$_invoke$arity$9((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]));\n\nbreak;\ncase (10):\nreturn self__.cljs$core$IFn$_invoke$arity$10((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\n\nbreak;\ncase (11):\nreturn self__.cljs$core$IFn$_invoke$arity$11((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]));\n\nbreak;\ncase (12):\nreturn self__.cljs$core$IFn$_invoke$arity$12((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]));\n\nbreak;\ncase (13):\nreturn self__.cljs$core$IFn$_invoke$arity$13((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]));\n\nbreak;\ncase (14):\nreturn self__.cljs$core$IFn$_invoke$arity$14((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]));\n\nbreak;\ncase (15):\nreturn self__.cljs$core$IFn$_invoke$arity$15((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]));\n\nbreak;\ncase (16):\nreturn self__.cljs$core$IFn$_invoke$arity$16((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]));\n\nbreak;\ncase (17):\nreturn self__.cljs$core$IFn$_invoke$arity$17((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]));\n\nbreak;\ncase (18):\nreturn self__.cljs$core$IFn$_invoke$arity$18((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]));\n\nbreak;\ncase (19):\nreturn self__.cljs$core$IFn$_invoke$arity$19((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]));\n\nbreak;\ncase (20):\nreturn self__.cljs$core$IFn$_invoke$arity$20((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]));\n\nbreak;\ncase (21):\nreturn self__.cljs$core$IFn$_invoke$arity$21((arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]),(arguments[(11)]),(arguments[(12)]),(arguments[(13)]),(arguments[(14)]),(arguments[(15)]),(arguments[(16)]),(arguments[(17)]),(arguments[(18)]),(arguments[(19)]),(arguments[(20)]),(arguments[(21)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((arguments.length - (1)))].join(\x27\x27)));\n\n}\n}));\n\n(reagent.impl.util.PartialFn.prototype.apply \x3d (function (self__,args21420){\nvar self__ \x3d this;\nvar self____$1 \x3d this;\nreturn self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args21420)));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$0 ? self__.pfn.cljs$core$IFn$_invoke$arity$0() : self__.pfn.call(null));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$1 \x3d (function (a){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$1 ? self__.pfn.cljs$core$IFn$_invoke$arity$1(a) : self__.pfn.call(null,a));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$2 ? self__.pfn.cljs$core$IFn$_invoke$arity$2(a,b) : self__.pfn.call(null,a,b));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$3 \x3d (function (a,b,c){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$3 ? self__.pfn.cljs$core$IFn$_invoke$arity$3(a,b,c) : self__.pfn.call(null,a,b,c));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$4 \x3d (function (a,b,c,d){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$4 ? self__.pfn.cljs$core$IFn$_invoke$arity$4(a,b,c,d) : self__.pfn.call(null,a,b,c,d));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$5 \x3d (function (a,b,c,d,e){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$5 ? self__.pfn.cljs$core$IFn$_invoke$arity$5(a,b,c,d,e) : self__.pfn.call(null,a,b,c,d,e));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$6 \x3d (function (a,b,c,d,e,f__$1){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$6 ? self__.pfn.cljs$core$IFn$_invoke$arity$6(a,b,c,d,e,f__$1) : self__.pfn.call(null,a,b,c,d,e,f__$1));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$7 \x3d (function (a,b,c,d,e,f__$1,g){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$7 ? self__.pfn.cljs$core$IFn$_invoke$arity$7(a,b,c,d,e,f__$1,g) : self__.pfn.call(null,a,b,c,d,e,f__$1,g));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$8 \x3d (function (a,b,c,d,e,f__$1,g,h){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$8 ? self__.pfn.cljs$core$IFn$_invoke$arity$8(a,b,c,d,e,f__$1,g,h) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$9 \x3d (function (a,b,c,d,e,f__$1,g,h,i){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$9 ? self__.pfn.cljs$core$IFn$_invoke$arity$9(a,b,c,d,e,f__$1,g,h,i) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$10 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$10 ? self__.pfn.cljs$core$IFn$_invoke$arity$10(a,b,c,d,e,f__$1,g,h,i,j) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$11 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$11 ? self__.pfn.cljs$core$IFn$_invoke$arity$11(a,b,c,d,e,f__$1,g,h,i,j,k) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$12 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$12 ? self__.pfn.cljs$core$IFn$_invoke$arity$12(a,b,c,d,e,f__$1,g,h,i,j,k,l) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$13 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$13 ? self__.pfn.cljs$core$IFn$_invoke$arity$13(a,b,c,d,e,f__$1,g,h,i,j,k,l,m) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$14 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$14 ? self__.pfn.cljs$core$IFn$_invoke$arity$14(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$15 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$15 ? self__.pfn.cljs$core$IFn$_invoke$arity$15(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$16 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$16 ? self__.pfn.cljs$core$IFn$_invoke$arity$16(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$17 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$17 ? self__.pfn.cljs$core$IFn$_invoke$arity$17(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$18 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$18 ? self__.pfn.cljs$core$IFn$_invoke$arity$18(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$19 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$19 ? self__.pfn.cljs$core$IFn$_invoke$arity$19(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$20 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s,t){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn (self__.pfn.cljs$core$IFn$_invoke$arity$20 ? self__.pfn.cljs$core$IFn$_invoke$arity$20(a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s,t) : self__.pfn.call(null,a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s,t));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IFn$_invoke$arity$21 \x3d (function (a,b,c,d,e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){\nvar self__ \x3d this;\nvar _ \x3d this;\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.pfn,a,b,c,d,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([e,f__$1,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (((other instanceof reagent.impl.util.PartialFn)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)))));\n}));\n\n(reagent.impl.util.PartialFn.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.impl.util.PartialFn.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22pfn\x22,\x22pfn\x22,-513383568,null),new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),new cljs.core.Symbol(null,\x22args\x22,\x22args\x22,-1338879193,null)], null);\n}));\n\n(reagent.impl.util.PartialFn.cljs$lang$type \x3d true);\n\n(reagent.impl.util.PartialFn.cljs$lang$ctorStr \x3d \x22reagent.impl.util/PartialFn\x22);\n\n(reagent.impl.util.PartialFn.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22reagent.impl.util/PartialFn\x22);\n}));\n\n/**\n * Positional factory function for reagent.impl.util/PartialFn.\n */\nreagent.impl.util.__GT_PartialFn \x3d (function reagent$impl$util$__GT_PartialFn(pfn,f,args){\nreturn (new reagent.impl.util.PartialFn(pfn,f,args));\n});\n\nreagent.impl.util.make_partial_fn \x3d (function reagent$impl$util$make_partial_fn(f,args){\nreturn reagent.impl.util.__GT_PartialFn(cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.partial,f,args),f,args);\n});\nreagent.impl.util.named_QMARK_ \x3d (function reagent$impl$util$named_QMARK_(x){\nreturn (((x instanceof cljs.core.Keyword)) || ((x instanceof cljs.core.Symbol)));\n});\nreagent.impl.util.class_names \x3d (function reagent$impl$util$class_names(var_args){\nvar G__21630 \x3d arguments.length;\nswitch (G__21630) {\ncase 0:\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___21860 \x3d arguments.length;\nvar i__5770__auto___21861 \x3d (0);\nwhile(true){\nif((i__5770__auto___21861 \x3c len__5769__auto___21860)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___21861]));\n\nvar G__21862 \x3d (i__5770__auto___21861 + (1));\ni__5770__auto___21861 \x3d G__21862;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn null;\n}));\n\n(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1 \x3d (function (class$){\nif(cljs.core.coll_QMARK_(class$)){\nvar classes \x3d cljs.core.keep.cljs$core$IFn$_invoke$arity$2((function (c){\nif(cljs.core.truth_(c)){\nif(reagent.impl.util.named_QMARK_(c)){\nreturn cljs.core.name(c);\n} else {\nreturn c;\n}\n} else {\nreturn null;\n}\n}),class$);\nif(cljs.core.seq(classes)){\nreturn clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22 \x22,classes);\n} else {\nreturn null;\n}\n} else {\nif(reagent.impl.util.named_QMARK_(class$)){\nreturn cljs.core.name(class$);\n} else {\nreturn class$;\n}\n}\n}));\n\n(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2 \x3d (function (a,b){\nif(cljs.core.truth_(a)){\nif(cljs.core.truth_(b)){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(a)),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(b))].join(\x27\x27);\n} else {\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(a);\n}\n} else {\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(b);\n}\n}));\n\n(reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$variadic \x3d (function (a,b,rst){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(reagent.impl.util.class_names,reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(a,b),rst);\n}));\n\n/** @this {Function} */\n(reagent.impl.util.class_names.cljs$lang$applyTo \x3d (function (seq21623){\nvar G__21624 \x3d cljs.core.first(seq21623);\nvar seq21623__$1 \x3d cljs.core.next(seq21623);\nvar G__21625 \x3d cljs.core.first(seq21623__$1);\nvar seq21623__$2 \x3d cljs.core.next(seq21623__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__21624,G__21625,seq21623__$2);\n}));\n\n(reagent.impl.util.class_names.cljs$lang$maxFixedArity \x3d (2));\n\nreagent.impl.util.merge_class \x3d (function reagent$impl$util$merge_class(p1,p2){\nif(((cljs.core.contains_QMARK_(p1,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996))) || (cljs.core.contains_QMARK_(p2,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996))))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p2,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(p1),new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(p2)));\n} else {\nreturn p2;\n}\n});\nreagent.impl.util.merge_style \x3d (function reagent$impl$util$merge_style(p1,p2){\nvar style \x3d (function (){var temp__5804__auto__ \x3d new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736).cljs$core$IFn$_invoke$arity$1(p1);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar s1 \x3d temp__5804__auto__;\nvar temp__5804__auto____$1 \x3d new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736).cljs$core$IFn$_invoke$arity$1(p2);\nif(cljs.core.truth_(temp__5804__auto____$1)){\nvar s2 \x3d temp__5804__auto____$1;\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([s1,s2], 0));\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n})();\nif((style \x3d\x3d null)){\nreturn p2;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p2,new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),style);\n}\n});\nreagent.impl.util.merge_props \x3d (function reagent$impl$util$merge_props(var_args){\nvar G__21771 \x3d arguments.length;\nswitch (G__21771) {\ncase 0:\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___21865 \x3d arguments.length;\nvar i__5770__auto___21866 \x3d (0);\nwhile(true){\nif((i__5770__auto___21866 \x3c len__5769__auto___21865)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___21866]));\n\nvar G__21867 \x3d (i__5770__auto___21866 + (1));\ni__5770__auto___21866 \x3d G__21867;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn null;\n}));\n\n(reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$1 \x3d (function (p){\nvar temp__5802__auto__ \x3d new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(p);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar c \x3d temp__5802__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(c));\n} else {\nreturn p;\n}\n}));\n\n(reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$2 \x3d (function (p1,p2){\nif((p1 \x3d\x3d null)){\nvar temp__5802__auto__ \x3d new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(p2);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar c \x3d temp__5802__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(p2,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(c));\n} else {\nreturn p2;\n}\n} else {\nif(cljs.core.map_QMARK_(p1)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Property must be a map, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1], 0))].join(\x27\x27),\x22\\n\x22,\x22(map? p1)\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([p1,reagent.impl.util.merge_style(p1,reagent.impl.util.merge_class(p1,p2))], 0));\n}\n}));\n\n(reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$variadic \x3d (function (p1,p2,ps){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(reagent.impl.util.merge_props,reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$2(p1,p2),ps);\n}));\n\n/** @this {Function} */\n(reagent.impl.util.merge_props.cljs$lang$applyTo \x3d (function (seq21767){\nvar G__21768 \x3d cljs.core.first(seq21767);\nvar seq21767__$1 \x3d cljs.core.next(seq21767);\nvar G__21769 \x3d cljs.core.first(seq21767__$1);\nvar seq21767__$2 \x3d cljs.core.next(seq21767__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__21768,G__21769,seq21767__$2);\n}));\n\n(reagent.impl.util.merge_props.cljs$lang$maxFixedArity \x3d (2));\n\nreagent.impl.util._STAR_always_update_STAR_ \x3d false;\nreagent.impl.util.force_update \x3d (function reagent$impl$util$force_update(comp,deep){\nif(cljs.core.truth_(deep)){\nvar _STAR_always_update_STAR__orig_val__21780 \x3d reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__21781 \x3d true;\n(reagent.impl.util._STAR_always_update_STAR_ \x3d _STAR_always_update_STAR__temp_val__21781);\n\ntry{return comp.forceUpdate();\n}finally {(reagent.impl.util._STAR_always_update_STAR_ \x3d _STAR_always_update_STAR__orig_val__21780);\n}} else {\nreturn comp.forceUpdate();\n}\n});\nreagent.impl.util.shallow_obj_to_map \x3d (function reagent$impl$util$shallow_obj_to_map(o){\nvar ks \x3d cljs.core.js_keys(o);\nvar len \x3d ks.length;\nvar m \x3d cljs.core.PersistentArrayMap.EMPTY;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c len)){\nvar k \x3d (ks[i]);\nvar G__21869 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),reagent.impl.util.goog$module$goog$object.get(o,k));\nvar G__21870 \x3d (i + (1));\nm \x3d G__21869;\ni \x3d G__21870;\ncontinue;\n} else {\nreturn m;\n}\nbreak;\n}\n});\nreagent.impl.util.js_val_QMARK_ \x3d (function reagent$impl$util$js_val_QMARK_(x){\nreturn (!((\x22object\x22 \x3d\x3d\x3d goog.typeOf(x))));\n});\nreagent.impl.util.try_get_react_key \x3d (function reagent$impl$util$try_get_react_key(x){\ntry{return cljs.core.get.cljs$core$IFn$_invoke$arity$2(x,new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587));\n}catch (e21789){var e \x3d e21789;\nreturn null;\n}});\nreagent.impl.util.get_react_key \x3d (function reagent$impl$util$get_react_key(x){\nif(cljs.core.map_QMARK_(x)){\nreturn reagent.impl.util.try_get_react_key(x);\n} else {\nreturn null;\n}\n});\nreagent.impl.util.react_key_from_vec \x3d (function reagent$impl$util$react_key_from_vec(v){\nvar or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(v));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d reagent.impl.util.get_react_key(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null));\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar G__21795 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\nvar G__21795__$1 \x3d (((G__21795 instanceof cljs.core.Keyword))?G__21795.fqn:null);\nswitch (G__21795__$1) {\ncase \x22\x3e\x22:\ncase \x22f\x3e\x22:\nreturn reagent.impl.util.get_react_key(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(2),null));\n\nbreak;\ncase \x22r\x3e\x22:\nvar G__21796 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(2),null);\nif((G__21796 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__21796.key;\n}\n\nbreak;\ndefault:\nreturn null;\n\n}\n}\n}\n});\nreagent.impl.util.str_coll \x3d (function reagent$impl$util$str_coll(coll){\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(clojure.walk.prewalk((function (x){\nif(cljs.core.fn_QMARK_(x)){\nvar n \x3d reagent.impl.util.fun_name(x);\nvar G__21800 \x3d n;\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\x22,G__21800)){\nreturn x;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(null,G__21800)){\nreturn x;\n} else {\nreturn cljs.core.symbol.cljs$core$IFn$_invoke$arity$1(n);\n\n}\n}\n} else {\nreturn x;\n}\n}),coll));\n\n});\nreagent.impl.util.hiccup_err \x3d (function reagent$impl$util$hiccup_err(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___21874 \x3d arguments.length;\nvar i__5770__auto___21875 \x3d (0);\nwhile(true){\nif((i__5770__auto___21875 \x3c len__5769__auto___21874)){\nargs__5775__auto__.push((arguments[i__5770__auto___21875]));\n\nvar G__21876 \x3d (i__5770__auto___21875 + (1));\ni__5770__auto___21875 \x3d G__21876;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic \x3d (function (v,comp_name,msg){\nreturn [cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.str,msg)),\x22: \x22,reagent.impl.util.str_coll(v),\x22\\n\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(comp_name)].join(\x27\x27);\n}));\n\n(reagent.impl.util.hiccup_err.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(reagent.impl.util.hiccup_err.cljs$lang$applyTo \x3d (function (seq21802){\nvar G__21803 \x3d cljs.core.first(seq21802);\nvar seq21802__$1 \x3d cljs.core.next(seq21802);\nvar G__21804 \x3d cljs.core.first(seq21802__$1);\nvar seq21802__$2 \x3d cljs.core.next(seq21802__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__21803,G__21804,seq21802__$2);\n}));\n\n");
SHADOW_ENV.evalLoad("shadow.js.shim.module$react.js", true , "goog.provide(\x22shadow.js.shim.module$react\x22);\ngoog.provide(\x22module$shadow_js_shim_module$react\x22);\nshadow.js.shim.module$react \x3d shadow$bridge(\x22react\x22);\nmodule$shadow_js_shim_module$react.default \x3d shadow.js.shim.module$react;\n");
SHADOW_ENV.evalLoad("reagent.impl.batching.js", true , "goog.provide(\x27reagent.impl.batching\x27);\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching.mount_count !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.impl.batching.mount_count \x3d (0);\n}\nreagent.impl.batching.next_mount_count \x3d (function reagent$impl$batching$next_mount_count(){\nreturn (reagent.impl.batching.mount_count \x3d (reagent.impl.batching.mount_count + (1)));\n});\nreagent.impl.batching.fake_raf \x3d (function reagent$impl$batching$fake_raf(f){\nreturn setTimeout(f,(16));\n});\nreagent.impl.batching.next_tick \x3d (((!(reagent.impl.util.is_client)))?reagent.impl.batching.fake_raf:(function (){var w \x3d window;\nreturn (function (){var or__5045__auto__ \x3d w.requestAnimationFrame;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d w.webkitRequestAnimationFrame;\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nvar or__5045__auto____$2 \x3d w.mozRequestAnimationFrame;\nif(cljs.core.truth_(or__5045__auto____$2)){\nreturn or__5045__auto____$2;\n} else {\nvar or__5045__auto____$3 \x3d w.msRequestAnimationFrame;\nif(cljs.core.truth_(or__5045__auto____$3)){\nreturn or__5045__auto____$3;\n} else {\nreturn reagent.impl.batching.fake_raf;\n}\n}\n}\n}\n})().bind(w);\n})());\nreagent.impl.batching.compare_mount_order \x3d (function reagent$impl$batching$compare_mount_order(c1,c2){\nreturn (c1.cljsMountOrder - c2.cljsMountOrder);\n});\nreagent.impl.batching.run_queue \x3d (function reagent$impl$batching$run_queue(a){\na.sort(reagent.impl.batching.compare_mount_order);\n\nvar n__5636__auto__ \x3d a.length;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c n__5636__auto__)){\nvar c_21878 \x3d (a[i]);\nif(c_21878.cljsIsDirty \x3d\x3d\x3d true){\nc_21878.forceUpdate();\n} else {\n}\n\nvar G__21879 \x3d (i + (1));\ni \x3d G__21879;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching.ratom_flush !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.impl.batching.ratom_flush \x3d (function reagent$impl$batching$ratom_flush(){\nreturn null;\n});\n}\nreagent.impl.batching.run_funs \x3d (function reagent$impl$batching$run_funs(fs){\nvar n__5636__auto__ \x3d fs.length;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c n__5636__auto__)){\nvar fexpr__21841_21884 \x3d (fs[i]);\n(fexpr__21841_21884.cljs$core$IFn$_invoke$arity$0 ? fexpr__21841_21884.cljs$core$IFn$_invoke$arity$0() : fexpr__21841_21884.call(null));\n\nvar G__21885 \x3d (i + (1));\ni \x3d G__21885;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.impl.batching.enqueue \x3d (function reagent$impl$batching$enqueue(queue,fs,f){\nif(cljs.core.truth_(f)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Enqueued function\x22,\x22 must not be nil\x22].join(\x27\x27),\x22\\n\x22,\x22f\x22].join(\x27\x27)));\n}\n\nfs.push(f);\n\nreturn queue.schedule();\n});\n\n/**\n* @constructor\n*/\nreagent.impl.batching.RenderQueue \x3d (function (scheduled_QMARK_){\nthis.scheduled_QMARK_ \x3d scheduled_QMARK_;\n});\n(reagent.impl.batching.RenderQueue.prototype.flush_after_render \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar temp__5808__auto__ \x3d this$.afterRender;\nif((temp__5808__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar fs \x3d temp__5808__auto__;\n(this$.afterRender \x3d null);\n\nreturn reagent.impl.batching.run_funs(fs);\n}\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.queue_render \x3d (function (c){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((this$.componentQueue \x3d\x3d null)){\n(this$.componentQueue \x3d []);\n} else {\n}\n\nreturn reagent.impl.batching.enqueue(this$,this$.componentQueue,c);\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.schedule \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif(self__.scheduled_QMARK_){\nreturn null;\n} else {\n(self__.scheduled_QMARK_ \x3d true);\n\nvar G__21855 \x3d (function (){\nreturn this$.run_queues();\n});\nreturn (reagent.impl.batching.next_tick.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.batching.next_tick.cljs$core$IFn$_invoke$arity$1(G__21855) : reagent.impl.batching.next_tick.call(null,G__21855));\n}\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.flush_before_flush \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar temp__5808__auto__ \x3d this$.beforeFlush;\nif((temp__5808__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar fs \x3d temp__5808__auto__;\n(this$.beforeFlush \x3d null);\n\nreturn reagent.impl.batching.run_funs(fs);\n}\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.flush_queues \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nthis$.flush_before_flush();\n\nreagent.impl.batching.ratom_flush();\n\nthis$.flush_render();\n\nreturn this$.flush_after_render();\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.run_queues \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\n(self__.scheduled_QMARK_ \x3d false);\n\nreturn this$.flush_queues();\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.add_before_flush \x3d (function (f){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((this$.beforeFlush \x3d\x3d null)){\n(this$.beforeFlush \x3d []);\n} else {\n}\n\nreturn reagent.impl.batching.enqueue(this$,this$.beforeFlush,f);\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.add_after_render \x3d (function (f){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((this$.afterRender \x3d\x3d null)){\n(this$.afterRender \x3d []);\n} else {\n}\n\nreturn reagent.impl.batching.enqueue(this$,this$.afterRender,f);\n}));\n\n(reagent.impl.batching.RenderQueue.prototype.flush_render \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar temp__5808__auto__ \x3d this$.componentQueue;\nif((temp__5808__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar fs \x3d temp__5808__auto__;\n(this$.componentQueue \x3d null);\n\nreturn reagent.impl.batching.run_queue(fs);\n}\n}));\n\n(reagent.impl.batching.RenderQueue.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22scheduled?\x22,\x22scheduled?\x22,579986609,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.impl.batching.RenderQueue.cljs$lang$type \x3d true);\n\n(reagent.impl.batching.RenderQueue.cljs$lang$ctorStr \x3d \x22reagent.impl.batching/RenderQueue\x22);\n\n(reagent.impl.batching.RenderQueue.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22reagent.impl.batching/RenderQueue\x22);\n}));\n\n/**\n * Positional factory function for reagent.impl.batching/RenderQueue.\n */\nreagent.impl.batching.__GT_RenderQueue \x3d (function reagent$impl$batching$__GT_RenderQueue(scheduled_QMARK_){\nreturn (new reagent.impl.batching.RenderQueue(scheduled_QMARK_));\n});\n\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.batching.render_queue !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.impl.batching.render_queue \x3d reagent.impl.batching.__GT_RenderQueue(false);\n}\nreagent.impl.batching.flush \x3d (function reagent$impl$batching$flush(){\nreturn reagent.impl.batching.render_queue.flush_queues();\n});\nreagent.impl.batching.flush_after_render \x3d (function reagent$impl$batching$flush_after_render(){\nreturn reagent.impl.batching.render_queue.flush_after_render();\n});\nreagent.impl.batching.queue_render \x3d (function reagent$impl$batching$queue_render(c){\nif(cljs.core.truth_(c.cljsIsDirty)){\nreturn null;\n} else {\n(c.cljsIsDirty \x3d true);\n\nreturn reagent.impl.batching.render_queue.queue_render(c);\n}\n});\nreagent.impl.batching.mark_rendered \x3d (function reagent$impl$batching$mark_rendered(c){\nreturn (c.cljsIsDirty \x3d false);\n});\nreagent.impl.batching.do_before_flush \x3d (function reagent$impl$batching$do_before_flush(f){\nreturn reagent.impl.batching.render_queue.add_before_flush(f);\n});\nreagent.impl.batching.do_after_render \x3d (function reagent$impl$batching$do_after_render(f){\nreturn reagent.impl.batching.render_queue.add_after_render(f);\n});\nreagent.impl.batching.schedule \x3d (function reagent$impl$batching$schedule(){\nif(reagent.impl.batching.render_queue.scheduled_QMARK_ \x3d\x3d\x3d false){\nreturn reagent.impl.batching.render_queue.schedule();\n} else {\nreturn null;\n}\n});\n");
SHADOW_ENV.evalLoad("reagent.impl.protocols.js", true , "goog.provide(\x27reagent.impl.protocols\x27);\n\n/**\n * @interface\n */\nreagent.impl.protocols.Compiler \x3d function(){};\n\nvar reagent$impl$protocols$Compiler$get_id$dyn_21397 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (reagent.impl.protocols.get_id[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (reagent.impl.protocols.get_id[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22Compiler.get-id\x22,this$);\n}\n}\n});\nreagent.impl.protocols.get_id \x3d (function reagent$impl$protocols$get_id(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$impl$protocols$Compiler$get_id$arity$1 \x3d\x3d null)))))){\nreturn this$.reagent$impl$protocols$Compiler$get_id$arity$1(this$);\n} else {\nreturn reagent$impl$protocols$Compiler$get_id$dyn_21397(this$);\n}\n});\n\nvar reagent$impl$protocols$Compiler$parse_tag$dyn_21403 \x3d (function (this$,tag_name,tag_value){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (reagent.impl.protocols.parse_tag[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(this$,tag_name,tag_value) : m__5394__auto__.call(null,this$,tag_name,tag_value));\n} else {\nvar m__5392__auto__ \x3d (reagent.impl.protocols.parse_tag[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(this$,tag_name,tag_value) : m__5392__auto__.call(null,this$,tag_name,tag_value));\n} else {\nthrow cljs.core.missing_protocol(\x22Compiler.parse-tag\x22,this$);\n}\n}\n});\nreagent.impl.protocols.parse_tag \x3d (function reagent$impl$protocols$parse_tag(this$,tag_name,tag_value){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$impl$protocols$Compiler$parse_tag$arity$3 \x3d\x3d null)))))){\nreturn this$.reagent$impl$protocols$Compiler$parse_tag$arity$3(this$,tag_name,tag_value);\n} else {\nreturn reagent$impl$protocols$Compiler$parse_tag$dyn_21403(this$,tag_name,tag_value);\n}\n});\n\nvar reagent$impl$protocols$Compiler$as_element$dyn_21415 \x3d (function (this$,x){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (reagent.impl.protocols.as_element[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,x) : m__5394__auto__.call(null,this$,x));\n} else {\nvar m__5392__auto__ \x3d (reagent.impl.protocols.as_element[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,x) : m__5392__auto__.call(null,this$,x));\n} else {\nthrow cljs.core.missing_protocol(\x22Compiler.as-element\x22,this$);\n}\n}\n});\nreagent.impl.protocols.as_element \x3d (function reagent$impl$protocols$as_element(this$,x){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$impl$protocols$Compiler$as_element$arity$2 \x3d\x3d null)))))){\nreturn this$.reagent$impl$protocols$Compiler$as_element$arity$2(this$,x);\n} else {\nreturn reagent$impl$protocols$Compiler$as_element$dyn_21415(this$,x);\n}\n});\n\nvar reagent$impl$protocols$Compiler$make_element$dyn_21418 \x3d (function (this$,argv,component,jsprops,first_child){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (reagent.impl.protocols.make_element[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$5(this$,argv,component,jsprops,first_child) : m__5394__auto__.call(null,this$,argv,component,jsprops,first_child));\n} else {\nvar m__5392__auto__ \x3d (reagent.impl.protocols.make_element[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$5 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$5(this$,argv,component,jsprops,first_child) : m__5392__auto__.call(null,this$,argv,component,jsprops,first_child));\n} else {\nthrow cljs.core.missing_protocol(\x22Compiler.make-element\x22,this$);\n}\n}\n});\nreagent.impl.protocols.make_element \x3d (function reagent$impl$protocols$make_element(this$,argv,component,jsprops,first_child){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$impl$protocols$Compiler$make_element$arity$5 \x3d\x3d null)))))){\nreturn this$.reagent$impl$protocols$Compiler$make_element$arity$5(this$,argv,component,jsprops,first_child);\n} else {\nreturn reagent$impl$protocols$Compiler$make_element$dyn_21418(this$,argv,component,jsprops,first_child);\n}\n});\n\n");
SHADOW_ENV.evalLoad("reagent.ratom.js", true , "goog.provide(\x27reagent.ratom\x27);\ngoog.scope(function(){\n  reagent.ratom.goog$module$goog$object \x3d goog.module.get(\x27goog.object\x27);\n});\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom.debug !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.ratom.debug \x3d false;\n}\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom.generation !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.ratom.generation \x3d (0);\n}\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom._running !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.ratom._running \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\nreagent.ratom.reactive_QMARK_ \x3d (function reagent$ratom$reactive_QMARK_(){\nreturn (!((reagent.ratom._STAR_ratom_context_STAR_ \x3d\x3d null)));\n});\nreagent.ratom.running \x3d (function reagent$ratom$running(){\nreturn (cljs.core.deref(reagent.ratom._running));\n});\nreagent.ratom.arr_len \x3d (function reagent$ratom$arr_len(x){\nif((x \x3d\x3d null)){\nreturn (0);\n} else {\nreturn x.length;\n}\n});\nreagent.ratom.arr_eq \x3d (function reagent$ratom$arr_eq(x,y){\nvar len \x3d reagent.ratom.arr_len(x);\nvar and__5043__auto__ \x3d (len \x3d\x3d\x3d reagent.ratom.arr_len(y));\nif(and__5043__auto__){\nvar i \x3d (0);\nwhile(true){\nvar or__5045__auto__ \x3d (i \x3d\x3d\x3d len);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nif(((x[i]) \x3d\x3d\x3d (y[i]))){\nvar G__22445 \x3d (i + (1));\ni \x3d G__22445;\ncontinue;\n} else {\nreturn false;\n}\n}\nbreak;\n}\n} else {\nreturn and__5043__auto__;\n}\n});\n/**\n * When f is executed, if (f) derefs any ratoms, they are then added to \x27obj.captured\x27(*ratom-context*).\n * \n *   See function notify-deref-watcher! to know how *ratom-context* is updated\n */\nreagent.ratom.in_context \x3d (function reagent$ratom$in_context(obj,f){\nvar _STAR_ratom_context_STAR__orig_val__21975 \x3d reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__21976 \x3d obj;\n(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__temp_val__21976);\n\ntry{return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__orig_val__21975);\n}});\n/**\n * Returns `(in-context r f)`.  Calls `_update-watching` on r with any\n *   `deref`ed atoms captured during `in-context`, if any differ from the\n *   `watching` field of r.  Clears the `dirty?` flag on r.\n * \n *   Inside \x27_update-watching\x27 along with adding the ratoms in \x27r.watching\x27 of reaction,\n *   the reaction is also added to the list of watches on each ratoms f derefs.\n */\nreagent.ratom.deref_capture \x3d (function reagent$ratom$deref_capture(f,r){\n(r.captured \x3d null);\n\n(r.ratomGeneration \x3d (reagent.ratom.generation \x3d (reagent.ratom.generation + (1))));\n\n\nvar res \x3d reagent.ratom.in_context(r,f);\nvar c \x3d r.captured;\n(r.dirty_QMARK_ \x3d false);\n\nif(reagent.ratom.arr_eq(c,r.watching)){\n} else {\nr._update_watching(c);\n}\n\nreturn res;\n});\n/**\n * Add `derefed` to the `captured` field of `*ratom-context*`.\n * \n *   See also `in-context`\n */\nreagent.ratom.notify_deref_watcher_BANG_ \x3d (function reagent$ratom$notify_deref_watcher_BANG_(derefed){\nvar temp__5808__auto__ \x3d reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5808__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar r \x3d temp__5808__auto__;\nvar c \x3d r.captured;\nif((c \x3d\x3d null)){\nreturn (r.captured \x3d [derefed]);\n} else {\nreturn c.push(derefed);\n}\n}\n});\nreagent.ratom.check_watches \x3d (function reagent$ratom$check_watches(old,new$){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.ratom._running,cljs.core._PLUS_,(cljs.core.count(new$) - cljs.core.count(old)));\n} else {\n}\n\nreturn new$;\n});\nreagent.ratom.add_w \x3d (function reagent$ratom$add_w(this$,key,f){\nvar w \x3d this$.watches;\n(this$.watches \x3d reagent.ratom.check_watches(w,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(w,key,f)));\n\nreturn (this$.watchesArr \x3d null);\n});\nreagent.ratom.remove_w \x3d (function reagent$ratom$remove_w(this$,key){\nvar w \x3d this$.watches;\n(this$.watches \x3d reagent.ratom.check_watches(w,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(w,key)));\n\nreturn (this$.watchesArr \x3d null);\n});\nreagent.ratom.notify_w \x3d (function reagent$ratom$notify_w(this$,old,new$){\nvar w \x3d this$.watchesArr;\nvar a \x3d (((w \x3d\x3d null))?(this$.watchesArr \x3d cljs.core.reduce_kv((function (p1__21995_SHARP_,p2__21996_SHARP_,p3__21997_SHARP_){\nvar G__22000 \x3d p1__21995_SHARP_;\nG__22000.push(p2__21996_SHARP_);\n\nG__22000.push(p3__21997_SHARP_);\n\nreturn G__22000;\n}),[],this$.watches)):w);\nvar len \x3d a.length;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c len)){\nvar k_22446 \x3d (a[i]);\nvar f_22447 \x3d (a[(i + (1))]);\n(f_22447.cljs$core$IFn$_invoke$arity$4 ? f_22447.cljs$core$IFn$_invoke$arity$4(k_22446,this$,old,new$) : f_22447.call(null,k_22446,this$,old,new$));\n\nvar G__22449 \x3d ((2) + i);\ni \x3d G__22449;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n});\nreagent.ratom.pr_atom \x3d (function reagent$ratom$pr_atom(a,writer,opts,s,v){\ncljs.core._write(writer,[\x22#object[reagent.ratom.\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(s),\x22 \x22].join(\x27\x27));\n\ncljs.core.pr_writer((function (){var _STAR_ratom_context_STAR__orig_val__22002 \x3d reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__22003 \x3d null;\n(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__temp_val__22003);\n\ntry{return v;\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__orig_val__22002);\n}})(),writer,opts);\n\nreturn cljs.core._write(writer,\x22]\x22);\n});\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.ratom.rea_queue !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.ratom.rea_queue \x3d null;\n}\nreagent.ratom.rea_enqueue \x3d (function reagent$ratom$rea_enqueue(r){\nif((reagent.ratom.rea_queue \x3d\x3d null)){\n(reagent.ratom.rea_queue \x3d []);\n\nreagent.impl.batching.schedule();\n} else {\n}\n\nreturn reagent.ratom.rea_queue.push(r);\n});\n\n/**\n * @interface\n */\nreagent.ratom.IReactiveAtom \x3d function(){};\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.ratom.RAtom \x3d (function (state,meta,validator,watches){\nthis.state \x3d state;\nthis.meta \x3d meta;\nthis.validator \x3d validator;\nthis.watches \x3d watches;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2154201088;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 114690;\n});\n(reagent.ratom.RAtom.prototype.reagent$ratom$IReactiveAtom$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RAtom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,w,opts){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\x22RAtom\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn self__.meta;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (o,other){\nvar self__ \x3d this;\nvar o__$1 \x3d this;\nreturn (o__$1 \x3d\x3d\x3d other);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IReset$_reset_BANG_$arity$2 \x3d (function (a,new_value){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nif((self__.validator \x3d\x3d null)){\n} else {\nif(cljs.core.truth_((self__.validator.cljs$core$IFn$_invoke$arity$1 ? self__.validator.cljs$core$IFn$_invoke$arity$1(new_value) : self__.validator.call(null,new_value)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22Validator rejected reference state\x22,\x22\\n\x22,\x22(validator new-value)\x22].join(\x27\x27)));\n}\n}\n\nvar old_value \x3d self__.state;\n(self__.state \x3d new_value);\n\nif((self__.watches \x3d\x3d null)){\n} else {\nreagent.ratom.notify_w(a__$1,old_value,new_value);\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 \x3d (function (a,f){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 \x3d (function (a,f,x){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 \x3d (function (a,f,x,y){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 \x3d (function (a,f,x,y,more){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 \x3d (function (this$,old,new$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_add_watch$arity$3 \x3d (function (this$,key,f){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 \x3d (function (this$,key){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_,new_meta){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (new reagent.ratom.RAtom(self__.state,new_meta,self__.validator,self__.watches));\n}));\n\n(reagent.ratom.RAtom.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nreturn self__.state;\n}));\n\n(reagent.ratom.RAtom.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22meta\x22,\x22meta\x22,-1154898805,null),new cljs.core.Symbol(null,\x22validator\x22,\x22validator\x22,-325659154,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22watches\x22,\x22watches\x22,1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.ratom.RAtom.cljs$lang$type \x3d true);\n\n(reagent.ratom.RAtom.cljs$lang$ctorStr \x3d \x22reagent.ratom/RAtom\x22);\n\n(reagent.ratom.RAtom.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22reagent.ratom/RAtom\x22);\n}));\n\n/**\n * Positional factory function for reagent.ratom/RAtom.\n */\nreagent.ratom.__GT_RAtom \x3d (function reagent$ratom$__GT_RAtom(state,meta,validator,watches){\nreturn (new reagent.ratom.RAtom(state,meta,validator,watches));\n});\n\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n */\nreagent.ratom.atom \x3d (function reagent$ratom$atom(var_args){\nvar G__22027 \x3d arguments.length;\nswitch (G__22027) {\ncase 1:\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___22454 \x3d arguments.length;\nvar i__5770__auto___22455 \x3d (0);\nwhile(true){\nif((i__5770__auto___22455 \x3c len__5769__auto___22454)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___22455]));\n\nvar G__22456 \x3d (i__5770__auto___22455 + (1));\ni__5770__auto___22455 \x3d G__22456;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((1)),(0),null));\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5795__auto__);\n\n}\n});\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn reagent.ratom.__GT_RAtom(x,null,null,null);\n}));\n\n(reagent.ratom.atom.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,p__22032){\nvar map__22033 \x3d p__22032;\nvar map__22033__$1 \x3d cljs.core.__destructure_map(map__22033);\nvar meta \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22033__$1,new cljs.core.Keyword(null,\x22meta\x22,\x22meta\x22,1499536964));\nvar validator \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22033__$1,new cljs.core.Keyword(null,\x22validator\x22,\x22validator\x22,-1966190681));\nreturn reagent.ratom.__GT_RAtom(x,meta,validator,null);\n}));\n\n/** @this {Function} */\n(reagent.ratom.atom.cljs$lang$applyTo \x3d (function (seq22025){\nvar G__22026 \x3d cljs.core.first(seq22025);\nvar seq22025__$1 \x3d cljs.core.next(seq22025);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22026,seq22025__$1);\n}));\n\n(reagent.ratom.atom.cljs$lang$maxFixedArity \x3d (1));\n\nreagent.ratom.cached_reaction \x3d (function reagent$ratom$cached_reaction(f,o,k,obj,destroy){\nvar m \x3d o.reagReactionCache;\nvar m__$1 \x3d (((m \x3d\x3d null))?cljs.core.PersistentArrayMap.EMPTY:m);\nvar r \x3d (m__$1.cljs$core$IFn$_invoke$arity$2 ? m__$1.cljs$core$IFn$_invoke$arity$2(k,null) : m__$1.call(null,k,null));\nif((!((r \x3d\x3d null)))){\nreturn cljs.core._deref(r);\n} else {\nif((reagent.ratom._STAR_ratom_context_STAR_ \x3d\x3d null)){\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n} else {\nvar r__$1 \x3d (function (){var G__22034 \x3d f;\nvar G__22035 \x3d new cljs.core.Keyword(null,\x22on-dispose\x22,\x22on-dispose\x22,2105306360);\nvar G__22036 \x3d (function (x){\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.dec);\n} else {\n}\n\nvar __22457 \x3d o.reagReactionCache;\nvar __22458__$1 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(__22457,k);\n(o.reagReactionCache \x3d __22458__$1);\n\nif((!((obj \x3d\x3d null)))){\n(obj.reaction \x3d null);\n} else {\n}\n\nif((!((destroy \x3d\x3d null)))){\nreturn (destroy.cljs$core$IFn$_invoke$arity$1 ? destroy.cljs$core$IFn$_invoke$arity$1(x) : destroy.call(null,x));\n} else {\nreturn null;\n}\n});\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__22034,G__22035,G__22036) : reagent.ratom.make_reaction.call(null,G__22034,G__22035,G__22036));\n})();\nvar v \x3d cljs.core._deref(r__$1);\n(o.reagReactionCache \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m__$1,k,r__$1));\n\nif(reagent.ratom.debug){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(reagent.ratom._running,cljs.core.inc);\n} else {\n}\n\nif((!((obj \x3d\x3d null)))){\n(obj.reaction \x3d r__$1);\n} else {\n}\n\nreturn v;\n\n}\n}\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Track \x3d (function (f,args,reaction){\nthis.f \x3d f;\nthis.args \x3d args;\nthis.reaction \x3d reaction;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(reagent.ratom.Track.prototype.reagent$ratom$IReactiveAtom$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Track.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar temp__5806__auto__ \x3d self__.reaction;\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn reagent.ratom.cached_reaction((function (){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.f,self__.args);\n}),self__.f,self__.args,this$__$1,null);\n} else {\nvar r \x3d temp__5806__auto__;\nreturn cljs.core._deref(r);\n}\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (((other instanceof reagent.ratom.Track)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.f,other.f)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.args,other.args)))));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.f,self__.args], null));\n}));\n\n(reagent.ratom.Track.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,w,opts){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\x22Track\x22,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\x22f\x22,\x22f\x22,-1597136552),self__.f], null));\n}));\n\n(reagent.ratom.Track.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),new cljs.core.Symbol(null,\x22args\x22,\x22args\x22,-1338879193,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22reaction\x22,\x22reaction\x22,2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.ratom.Track.cljs$lang$type \x3d true);\n\n(reagent.ratom.Track.cljs$lang$ctorStr \x3d \x22reagent.ratom/Track\x22);\n\n(reagent.ratom.Track.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22reagent.ratom/Track\x22);\n}));\n\n/**\n * Positional factory function for reagent.ratom/Track.\n */\nreagent.ratom.__GT_Track \x3d (function reagent$ratom$__GT_Track(f,args,reaction){\nreturn (new reagent.ratom.Track(f,args,reaction));\n});\n\nreagent.ratom.make_track \x3d (function reagent$ratom$make_track(f,args){\nreturn (new reagent.ratom.Track(f,args,null));\n});\nreagent.ratom.make_track_BANG_ \x3d (function reagent$ratom$make_track_BANG_(f,args){\nvar t \x3d reagent.ratom.make_track(f,args);\nvar r \x3d (function (){var G__22073 \x3d (function (){\nreturn t.cljs$core$IDeref$_deref$arity$1(null);\n});\nvar G__22074 \x3d new cljs.core.Keyword(null,\x22auto-run\x22,\x22auto-run\x22,1958400437);\nvar G__22075 \x3d true;\nreturn (reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3 ? reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$3(G__22073,G__22074,G__22075) : reagent.ratom.make_reaction.call(null,G__22073,G__22074,G__22075));\n})();\ncljs.core.deref(r);\n\nreturn r;\n});\nreagent.ratom.track \x3d (function reagent$ratom$track(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___22462 \x3d arguments.length;\nvar i__5770__auto___22463 \x3d (0);\nwhile(true){\nif((i__5770__auto___22463 \x3c len__5769__auto___22462)){\nargs__5775__auto__.push((arguments[i__5770__auto___22463]));\n\nvar G__22464 \x3d (i__5770__auto___22463 + (1));\ni__5770__auto___22463 \x3d G__22464;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(reagent.ratom.track.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\x22Assert failed: (ifn? f)\x22));\n}\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.ratom.track.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.ratom.track.cljs$lang$applyTo \x3d (function (seq22076){\nvar G__22077 \x3d cljs.core.first(seq22076);\nvar seq22076__$1 \x3d cljs.core.next(seq22076);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22077,seq22076__$1);\n}));\n\nreagent.ratom.track_BANG_ \x3d (function reagent$ratom$track_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___22465 \x3d arguments.length;\nvar i__5770__auto___22466 \x3d (0);\nwhile(true){\nif((i__5770__auto___22466 \x3c len__5769__auto___22465)){\nargs__5775__auto__.push((arguments[i__5770__auto___22466]));\n\nvar G__22467 \x3d (i__5770__auto___22466 + (1));\ni__5770__auto___22466 \x3d G__22467;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(reagent.ratom.track_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\x22Assert failed: (ifn? f)\x22));\n}\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.ratom.track_BANG_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.ratom.track_BANG_.cljs$lang$applyTo \x3d (function (seq22080){\nvar G__22081 \x3d cljs.core.first(seq22080);\nvar seq22080__$1 \x3d cljs.core.next(seq22080);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22081,seq22080__$1);\n}));\n\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.RCursor \x3d (function (ratom,path,reaction,state,watches){\nthis.ratom \x3d ratom;\nthis.path \x3d path;\nthis.reaction \x3d reaction;\nthis.state \x3d state;\nthis.watches \x3d watches;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 114690;\n});\n(reagent.ratom.RCursor.prototype._peek \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar _STAR_ratom_context_STAR__orig_val__22088 \x3d reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__22089 \x3d null;\n(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__temp_val__22089);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__orig_val__22088);\n}}));\n\n(reagent.ratom.RCursor.prototype._set_state \x3d (function (oldstate,newstate){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((oldstate \x3d\x3d\x3d newstate)){\nreturn null;\n} else {\n(self__.state \x3d newstate);\n\nif((!((self__.watches \x3d\x3d null)))){\nreturn reagent.ratom.notify_w(this$,oldstate,newstate);\n} else {\nreturn null;\n}\n}\n}));\n\n(reagent.ratom.RCursor.prototype.reagent$ratom$IReactiveAtom$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.RCursor.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,w,opts){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\x22RCursor\x22,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null),new cljs.core.Keyword(null,\x22path\x22,\x22path\x22,-188191168),self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn cljs.core.hash(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.ratom,self__.path], null));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (_,other){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (((other instanceof reagent.ratom.RCursor)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,other.path)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.ratom,other.ratom)))));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IReset$_reset_BANG_$arity$2 \x3d (function (this$,new_value){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar oldstate \x3d self__.state;\nthis$__$1._set_state(oldstate,new_value);\n\nif((((!((self__.ratom \x3d\x3d null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.path,cljs.core.PersistentVector.EMPTY)){\ncljs.core.reset_BANG_(self__.ratom,new_value);\n} else {\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.ratom,cljs.core.assoc_in,self__.path,new_value);\n}\n} else {\n(self__.ratom.cljs$core$IFn$_invoke$arity$2 ? self__.ratom.cljs$core$IFn$_invoke$arity$2(self__.path,new_value) : self__.ratom.call(null,self__.path,new_value));\n}\n\nreturn new_value;\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 \x3d (function (a,f){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__22135 \x3d a__$1._peek();\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__22135) : f.call(null,G__22135));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 \x3d (function (a,f,x){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__22139 \x3d a__$1._peek();\nvar G__22140 \x3d x;\nreturn (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__22139,G__22140) : f.call(null,G__22139,G__22140));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 \x3d (function (a,f,x,y){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__22142 \x3d a__$1._peek();\nvar G__22143 \x3d x;\nvar G__22144 \x3d y;\nreturn (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__22142,G__22143,G__22144) : f.call(null,G__22142,G__22143,G__22144));\n})());\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 \x3d (function (a,f,x,y,more){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a__$1._peek(),x,y,more));\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_notify_watches$arity$3 \x3d (function (this$,old,new$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_add_watch$arity$3 \x3d (function (this$,key,f){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IWatchable$_remove_watch$arity$2 \x3d (function (this$,key){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.RCursor.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar oldstate \x3d self__.state;\nvar newstate \x3d (function (){var temp__5806__auto__ \x3d self__.reaction;\nif((temp__5806__auto__ \x3d\x3d null)){\nvar f \x3d (((((!((self__.ratom \x3d\x3d null))))?(((((self__.ratom.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d self__.ratom.cljs$core$IDeref$))))?true:(((!self__.ratom.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,self__.ratom)))?(function (){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(self__.ratom),self__.path);\n}):(function (){\nreturn (self__.ratom.cljs$core$IFn$_invoke$arity$1 ? self__.ratom.cljs$core$IFn$_invoke$arity$1(self__.path) : self__.ratom.call(null,self__.path));\n}));\nreturn reagent.ratom.cached_reaction(f,self__.ratom,self__.path,this$__$1,null);\n} else {\nvar r \x3d temp__5806__auto__;\nreturn cljs.core._deref(r);\n}\n})();\nthis$__$1._set_state(oldstate,newstate);\n\nreturn newstate;\n}));\n\n(reagent.ratom.RCursor.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22ratom\x22,\x22ratom\x22,1514010260,null),new cljs.core.Symbol(null,\x22path\x22,\x22path\x22,1452340359,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22reaction\x22,\x22reaction\x22,2131401315,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22watches\x22,\x22watches\x22,1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.ratom.RCursor.cljs$lang$type \x3d true);\n\n(reagent.ratom.RCursor.cljs$lang$ctorStr \x3d \x22reagent.ratom/RCursor\x22);\n\n(reagent.ratom.RCursor.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22reagent.ratom/RCursor\x22);\n}));\n\n/**\n * Positional factory function for reagent.ratom/RCursor.\n */\nreagent.ratom.__GT_RCursor \x3d (function reagent$ratom$__GT_RCursor(ratom,path,reaction,state,watches){\nreturn (new reagent.ratom.RCursor(ratom,path,reaction,state,watches));\n});\n\nreagent.ratom.cursor \x3d (function reagent$ratom$cursor(src,path){\nif((function (){var or__5045__auto__ \x3d (((!((src \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d src.reagent$ratom$IReactiveAtom$))))?true:(((!src.cljs$lang$protocol_mask$partition$))?cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src):false)):cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,src));\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn ((cljs.core.ifn_QMARK_(src)) \x26\x26 ((!(cljs.core.vector_QMARK_(src)))));\n}\n})()){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22src must be a reactive atom or a function, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([src], 0)),\x22 while attempting to get path: \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([path], 0))].join(\x27\x27),\x22\\n\x22,\x22(or (satisfies? IReactiveAtom src) (and (ifn? src) (not (vector? src))))\x22].join(\x27\x27)));\n}\n\nreturn reagent.ratom.__GT_RCursor(src,path,null,null,null);\n});\nreagent.ratom.with_let_destroy \x3d (function reagent$ratom$with_let_destroy(v){\nvar temp__5808__auto__ \x3d v.destroy;\nif((temp__5808__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar f \x3d temp__5808__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));\n}\n});\nreagent.ratom.with_let_values \x3d (function reagent$ratom$with_let_values(key){\nvar temp__5806__auto__ \x3d reagent.ratom._STAR_ratom_context_STAR_;\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn [];\n} else {\nvar c \x3d temp__5806__auto__;\nreturn reagent.ratom.cached_reaction(cljs.core.array,c,key,null,reagent.ratom.with_let_destroy);\n}\n});\n\n/**\n * @interface\n */\nreagent.ratom.IDisposable \x3d function(){};\n\nvar reagent$ratom$IDisposable$dispose_BANG_$dyn_22474 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (reagent.ratom.dispose_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (reagent.ratom.dispose_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22IDisposable.dispose!\x22,this$);\n}\n}\n});\nreagent.ratom.dispose_BANG_ \x3d (function reagent$ratom$dispose_BANG_(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1 \x3d\x3d null)))))){\nreturn this$.reagent$ratom$IDisposable$dispose_BANG_$arity$1(this$);\n} else {\nreturn reagent$ratom$IDisposable$dispose_BANG_$dyn_22474(this$);\n}\n});\n\nvar reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_22476 \x3d (function (this$,f){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (reagent.ratom.add_on_dispose_BANG_[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__5394__auto__.call(null,this$,f));\n} else {\nvar m__5392__auto__ \x3d (reagent.ratom.add_on_dispose_BANG_[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,f) : m__5392__auto__.call(null,this$,f));\n} else {\nthrow cljs.core.missing_protocol(\x22IDisposable.add-on-dispose!\x22,this$);\n}\n}\n});\nreagent.ratom.add_on_dispose_BANG_ \x3d (function reagent$ratom$add_on_dispose_BANG_(this$,f){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 \x3d\x3d null)))))){\nreturn this$.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2(this$,f);\n} else {\nreturn reagent$ratom$IDisposable$add_on_dispose_BANG_$dyn_22476(this$,f);\n}\n});\n\n\n/**\n * @interface\n */\nreagent.ratom.IRunnable \x3d function(){};\n\nvar reagent$ratom$IRunnable$run$dyn_22480 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (reagent.ratom.run[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (reagent.ratom.run[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22IRunnable.run\x22,this$);\n}\n}\n});\nreagent.ratom.run \x3d (function reagent$ratom$run(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.reagent$ratom$IRunnable$run$arity$1 \x3d\x3d null)))))){\nreturn this$.reagent$ratom$IRunnable$run$arity$1(this$);\n} else {\nreturn reagent$ratom$IRunnable$run$dyn_22480(this$);\n}\n});\n\nreagent.ratom.handle_reaction_change \x3d (function reagent$ratom$handle_reaction_change(this$,sender,old,new$){\nreturn this$._handle_change(sender,old,new$);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IHash}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {reagent.ratom.IReactiveAtom}\n * @implements {reagent.ratom.IRunnable}\n * @implements {reagent.ratom.IDisposable}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Reaction \x3d (function (f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nthis.f \x3d f;\nthis.state \x3d state;\nthis.dirty_QMARK_ \x3d dirty_QMARK_;\nthis.nocache_QMARK_ \x3d nocache_QMARK_;\nthis.watching \x3d watching;\nthis.watches \x3d watches;\nthis.auto_run \x3d auto_run;\nthis.caught \x3d caught;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2153807872;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 114690;\n});\n(reagent.ratom.Reaction.prototype._peek_at \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar _STAR_ratom_context_STAR__orig_val__22221 \x3d reagent.ratom._STAR_ratom_context_STAR_;\nvar _STAR_ratom_context_STAR__temp_val__22222 \x3d null;\n(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__temp_val__22222);\n\ntry{return this$.cljs$core$IDeref$_deref$arity$1(null);\n}finally {(reagent.ratom._STAR_ratom_context_STAR_ \x3d _STAR_ratom_context_STAR__orig_val__22221);\n}}));\n\n(reagent.ratom.Reaction.prototype._handle_change \x3d (function (sender,oldval,newval){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif((((oldval \x3d\x3d\x3d newval)) || (self__.dirty_QMARK_))){\nreturn null;\n} else {\nif((self__.auto_run \x3d\x3d null)){\n(self__.dirty_QMARK_ \x3d true);\n\nreturn reagent.ratom.rea_enqueue(this$);\n} else {\nif(self__.auto_run \x3d\x3d\x3d true){\nreturn this$._run(false);\n} else {\nreturn (self__.auto_run.cljs$core$IFn$_invoke$arity$1 ? self__.auto_run.cljs$core$IFn$_invoke$arity$1(this$) : self__.auto_run.call(null,this$));\n}\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype._update_watching \x3d (function (derefed){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar new$ \x3d cljs.core.set(derefed);\nvar old \x3d cljs.core.set(self__.watching);\n(self__.watching \x3d derefed);\n\nvar seq__22226_22485 \x3d cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new$,old));\nvar chunk__22227_22486 \x3d null;\nvar count__22228_22487 \x3d (0);\nvar i__22229_22488 \x3d (0);\nwhile(true){\nif((i__22229_22488 \x3c count__22228_22487)){\nvar w_22489 \x3d chunk__22227_22486.cljs$core$IIndexed$_nth$arity$2(null,i__22229_22488);\ncljs.core._add_watch(w_22489,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__22490 \x3d seq__22226_22485;\nvar G__22491 \x3d chunk__22227_22486;\nvar G__22492 \x3d count__22228_22487;\nvar G__22493 \x3d (i__22229_22488 + (1));\nseq__22226_22485 \x3d G__22490;\nchunk__22227_22486 \x3d G__22491;\ncount__22228_22487 \x3d G__22492;\ni__22229_22488 \x3d G__22493;\ncontinue;\n} else {\nvar temp__5804__auto___22494 \x3d cljs.core.seq(seq__22226_22485);\nif(temp__5804__auto___22494){\nvar seq__22226_22495__$1 \x3d temp__5804__auto___22494;\nif(cljs.core.chunked_seq_QMARK_(seq__22226_22495__$1)){\nvar c__5568__auto___22496 \x3d cljs.core.chunk_first(seq__22226_22495__$1);\nvar G__22497 \x3d cljs.core.chunk_rest(seq__22226_22495__$1);\nvar G__22498 \x3d c__5568__auto___22496;\nvar G__22499 \x3d cljs.core.count(c__5568__auto___22496);\nvar G__22500 \x3d (0);\nseq__22226_22485 \x3d G__22497;\nchunk__22227_22486 \x3d G__22498;\ncount__22228_22487 \x3d G__22499;\ni__22229_22488 \x3d G__22500;\ncontinue;\n} else {\nvar w_22501 \x3d cljs.core.first(seq__22226_22495__$1);\ncljs.core._add_watch(w_22501,this$,reagent.ratom.handle_reaction_change);\n\n\nvar G__22502 \x3d cljs.core.next(seq__22226_22495__$1);\nvar G__22503 \x3d null;\nvar G__22504 \x3d (0);\nvar G__22505 \x3d (0);\nseq__22226_22485 \x3d G__22502;\nchunk__22227_22486 \x3d G__22503;\ncount__22228_22487 \x3d G__22504;\ni__22229_22488 \x3d G__22505;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nvar seq__22264 \x3d cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(old,new$));\nvar chunk__22265 \x3d null;\nvar count__22266 \x3d (0);\nvar i__22267 \x3d (0);\nwhile(true){\nif((i__22267 \x3c count__22266)){\nvar w \x3d chunk__22265.cljs$core$IIndexed$_nth$arity$2(null,i__22267);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__22506 \x3d seq__22264;\nvar G__22507 \x3d chunk__22265;\nvar G__22508 \x3d count__22266;\nvar G__22509 \x3d (i__22267 + (1));\nseq__22264 \x3d G__22506;\nchunk__22265 \x3d G__22507;\ncount__22266 \x3d G__22508;\ni__22267 \x3d G__22509;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__22264);\nif(temp__5804__auto__){\nvar seq__22264__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__22264__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__22264__$1);\nvar G__22510 \x3d cljs.core.chunk_rest(seq__22264__$1);\nvar G__22511 \x3d c__5568__auto__;\nvar G__22512 \x3d cljs.core.count(c__5568__auto__);\nvar G__22513 \x3d (0);\nseq__22264 \x3d G__22510;\nchunk__22265 \x3d G__22511;\ncount__22266 \x3d G__22512;\ni__22267 \x3d G__22513;\ncontinue;\n} else {\nvar w \x3d cljs.core.first(seq__22264__$1);\ncljs.core._remove_watch(w,this$);\n\n\nvar G__22515 \x3d cljs.core.next(seq__22264__$1);\nvar G__22516 \x3d null;\nvar G__22517 \x3d (0);\nvar G__22518 \x3d (0);\nseq__22264 \x3d G__22515;\nchunk__22265 \x3d G__22516;\ncount__22266 \x3d G__22517;\ni__22267 \x3d G__22518;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._queued_run \x3d (function (){\nvar self__ \x3d this;\nvar this$ \x3d this;\nif(((self__.dirty_QMARK_) \x26\x26 ((!((self__.watching \x3d\x3d null)))))){\nreturn this$._run(true);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype._try_capture \x3d (function (f__$1){\nvar self__ \x3d this;\nvar this$ \x3d this;\ntry{(self__.caught \x3d null);\n\nreturn reagent.ratom.deref_capture(f__$1,this$);\n}catch (e22296){var e \x3d e22296;\n(self__.state \x3d e);\n\n(self__.caught \x3d e);\n\nreturn (self__.dirty_QMARK_ \x3d false);\n}}));\n\n(reagent.ratom.Reaction.prototype._run \x3d (function (check){\nvar self__ \x3d this;\nvar this$ \x3d this;\nvar oldstate \x3d self__.state;\nvar res \x3d (cljs.core.truth_(check)?this$._try_capture(self__.f):reagent.ratom.deref_capture(self__.f,this$));\nif(self__.nocache_QMARK_){\n} else {\n(self__.state \x3d res);\n\nif((((self__.watches \x3d\x3d null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate,res)))){\n} else {\nreagent.ratom.notify_w(this$,oldstate,res);\n}\n}\n\nreturn res;\n}));\n\n(reagent.ratom.Reaction.prototype._set_opts \x3d (function (p__22318){\nvar self__ \x3d this;\nvar map__22319 \x3d p__22318;\nvar map__22319__$1 \x3d cljs.core.__destructure_map(map__22319);\nvar auto_run__$1 \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22319__$1,new cljs.core.Keyword(null,\x22auto-run\x22,\x22auto-run\x22,1958400437));\nvar on_set \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22319__$1,new cljs.core.Keyword(null,\x22on-set\x22,\x22on-set\x22,-140953470));\nvar on_dispose \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22319__$1,new cljs.core.Keyword(null,\x22on-dispose\x22,\x22on-dispose\x22,2105306360));\nvar no_cache \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22319__$1,new cljs.core.Keyword(null,\x22no-cache\x22,\x22no-cache\x22,1588056370));\nvar this$ \x3d this;\nif((!((auto_run__$1 \x3d\x3d null)))){\n(this$.auto_run \x3d auto_run__$1);\n} else {\n}\n\nif((!((on_set \x3d\x3d null)))){\n(this$.on_set \x3d on_set);\n} else {\n}\n\nif((!((on_dispose \x3d\x3d null)))){\n(this$.on_dispose \x3d on_dispose);\n} else {\n}\n\nif((!((no_cache \x3d\x3d null)))){\nreturn (this$.nocache_QMARK_ \x3d no_cache);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IReactiveAtom$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,w,opts){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\x22Reaction\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IHash$_hash$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn goog.getUid(this$__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (o,other){\nvar self__ \x3d this;\nvar o__$1 \x3d this;\nreturn (o__$1 \x3d\x3d\x3d other);\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$dispose_BANG_$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar s \x3d self__.state;\nvar wg \x3d self__.watching;\n(self__.watching \x3d null);\n\n(self__.state \x3d null);\n\n(self__.auto_run \x3d null);\n\n(self__.dirty_QMARK_ \x3d true);\n\nvar seq__22357_22524 \x3d cljs.core.seq(cljs.core.set(wg));\nvar chunk__22358_22525 \x3d null;\nvar count__22359_22526 \x3d (0);\nvar i__22360_22527 \x3d (0);\nwhile(true){\nif((i__22360_22527 \x3c count__22359_22526)){\nvar w_22528 \x3d chunk__22358_22525.cljs$core$IIndexed$_nth$arity$2(null,i__22360_22527);\ncljs.core._remove_watch(w_22528,this$__$1);\n\n\nvar G__22529 \x3d seq__22357_22524;\nvar G__22530 \x3d chunk__22358_22525;\nvar G__22531 \x3d count__22359_22526;\nvar G__22532 \x3d (i__22360_22527 + (1));\nseq__22357_22524 \x3d G__22529;\nchunk__22358_22525 \x3d G__22530;\ncount__22359_22526 \x3d G__22531;\ni__22360_22527 \x3d G__22532;\ncontinue;\n} else {\nvar temp__5804__auto___22534 \x3d cljs.core.seq(seq__22357_22524);\nif(temp__5804__auto___22534){\nvar seq__22357_22535__$1 \x3d temp__5804__auto___22534;\nif(cljs.core.chunked_seq_QMARK_(seq__22357_22535__$1)){\nvar c__5568__auto___22536 \x3d cljs.core.chunk_first(seq__22357_22535__$1);\nvar G__22537 \x3d cljs.core.chunk_rest(seq__22357_22535__$1);\nvar G__22538 \x3d c__5568__auto___22536;\nvar G__22539 \x3d cljs.core.count(c__5568__auto___22536);\nvar G__22540 \x3d (0);\nseq__22357_22524 \x3d G__22537;\nchunk__22358_22525 \x3d G__22538;\ncount__22359_22526 \x3d G__22539;\ni__22360_22527 \x3d G__22540;\ncontinue;\n} else {\nvar w_22541 \x3d cljs.core.first(seq__22357_22535__$1);\ncljs.core._remove_watch(w_22541,this$__$1);\n\n\nvar G__22542 \x3d cljs.core.next(seq__22357_22535__$1);\nvar G__22543 \x3d null;\nvar G__22544 \x3d (0);\nvar G__22545 \x3d (0);\nseq__22357_22524 \x3d G__22542;\nchunk__22358_22525 \x3d G__22543;\ncount__22359_22526 \x3d G__22544;\ni__22360_22527 \x3d G__22545;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif((!((this$__$1.on_dispose \x3d\x3d null)))){\nthis$__$1.on_dispose(s);\n} else {\n}\n\nvar temp__5808__auto__ \x3d this$__$1.on_dispose_arr;\nif((temp__5808__auto__ \x3d\x3d null)){\nreturn null;\n} else {\nvar a \x3d temp__5808__auto__;\nvar n__5636__auto__ \x3d a.length;\nvar i \x3d (0);\nwhile(true){\nif((i \x3c n__5636__auto__)){\nvar fexpr__22402_22550 \x3d (a[i]);\n(fexpr__22402_22550.cljs$core$IFn$_invoke$arity$1 ? fexpr__22402_22550.cljs$core$IFn$_invoke$arity$1(this$__$1) : fexpr__22402_22550.call(null,this$__$1));\n\nvar G__22551 \x3d (i + (1));\ni \x3d G__22551;\ncontinue;\n} else {\nreturn null;\n}\nbreak;\n}\n}\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IDisposable$add_on_dispose_BANG_$arity$2 \x3d (function (this$,f__$1){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar temp__5806__auto__ \x3d this$__$1.on_dispose_arr;\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn (this$__$1.on_dispose_arr \x3d [f__$1]);\n} else {\nvar a \x3d temp__5806__auto__;\nreturn a.push(f__$1);\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IReset$_reset_BANG_$arity$2 \x3d (function (a,newval){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nif(cljs.core.fn_QMARK_(a__$1.on_set)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22Reaction is read only; on-set is not allowed\x22,\x22\\n\x22,\x22(fn? (.-on-set a))\x22].join(\x27\x27)));\n}\n\nvar oldval \x3d self__.state;\n(self__.state \x3d newval);\n\na__$1.on_set(oldval,newval);\n\nreagent.ratom.notify_w(a__$1,oldval,newval);\n\nreturn newval;\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 \x3d (function (a,f__$1){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__22411 \x3d a__$1._peek_at();\nreturn (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__22411) : f__$1.call(null,G__22411));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 \x3d (function (a,f__$1,x){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__22413 \x3d a__$1._peek_at();\nvar G__22414 \x3d x;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$2 ? f__$1.cljs$core$IFn$_invoke$arity$2(G__22413,G__22414) : f__$1.call(null,G__22413,G__22414));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 \x3d (function (a,f__$1,x,y){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(function (){var G__22416 \x3d a__$1._peek_at();\nvar G__22417 \x3d x;\nvar G__22418 \x3d y;\nreturn (f__$1.cljs$core$IFn$_invoke$arity$3 ? f__$1.cljs$core$IFn$_invoke$arity$3(G__22416,G__22417,G__22418) : f__$1.call(null,G__22416,G__22417,G__22418));\n})());\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 \x3d (function (a,f__$1,x,y,more){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f__$1,a__$1._peek_at(),x,y,more));\n}));\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.ratom.Reaction.prototype.reagent$ratom$IRunnable$run$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n\nreturn this$__$1._run(false);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_notify_watches$arity$3 \x3d (function (this$,old,new$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_add_watch$arity$3 \x3d (function (this$,key,f__$1){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.add_w(this$__$1,key,f__$1);\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IWatchable$_remove_watch$arity$2 \x3d (function (this$,key){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar was_empty \x3d cljs.core.empty_QMARK_(self__.watches);\nreagent.ratom.remove_w(this$__$1,key);\n\nif((((!(was_empty))) \x26\x26 (((cljs.core.empty_QMARK_(self__.watches)) \x26\x26 ((self__.auto_run \x3d\x3d null)))))){\nreturn this$__$1.reagent$ratom$IDisposable$dispose_BANG_$arity$1(null);\n} else {\nreturn null;\n}\n}));\n\n(reagent.ratom.Reaction.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar temp__5808__auto___22554 \x3d self__.caught;\nif((temp__5808__auto___22554 \x3d\x3d null)){\n} else {\nvar e_22555 \x3d temp__5808__auto___22554;\nthrow e_22555;\n}\n\nvar non_reactive_22556 \x3d (reagent.ratom._STAR_ratom_context_STAR_ \x3d\x3d null);\nif(non_reactive_22556){\n(reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0 ? reagent.ratom.flush_BANG_.cljs$core$IFn$_invoke$arity$0() : reagent.ratom.flush_BANG_.call(null));\n} else {\n}\n\nif(((non_reactive_22556) \x26\x26 ((self__.auto_run \x3d\x3d null)))){\nif(self__.dirty_QMARK_){\nvar oldstate_22557 \x3d self__.state;\n(self__.state \x3d (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null)));\n\nif((((self__.watches \x3d\x3d null)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(oldstate_22557,self__.state)))){\n} else {\nreagent.ratom.notify_w(this$__$1,oldstate_22557,self__.state);\n}\n} else {\n}\n} else {\nreagent.ratom.notify_deref_watcher_BANG_(this$__$1);\n\nif(self__.dirty_QMARK_){\nthis$__$1._run(false);\n} else {\n}\n}\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Reaction.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 8, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22f\x22,\x22f\x22,43394975,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22dirty?\x22,\x22dirty?\x22,-419314319,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22nocache?\x22,\x22nocache?\x22,-1065670978,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null)], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22watching\x22,\x22watching\x22,1947648227,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22watches\x22,\x22watches\x22,1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22auto-run\x22,\x22auto-run\x22,-696035332,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22caught\x22,\x22caught\x22,2084008322,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.ratom.Reaction.cljs$lang$type \x3d true);\n\n(reagent.ratom.Reaction.cljs$lang$ctorStr \x3d \x22reagent.ratom/Reaction\x22);\n\n(reagent.ratom.Reaction.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22reagent.ratom/Reaction\x22);\n}));\n\n/**\n * Positional factory function for reagent.ratom/Reaction.\n */\nreagent.ratom.__GT_Reaction \x3d (function reagent$ratom$__GT_Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught){\nreturn (new reagent.ratom.Reaction(f,state,dirty_QMARK_,nocache_QMARK_,watching,watches,auto_run,caught));\n});\n\nreagent.ratom.flush_BANG_ \x3d (function reagent$ratom$flush_BANG_(){\nwhile(true){\nvar q \x3d reagent.ratom.rea_queue;\nif((q \x3d\x3d null)){\nreturn null;\n} else {\n(reagent.ratom.rea_queue \x3d null);\n\nvar n__5636__auto___22559 \x3d q.length;\nvar i_22560 \x3d (0);\nwhile(true){\nif((i_22560 \x3c n__5636__auto___22559)){\nvar r_22561 \x3d (q[i_22560]);\nr_22561._queued_run();\n\nvar G__22562 \x3d (i_22560 + (1));\ni_22560 \x3d G__22562;\ncontinue;\n} else {\n}\nbreak;\n}\n\ncontinue;\n}\nbreak;\n}\n});\n(reagent.impl.batching.ratom_flush \x3d reagent.ratom.flush_BANG_);\nreagent.ratom.make_reaction \x3d (function reagent$ratom$make_reaction(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___22563 \x3d arguments.length;\nvar i__5770__auto___22564 \x3d (0);\nwhile(true){\nif((i__5770__auto___22564 \x3c len__5769__auto___22563)){\nargs__5775__auto__.push((arguments[i__5770__auto___22564]));\n\nvar G__22565 \x3d (i__5770__auto___22564 + (1));\ni__5770__auto___22564 \x3d G__22565;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(reagent.ratom.make_reaction.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,p__22430){\nvar map__22431 \x3d p__22430;\nvar map__22431__$1 \x3d cljs.core.__destructure_map(map__22431);\nvar auto_run \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22431__$1,new cljs.core.Keyword(null,\x22auto-run\x22,\x22auto-run\x22,1958400437));\nvar on_set \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22431__$1,new cljs.core.Keyword(null,\x22on-set\x22,\x22on-set\x22,-140953470));\nvar on_dispose \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22431__$1,new cljs.core.Keyword(null,\x22on-dispose\x22,\x22on-dispose\x22,2105306360));\nvar reaction \x3d reagent.ratom.__GT_Reaction(f,null,true,false,null,null,null,null);\nreaction._set_opts(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22auto-run\x22,\x22auto-run\x22,1958400437),auto_run,new cljs.core.Keyword(null,\x22on-set\x22,\x22on-set\x22,-140953470),on_set,new cljs.core.Keyword(null,\x22on-dispose\x22,\x22on-dispose\x22,2105306360),on_dispose], null));\n\nreturn reaction;\n}));\n\n(reagent.ratom.make_reaction.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.ratom.make_reaction.cljs$lang$applyTo \x3d (function (seq22428){\nvar G__22429 \x3d cljs.core.first(seq22428);\nvar seq22428__$1 \x3d cljs.core.next(seq22428);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22429,seq22428__$1);\n}));\n\nreagent.ratom.temp_reaction \x3d reagent.ratom.make_reaction(null);\n/**\n * Evaluates `f` and returns the result.  If `f` calls `deref` on any ratoms,\n * creates a new Reaction that watches those atoms and calls `run` whenever\n * any of those watched ratoms change.  Also, the new reaction is added to\n * list of \x27watches\x27 of each of the ratoms. The `run` parameter is a function\n * that should expect one argument.  It is passed `obj` when run.  The `opts`\n * are any options accepted by a Reaction and will be set on the newly created\n * Reaction. Sets the newly created Reaction to the `key` on `obj`.\n */\nreagent.ratom.run_in_reaction \x3d (function reagent$ratom$run_in_reaction(f,obj,key,run,opts){\nvar r \x3d reagent.ratom.temp_reaction;\nvar res \x3d reagent.ratom.deref_capture(f,r);\nif((r.watching \x3d\x3d null)){\n} else {\n(reagent.ratom.temp_reaction \x3d reagent.ratom.make_reaction(null));\n\nr._set_opts(opts);\n\n(r.f \x3d f);\n\n(r.auto_run \x3d (function (){\nreturn (run.cljs$core$IFn$_invoke$arity$1 ? run.cljs$core$IFn$_invoke$arity$1(obj) : run.call(null,obj));\n}));\n\nreagent.ratom.goog$module$goog$object.set(obj,key,r);\n}\n\nreturn res;\n});\nreagent.ratom.check_derefs \x3d (function reagent$ratom$check_derefs(f){\nvar ctx \x3d ({});\nvar res \x3d reagent.ratom.in_context(ctx,f);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [res,(!((ctx.captured \x3d\x3d null)))], null);\n});\n\n/**\n* @constructor\n * @implements {cljs.core.IWatchable}\n * @implements {cljs.core.IAtom}\n * @implements {cljs.core.IEquiv}\n * @implements {cljs.core.IReset}\n * @implements {cljs.core.ISwap}\n * @implements {cljs.core.IDeref}\n * @implements {cljs.core.IPrintWithWriter}\n*/\nreagent.ratom.Wrapper \x3d (function (state,callback,changed,watches){\nthis.state \x3d state;\nthis.callback \x3d callback;\nthis.changed \x3d changed;\nthis.watches \x3d watches;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 114690;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 2149613568;\n});\n(reagent.ratom.Wrapper.prototype.cljs$core$IDeref$_deref$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nif(((self__.changed) \x26\x26 ((!((reagent.ratom._STAR_ratom_context_STAR_ \x3d\x3d null)))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,\x22derefing stale wrap: \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$__$1], 0))].join(\x27\x27));\n} else {\n}\n} else {\n}\n\n\nreturn self__.state;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IReset$_reset_BANG_$arity$2 \x3d (function (this$,newval){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar oldval \x3d self__.state;\n(self__.changed \x3d true);\n\n(self__.state \x3d newval);\n\nif((!((self__.watches \x3d\x3d null)))){\nreagent.ratom.notify_w(this$__$1,oldval,newval);\n} else {\n}\n\n(self__.callback.cljs$core$IFn$_invoke$arity$1 ? self__.callback.cljs$core$IFn$_invoke$arity$1(newval) : self__.callback.call(null,newval));\n\nreturn newval;\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$2 \x3d (function (a,f){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(self__.state) : f.call(null,self__.state)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$3 \x3d (function (a,f,x){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(self__.state,x) : f.call(null,self__.state,x)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$4 \x3d (function (a,f,x,y){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,(f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(self__.state,x,y) : f.call(null,self__.state,x,y)));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$ISwap$_swap_BANG_$arity$5 \x3d (function (a,f,x,y,more){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn a__$1.cljs$core$IReset$_reset_BANG_$arity$2(null,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,self__.state,x,y,more));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IEquiv$_equiv$arity$2 \x3d (function (this$,other){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn (((other instanceof reagent.ratom.Wrapper)) \x26\x26 ((((!(self__.changed))) \x26\x26 (((cljs.core.not(other.changed)) \x26\x26 (((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.state,other.state)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.callback,other.callback)))))))));\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_notify_watches$arity$3 \x3d (function (this$,old,new$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.notify_w(this$__$1,old,new$);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_add_watch$arity$3 \x3d (function (this$,key,f){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.add_w(this$__$1,key,f);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IWatchable$_remove_watch$arity$2 \x3d (function (this$,key){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.ratom.remove_w(this$__$1,key);\n}));\n\n(reagent.ratom.Wrapper.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 \x3d (function (a,w,opts){\nvar self__ \x3d this;\nvar a__$1 \x3d this;\nreturn reagent.ratom.pr_atom(a__$1,w,opts,\x22Wrapper\x22,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22val\x22,\x22val\x22,128701612),a__$1.cljs$core$IDeref$_deref$arity$1(null)], null));\n}));\n\n(reagent.ratom.Wrapper.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22state\x22,\x22state\x22,-348086572,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),new cljs.core.Symbol(null,\x22callback\x22,\x22callback\x22,935395299,null),cljs.core.with_meta(new cljs.core.Symbol(null,\x22changed\x22,\x22changed\x22,-2083710852,null),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22tag\x22,\x22tag\x22,-1290361223),new cljs.core.Symbol(null,\x22boolean\x22,\x22boolean\x22,-278886877,null),new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22watches\x22,\x22watches\x22,1367433992,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(reagent.ratom.Wrapper.cljs$lang$type \x3d true);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorStr \x3d \x22reagent.ratom/Wrapper\x22);\n\n(reagent.ratom.Wrapper.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22reagent.ratom/Wrapper\x22);\n}));\n\n/**\n * Positional factory function for reagent.ratom/Wrapper.\n */\nreagent.ratom.__GT_Wrapper \x3d (function reagent$ratom$__GT_Wrapper(state,callback,changed,watches){\nreturn (new reagent.ratom.Wrapper(state,callback,changed,watches));\n});\n\nreagent.ratom.make_wrapper \x3d (function reagent$ratom$make_wrapper(value,callback_fn,args){\nreturn reagent.ratom.__GT_Wrapper(value,reagent.impl.util.make_partial_fn(callback_fn,args),false,null);\n});\n");
SHADOW_ENV.evalLoad("reagent.impl.component.js", true , "goog.provide(\x27reagent.impl.component\x27);\ngoog.scope(function(){\n  reagent.impl.component.goog$module$goog$object \x3d goog.module.get(\x27goog.object\x27);\n});\nreagent.impl.component.extract_props \x3d (function reagent$impl$component$extract_props(v){\nvar p \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nif(cljs.core.map_QMARK_(p)){\nreturn p;\n} else {\nreturn null;\n}\n});\nreagent.impl.component.extract_children \x3d (function reagent$impl$component$extract_children(v){\nvar p \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null);\nvar first_child \x3d (((((p \x3d\x3d null)) || (cljs.core.map_QMARK_(p))))?(2):(1));\nif((cljs.core.count(v) \x3e first_child)){\nreturn cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v,first_child);\n} else {\nreturn null;\n}\n});\nreagent.impl.component.props_argv \x3d (function reagent$impl$component$props_argv(c,p){\nvar temp__5806__auto__ \x3d p.argv;\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c.constructor,reagent.impl.util.shallow_obj_to_map(p)], null);\n} else {\nvar a \x3d temp__5806__auto__;\nreturn a;\n}\n});\nreagent.impl.component.get_argv \x3d (function reagent$impl$component$get_argv(c){\nreturn reagent.impl.component.props_argv(c,c.props);\n});\nreagent.impl.component.get_props \x3d (function reagent$impl$component$get_props(c){\nvar p \x3d c.props;\nvar temp__5806__auto__ \x3d p.argv;\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn reagent.impl.util.shallow_obj_to_map(p);\n} else {\nvar v \x3d temp__5806__auto__;\nreturn reagent.impl.component.extract_props(v);\n}\n});\nreagent.impl.component.get_children \x3d (function reagent$impl$component$get_children(c){\nvar p \x3d c.props;\nvar temp__5806__auto__ \x3d p.argv;\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,shadow.js.shim.module$react.Children.toArray(p.children));\n} else {\nvar v \x3d temp__5806__auto__;\nreturn reagent.impl.component.extract_children(v);\n}\n});\nreagent.impl.component.reagent_class_QMARK_ \x3d (function reagent$impl$component$reagent_class_QMARK_(c){\nreturn ((cljs.core.fn_QMARK_(c)) \x26\x26 ((!(((function (){var G__22468 \x3d c;\nvar G__22468__$1 \x3d (((G__22468 \x3d\x3d null))?null:G__22468.prototype);\nif((G__22468__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__22468__$1.reagentRender;\n}\n})() \x3d\x3d null)))));\n});\nreagent.impl.component.react_class_QMARK_ \x3d (function reagent$impl$component$react_class_QMARK_(c){\nreturn ((cljs.core.fn_QMARK_(c)) \x26\x26 ((!(((function (){var G__22471 \x3d c;\nvar G__22471__$1 \x3d (((G__22471 \x3d\x3d null))?null:G__22471.prototype);\nif((G__22471__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__22471__$1.render;\n}\n})() \x3d\x3d null)))));\n});\nreagent.impl.component.reagent_component_QMARK_ \x3d (function reagent$impl$component$reagent_component_QMARK_(c){\nreturn (!((c.reagentRender \x3d\x3d null)));\n});\nreagent.impl.component.state_atom \x3d (function reagent$impl$component$state_atom(this$){\nvar sa \x3d this$.cljsState;\nif((!((sa \x3d\x3d null)))){\nreturn sa;\n} else {\nreturn (this$.cljsState \x3d reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1(null));\n}\n});\n/**\n * Calls the render function of the component `c`.  If result `res` evaluates to a:\n *   1) Vector (form-1 component) - Treats the vector as hiccup and returns\n *      a react element with a render function based on that hiccup\n *   2) Function (form-2 component) - updates the render function to `res` i.e. the internal function\n *      and calls wrap-render again (`recur`), until the render result doesn\x27t evaluate to a function.\n *   3) Anything else - Returns the result of evaluating `c`\n */\nreagent.impl.component.wrap_render \x3d (function reagent$impl$component$wrap_render(c,compiler){\nwhile(true){\nvar f \x3d c.reagentRender;\nvar _ \x3d ((cljs.core.ifn_QMARK_(f))?null:(function(){throw (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? f)\x22].join(\x27\x27)))})());\nvar res \x3d ((c.cljsLegacyRender \x3d\x3d\x3d true)?f.call(c,c):(function (){var v \x3d reagent.impl.component.get_argv(c);\nvar n \x3d cljs.core.count(v);\nvar G__22514 \x3d n;\nswitch (G__22514) {\ncase (1):\nreturn f.call(c);\n\nbreak;\ncase (2):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)));\n\nbreak;\ncase (3):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)));\n\nbreak;\ncase (4):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)));\n\nbreak;\ncase (5):\nreturn f.call(c,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(1)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(2)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(3)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,(4)));\n\nbreak;\ndefault:\nreturn f.apply(c,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(v).slice((1)));\n\n}\n})());\nif(cljs.core.vector_QMARK_(res)){\nreturn reagent.impl.protocols.as_element(compiler,res);\n} else {\nif(cljs.core.ifn_QMARK_(res)){\nvar f__$1 \x3d ((reagent.impl.component.reagent_class_QMARK_(res))?((function (c,compiler,f,_,res){\nreturn (function() { \nvar G__22673__delegate \x3d function (args){\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\n};\nvar G__22673 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__22674__i \x3d 0, G__22674__a \x3d new Array(arguments.length -  0);\nwhile (G__22674__i \x3c G__22674__a.length) {G__22674__a[G__22674__i] \x3d arguments[G__22674__i + 0]; ++G__22674__i;}\n  args \x3d new cljs.core.IndexedSeq(G__22674__a,0,null);\n} \nreturn G__22673__delegate.call(this,args);};\nG__22673.cljs$lang$maxFixedArity \x3d 0;\nG__22673.cljs$lang$applyTo \x3d (function (arglist__22675){\nvar args \x3d cljs.core.seq(arglist__22675);\nreturn G__22673__delegate(args);\n});\nG__22673.cljs$core$IFn$_invoke$arity$variadic \x3d G__22673__delegate;\nreturn G__22673;\n})()\n;})(c,compiler,f,_,res))\n:res);\n(c.reagentRender \x3d f__$1);\n\nvar G__22676 \x3d c;\nvar G__22677 \x3d compiler;\nc \x3d G__22676;\ncompiler \x3d G__22677;\ncontinue;\n} else {\nreturn res;\n\n}\n}\nbreak;\n}\n});\nreagent.impl.component.component_name \x3d (function reagent$impl$component$component_name(c){\nvar or__5045__auto__ \x3d (function (){var G__22533 \x3d c;\nvar G__22533__$1 \x3d (((G__22533 \x3d\x3d null))?null:G__22533.constructor);\nif((G__22533__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__22533__$1.displayName;\n}\n})();\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar G__22546 \x3d c;\nvar G__22546__$1 \x3d (((G__22546 \x3d\x3d null))?null:G__22546.constructor);\nif((G__22546__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__22546__$1.name;\n}\n}\n});\nreagent.impl.component.comp_name \x3d (function reagent$impl$component$comp_name(){\nvar c \x3d reagent.impl.component._STAR_current_component_STAR_;\nvar n \x3d reagent.impl.component.component_name(c);\nif((!(cljs.core.empty_QMARK_(n)))){\nreturn [\x22 (in \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(n),\x22)\x22].join(\x27\x27);\n} else {\nreturn \x22\x22;\n}\n\n});\nreagent.impl.component.do_render \x3d (function reagent$impl$component$do_render(c,compiler){\nvar _STAR_current_component_STAR__orig_val__22552 \x3d reagent.impl.component._STAR_current_component_STAR_;\nvar _STAR_current_component_STAR__temp_val__22553 \x3d c;\n(reagent.impl.component._STAR_current_component_STAR_ \x3d _STAR_current_component_STAR__temp_val__22553);\n\ntry{return reagent.impl.component.wrap_render(c,compiler);\n}finally {(reagent.impl.component._STAR_current_component_STAR_ \x3d _STAR_current_component_STAR__orig_val__22552);\n}});\nreagent.impl.component.rat_opts \x3d new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22no-cache\x22,\x22no-cache\x22,1588056370),true], null);\nreagent.impl.component.custom_wrapper \x3d (function reagent$impl$component$custom_wrapper(key,f){\nvar G__22558 \x3d key;\nvar G__22558__$1 \x3d (((G__22558 instanceof cljs.core.Keyword))?G__22558.fqn:null);\nswitch (G__22558__$1) {\ncase \x22getDefaultProps\x22:\nthrow (new Error(\x22getDefaultProps not supported\x22));\n\nbreak;\ncase \x22getDerivedStateFromProps\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_getDerivedStateFromProps(props,state){\nreturn f.call(null,(function (){var temp__5806__auto__ \x3d props.argv;\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn props;\n} else {\nvar a \x3d temp__5806__auto__;\nreturn reagent.impl.component.extract_props(a);\n}\n})(),state);\n});\n\nbreak;\ncase \x22getInitialState\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_getInitialState(c){\nreturn cljs.core.reset_BANG_(reagent.impl.component.state_atom(c),f.call(c,c));\n});\n\nbreak;\ncase \x22getSnapshotBeforeUpdate\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_getSnapshotBeforeUpdate(oldprops,oldstate){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate);\n});\n\nbreak;\ncase \x22componentWillReceiveProps\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\n});\n\nbreak;\ncase \x22UNSAFE_componentWillReceiveProps\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillReceiveProps(nextprops){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops));\n});\n\nbreak;\ncase \x22shouldComponentUpdate\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_shouldComponentUpdate(nextprops,nextstate){\nvar or__5045__auto__ \x3d reagent.impl.util._STAR_always_update_STAR_;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar c \x3d this;\nvar old_argv \x3d c.props.argv;\nvar new_argv \x3d nextprops.argv;\nvar noargv \x3d (((old_argv \x3d\x3d null)) || ((new_argv \x3d\x3d null)));\nif((f \x3d\x3d null)){\nvar or__5045__auto____$1 \x3d noargv;\nif(or__5045__auto____$1){\nreturn or__5045__auto____$1;\n} else {\ntry{return cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\n}catch (e22571){var e \x3d e22571;\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,\x22Exception thrown while comparing argv\x27s in shouldComponentUpdate: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(old_argv),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new_argv),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(\x27\x27));\n} else {\n}\n\nreturn false;\n}}\n} else {\nif(noargv){\nreturn f.call(c,c,reagent.impl.component.get_argv(c),reagent.impl.component.props_argv(c,nextprops));\n} else {\nreturn f.call(c,c,old_argv,new_argv);\n\n}\n}\n}\n});\n\nbreak;\ncase \x22componentWillUpdate\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\n});\n\nbreak;\ncase \x22UNSAFE_componentWillUpdate\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUpdate(nextprops,nextstate){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,nextprops),nextstate);\n});\n\nbreak;\ncase \x22componentDidUpdate\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidUpdate(oldprops,oldstate,snapshot){\nvar c \x3d this;\nreturn f.call(c,c,reagent.impl.component.props_argv(c,oldprops),oldstate,snapshot);\n});\n\nbreak;\ncase \x22componentWillMount\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\nvar c \x3d this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \x22UNSAFE_componentWillMount\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillMount(){\nvar c \x3d this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \x22componentDidMount\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidMount(){\nvar c \x3d this;\nreturn f.call(c,c);\n});\n\nbreak;\ncase \x22componentWillUnmount\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentWillUnmount(){\nvar c \x3d this;\nvar G__22598_22682 \x3d reagent.impl.component.goog$module$goog$object.get(c,\x22cljsRatom\x22);\nif((G__22598_22682 \x3d\x3d null)){\n} else {\nreagent.ratom.dispose_BANG_(G__22598_22682);\n}\n\nreagent.impl.batching.mark_rendered(c);\n\nif((f \x3d\x3d null)){\nreturn null;\n} else {\nreturn f.call(c,c);\n}\n});\n\nbreak;\ncase \x22componentDidCatch\x22:\nreturn (function reagent$impl$component$custom_wrapper_$_componentDidCatch(error,info){\nvar c \x3d this;\nreturn f.call(c,c,error,info);\n});\n\nbreak;\ndefault:\nreturn null;\n\n}\n});\nreagent.impl.component.get_wrapper \x3d (function reagent$impl$component$get_wrapper(key,f){\nvar wrap \x3d reagent.impl.component.custom_wrapper(key,f);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d wrap;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn f;\n} else {\nreturn and__5043__auto__;\n}\n})())){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? f)\x22].join(\x27\x27)));\n}\n} else {\n}\n\nvar or__5045__auto__ \x3d wrap;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn f;\n}\n});\nreagent.impl.component.obligatory \x3d new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22shouldComponentUpdate\x22,\x22shouldComponentUpdate\x22,1795750960),null,new cljs.core.Keyword(null,\x22componentWillUnmount\x22,\x22componentWillUnmount\x22,1573788814),null], null);\nreagent.impl.component.dash_to_method_name \x3d reagent.impl.util.memoize_1(reagent.impl.util.dash_to_method_name);\nreagent.impl.component.camelify_map_keys \x3d (function reagent$impl$component$camelify_map_keys(fun_map){\nreturn cljs.core.reduce_kv((function (m,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(reagent.impl.component.dash_to_method_name(k)),v);\n}),cljs.core.PersistentArrayMap.EMPTY,fun_map);\n});\nreagent.impl.component.add_obligatory \x3d (function reagent$impl$component$add_obligatory(fun_map){\nreturn cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([reagent.impl.component.obligatory,fun_map], 0));\n});\nreagent.impl.component.wrap_funs \x3d (function reagent$impl$component$wrap_funs(fmap,compiler){\nvar renders_22686 \x3d cljs.core.select_keys(fmap,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454),new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383)], null));\nvar render_fun_22687 \x3d cljs.core.first(cljs.core.vals(renders_22686));\nif(cljs.core.not(new cljs.core.Keyword(null,\x22componentFunction\x22,\x22componentFunction\x22,825866104).cljs$core$IFn$_invoke$arity$1(fmap))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22:component-function is no longer supported, use :reagent-render instead.\x22,\x22\\n\x22,\x22(not (:componentFunction fmap))\x22].join(\x27\x27)));\n}\n\nif((cljs.core.count(renders_22686) \x3e (0))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22Missing reagent-render\x22,\x22\\n\x22,\x22(pos? (count renders))\x22].join(\x27\x27)));\n}\n\nif(((1) \x3d\x3d\x3d cljs.core.count(renders_22686))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22Too many render functions supplied\x22,\x22\\n\x22,\x22(\x3d\x3d 1 (count renders))\x22].join(\x27\x27)));\n}\n\nif(cljs.core.ifn_QMARK_(render_fun_22687)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([render_fun_22687], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? render-fun)\x22].join(\x27\x27)));\n}\n\n\nvar render_fun \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383).cljs$core$IFn$_invoke$arity$1(fmap);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454).cljs$core$IFn$_invoke$arity$1(fmap);\n}\n})();\nvar legacy_render \x3d (new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383).cljs$core$IFn$_invoke$arity$1(fmap) \x3d\x3d null);\nvar name \x3d (function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22displayName\x22,\x22displayName\x22,-809144601).cljs$core$IFn$_invoke$arity$1(fmap);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar or__5045__auto____$1 \x3d reagent.impl.util.fun_name(render_fun);\nif(cljs.core.truth_(or__5045__auto____$1)){\nreturn or__5045__auto____$1;\n} else {\nreturn cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\x22reagent\x22));\n}\n}\n})();\nvar fmap__$1 \x3d cljs.core.reduce_kv((function (m,k,v){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,reagent.impl.component.get_wrapper(k,v));\n}),cljs.core.PersistentArrayMap.EMPTY,fmap);\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(fmap__$1,new cljs.core.Keyword(null,\x22displayName\x22,\x22displayName\x22,-809144601),name,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22cljsLegacyRender\x22,\x22cljsLegacyRender\x22,-1527295613),legacy_render,new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383),render_fun,new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454),(function reagent$impl$component$wrap_funs_$_render(){\nvar c \x3d this;\nif(reagent.impl.util._STAR_non_reactive_STAR_){\nreturn reagent.impl.component.do_render(c,compiler);\n} else {\nvar rat \x3d reagent.impl.component.goog$module$goog$object.get(c,\x22cljsRatom\x22);\nreagent.impl.batching.mark_rendered(c);\n\nif((rat \x3d\x3d null)){\nreturn reagent.ratom.run_in_reaction((function (){\nreturn reagent.impl.component.do_render(c,compiler);\n}),c,\x22cljsRatom\x22,reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\n} else {\nreturn rat._run(false);\n}\n}\n})], 0));\n});\nreagent.impl.component.map_to_js \x3d (function reagent$impl$component$map_to_js(m){\nreturn cljs.core.reduce_kv((function (o,k,v){\nvar G__22612 \x3d o;\nreagent.impl.component.goog$module$goog$object.set(G__22612,cljs.core.name(k),v);\n\nreturn G__22612;\n}),({}),m);\n});\nreagent.impl.component.cljsify \x3d (function reagent$impl$component$cljsify(body,compiler){\nreturn reagent.impl.component.wrap_funs(reagent.impl.component.add_obligatory(reagent.impl.component.camelify_map_keys(body)),compiler);\n});\nreagent.impl.component.built_in_static_method_names \x3d new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22childContextTypes\x22,\x22childContextTypes\x22,578717991),new cljs.core.Keyword(null,\x22contextTypes\x22,\x22contextTypes\x22,-2023853910),new cljs.core.Keyword(null,\x22contextType\x22,\x22contextType\x22,1033066077),new cljs.core.Keyword(null,\x22getDerivedStateFromProps\x22,\x22getDerivedStateFromProps\x22,-991834739),new cljs.core.Keyword(null,\x22getDerivedStateFromError\x22,\x22getDerivedStateFromError\x22,166658477)], null);\n/**\n * Creates JS class based on provided Clojure map.\n * \n *   Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n *   and can be provided in snake-case or camelCase.\n *   Constructor function is defined using key `:getInitialState`.\n * \n *   React built-in static methods or properties are automatically defined as statics.\n */\nreagent.impl.component.create_class \x3d (function reagent$impl$component$create_class(body,compiler){\nif(cljs.core.map_QMARK_(body)){\n} else {\nthrow (new Error(\x22Assert failed: (map? body)\x22));\n}\n\nvar body__$1 \x3d reagent.impl.component.cljsify(body,compiler);\nvar methods$ \x3d reagent.impl.component.map_to_js(cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.dissoc,body__$1,new cljs.core.Keyword(null,\x22displayName\x22,\x22displayName\x22,-809144601),new cljs.core.Keyword(null,\x22getInitialState\x22,\x22getInitialState\x22,1541760916),new cljs.core.Keyword(null,\x22constructor\x22,\x22constructor\x22,-1953928811),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454),new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383),reagent.impl.component.built_in_static_method_names], 0)));\nvar static_methods \x3d reagent.impl.component.map_to_js(cljs.core.select_keys(body__$1,reagent.impl.component.built_in_static_method_names));\nvar display_name \x3d new cljs.core.Keyword(null,\x22displayName\x22,\x22displayName\x22,-809144601).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar get_initial_state \x3d new cljs.core.Keyword(null,\x22getInitialState\x22,\x22getInitialState\x22,1541760916).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar construct \x3d new cljs.core.Keyword(null,\x22constructor\x22,\x22constructor\x22,-1953928811).cljs$core$IFn$_invoke$arity$1(body__$1);\nvar cmp \x3d (function (props,context,updater){\nvar this$ \x3d this;\nshadow.js.shim.module$react.Component.call(this$,props,context,updater);\n\nif(cljs.core.truth_(construct)){\n(construct.cljs$core$IFn$_invoke$arity$2 ? construct.cljs$core$IFn$_invoke$arity$2(this$,props) : construct.call(null,this$,props));\n} else {\n}\n\nif(cljs.core.truth_(get_initial_state)){\n(this$.state \x3d (get_initial_state.cljs$core$IFn$_invoke$arity$1 ? get_initial_state.cljs$core$IFn$_invoke$arity$1(this$) : get_initial_state.call(null,this$)));\n} else {\n}\n\n(this$.cljsMountOrder \x3d reagent.impl.batching.next_mount_count());\n\nreturn this$;\n});\nreagent.impl.component.goog$module$goog$object.extend(cmp.prototype,shadow.js.shim.module$react.Component.prototype,methods$);\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.render \x3d new cljs.core.Keyword(null,\x22render\x22,\x22render\x22,-1408033454).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.reagentRender \x3d new cljs.core.Keyword(null,\x22reagentRender\x22,\x22reagentRender\x22,-358306383).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nif(cljs.core.truth_(new cljs.core.Keyword(null,\x22cljsLegacyRender\x22,\x22cljsLegacyRender\x22,-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1))){\n(cmp.prototype.cljsLegacyRender \x3d new cljs.core.Keyword(null,\x22cljsLegacyRender\x22,\x22cljsLegacyRender\x22,-1527295613).cljs$core$IFn$_invoke$arity$1(body__$1));\n} else {\n}\n\nreagent.impl.component.goog$module$goog$object.extend(cmp,shadow.js.shim.module$react.Component,static_methods);\n\nif(cljs.core.truth_(display_name)){\n(cmp.displayName \x3d display_name);\n\n(cmp.cljs$lang$ctorStr \x3d display_name);\n\n(cmp.cljs$lang$ctorPrWriter \x3d (function (this$,writer,opt){\nreturn cljs.core._write(writer,display_name);\n}));\n\nObject.defineProperty(cmp,\x22name\x22,({\x22value\x22: display_name, \x22writable\x22: false}));\n} else {\n}\n\n(cmp.cljs$lang$type \x3d true);\n\n(cmp.prototype.constructor \x3d cmp);\n\nreturn cmp;\n});\nreagent.impl.component.cached_react_class \x3d (function reagent$impl$component$cached_react_class(compiler,c){\nreturn reagent.impl.component.goog$module$goog$object.get(c,reagent.impl.protocols.get_id(compiler));\n});\nreagent.impl.component.cache_react_class \x3d (function reagent$impl$component$cache_react_class(compiler,c,constructor$){\nreagent.impl.component.goog$module$goog$object.set(c,reagent.impl.protocols.get_id(compiler),constructor$);\n\nreturn constructor$;\n});\nreagent.impl.component.fn_to_class \x3d (function reagent$impl$component$fn_to_class(compiler,f){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? f)\x22].join(\x27\x27)));\n}\n\nif((!((!(((reagent.impl.component.react_class_QMARK_(f)) \x26\x26 ((!(reagent.impl.component.reagent_class_QMARK_(f)))))))))){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,\x22Using native React classes directly in Hiccup forms \x22,\x22is not supported. Use create-element or \x22,\x22adapt-react-class instead: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1((function (){var or__5045__auto__ \x3d reagent.impl.util.fun_name(f);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn f;\n}\n})()),reagent.impl.component.comp_name()].join(\x27\x27));\n} else {\n}\n} else {\n}\n\nif(reagent.impl.component.reagent_class_QMARK_(f)){\nreturn reagent.impl.component.cache_react_class(compiler,f,f);\n} else {\nvar spec \x3d cljs.core.meta(f);\nvar withrender \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(spec,new cljs.core.Keyword(null,\x22reagent-render\x22,\x22reagent-render\x22,-985383853),f);\nvar res \x3d reagent.impl.component.create_class(withrender,compiler);\nreturn reagent.impl.component.cache_react_class(compiler,f,res);\n}\n});\nreagent.impl.component.as_class \x3d (function reagent$impl$component$as_class(tag,compiler){\nvar temp__5806__auto__ \x3d reagent.impl.component.cached_react_class(compiler,tag);\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn reagent.impl.component.fn_to_class(compiler,tag);\n} else {\nvar cached_class \x3d temp__5806__auto__;\nreturn cached_class;\n}\n});\nreagent.impl.component.reactify_component \x3d (function reagent$impl$component$reactify_component(comp,compiler){\nif(reagent.impl.component.react_class_QMARK_(comp)){\nreturn comp;\n} else {\nreturn reagent.impl.component.as_class(comp,compiler);\n}\n});\nreagent.impl.component.functional_wrap_render \x3d (function reagent$impl$component$functional_wrap_render(compiler,c){\nwhile(true){\nvar f \x3d c.reagentRender;\nvar _ \x3d ((cljs.core.ifn_QMARK_(f))?null:(function(){throw (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([f], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? f)\x22].join(\x27\x27)))})());\nvar argv \x3d c.argv;\nvar res \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,argv);\nif(cljs.core.vector_QMARK_(res)){\nreturn reagent.impl.protocols.as_element(compiler,res);\n} else {\nif(cljs.core.ifn_QMARK_(res)){\nvar f__$1 \x3d ((reagent.impl.component.reagent_class_QMARK_(res))?((function (compiler,c,f,_,argv,res){\nreturn (function() { \nvar G__22695__delegate \x3d function (args){\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.vector,res,args));\n};\nvar G__22695 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__22696__i \x3d 0, G__22696__a \x3d new Array(arguments.length -  0);\nwhile (G__22696__i \x3c G__22696__a.length) {G__22696__a[G__22696__i] \x3d arguments[G__22696__i + 0]; ++G__22696__i;}\n  args \x3d new cljs.core.IndexedSeq(G__22696__a,0,null);\n} \nreturn G__22695__delegate.call(this,args);};\nG__22695.cljs$lang$maxFixedArity \x3d 0;\nG__22695.cljs$lang$applyTo \x3d (function (arglist__22697){\nvar args \x3d cljs.core.seq(arglist__22697);\nreturn G__22695__delegate(args);\n});\nG__22695.cljs$core$IFn$_invoke$arity$variadic \x3d G__22695__delegate;\nreturn G__22695;\n})()\n;})(compiler,c,f,_,argv,res))\n:res);\n(c.reagentRender \x3d f__$1);\n\nvar G__22699 \x3d compiler;\nvar G__22700 \x3d c;\ncompiler \x3d G__22699;\nc \x3d G__22700;\ncontinue;\n} else {\nreturn res;\n\n}\n}\nbreak;\n}\n});\nreagent.impl.component.functional_do_render \x3d (function reagent$impl$component$functional_do_render(compiler,c){\nvar _STAR_current_component_STAR__orig_val__22648 \x3d reagent.impl.component._STAR_current_component_STAR_;\nvar _STAR_current_component_STAR__temp_val__22649 \x3d c;\n(reagent.impl.component._STAR_current_component_STAR_ \x3d _STAR_current_component_STAR__temp_val__22649);\n\ntry{return reagent.impl.component.functional_wrap_render(compiler,c);\n}finally {(reagent.impl.component._STAR_current_component_STAR_ \x3d _STAR_current_component_STAR__orig_val__22648);\n}});\nreagent.impl.component.functional_render \x3d (function reagent$impl$component$functional_render(compiler,jsprops){\nif(reagent.impl.util._STAR_non_reactive_STAR_){\nreturn reagent.impl.component.functional_do_render(compiler,jsprops);\n} else {\nvar argv \x3d jsprops.argv;\nvar tag \x3d jsprops.reagentRender;\nvar vec__22654 \x3d shadow.js.shim.module$react.useState((0));\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22654,(0),null);\nvar update_count \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22654,(1),null);\nvar state_ref \x3d shadow.js.shim.module$react.useRef();\nvar ___$1 \x3d (cljs.core.truth_(state_ref.current)?null:(function (){var obj \x3d ({});\n(obj.forceUpdate \x3d (function (){\nreturn (update_count.cljs$core$IFn$_invoke$arity$1 ? update_count.cljs$core$IFn$_invoke$arity$1(cljs.core.inc) : update_count.call(null,cljs.core.inc));\n}));\n\n(obj.cljsMountOrder \x3d reagent.impl.batching.next_mount_count());\n\n(obj.constructor \x3d tag);\n\n(obj.reagentRender \x3d tag);\n\nreturn (state_ref.current \x3d obj);\n})());\nvar reagent_state \x3d state_ref.current;\nvar rat \x3d reagent.impl.component.goog$module$goog$object.get(reagent_state,\x22cljsRatom\x22);\nshadow.js.shim.module$react.useEffect((function reagent$impl$component$functional_render_$_mount(){\nreturn (function reagent$impl$component$functional_render_$_mount_$_unmount(){\nvar G__22660 \x3d reagent.impl.component.goog$module$goog$object.get(reagent_state,\x22cljsRatom\x22);\nif((G__22660 \x3d\x3d null)){\nreturn null;\n} else {\nreturn reagent.ratom.dispose_BANG_(G__22660);\n}\n});\n}),[]);\n\n(reagent_state.argv \x3d argv);\n\nreagent.impl.batching.mark_rendered(reagent_state);\n\nif((rat \x3d\x3d null)){\nreturn reagent.ratom.run_in_reaction((function (){\nreturn reagent.impl.component.functional_do_render(compiler,reagent_state);\n}),reagent_state,\x22cljsRatom\x22,reagent.impl.batching.queue_render,reagent.impl.component.rat_opts);\n} else {\nreturn rat._run(false);\n}\n}\n});\nreagent.impl.component.functional_render_memo_fn \x3d (function reagent$impl$component$functional_render_memo_fn(prev_props,next_props){\nvar old_argv \x3d prev_props.argv;\nvar new_argv \x3d next_props.argv;\nvar and__5043__auto__ \x3d reagent.impl.util._STAR_always_update_STAR_ \x3d\x3d\x3d false;\nif(and__5043__auto__){\ntry{return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(old_argv,new_argv);\n}catch (e22664){var e \x3d e22664;\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,\x22Exception thrown while comparing argv\x27s in shouldComponentUpdate: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(old_argv),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(new_argv),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(e)].join(\x27\x27));\n} else {\n}\n\nreturn false;\n}} else {\nreturn and__5043__auto__;\n}\n});\n/**\n * Create copy of functional-render with displayName set to name of the\n *   original Reagent component.\n */\nreagent.impl.component.functional_render_fn \x3d (function reagent$impl$component$functional_render_fn(compiler,tag){\nvar or__5045__auto__ \x3d reagent.impl.component.cached_react_class(compiler,tag);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar f \x3d (function (jsprops){\nreturn reagent.impl.component.functional_render(compiler,jsprops);\n});\nvar display_name \x3d reagent.impl.util.fun_name(tag);\nvar _ \x3d (f.displayName \x3d display_name);\nvar ___$1 \x3d Object.defineProperty(f,\x22name\x22,({\x22value\x22: display_name, \x22writable\x22: false}));\nvar f__$1 \x3d shadow.js.shim.module$react.memo(f,reagent.impl.component.functional_render_memo_fn);\nreagent.impl.component.cache_react_class(compiler,tag,f__$1);\n\nreturn f__$1;\n}\n});\n");
SHADOW_ENV.evalLoad("reagent.impl.input.js", true , "goog.provide(\x27reagent.impl.input\x27);\nreagent.impl.input.these_inputs_have_selection_api \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\x22url\x22,null,\x22tel\x22,null,\x22text\x22,null,\x22textarea\x22,null,\x22password\x22,null,\x22search\x22,null], null), null);\nreagent.impl.input.has_selection_api_QMARK_ \x3d (function reagent$impl$input$has_selection_api_QMARK_(input_type){\nreturn cljs.core.contains_QMARK_(reagent.impl.input.these_inputs_have_selection_api,input_type);\n});\nreagent.impl.input.input_node_set_value \x3d (function reagent$impl$input$input_node_set_value(node,rendered_value,dom_value,component,p__22684){\nvar map__22685 \x3d p__22684;\nvar map__22685__$1 \x3d cljs.core.__destructure_map(map__22685);\nvar on_write \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__22685__$1,new cljs.core.Keyword(null,\x22on-write\x22,\x22on-write\x22,31519475));\nif((!((((node \x3d\x3d\x3d document.activeElement)) \x26\x26 (((reagent.impl.input.has_selection_api_QMARK_(node.type)) \x26\x26 (((typeof rendered_value \x3d\x3d\x3d \x27string\x27) \x26\x26 (typeof dom_value \x3d\x3d\x3d \x27string\x27))))))))){\n(component.cljsDOMValue \x3d rendered_value);\n\n(node.value \x3d rendered_value);\n\nif(cljs.core.fn_QMARK_(on_write)){\nreturn (on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\n} else {\nreturn null;\n}\n} else {\nvar node_value \x3d node.value;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(node_value,dom_value)){\nreturn reagent.impl.batching.do_after_render((function (){\nreturn (reagent.impl.input.input_component_set_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.input.input_component_set_value.cljs$core$IFn$_invoke$arity$1(component) : reagent.impl.input.input_component_set_value.call(null,component));\n}));\n} else {\nvar existing_offset_from_end \x3d (cljs.core.count(node_value) - node.selectionStart);\nvar new_cursor_offset \x3d (cljs.core.count(rendered_value) - existing_offset_from_end);\n(component.cljsDOMValue \x3d rendered_value);\n\n(node.value \x3d rendered_value);\n\nif(cljs.core.fn_QMARK_(on_write)){\n(on_write.cljs$core$IFn$_invoke$arity$1 ? on_write.cljs$core$IFn$_invoke$arity$1(rendered_value) : on_write.call(null,rendered_value));\n} else {\n}\n\n(node.selectionStart \x3d new_cursor_offset);\n\nreturn (node.selectionEnd \x3d new_cursor_offset);\n}\n}\n});\nreagent.impl.input.input_component_set_value \x3d (function reagent$impl$input$input_component_set_value(this$){\nif(cljs.core.truth_(this$.cljsInputLive)){\n(this$.cljsInputDirty \x3d false);\n\nvar rendered_value \x3d this$.cljsRenderedValue;\nvar dom_value \x3d this$.cljsDOMValue;\nvar node \x3d this$.inputEl;\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(rendered_value,dom_value)){\nreturn reagent.impl.input.input_node_set_value(node,rendered_value,dom_value,this$,cljs.core.PersistentArrayMap.EMPTY);\n} else {\nreturn null;\n}\n} else {\nreturn null;\n}\n});\nreagent.impl.input.input_handle_change \x3d (function reagent$impl$input$input_handle_change(this$,on_change,e){\n(this$.cljsDOMValue \x3d e.target.value);\n\nif(cljs.core.truth_(this$.cljsInputDirty)){\n} else {\n(this$.cljsInputDirty \x3d true);\n\nreagent.impl.batching.do_after_render((function (){\nreturn reagent.impl.input.input_component_set_value(this$);\n}));\n}\n\nreturn (on_change.cljs$core$IFn$_invoke$arity$1 ? on_change.cljs$core$IFn$_invoke$arity$1(e) : on_change.call(null,e));\n});\nreagent.impl.input.input_render_setup \x3d (function reagent$impl$input$input_render_setup(this$,jsprops){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d (!((jsprops \x3d\x3d null)));\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d jsprops.hasOwnProperty(\x22onChange\x22);\nif(cljs.core.truth_(and__5043__auto____$1)){\nreturn jsprops.hasOwnProperty(\x22value\x22);\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar v \x3d jsprops.value;\nvar value \x3d (((v \x3d\x3d null))?\x22\x22:v);\nvar on_change \x3d jsprops.onChange;\nvar original_ref_fn \x3d jsprops.ref;\nif(cljs.core.truth_(this$.cljsInputLive)){\n} else {\n(this$.cljsInputLive \x3d true);\n\n(this$.cljsDOMValue \x3d value);\n}\n\nif(cljs.core.truth_(this$.reagentRefFn)){\n} else {\n(this$.reagentRefFn \x3d ((cljs.core.fn_QMARK_(original_ref_fn))?(function (el){\n(this$.inputEl \x3d el);\n\nreturn (original_ref_fn.cljs$core$IFn$_invoke$arity$1 ? original_ref_fn.cljs$core$IFn$_invoke$arity$1(el) : original_ref_fn.call(null,el));\n}):(cljs.core.truth_((function (){var and__5043__auto__ \x3d original_ref_fn;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn original_ref_fn.hasOwnProperty(\x22current\x22);\n} else {\nreturn and__5043__auto__;\n}\n})())?(function (el){\n(this$.inputEl \x3d el);\n\nreturn (original_ref_fn.current \x3d el);\n}):(function (el){\nreturn (this$.inputEl \x3d el);\n})\n)));\n}\n\n(this$.cljsRenderedValue \x3d value);\n\ndelete jsprops[\x22value\x22];\n\n(jsprops.defaultValue \x3d value);\n\n(jsprops.onChange \x3d (function (p1__22702_SHARP_){\nreturn reagent.impl.input.input_handle_change(this$,on_change,p1__22702_SHARP_);\n}));\n\nreturn (jsprops.ref \x3d this$.reagentRefFn);\n} else {\nreturn null;\n}\n});\nreagent.impl.input.input_unmount \x3d (function reagent$impl$input$input_unmount(this$){\nreturn (this$.cljsInputLive \x3d null);\n});\nreagent.impl.input.input_component_QMARK_ \x3d (function reagent$impl$input$input_component_QMARK_(x){\nvar G__22703 \x3d x;\nswitch (G__22703) {\ncase \x22input\x22:\ncase \x22textarea\x22:\nreturn true;\n\nbreak;\ndefault:\nreturn false;\n\n}\n});\nreagent.impl.input.input_spec \x3d new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22display-name\x22,\x22display-name\x22,694513143),\x22ReagentInput\x22,new cljs.core.Keyword(null,\x22component-did-update\x22,\x22component-did-update\x22,-1468549173),reagent.impl.input.input_component_set_value,new cljs.core.Keyword(null,\x22component-will-unmount\x22,\x22component-will-unmount\x22,-2058314698),reagent.impl.input.input_unmount,new cljs.core.Keyword(null,\x22reagent-render\x22,\x22reagent-render\x22,-985383853),(function (argv,component,jsprops,first_child,compiler){\nvar this$ \x3d reagent.impl.component._STAR_current_component_STAR_;\nreagent.impl.input.input_render_setup(this$,jsprops);\n\nreturn reagent.impl.protocols.make_element(compiler,argv,component,jsprops,first_child);\n})], null);\n");
SHADOW_ENV.evalLoad("reagent.impl.template.js", true , "goog.provide(\x27reagent.impl.template\x27);\ngoog.scope(function(){\n  reagent.impl.template.goog$module$goog$object \x3d goog.module.get(\x27goog.object\x27);\n});\n/**\n * Regular expression that parses a CSS-style id and class\n *           from a tag name.\n */\nreagent.impl.template.re_tag \x3d /([^\\s\\.#]+)(?:#([^\\s\\.#]+))?(?:\\.([^\\s#]+))?/;\n\n/**\n* @constructor\n*/\nreagent.impl.template.NativeWrapper \x3d (function (tag,id,className){\nthis.tag \x3d tag;\nthis.id \x3d id;\nthis.className \x3d className;\n});\n\n(reagent.impl.template.NativeWrapper.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22tag\x22,\x22tag\x22,350170304,null),new cljs.core.Symbol(null,\x22id\x22,\x22id\x22,252129435,null),new cljs.core.Symbol(null,\x22className\x22,\x22className\x22,-342755530,null)], null);\n}));\n\n(reagent.impl.template.NativeWrapper.cljs$lang$type \x3d true);\n\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorStr \x3d \x22reagent.impl.template/NativeWrapper\x22);\n\n(reagent.impl.template.NativeWrapper.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22reagent.impl.template/NativeWrapper\x22);\n}));\n\n/**\n * Positional factory function for reagent.impl.template/NativeWrapper.\n */\nreagent.impl.template.__GT_NativeWrapper \x3d (function reagent$impl$template$__GT_NativeWrapper(tag,id,className){\nreturn (new reagent.impl.template.NativeWrapper(tag,id,className));\n});\n\nreagent.impl.template.adapt_react_class \x3d (function reagent$impl$template$adapt_react_class(c){\nreturn reagent.impl.template.__GT_NativeWrapper(c,null,null);\n});\nreagent.impl.template.hiccup_tag_QMARK_ \x3d (function reagent$impl$template$hiccup_tag_QMARK_(x){\nreturn ((reagent.impl.util.named_QMARK_(x)) || (typeof x \x3d\x3d\x3d \x27string\x27));\n});\nreagent.impl.template.valid_tag_QMARK_ \x3d (function reagent$impl$template$valid_tag_QMARK_(x){\nreturn ((reagent.impl.template.hiccup_tag_QMARK_(x)) || (((cljs.core.ifn_QMARK_(x)) || ((x instanceof reagent.impl.template.NativeWrapper)))));\n});\nreagent.impl.template.prop_name_cache \x3d ({\x22class\x22: \x22className\x22, \x22for\x22: \x22htmlFor\x22, \x22charset\x22: \x22charSet\x22});\nreagent.impl.template.cache_get \x3d (function reagent$impl$template$cache_get(o,k){\nif(o.hasOwnProperty(k)){\nreturn reagent.impl.template.goog$module$goog$object.get(o,k);\n} else {\nreturn null;\n}\n});\nreagent.impl.template.cached_prop_name \x3d (function reagent$impl$template$cached_prop_name(k){\nif(reagent.impl.util.named_QMARK_(k)){\nvar temp__5806__auto__ \x3d reagent.impl.template.cache_get(reagent.impl.template.prop_name_cache,cljs.core.name(k));\nif((temp__5806__auto__ \x3d\x3d null)){\nvar v \x3d reagent.impl.util.dash_to_prop_name(k);\nreagent.impl.template.goog$module$goog$object.set(reagent.impl.template.prop_name_cache,cljs.core.name(k),v);\n\nreturn v;\n} else {\nvar k_SINGLEQUOTE_ \x3d temp__5806__auto__;\nreturn k_SINGLEQUOTE_;\n}\n} else {\nreturn k;\n}\n});\nreagent.impl.template.kv_conv \x3d (function reagent$impl$template$kv_conv(o,k,v){\nvar G__22715 \x3d o;\nreagent.impl.template.goog$module$goog$object.set(G__22715,reagent.impl.template.cached_prop_name(k),(reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1 ? reagent.impl.template.convert_prop_value.cljs$core$IFn$_invoke$arity$1(v) : reagent.impl.template.convert_prop_value.call(null,v)));\n\nreturn G__22715;\n});\nreagent.impl.template.convert_prop_value \x3d (function reagent$impl$template$convert_prop_value(x){\nif(reagent.impl.util.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(reagent.impl.template.kv_conv,({}),x);\n} else {\nif(cljs.core.coll_QMARK_(x)){\nreturn cljs.core.clj__GT_js(x);\n} else {\nif(cljs.core.ifn_QMARK_(x)){\nreturn (function() { \nvar G__22807__delegate \x3d function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\n};\nvar G__22807 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__22808__i \x3d 0, G__22808__a \x3d new Array(arguments.length -  0);\nwhile (G__22808__i \x3c G__22808__a.length) {G__22808__a[G__22808__i] \x3d arguments[G__22808__i + 0]; ++G__22808__i;}\n  args \x3d new cljs.core.IndexedSeq(G__22808__a,0,null);\n} \nreturn G__22807__delegate.call(this,args);};\nG__22807.cljs$lang$maxFixedArity \x3d 0;\nG__22807.cljs$lang$applyTo \x3d (function (arglist__22809){\nvar args \x3d cljs.core.seq(arglist__22809);\nreturn G__22807__delegate(args);\n});\nG__22807.cljs$core$IFn$_invoke$arity$variadic \x3d G__22807__delegate;\nreturn G__22807;\n})()\n;\n} else {\nreturn cljs.core.clj__GT_js(x);\n\n}\n}\n}\n}\n}\n});\nreagent.impl.template.custom_prop_name_cache \x3d ({});\nreagent.impl.template.cached_custom_prop_name \x3d (function reagent$impl$template$cached_custom_prop_name(k){\nif(reagent.impl.util.named_QMARK_(k)){\nvar temp__5806__auto__ \x3d reagent.impl.template.cache_get(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k));\nif((temp__5806__auto__ \x3d\x3d null)){\nvar v \x3d reagent.impl.util.dash_to_prop_name(k);\nreagent.impl.template.goog$module$goog$object.set(reagent.impl.template.custom_prop_name_cache,cljs.core.name(k),v);\n\nreturn v;\n} else {\nvar k_SINGLEQUOTE_ \x3d temp__5806__auto__;\nreturn k_SINGLEQUOTE_;\n}\n} else {\nreturn k;\n}\n});\nreagent.impl.template.custom_kv_conv \x3d (function reagent$impl$template$custom_kv_conv(o,k,v){\nvar G__22724 \x3d o;\nreagent.impl.template.goog$module$goog$object.set(G__22724,reagent.impl.template.cached_custom_prop_name(k),reagent.impl.template.convert_prop_value(v));\n\nreturn G__22724;\n});\nreagent.impl.template.convert_custom_prop_value \x3d (function reagent$impl$template$convert_custom_prop_value(x){\nif(reagent.impl.util.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif(cljs.core.map_QMARK_(x)){\nreturn cljs.core.reduce_kv(reagent.impl.template.custom_kv_conv,({}),x);\n} else {\nif(cljs.core.coll_QMARK_(x)){\nreturn cljs.core.clj__GT_js(x);\n} else {\nif(cljs.core.ifn_QMARK_(x)){\nreturn (function() { \nvar G__22811__delegate \x3d function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(x,args);\n};\nvar G__22811 \x3d function (var_args){\nvar args \x3d null;\nif (arguments.length \x3e 0) {\nvar G__22812__i \x3d 0, G__22812__a \x3d new Array(arguments.length -  0);\nwhile (G__22812__i \x3c G__22812__a.length) {G__22812__a[G__22812__i] \x3d arguments[G__22812__i + 0]; ++G__22812__i;}\n  args \x3d new cljs.core.IndexedSeq(G__22812__a,0,null);\n} \nreturn G__22811__delegate.call(this,args);};\nG__22811.cljs$lang$maxFixedArity \x3d 0;\nG__22811.cljs$lang$applyTo \x3d (function (arglist__22813){\nvar args \x3d cljs.core.seq(arglist__22813);\nreturn G__22811__delegate(args);\n});\nG__22811.cljs$core$IFn$_invoke$arity$variadic \x3d G__22811__delegate;\nreturn G__22811;\n})()\n;\n} else {\nreturn cljs.core.clj__GT_js(x);\n\n}\n}\n}\n}\n}\n});\n/**\n * Takes the id and class from tag keyword, and adds them to the\n *   other props. Parsed tag is JS object with :id and :class properties.\n */\nreagent.impl.template.set_id_class \x3d (function reagent$impl$template$set_id_class(props,id_class){\nvar id \x3d id_class.id;\nvar class$ \x3d id_class.className;\nvar G__22728 \x3d props;\nvar G__22728__$1 \x3d (((((!((id \x3d\x3d null)))) \x26\x26 ((new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092).cljs$core$IFn$_invoke$arity$1(props) \x3d\x3d null))))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22728,new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),id):G__22728);\nif(cljs.core.truth_(class$)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22728__$1,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(class$,(function (){var or__5045__auto__ \x3d new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(props);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22className\x22,\x22className\x22,-1983287057).cljs$core$IFn$_invoke$arity$1(props);\n}\n})()));\n} else {\nreturn G__22728__$1;\n}\n});\nreagent.impl.template.convert_props \x3d (function reagent$impl$template$convert_props(props,id_class){\nvar class$ \x3d new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996).cljs$core$IFn$_invoke$arity$1(props);\nvar props__$1 \x3d reagent.impl.template.set_id_class((function (){var G__22731 \x3d props;\nif(cljs.core.truth_(class$)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(G__22731,new cljs.core.Keyword(null,\x22class\x22,\x22class\x22,-2030961996),reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(class$));\n} else {\nreturn G__22731;\n}\n})(),id_class);\nif(cljs.core.truth_(id_class.custom)){\nreturn reagent.impl.template.convert_custom_prop_value(props__$1);\n} else {\nreturn reagent.impl.template.convert_prop_value(props__$1);\n}\n});\nreagent.impl.template.make_element \x3d (function reagent$impl$template$make_element(this$,argv,component,jsprops,first_child){\nvar G__22733 \x3d (cljs.core.count(argv) - first_child);\nswitch (G__22733) {\ncase (0):\nreturn shadow.js.shim.module$react.createElement(component,jsprops);\n\nbreak;\ncase (1):\nreturn shadow.js.shim.module$react.createElement(component,jsprops,reagent.impl.protocols.as_element(this$,cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first_child,null)));\n\nbreak;\ndefault:\nreturn shadow.js.shim.module$react.createElement.apply(null,cljs.core.reduce_kv((function (a,k,v){\nif((k \x3e\x3d first_child)){\na.push(reagent.impl.protocols.as_element(this$,v));\n} else {\n}\n\nreturn a;\n}),[component,jsprops],argv));\n\n}\n});\n\n/**\n* @constructor\n*/\nreagent.impl.template.HiccupTag \x3d (function (tag,id,className,custom){\nthis.tag \x3d tag;\nthis.id \x3d id;\nthis.className \x3d className;\nthis.custom \x3d custom;\n});\n\n(reagent.impl.template.HiccupTag.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22tag\x22,\x22tag\x22,350170304,null),new cljs.core.Symbol(null,\x22id\x22,\x22id\x22,252129435,null),new cljs.core.Symbol(null,\x22className\x22,\x22className\x22,-342755530,null),new cljs.core.Symbol(null,\x22custom\x22,\x22custom\x22,1980683475,null)], null);\n}));\n\n(reagent.impl.template.HiccupTag.cljs$lang$type \x3d true);\n\n(reagent.impl.template.HiccupTag.cljs$lang$ctorStr \x3d \x22reagent.impl.template/HiccupTag\x22);\n\n(reagent.impl.template.HiccupTag.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22reagent.impl.template/HiccupTag\x22);\n}));\n\n/**\n * Positional factory function for reagent.impl.template/HiccupTag.\n */\nreagent.impl.template.__GT_HiccupTag \x3d (function reagent$impl$template$__GT_HiccupTag(tag,id,className,custom){\nreturn (new reagent.impl.template.HiccupTag(tag,id,className,custom));\n});\n\nreagent.impl.template.parse_tag \x3d (function reagent$impl$template$parse_tag(hiccup_tag){\nvar vec__22738 \x3d cljs.core.next(cljs.core.re_matches(reagent.impl.template.re_tag,cljs.core.name(hiccup_tag)));\nvar tag \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22738,(0),null);\nvar id \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22738,(1),null);\nvar className \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22738,(2),null);\nvar className__$1 \x3d (((className \x3d\x3d null))?null:clojure.string.replace(className,/\\./,\x22 \x22));\nif(cljs.core.truth_(tag)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Invalid tag: \x27\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(hiccup_tag),\x22\x27\x22,reagent.impl.component.comp_name()].join(\x27\x27),\x22\\n\x22,\x22tag\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.template.__GT_HiccupTag(tag,id,className__$1,cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((-1),tag.indexOf(\x22-\x22)));\n});\nreagent.impl.template.reag_element \x3d (function reagent$impl$template$reag_element(tag,v,compiler){\nvar c \x3d reagent.impl.component.as_class(tag,compiler);\nvar jsprops \x3d ({});\n(jsprops.argv \x3d v);\n\nvar temp__5808__auto___22816 \x3d reagent.impl.util.react_key_from_vec(v);\nif((temp__5808__auto___22816 \x3d\x3d null)){\n} else {\nvar key_22817 \x3d temp__5808__auto___22816;\n(jsprops.key \x3d key_22817);\n}\n\nreturn shadow.js.shim.module$react.createElement(c,jsprops);\n});\nreagent.impl.template.function_element \x3d (function reagent$impl$template$function_element(tag,v,first_arg,compiler){\nvar jsprops \x3d ({});\n(jsprops.reagentRender \x3d tag);\n\n(jsprops.argv \x3d cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(v,first_arg));\n\nvar temp__5808__auto___22818 \x3d reagent.impl.util.react_key_from_vec(v);\nif((temp__5808__auto___22818 \x3d\x3d null)){\n} else {\nvar key_22819 \x3d temp__5808__auto___22818;\n(jsprops.key \x3d key_22819);\n}\n\nreturn shadow.js.shim.module$react.createElement(reagent.impl.component.functional_render_fn(compiler,tag),jsprops);\n});\n/**\n * If given tag is a Class, use it as a class,\n *   else wrap in Reagent function wrapper.\n */\nreagent.impl.template.maybe_function_element \x3d (function reagent$impl$template$maybe_function_element(tag,v,compiler){\nif(reagent.impl.component.react_class_QMARK_(tag)){\nreturn reagent.impl.template.reag_element(tag,v,compiler);\n} else {\nreturn reagent.impl.template.function_element(tag,v,(1),compiler);\n}\n});\nreagent.impl.template.fragment_element \x3d (function reagent$impl$template$fragment_element(argv,compiler){\nvar props \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(1),null);\nvar hasprops \x3d (((props \x3d\x3d null)) || (cljs.core.map_QMARK_(props)));\nvar jsprops \x3d (function (){var or__5045__auto__ \x3d reagent.impl.template.convert_prop_value(((hasprops)?props:null));\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child \x3d ((1) + ((hasprops)?(1):(0)));\nvar temp__5808__auto___22821 \x3d reagent.impl.util.react_key_from_vec(argv);\nif((temp__5808__auto___22821 \x3d\x3d null)){\n} else {\nvar key_22822 \x3d temp__5808__auto___22821;\n(jsprops.key \x3d key_22822);\n}\n\nreturn reagent.impl.protocols.make_element(compiler,argv,shadow.js.shim.module$react.Fragment,jsprops,first_child);\n});\nreagent.impl.template.tag_name_cache \x3d ({});\nreagent.impl.template.cached_parse \x3d (function reagent$impl$template$cached_parse(this$,x,_){\nvar temp__5806__auto__ \x3d reagent.impl.template.cache_get(reagent.impl.template.tag_name_cache,x);\nif((temp__5806__auto__ \x3d\x3d null)){\nvar v \x3d reagent.impl.template.parse_tag(x);\nreagent.impl.template.goog$module$goog$object.set(reagent.impl.template.tag_name_cache,x,v);\n\nreturn v;\n} else {\nvar s \x3d temp__5806__auto__;\nreturn s;\n}\n});\nreagent.impl.template.native_element \x3d (function reagent$impl$template$native_element(parsed,argv,first,compiler){\nvar component \x3d parsed.tag;\nvar props \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,first,null);\nvar hasprops \x3d (((props \x3d\x3d null)) || (cljs.core.map_QMARK_(props)));\nvar jsprops \x3d (function (){var or__5045__auto__ \x3d reagent.impl.template.convert_props(((hasprops)?props:null),parsed);\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn ({});\n}\n})();\nvar first_child \x3d (first + ((hasprops)?(1):(0)));\nif(reagent.impl.input.input_component_QMARK_(component)){\nvar react_key \x3d reagent.impl.util.get_react_key(props);\nvar input_class \x3d (function (){var or__5045__auto__ \x3d compiler.reagentInput;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nvar x \x3d reagent.impl.component.create_class(reagent.impl.input.input_spec,compiler);\n(compiler.reagentInput \x3d x);\n\nreturn x;\n}\n})();\nreturn reagent.impl.protocols.as_element(compiler,cljs.core.with_meta(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [input_class,argv,component,jsprops,first_child,compiler], null),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(cljs.core.truth_(react_key)?new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22key\x22,\x22key\x22,-1516042587),react_key], null):null),cljs.core.meta(argv)], 0))));\n} else {\nvar temp__5808__auto___22830 \x3d reagent.impl.util.get_react_key(cljs.core.meta(argv));\nif((temp__5808__auto___22830 \x3d\x3d null)){\n} else {\nvar key_22831 \x3d temp__5808__auto___22830;\n(jsprops.key \x3d key_22831);\n}\n\nreturn reagent.impl.protocols.make_element(compiler,argv,component,jsprops,first_child);\n}\n});\nreagent.impl.template.raw_element \x3d (function reagent$impl$template$raw_element(comp,argv,compiler){\nvar props \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(argv,(2),null);\nvar jsprops \x3d (function (){var or__5045__auto__ \x3d props;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn ({});\n}\n})();\nvar temp__5808__auto___22833 \x3d reagent.impl.util.get_react_key(cljs.core.meta(argv));\nif((temp__5808__auto___22833 \x3d\x3d null)){\n} else {\nvar key_22834 \x3d temp__5808__auto___22833;\n(jsprops.key \x3d key_22834);\n}\n\nreturn reagent.impl.protocols.make_element(compiler,argv,comp,jsprops,(3));\n});\nreagent.impl.template.expand_seq \x3d (function reagent$impl$template$expand_seq(s,compiler){\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__22759_SHARP_){\nreturn reagent.impl.protocols.as_element(compiler,p1__22759_SHARP_);\n}),s));\n});\nreagent.impl.template.expand_seq_dev \x3d (function reagent$impl$template$expand_seq_dev(s,o,compiler){\nreturn cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (val){\nif(((cljs.core.vector_QMARK_(val)) \x26\x26 ((reagent.impl.util.react_key_from_vec(val) \x3d\x3d null)))){\n(o.no_key \x3d true);\n} else {\n}\n\nreturn reagent.impl.protocols.as_element(compiler,val);\n}),s));\n});\nreagent.impl.template.expand_seq_check \x3d (function reagent$impl$template$expand_seq_check(x,compiler){\nvar ctx \x3d ({});\nvar vec__22760 \x3d reagent.ratom.check_derefs((function (){\nreturn reagent.impl.template.expand_seq_dev(x,ctx,compiler);\n}));\nvar res \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22760,(0),null);\nvar derefed \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22760,(1),null);\nif(cljs.core.truth_(derefed)){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Reactive deref not supported in lazy seq, \x22,\x22it should be wrapped in doall\x22], 0))].join(\x27\x27));\n} else {\n}\n} else {\n}\n\nif(cljs.core.truth_(ctx.no_key)){\nif(reagent.debug.has_console){\n((reagent.debug.tracking)?reagent.debug.track_console:console).warn([\x22Warning: \x22,reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(x,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Every element in a seq should have a unique :key\x22], 0))].join(\x27\x27));\n} else {\n}\n} else {\n}\n\nreturn res;\n});\nreagent.impl.template.hiccup_element \x3d (function reagent$impl$template$hiccup_element(v,compiler){\nwhile(true){\nvar tag \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\nvar n \x3d cljs.core.name(tag);\nvar pos \x3d n.indexOf(\x22\x3e\x22);\nvar G__22763 \x3d pos;\nswitch (G__22763) {\ncase (-1):\nreturn reagent.impl.template.native_element(reagent.impl.protocols.parse_tag(compiler,n,tag),v,(1),compiler);\n\nbreak;\ncase (0):\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(\x22\x3e\x22,n)){\nreturn null;\n} else {\nthrow (new Error([\x22Assert failed: \x22,reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid Hiccup tag\x22], 0)),\x22\\n\x22,\x22(\x3d \\\x22\x3e\\\x22 n)\x22].join(\x27\x27)));\n}\n\nbreak;\ndefault:\nvar G__22843 \x3d cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.subs.cljs$core$IFn$_invoke$arity$3(n,(0),pos),cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.with_meta(v,null),(0),cljs.core.subs.cljs$core$IFn$_invoke$arity$2(n,(pos + (1))))], null),cljs.core.meta(v));\nvar G__22844 \x3d compiler;\nv \x3d G__22843;\ncompiler \x3d G__22844;\ncontinue;\n\n}\nbreak;\n}\n});\nreagent.impl.template.vec_to_elem \x3d (function reagent$impl$template$vec_to_elem(v,compiler,fn_to_element){\nif((compiler \x3d\x3d null)){\nconsole.error(\x22vec-to-elem\x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([v], 0)));\n} else {\n}\n\nif((cljs.core.count(v) \x3e (0))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Hiccup form should not be empty\x22], 0)),\x22\\n\x22,\x22(pos? (count v))\x22].join(\x27\x27)));\n}\n\nvar tag \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(0),null);\nif(reagent.impl.template.valid_tag_QMARK_(tag)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,reagent.impl.util.hiccup_err.cljs$core$IFn$_invoke$arity$variadic(v,reagent.impl.component.comp_name(),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Invalid Hiccup form\x22], 0)),\x22\\n\x22,\x22(valid-tag? tag)\x22].join(\x27\x27)));\n}\n\nvar G__22782 \x3d tag;\nvar G__22782__$1 \x3d (((G__22782 instanceof cljs.core.Keyword))?G__22782.fqn:null);\nswitch (G__22782__$1) {\ncase \x22\x3e\x22:\nreturn reagent.impl.template.native_element(reagent.impl.template.__GT_HiccupTag(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),null,null,null),v,(2),compiler);\n\nbreak;\ncase \x22r\x3e\x22:\nreturn reagent.impl.template.raw_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),v,compiler);\n\nbreak;\ncase \x22f\x3e\x22:\nreturn reagent.impl.template.function_element(cljs.core.nth.cljs$core$IFn$_invoke$arity$3(v,(1),null),v,(2),compiler);\n\nbreak;\ncase \x22\x3c\x3e\x22:\nreturn reagent.impl.template.fragment_element(v,compiler);\n\nbreak;\ndefault:\nif(reagent.impl.template.hiccup_tag_QMARK_(tag)){\nreturn reagent.impl.template.hiccup_element(v,compiler);\n} else {\nif((tag instanceof reagent.impl.template.NativeWrapper)){\nreturn reagent.impl.template.native_element(tag,v,(1),compiler);\n} else {\nreturn (fn_to_element.cljs$core$IFn$_invoke$arity$3 ? fn_to_element.cljs$core$IFn$_invoke$arity$3(tag,v,compiler) : fn_to_element.call(null,tag,v,compiler));\n\n}\n}\n\n}\n});\nreagent.impl.template.as_element \x3d (function reagent$impl$template$as_element(this$,x,fn_to_element){\nif(reagent.impl.util.js_val_QMARK_(x)){\nreturn x;\n} else {\nif(cljs.core.vector_QMARK_(x)){\nreturn reagent.impl.template.vec_to_elem(x,this$,fn_to_element);\n} else {\nif(cljs.core.seq_QMARK_(x)){\nreturn reagent.impl.template.expand_seq_check(x,this$);\n\n} else {\nif(reagent.impl.util.named_QMARK_(x)){\nreturn cljs.core.name(x);\n} else {\nif((((!((x \x3d\x3d null))))?(((((x.cljs$lang$protocol_mask$partition0$ \x26 (2147483648))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IPrintWithWriter$))))?true:(((!x.cljs$lang$protocol_mask$partition0$))?cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,x))){\nreturn cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([x], 0));\n} else {\nreturn x;\n\n}\n}\n}\n}\n}\n});\nreagent.impl.template.create_compiler \x3d (function reagent$impl$template$create_compiler(opts){\nvar id \x3d cljs.core.gensym.cljs$core$IFn$_invoke$arity$1(\x22reagent-compiler\x22);\nvar fn_to_element \x3d (cljs.core.truth_(new cljs.core.Keyword(null,\x22function-components\x22,\x22function-components\x22,1492814963).cljs$core$IFn$_invoke$arity$1(opts))?reagent.impl.template.maybe_function_element:reagent.impl.template.reag_element);\nvar parse_fn \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$3(opts,new cljs.core.Keyword(null,\x22parse-tag\x22,\x22parse-tag\x22,1427313738),reagent.impl.template.cached_parse);\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.template !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.impl.template.t_reagent$impl$template22793 !\x3d\x3d \x27undefined\x27)){\n} else {\n\n/**\n* @constructor\n * @implements {reagent.impl.protocols.Compiler}\n * @implements {cljs.core.IMeta}\n * @implements {cljs.core.IWithMeta}\n*/\nreagent.impl.template.t_reagent$impl$template22793 \x3d (function (opts,id,fn_to_element,parse_fn,meta22794){\nthis.opts \x3d opts;\nthis.id \x3d id;\nthis.fn_to_element \x3d fn_to_element;\nthis.parse_fn \x3d parse_fn;\nthis.meta22794 \x3d meta22794;\nthis.cljs$lang$protocol_mask$partition0$ \x3d 393216;\nthis.cljs$lang$protocol_mask$partition1$ \x3d 0;\n});\n(reagent.impl.template.t_reagent$impl$template22793.prototype.cljs$core$IWithMeta$_with_meta$arity$2 \x3d (function (_22795,meta22794__$1){\nvar self__ \x3d this;\nvar _22795__$1 \x3d this;\nreturn (new reagent.impl.template.t_reagent$impl$template22793(self__.opts,self__.id,self__.fn_to_element,self__.parse_fn,meta22794__$1));\n}));\n\n(reagent.impl.template.t_reagent$impl$template22793.prototype.cljs$core$IMeta$_meta$arity$1 \x3d (function (_22795){\nvar self__ \x3d this;\nvar _22795__$1 \x3d this;\nreturn self__.meta22794;\n}));\n\n(reagent.impl.template.t_reagent$impl$template22793.prototype.reagent$impl$protocols$Compiler$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(reagent.impl.template.t_reagent$impl$template22793.prototype.reagent$impl$protocols$Compiler$get_id$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn self__.id;\n}));\n\n(reagent.impl.template.t_reagent$impl$template22793.prototype.reagent$impl$protocols$Compiler$parse_tag$arity$3 \x3d (function (this$,tag_name,tag_value){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn (self__.parse_fn.cljs$core$IFn$_invoke$arity$3 ? self__.parse_fn.cljs$core$IFn$_invoke$arity$3(this$__$1,tag_name,tag_value) : self__.parse_fn.call(null,this$__$1,tag_name,tag_value));\n}));\n\n(reagent.impl.template.t_reagent$impl$template22793.prototype.reagent$impl$protocols$Compiler$as_element$arity$2 \x3d (function (this$,x){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.impl.template.as_element(this$__$1,x,self__.fn_to_element);\n}));\n\n(reagent.impl.template.t_reagent$impl$template22793.prototype.reagent$impl$protocols$Compiler$make_element$arity$5 \x3d (function (this$,argv,component,jsprops,first_child){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn reagent.impl.template.make_element(this$__$1,argv,component,jsprops,first_child);\n}));\n\n(reagent.impl.template.t_reagent$impl$template22793.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Symbol(null,\x22opts\x22,\x22opts\x22,1795607228,null),new cljs.core.Symbol(null,\x22id\x22,\x22id\x22,252129435,null),new cljs.core.Symbol(null,\x22fn-to-element\x22,\x22fn-to-element\x22,-1764467095,null),new cljs.core.Symbol(null,\x22parse-fn\x22,\x22parse-fn\x22,-836029424,null),new cljs.core.Symbol(null,\x22meta22794\x22,\x22meta22794\x22,-346292834,null)], null);\n}));\n\n(reagent.impl.template.t_reagent$impl$template22793.cljs$lang$type \x3d true);\n\n(reagent.impl.template.t_reagent$impl$template22793.cljs$lang$ctorStr \x3d \x22reagent.impl.template/t_reagent$impl$template22793\x22);\n\n(reagent.impl.template.t_reagent$impl$template22793.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22reagent.impl.template/t_reagent$impl$template22793\x22);\n}));\n\n/**\n * Positional factory function for reagent.impl.template/t_reagent$impl$template22793.\n */\nreagent.impl.template.__GT_t_reagent$impl$template22793 \x3d (function reagent$impl$template$create_compiler_$___GT_t_reagent$impl$template22793(opts__$1,id__$1,fn_to_element__$1,parse_fn__$1,meta22794){\nreturn (new reagent.impl.template.t_reagent$impl$template22793(opts__$1,id__$1,fn_to_element__$1,parse_fn__$1,meta22794));\n});\n\n}\n\nreturn (new reagent.impl.template.t_reagent$impl$template22793(opts,id,fn_to_element,parse_fn,cljs.core.PersistentArrayMap.EMPTY));\n});\nreagent.impl.template.default_compiler_STAR_ \x3d reagent.impl.template.create_compiler(cljs.core.PersistentArrayMap.EMPTY);\nreagent.impl.template.default_compiler \x3d reagent.impl.template.default_compiler_STAR_;\nreagent.impl.template.set_default_compiler_BANG_ \x3d (function reagent$impl$template$set_default_compiler_BANG_(compiler){\nreturn (reagent.impl.template.default_compiler \x3d compiler);\n});\n");
SHADOW_ENV.evalLoad("reagent.dom.js", true , "goog.provide(\x27reagent.dom\x27);\nif((typeof reagent !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.dom !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof reagent.dom.roots !\x3d\x3d \x27undefined\x27)){\n} else {\nreagent.dom.roots \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n}\nreagent.dom.unmount_comp \x3d (function reagent$dom$unmount_comp(container){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.dom.roots,cljs.core.dissoc,container);\n\nreturn shadow.js.shim.module$react_dom.unmountComponentAtNode(container);\n});\nreagent.dom.render_comp \x3d (function reagent$dom$render_comp(comp,container,callback){\nvar _STAR_always_update_STAR__orig_val__22847 \x3d reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__22848 \x3d true;\n(reagent.impl.util._STAR_always_update_STAR_ \x3d _STAR_always_update_STAR__temp_val__22848);\n\ntry{return shadow.js.shim.module$react_dom.render((comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null)),container,(function (){\nvar _STAR_always_update_STAR__orig_val__22850 \x3d reagent.impl.util._STAR_always_update_STAR_;\nvar _STAR_always_update_STAR__temp_val__22851 \x3d false;\n(reagent.impl.util._STAR_always_update_STAR_ \x3d _STAR_always_update_STAR__temp_val__22851);\n\ntry{cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(reagent.dom.roots,cljs.core.assoc,container,comp);\n\nreagent.impl.batching.flush_after_render();\n\nif((!((callback \x3d\x3d null)))){\nreturn (callback.cljs$core$IFn$_invoke$arity$0 ? callback.cljs$core$IFn$_invoke$arity$0() : callback.call(null));\n} else {\nreturn null;\n}\n}finally {(reagent.impl.util._STAR_always_update_STAR_ \x3d _STAR_always_update_STAR__orig_val__22850);\n}}));\n}finally {(reagent.impl.util._STAR_always_update_STAR_ \x3d _STAR_always_update_STAR__orig_val__22847);\n}});\nreagent.dom.re_render_component \x3d (function reagent$dom$re_render_component(comp,container){\nreturn reagent.dom.render_comp(comp,container,null);\n});\n/**\n * Render a Reagent component into the DOM. The first argument may be\n *   either a vector (using Reagent\x27s Hiccup syntax), or a React element.\n *   The second argument should be a DOM node.\n * \n *   Optionally takes a callback that is called when the component is in place.\n * \n *   Returns the mounted component instance.\n */\nreagent.dom.render \x3d (function reagent$dom$render(var_args){\nvar G__22871 \x3d arguments.length;\nswitch (G__22871) {\ncase 2:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(reagent.dom.render.cljs$core$IFn$_invoke$arity$2 \x3d (function (comp,container){\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$3(comp,container,reagent.impl.template.default_compiler);\n}));\n\n(reagent.dom.render.cljs$core$IFn$_invoke$arity$3 \x3d (function (comp,container,callback_or_compiler){\nreagent.ratom.flush_BANG_();\n\nvar vec__22878 \x3d ((cljs.core.fn_QMARK_(callback_or_compiler))?new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.impl.template.default_compiler,callback_or_compiler], null):new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [callback_or_compiler,new cljs.core.Keyword(null,\x22callback\x22,\x22callback\x22,-705136228).cljs$core$IFn$_invoke$arity$1(callback_or_compiler)], null));\nvar compiler \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22878,(0),null);\nvar callback \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22878,(1),null);\nvar f \x3d (function (){\nreturn reagent.impl.protocols.as_element(compiler,((cljs.core.fn_QMARK_(comp))?(comp.cljs$core$IFn$_invoke$arity$0 ? comp.cljs$core$IFn$_invoke$arity$0() : comp.call(null)):comp));\n});\nreturn reagent.dom.render_comp(f,container,callback);\n}));\n\n(reagent.dom.render.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Remove a component from the given DOM node.\n */\nreagent.dom.unmount_component_at_node \x3d (function reagent$dom$unmount_component_at_node(container){\nreturn reagent.dom.unmount_comp(container);\n});\n/**\n * Returns the root DOM node of a mounted component.\n */\nreagent.dom.dom_node \x3d (function reagent$dom$dom_node(this$){\nreturn shadow.js.shim.module$react_dom.findDOMNode(this$);\n});\n/**\n * Force re-rendering of all mounted Reagent components. This is\n *   probably only useful in a development environment, when you want to\n *   update components in response to some dynamic changes to code.\n * \n *   Note that force-update-all may not update root components. This\n *   happens if a component \x27foo\x27 is mounted with `(render [foo])` (since\n *   functions are passed by value, and not by reference, in\n *   ClojureScript). To get around this you\x27ll have to introduce a layer\n *   of indirection, for example by using `(render [#\x27foo])` instead.\n */\nreagent.dom.force_update_all \x3d (function reagent$dom$force_update_all(){\nreagent.ratom.flush_BANG_();\n\nvar seq__22905_22940 \x3d cljs.core.seq(cljs.core.deref(reagent.dom.roots));\nvar chunk__22906_22941 \x3d null;\nvar count__22907_22942 \x3d (0);\nvar i__22908_22943 \x3d (0);\nwhile(true){\nif((i__22908_22943 \x3c count__22907_22942)){\nvar vec__22918_22944 \x3d chunk__22906_22941.cljs$core$IIndexed$_nth$arity$2(null,i__22908_22943);\nvar container_22945 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22918_22944,(0),null);\nvar comp_22946 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22918_22944,(1),null);\nreagent.dom.re_render_component(comp_22946,container_22945);\n\n\nvar G__22947 \x3d seq__22905_22940;\nvar G__22948 \x3d chunk__22906_22941;\nvar G__22949 \x3d count__22907_22942;\nvar G__22950 \x3d (i__22908_22943 + (1));\nseq__22905_22940 \x3d G__22947;\nchunk__22906_22941 \x3d G__22948;\ncount__22907_22942 \x3d G__22949;\ni__22908_22943 \x3d G__22950;\ncontinue;\n} else {\nvar temp__5804__auto___22952 \x3d cljs.core.seq(seq__22905_22940);\nif(temp__5804__auto___22952){\nvar seq__22905_22953__$1 \x3d temp__5804__auto___22952;\nif(cljs.core.chunked_seq_QMARK_(seq__22905_22953__$1)){\nvar c__5568__auto___22955 \x3d cljs.core.chunk_first(seq__22905_22953__$1);\nvar G__22957 \x3d cljs.core.chunk_rest(seq__22905_22953__$1);\nvar G__22958 \x3d c__5568__auto___22955;\nvar G__22959 \x3d cljs.core.count(c__5568__auto___22955);\nvar G__22960 \x3d (0);\nseq__22905_22940 \x3d G__22957;\nchunk__22906_22941 \x3d G__22958;\ncount__22907_22942 \x3d G__22959;\ni__22908_22943 \x3d G__22960;\ncontinue;\n} else {\nvar vec__22921_22961 \x3d cljs.core.first(seq__22905_22953__$1);\nvar container_22962 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22921_22961,(0),null);\nvar comp_22963 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__22921_22961,(1),null);\nreagent.dom.re_render_component(comp_22963,container_22962);\n\n\nvar G__22970 \x3d cljs.core.next(seq__22905_22953__$1);\nvar G__22971 \x3d null;\nvar G__22972 \x3d (0);\nvar G__22973 \x3d (0);\nseq__22905_22940 \x3d G__22970;\nchunk__22906_22941 \x3d G__22971;\ncount__22907_22942 \x3d G__22972;\ni__22908_22943 \x3d G__22973;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn reagent.impl.batching.flush_after_render();\n});\n");
SHADOW_ENV.evalLoad("goog.debug.errorcontext.js", true , "goog.provide(\x22goog.debug.errorcontext\x22);\ngoog.debug.errorcontext.addErrorContext \x3d function(err, contextKey, contextValue) {\n  if (!err[goog.debug.errorcontext.CONTEXT_KEY_]) {\n    err[goog.debug.errorcontext.CONTEXT_KEY_] \x3d {};\n  }\n  err[goog.debug.errorcontext.CONTEXT_KEY_][contextKey] \x3d contextValue;\n};\ngoog.debug.errorcontext.getErrorContext \x3d function(err) {\n  return err[goog.debug.errorcontext.CONTEXT_KEY_] || {};\n};\ngoog.debug.errorcontext.CONTEXT_KEY_ \x3d \x22__closure__error__context__984382\x22;\n");
SHADOW_ENV.evalLoad("goog.debug.debug.js", true , "goog.provide(\x22goog.debug\x22);\ngoog.require(\x22goog.array\x22);\ngoog.require(\x22goog.debug.errorcontext\x22);\ngoog.debug.LOGGING_ENABLED \x3d goog.define(\x22goog.debug.LOGGING_ENABLED\x22, goog.DEBUG);\ngoog.debug.FORCE_SLOPPY_STACKS \x3d goog.define(\x22goog.debug.FORCE_SLOPPY_STACKS\x22, false);\ngoog.debug.CHECK_FOR_THROWN_EVENT \x3d goog.define(\x22goog.debug.CHECK_FOR_THROWN_EVENT\x22, false);\ngoog.debug.catchErrors \x3d function(logFunc, opt_cancel, opt_target) {\n  var target \x3d opt_target || goog.global;\n  var oldErrorHandler \x3d target.onerror;\n  var retVal \x3d !!opt_cancel;\n  target.onerror \x3d function(message, url, line, opt_col, opt_error) {\n    if (oldErrorHandler) {\n      oldErrorHandler(message, url, line, opt_col, opt_error);\n    }\n    logFunc({message:message, fileName:url, line:line, lineNumber:line, col:opt_col, error:opt_error});\n    return retVal;\n  };\n};\ngoog.debug.expose \x3d function(obj, opt_showFn) {\n  if (typeof obj \x3d\x3d \x22undefined\x22) {\n    return \x22undefined\x22;\n  }\n  if (obj \x3d\x3d null) {\n    return \x22NULL\x22;\n  }\n  var str \x3d [];\n  for (var x in obj) {\n    if (!opt_showFn \x26\x26 typeof obj[x] \x3d\x3d\x3d \x22function\x22) {\n      continue;\n    }\n    var s \x3d x + \x22 \\x3d \x22;\n    try {\n      s +\x3d obj[x];\n    } catch (e) {\n      s +\x3d \x22*** \x22 + e + \x22 ***\x22;\n    }\n    str.push(s);\n  }\n  return str.join(\x22\\n\x22);\n};\ngoog.debug.deepExpose \x3d function(obj, opt_showFn) {\n  var str \x3d [];\n  var uidsToCleanup \x3d [];\n  var ancestorUids \x3d {};\n  var helper \x3d function(obj, space) {\n    var nestspace \x3d space + \x22  \x22;\n    var indentMultiline \x3d function(str) {\n      return str.replace(/\\n/g, \x22\\n\x22 + space);\n    };\n    try {\n      if (obj \x3d\x3d\x3d undefined) {\n        str.push(\x22undefined\x22);\n      } else if (obj \x3d\x3d\x3d null) {\n        str.push(\x22NULL\x22);\n      } else if (typeof obj \x3d\x3d\x3d \x22string\x22) {\n        str.push(\x27\x22\x27 + indentMultiline(obj) + \x27\x22\x27);\n      } else if (typeof obj \x3d\x3d\x3d \x22function\x22) {\n        str.push(indentMultiline(String(obj)));\n      } else if (goog.isObject(obj)) {\n        if (!goog.hasUid(obj)) {\n          uidsToCleanup.push(obj);\n        }\n        var uid \x3d goog.getUid(obj);\n        if (ancestorUids[uid]) {\n          str.push(\x22*** reference loop detected (id\\x3d\x22 + uid + \x22) ***\x22);\n        } else {\n          ancestorUids[uid] \x3d true;\n          str.push(\x22{\x22);\n          for (var x in obj) {\n            if (!opt_showFn \x26\x26 typeof obj[x] \x3d\x3d\x3d \x22function\x22) {\n              continue;\n            }\n            str.push(\x22\\n\x22);\n            str.push(nestspace);\n            str.push(x + \x22 \\x3d \x22);\n            helper(obj[x], nestspace);\n          }\n          str.push(\x22\\n\x22 + space + \x22}\x22);\n          delete ancestorUids[uid];\n        }\n      } else {\n        str.push(obj);\n      }\n    } catch (e) {\n      str.push(\x22*** \x22 + e + \x22 ***\x22);\n    }\n  };\n  helper(obj, \x22\x22);\n  for (var i \x3d 0; i \x3c uidsToCleanup.length; i++) {\n    goog.removeUid(uidsToCleanup[i]);\n  }\n  return str.join(\x22\x22);\n};\ngoog.debug.exposeArray \x3d function(arr) {\n  var str \x3d [];\n  for (var i \x3d 0; i \x3c arr.length; i++) {\n    if (Array.isArray(arr[i])) {\n      str.push(goog.debug.exposeArray(arr[i]));\n    } else {\n      str.push(arr[i]);\n    }\n  }\n  return \x22[ \x22 + str.join(\x22, \x22) + \x22 ]\x22;\n};\ngoog.debug.normalizeErrorObject \x3d function(err) {\n  var href \x3d goog.getObjectByName(\x22window.location.href\x22);\n  if (err \x3d\x3d null) {\n    err \x3d \x27Unknown Error of type \x22null/undefined\x22\x27;\n  }\n  if (typeof err \x3d\x3d\x3d \x22string\x22) {\n    return {\x22message\x22:err, \x22name\x22:\x22Unknown error\x22, \x22lineNumber\x22:\x22Not available\x22, \x22fileName\x22:href, \x22stack\x22:\x22Not available\x22};\n  }\n  var lineNumber, fileName;\n  var threwError \x3d false;\n  try {\n    lineNumber \x3d err.lineNumber || err.line || \x22Not available\x22;\n  } catch (e) {\n    lineNumber \x3d \x22Not available\x22;\n    threwError \x3d true;\n  }\n  try {\n    fileName \x3d err.fileName || err.filename || err.sourceURL || goog.global[\x22$googDebugFname\x22] || href;\n  } catch (e) {\n    fileName \x3d \x22Not available\x22;\n    threwError \x3d true;\n  }\n  var stack \x3d goog.debug.serializeErrorStack_(err);\n  if (threwError || !err.lineNumber || !err.fileName || !err.stack || !err.message || !err.name) {\n    var message \x3d err.message;\n    if (message \x3d\x3d null) {\n      if (err.constructor \x26\x26 err.constructor instanceof Function) {\n        var ctorName \x3d err.constructor.name ? err.constructor.name : goog.debug.getFunctionName(err.constructor);\n        message \x3d \x27Unknown Error of type \x22\x27 + ctorName + \x27\x22\x27;\n        if (goog.debug.CHECK_FOR_THROWN_EVENT \x26\x26 ctorName \x3d\x3d \x22Event\x22) {\n          try {\n            message \x3d message + \x27 with Event.type \x22\x27 + (err.type || \x22\x22) + \x27\x22\x27;\n          } catch (e) {\n          }\n        }\n      } else {\n        message \x3d \x22Unknown Error of unknown type\x22;\n      }\n      if (typeof err.toString \x3d\x3d\x3d \x22function\x22 \x26\x26 Object.prototype.toString !\x3d\x3d err.toString) {\n        message +\x3d \x22: \x22 + err.toString();\n      }\n    }\n    return {\x22message\x22:message, \x22name\x22:err.name || \x22UnknownError\x22, \x22lineNumber\x22:lineNumber, \x22fileName\x22:fileName, \x22stack\x22:stack || \x22Not available\x22};\n  }\n  err.stack \x3d stack;\n  return {\x22message\x22:err.message, \x22name\x22:err.name, \x22lineNumber\x22:err.lineNumber, \x22fileName\x22:err.fileName, \x22stack\x22:err.stack};\n};\ngoog.debug.serializeErrorStack_ \x3d function(e, seen) {\n  if (!seen) {\n    seen \x3d {};\n  }\n  seen[goog.debug.serializeErrorAsKey_(e)] \x3d true;\n  var stack \x3d e[\x22stack\x22] || \x22\x22;\n  var cause \x3d e.cause;\n  if (cause \x26\x26 !seen[goog.debug.serializeErrorAsKey_(cause)]) {\n    stack +\x3d \x22\\nCaused by: \x22;\n    if (!cause.stack || cause.stack.indexOf(cause.toString()) !\x3d 0) {\n      stack +\x3d typeof cause \x3d\x3d\x3d \x22string\x22 ? cause : cause.message + \x22\\n\x22;\n    }\n    stack +\x3d goog.debug.serializeErrorStack_(cause, seen);\n  }\n  return stack;\n};\ngoog.debug.serializeErrorAsKey_ \x3d function(e) {\n  var keyPrefix \x3d \x22\x22;\n  if (typeof e.toString \x3d\x3d\x3d \x22function\x22) {\n    keyPrefix \x3d \x22\x22 + e;\n  }\n  return keyPrefix + e[\x22stack\x22];\n};\ngoog.debug.enhanceError \x3d function(err, opt_message) {\n  var error;\n  if (!(err instanceof Error)) {\n    error \x3d Error(err);\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(error, goog.debug.enhanceError);\n    }\n  } else {\n    error \x3d err;\n  }\n  if (!error.stack) {\n    error.stack \x3d goog.debug.getStacktrace(goog.debug.enhanceError);\n  }\n  if (opt_message) {\n    var x \x3d 0;\n    while (error[\x22message\x22 + x]) {\n      ++x;\n    }\n    error[\x22message\x22 + x] \x3d String(opt_message);\n  }\n  return error;\n};\ngoog.debug.enhanceErrorWithContext \x3d function(err, opt_context) {\n  var error \x3d goog.debug.enhanceError(err);\n  if (opt_context) {\n    for (var key in opt_context) {\n      goog.debug.errorcontext.addErrorContext(error, key, opt_context[key]);\n    }\n  }\n  return error;\n};\ngoog.debug.getStacktraceSimple \x3d function(opt_depth) {\n  if (!goog.debug.FORCE_SLOPPY_STACKS) {\n    var stack \x3d goog.debug.getNativeStackTrace_(goog.debug.getStacktraceSimple);\n    if (stack) {\n      return stack;\n    }\n  }\n  var sb \x3d [];\n  var fn \x3d arguments.callee.caller;\n  var depth \x3d 0;\n  while (fn \x26\x26 (!opt_depth || depth \x3c opt_depth)) {\n    sb.push(goog.debug.getFunctionName(fn));\n    sb.push(\x22()\\n\x22);\n    try {\n      fn \x3d fn.caller;\n    } catch (e) {\n      sb.push(\x22[exception trying to get caller]\\n\x22);\n      break;\n    }\n    depth++;\n    if (depth \x3e\x3d goog.debug.MAX_STACK_DEPTH) {\n      sb.push(\x22[...long stack...]\x22);\n      break;\n    }\n  }\n  if (opt_depth \x26\x26 depth \x3e\x3d opt_depth) {\n    sb.push(\x22[...reached max depth limit...]\x22);\n  } else {\n    sb.push(\x22[end]\x22);\n  }\n  return sb.join(\x22\x22);\n};\ngoog.debug.MAX_STACK_DEPTH \x3d 50;\ngoog.debug.getNativeStackTrace_ \x3d function(fn) {\n  var tempErr \x3d new Error();\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(tempErr, fn);\n    return String(tempErr.stack);\n  } else {\n    try {\n      throw tempErr;\n    } catch (e) {\n      tempErr \x3d e;\n    }\n    var stack \x3d tempErr.stack;\n    if (stack) {\n      return String(stack);\n    }\n  }\n  return null;\n};\ngoog.debug.getStacktrace \x3d function(fn) {\n  var stack;\n  if (!goog.debug.FORCE_SLOPPY_STACKS) {\n    var contextFn \x3d fn || goog.debug.getStacktrace;\n    stack \x3d goog.debug.getNativeStackTrace_(contextFn);\n  }\n  if (!stack) {\n    stack \x3d goog.debug.getStacktraceHelper_(fn || arguments.callee.caller, []);\n  }\n  return stack;\n};\ngoog.debug.getStacktraceHelper_ \x3d function(fn, visited) {\n  var sb \x3d [];\n  if (goog.array.contains(visited, fn)) {\n    sb.push(\x22[...circular reference...]\x22);\n  } else if (fn \x26\x26 visited.length \x3c goog.debug.MAX_STACK_DEPTH) {\n    sb.push(goog.debug.getFunctionName(fn) + \x22(\x22);\n    var args \x3d fn.arguments;\n    for (var i \x3d 0; args \x26\x26 i \x3c args.length; i++) {\n      if (i \x3e 0) {\n        sb.push(\x22, \x22);\n      }\n      var argDesc;\n      var arg \x3d args[i];\n      switch(typeof arg) {\n        case \x22object\x22:\n          argDesc \x3d arg ? \x22object\x22 : \x22null\x22;\n          break;\n        case \x22string\x22:\n          argDesc \x3d arg;\n          break;\n        case \x22number\x22:\n          argDesc \x3d String(arg);\n          break;\n        case \x22boolean\x22:\n          argDesc \x3d arg ? \x22true\x22 : \x22false\x22;\n          break;\n        case \x22function\x22:\n          argDesc \x3d goog.debug.getFunctionName(arg);\n          argDesc \x3d argDesc ? argDesc : \x22[fn]\x22;\n          break;\n        case \x22undefined\x22:\n        default:\n          argDesc \x3d typeof arg;\n          break;\n      }\n      if (argDesc.length \x3e 40) {\n        argDesc \x3d argDesc.substr(0, 40) + \x22...\x22;\n      }\n      sb.push(argDesc);\n    }\n    visited.push(fn);\n    sb.push(\x22)\\n\x22);\n    try {\n      sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited));\n    } catch (e) {\n      sb.push(\x22[exception trying to get caller]\\n\x22);\n    }\n  } else if (fn) {\n    sb.push(\x22[...long stack...]\x22);\n  } else {\n    sb.push(\x22[end]\x22);\n  }\n  return sb.join(\x22\x22);\n};\ngoog.debug.getFunctionName \x3d function(fn) {\n  if (goog.debug.fnNameCache_[fn]) {\n    return goog.debug.fnNameCache_[fn];\n  }\n  var functionSource \x3d String(fn);\n  if (!goog.debug.fnNameCache_[functionSource]) {\n    var matches \x3d /function\\s+([^\\(]+)/m.exec(functionSource);\n    if (matches) {\n      var method \x3d matches[1];\n      goog.debug.fnNameCache_[functionSource] \x3d method;\n    } else {\n      goog.debug.fnNameCache_[functionSource] \x3d \x22[Anonymous]\x22;\n    }\n  }\n  return goog.debug.fnNameCache_[functionSource];\n};\ngoog.debug.makeWhitespaceVisible \x3d function(string) {\n  return string.replace(/ /g, \x22[_]\x22).replace(/\\f/g, \x22[f]\x22).replace(/\\n/g, \x22[n]\\n\x22).replace(/\\r/g, \x22[r]\x22).replace(/\\t/g, \x22[t]\x22);\n};\ngoog.debug.runtimeType \x3d function(value) {\n  if (value instanceof Function) {\n    return value.displayName || value.name || \x22unknown type name\x22;\n  } else if (value instanceof Object) {\n    return value.constructor.displayName || value.constructor.name || Object.prototype.toString.call(value);\n  } else {\n    return value \x3d\x3d\x3d null ? \x22null\x22 : typeof value;\n  }\n};\ngoog.debug.fnNameCache_ \x3d {};\ngoog.debug.freezeInternal_ \x3d goog.DEBUG \x26\x26 Object.freeze || function(arg) {\n  return arg;\n};\ngoog.debug.freeze \x3d function(arg) {\n  return {valueOf:function() {\n    return goog.debug.freezeInternal_(arg);\n  }}.valueOf();\n};\n");
SHADOW_ENV.evalLoad("goog.disposable.idisposable.js", true , "goog.provide(\x22goog.disposable.IDisposable\x22);\ngoog.disposable.IDisposable \x3d function() {\n};\ngoog.disposable.IDisposable.prototype.dispose \x3d goog.abstractMethod;\ngoog.disposable.IDisposable.prototype.isDisposed \x3d goog.abstractMethod;\n");
SHADOW_ENV.evalLoad("goog.disposable.dispose.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.dispose\x22);\n  goog.module.declareLegacyNamespace();\n  function dispose(obj) {\n    if (obj \x26\x26 typeof obj.dispose \x3d\x3d \x22function\x22) {\n      obj.dispose();\n    }\n  }\n  exports \x3d dispose;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.disposable.disposeall.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.disposeAll\x22);\n  goog.module.declareLegacyNamespace();\n  const dispose \x3d goog.require(\x22goog.dispose\x22);\n  function disposeAll(var_args) {\n    for (let i \x3d 0, len \x3d arguments.length; i \x3c len; ++i) {\n      const disposable \x3d arguments[i];\n      if (goog.isArrayLike(disposable)) {\n        disposeAll.apply(null, disposable);\n      } else {\n        dispose(disposable);\n      }\n    }\n  }\n  exports \x3d disposeAll;\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.disposable.disposable.js", true , "goog.provide(\x22goog.Disposable\x22);\ngoog.require(\x22goog.disposable.IDisposable\x22);\ngoog.require(\x22goog.dispose\x22);\ngoog.require(\x22goog.disposeAll\x22);\ngoog.Disposable \x3d function() {\n  this.creationStack;\n  if (goog.Disposable.MONITORING_MODE !\x3d goog.Disposable.MonitoringMode.OFF) {\n    if (goog.Disposable.INCLUDE_STACK_ON_CREATION) {\n      this.creationStack \x3d (new Error()).stack;\n    }\n    goog.Disposable.instances_[goog.getUid(this)] \x3d this;\n  }\n  this.disposed_ \x3d this.disposed_;\n  this.onDisposeCallbacks_ \x3d this.onDisposeCallbacks_;\n};\ngoog.Disposable.MonitoringMode \x3d {OFF:0, PERMANENT:1, INTERACTIVE:2};\ngoog.Disposable.MONITORING_MODE \x3d goog.define(\x22goog.Disposable.MONITORING_MODE\x22, 0);\ngoog.Disposable.INCLUDE_STACK_ON_CREATION \x3d goog.define(\x22goog.Disposable.INCLUDE_STACK_ON_CREATION\x22, true);\ngoog.Disposable.instances_ \x3d {};\ngoog.Disposable.getUndisposedObjects \x3d function() {\n  var ret \x3d [];\n  for (var id in goog.Disposable.instances_) {\n    if (goog.Disposable.instances_.hasOwnProperty(id)) {\n      ret.push(goog.Disposable.instances_[Number(id)]);\n    }\n  }\n  return ret;\n};\ngoog.Disposable.clearUndisposedObjects \x3d function() {\n  goog.Disposable.instances_ \x3d {};\n};\ngoog.Disposable.prototype.disposed_ \x3d false;\ngoog.Disposable.prototype.onDisposeCallbacks_;\ngoog.Disposable.prototype.isDisposed \x3d function() {\n  return this.disposed_;\n};\ngoog.Disposable.prototype.getDisposed \x3d goog.Disposable.prototype.isDisposed;\ngoog.Disposable.prototype.dispose \x3d function() {\n  if (!this.disposed_) {\n    this.disposed_ \x3d true;\n    this.disposeInternal();\n    if (goog.Disposable.MONITORING_MODE !\x3d goog.Disposable.MonitoringMode.OFF) {\n      var uid \x3d goog.getUid(this);\n      if (goog.Disposable.MONITORING_MODE \x3d\x3d goog.Disposable.MonitoringMode.PERMANENT \x26\x26 !goog.Disposable.instances_.hasOwnProperty(uid)) {\n        throw new Error(this + \x22 did not call the goog.Disposable base \x22 + \x22constructor or was disposed of after a clearUndisposedObjects \x22 + \x22call\x22);\n      }\n      if (goog.Disposable.MONITORING_MODE !\x3d goog.Disposable.MonitoringMode.OFF \x26\x26 this.onDisposeCallbacks_ \x26\x26 this.onDisposeCallbacks_.length \x3e 0) {\n        throw new Error(this + \x22 did not empty its onDisposeCallbacks queue. This \x22 + \x22probably means it overrode dispose() or disposeInternal() \x22 + \x22without calling the superclass\x27 method.\x22);\n      }\n      delete goog.Disposable.instances_[uid];\n    }\n  }\n};\ngoog.Disposable.prototype.registerDisposable \x3d function(disposable) {\n  this.addOnDisposeCallback(goog.partial(goog.dispose, disposable));\n};\ngoog.Disposable.prototype.addOnDisposeCallback \x3d function(callback, opt_scope) {\n  if (this.disposed_) {\n    opt_scope !\x3d\x3d undefined ? callback.call(opt_scope) : callback();\n    return;\n  }\n  if (!this.onDisposeCallbacks_) {\n    this.onDisposeCallbacks_ \x3d [];\n  }\n  this.onDisposeCallbacks_.push(opt_scope !\x3d\x3d undefined ? goog.bind(callback, opt_scope) : callback);\n};\ngoog.Disposable.prototype.disposeInternal \x3d function() {\n  if (this.onDisposeCallbacks_) {\n    while (this.onDisposeCallbacks_.length) {\n      this.onDisposeCallbacks_.shift()();\n    }\n  }\n};\ngoog.Disposable.isDisposed \x3d function(obj) {\n  if (obj \x26\x26 typeof obj.isDisposed \x3d\x3d \x22function\x22) {\n    return obj.isDisposed();\n  }\n  return false;\n};\n");
SHADOW_ENV.evalLoad("goog.events.eventid.js", true , "goog.provide(\x22goog.events.EventId\x22);\ngoog.events.EventId \x3d function(eventId) {\n  this.id \x3d eventId;\n};\ngoog.events.EventId.prototype.toString \x3d function() {\n  return this.id;\n};\n");
SHADOW_ENV.evalLoad("goog.events.event.js", true , "goog.provide(\x22goog.events.Event\x22);\ngoog.require(\x22goog.Disposable\x22);\ngoog.require(\x22goog.events.EventId\x22);\ngoog.events.Event \x3d function(type, opt_target) {\n  this.type \x3d type instanceof goog.events.EventId ? String(type) : type;\n  this.target \x3d opt_target;\n  this.currentTarget \x3d this.target;\n  this.propagationStopped_ \x3d false;\n  this.defaultPrevented \x3d false;\n};\ngoog.events.Event.prototype.hasPropagationStopped \x3d function() {\n  return this.propagationStopped_;\n};\ngoog.events.Event.prototype.stopPropagation \x3d function() {\n  this.propagationStopped_ \x3d true;\n};\ngoog.events.Event.prototype.preventDefault \x3d function() {\n  this.defaultPrevented \x3d true;\n};\ngoog.events.Event.stopPropagation \x3d function(e) {\n  e.stopPropagation();\n};\ngoog.events.Event.preventDefault \x3d function(e) {\n  e.preventDefault();\n};\n");
SHADOW_ENV.evalLoad("goog.events.browserfeature.js", true , "goog.loadModule(function(exports) {\n  \x22use strict\x22;\n  goog.module(\x22goog.events.BrowserFeature\x22);\n  goog.module.declareLegacyNamespace();\n  const purify \x3d fn \x3d\x3e {\n    return {valueOf:fn}.valueOf();\n  };\n  exports \x3d {HAS_W3C_BUTTON:true, HAS_W3C_EVENT_SUPPORT:true, SET_KEY_CODE_TO_PREVENT_DEFAULT:false, HAS_NAVIGATOR_ONLINE_PROPERTY:true, HAS_HTML5_NETWORK_EVENT_SUPPORT:true, HTML5_NETWORK_EVENTS_FIRE_ON_BODY:false, TOUCH_ENABLED:\x22ontouchstart\x22 in goog.global || !!(goog.global[\x22document\x22] \x26\x26 document.documentElement \x26\x26 \x22ontouchstart\x22 in document.documentElement) || !!(goog.global[\x22navigator\x22] \x26\x26 (goog.global[\x22navigator\x22][\x22maxTouchPoints\x22] || goog.global[\x22navigator\x22][\x22msMaxTouchPoints\x22])), POINTER_EVENTS:\x22PointerEvent\x22 in \n  goog.global, MSPOINTER_EVENTS:\x22MSPointerEvent\x22 in goog.global \x26\x26 !!(goog.global[\x22navigator\x22] \x26\x26 goog.global[\x22navigator\x22][\x22msPointerEnabled\x22]), PASSIVE_EVENTS:purify(function() {\n    if (!goog.global.addEventListener || !Object.defineProperty) {\n      return false;\n    }\n    var passive \x3d false;\n    var options \x3d Object.defineProperty({}, \x22passive\x22, {get:function() {\n      passive \x3d true;\n    }});\n    try {\n      goog.global.addEventListener(\x22test\x22, goog.nullFunction, options);\n      goog.global.removeEventListener(\x22test\x22, goog.nullFunction, options);\n    } catch (e) {\n    }\n    return passive;\n  })};\n  return exports;\n});\n");
SHADOW_ENV.evalLoad("goog.events.eventtype.js", true , "goog.provide(\x22goog.events.EventType\x22);\ngoog.provide(\x22goog.events.MouseAsMouseEventType\x22);\ngoog.provide(\x22goog.events.MouseEvents\x22);\ngoog.provide(\x22goog.events.PointerAsMouseEventType\x22);\ngoog.provide(\x22goog.events.PointerAsTouchEventType\x22);\ngoog.provide(\x22goog.events.PointerFallbackEventType\x22);\ngoog.provide(\x22goog.events.PointerTouchFallbackEventType\x22);\ngoog.require(\x22goog.events.BrowserFeature\x22);\ngoog.require(\x22goog.userAgent\x22);\ngoog.events.getVendorPrefixedName_ \x3d function(eventName) {\n  return goog.userAgent.WEBKIT ? \x22webkit\x22 + eventName : eventName.toLowerCase();\n};\ngoog.events.EventType \x3d {CLICK:\x22click\x22, RIGHTCLICK:\x22rightclick\x22, DBLCLICK:\x22dblclick\x22, AUXCLICK:\x22auxclick\x22, MOUSEDOWN:\x22mousedown\x22, MOUSEUP:\x22mouseup\x22, MOUSEOVER:\x22mouseover\x22, MOUSEOUT:\x22mouseout\x22, MOUSEMOVE:\x22mousemove\x22, MOUSEENTER:\x22mouseenter\x22, MOUSELEAVE:\x22mouseleave\x22, MOUSECANCEL:\x22mousecancel\x22, SELECTIONCHANGE:\x22selectionchange\x22, SELECTSTART:\x22selectstart\x22, WHEEL:\x22wheel\x22, KEYPRESS:\x22keypress\x22, KEYDOWN:\x22keydown\x22, KEYUP:\x22keyup\x22, BLUR:\x22blur\x22, FOCUS:\x22focus\x22, DEACTIVATE:\x22deactivate\x22, FOCUSIN:\x22focusin\x22, FOCUSOUT:\x22focusout\x22, \nCHANGE:\x22change\x22, RESET:\x22reset\x22, SELECT:\x22select\x22, SUBMIT:\x22submit\x22, INPUT:\x22input\x22, PROPERTYCHANGE:\x22propertychange\x22, DRAGSTART:\x22dragstart\x22, DRAG:\x22drag\x22, DRAGENTER:\x22dragenter\x22, DRAGOVER:\x22dragover\x22, DRAGLEAVE:\x22dragleave\x22, DROP:\x22drop\x22, DRAGEND:\x22dragend\x22, TOUCHSTART:\x22touchstart\x22, TOUCHMOVE:\x22touchmove\x22, TOUCHEND:\x22touchend\x22, TOUCHCANCEL:\x22touchcancel\x22, BEFOREUNLOAD:\x22beforeunload\x22, CONSOLEMESSAGE:\x22consolemessage\x22, CONTEXTMENU:\x22contextmenu\x22, DEVICECHANGE:\x22devicechange\x22, DEVICEMOTION:\x22devicemotion\x22, DEVICEORIENTATION:\x22deviceorientation\x22, \nDOMCONTENTLOADED:\x22DOMContentLoaded\x22, ERROR:\x22error\x22, HELP:\x22help\x22, LOAD:\x22load\x22, LOSECAPTURE:\x22losecapture\x22, ORIENTATIONCHANGE:\x22orientationchange\x22, READYSTATECHANGE:\x22readystatechange\x22, RESIZE:\x22resize\x22, SCROLL:\x22scroll\x22, UNLOAD:\x22unload\x22, CANPLAY:\x22canplay\x22, CANPLAYTHROUGH:\x22canplaythrough\x22, DURATIONCHANGE:\x22durationchange\x22, EMPTIED:\x22emptied\x22, ENDED:\x22ended\x22, LOADEDDATA:\x22loadeddata\x22, LOADEDMETADATA:\x22loadedmetadata\x22, PAUSE:\x22pause\x22, PLAY:\x22play\x22, PLAYING:\x22playing\x22, PROGRESS:\x22progress\x22, RATECHANGE:\x22ratechange\x22, \nSEEKED:\x22seeked\x22, SEEKING:\x22seeking\x22, STALLED:\x22stalled\x22, SUSPEND:\x22suspend\x22, TIMEUPDATE:\x22timeupdate\x22, VOLUMECHANGE:\x22volumechange\x22, WAITING:\x22waiting\x22, SOURCEOPEN:\x22sourceopen\x22, SOURCEENDED:\x22sourceended\x22, SOURCECLOSED:\x22sourceclosed\x22, ABORT:\x22abort\x22, UPDATE:\x22update\x22, UPDATESTART:\x22updatestart\x22, UPDATEEND:\x22updateend\x22, HASHCHANGE:\x22hashchange\x22, PAGEHIDE:\x22pagehide\x22, PAGESHOW:\x22pageshow\x22, POPSTATE:\x22popstate\x22, COPY:\x22copy\x22, PASTE:\x22paste\x22, CUT:\x22cut\x22, BEFORECOPY:\x22beforecopy\x22, BEFORECUT:\x22beforecut\x22, BEFOREPASTE:\x22beforepaste\x22, \nONLINE:\x22online\x22, OFFLINE:\x22offline\x22, MESSAGE:\x22message\x22, CONNECT:\x22connect\x22, INSTALL:\x22install\x22, ACTIVATE:\x22activate\x22, FETCH:\x22fetch\x22, FOREIGNFETCH:\x22foreignfetch\x22, MESSAGEERROR:\x22messageerror\x22, STATECHANGE:\x22statechange\x22, UPDATEFOUND:\x22updatefound\x22, CONTROLLERCHANGE:\x22controllerchange\x22, ANIMATIONSTART:goog.events.getVendorPrefixedName_(\x22AnimationStart\x22), ANIMATIONEND:goog.events.getVendorPrefixedName_(\x22AnimationEnd\x22), ANIMATIONITERATION:goog.events.getVendorPrefixedName_(\x22AnimationIteration\x22), TRANSITIONEND:goog.events.getVendorPrefixedName_(\x22TransitionEnd\x22), \nPOINTERDOWN:\x22pointerdown\x22, POINTERUP:\x22pointerup\x22, POINTERCANCEL:\x22pointercancel\x22, POINTERMOVE:\x22pointermove\x22, POINTEROVER:\x22pointerover\x22, POINTEROUT:\x22pointerout\x22, POINTERENTER:\x22pointerenter\x22, POINTERLEAVE:\x22pointerleave\x22, GOTPOINTERCAPTURE:\x22gotpointercapture\x22, LOSTPOINTERCAPTURE:\x22lostpointercapture\x22, MSGESTURECHANGE:\x22MSGestureChange\x22, MSGESTUREEND:\x22MSGestureEnd\x22, MSGESTUREHOLD:\x22MSGestureHold\x22, MSGESTURESTART:\x22MSGestureStart\x22, MSGESTURETAP:\x22MSGestureTap\x22, MSGOTPOINTERCAPTURE:\x22MSGotPointerCapture\x22, MSINERTIASTART:\x22MSInertiaStart\x22, \nMSLOSTPOINTERCAPTURE:\x22MSLostPointerCapture\x22, MSPOINTERCANCEL:\x22MSPointerCancel\x22, MSPOINTERDOWN:\x22MSPointerDown\x22, MSPOINTERENTER:\x22MSPointerEnter\x22, MSPOINTERHOVER:\x22MSPointerHover\x22, MSPOINTERLEAVE:\x22MSPointerLeave\x22, MSPOINTERMOVE:\x22MSPointerMove\x22, MSPOINTEROUT:\x22MSPointerOut\x22, MSPOINTEROVER:\x22MSPointerOver\x22, MSPOINTERUP:\x22MSPointerUp\x22, TEXT:\x22text\x22, TEXTINPUT:goog.userAgent.IE ? \x22textinput\x22 : \x22textInput\x22, COMPOSITIONSTART:\x22compositionstart\x22, COMPOSITIONUPDATE:\x22compositionupdate\x22, COMPOSITIONEND:\x22compositionend\x22, \nBEFOREINPUT:\x22beforeinput\x22, EXIT:\x22exit\x22, LOADABORT:\x22loadabort\x22, LOADCOMMIT:\x22loadcommit\x22, LOADREDIRECT:\x22loadredirect\x22, LOADSTART:\x22loadstart\x22, LOADSTOP:\x22loadstop\x22, RESPONSIVE:\x22responsive\x22, SIZECHANGED:\x22sizechanged\x22, UNRESPONSIVE:\x22unresponsive\x22, VISIBILITYCHANGE:\x22visibilitychange\x22, STORAGE:\x22storage\x22, DOMSUBTREEMODIFIED:\x22DOMSubtreeModified\x22, DOMNODEINSERTED:\x22DOMNodeInserted\x22, DOMNODEREMOVED:\x22DOMNodeRemoved\x22, DOMNODEREMOVEDFROMDOCUMENT:\x22DOMNodeRemovedFromDocument\x22, DOMNODEINSERTEDINTODOCUMENT:\x22DOMNodeInsertedIntoDocument\x22, \nDOMATTRMODIFIED:\x22DOMAttrModified\x22, DOMCHARACTERDATAMODIFIED:\x22DOMCharacterDataModified\x22, BEFOREPRINT:\x22beforeprint\x22, AFTERPRINT:\x22afterprint\x22, BEFOREINSTALLPROMPT:\x22beforeinstallprompt\x22, APPINSTALLED:\x22appinstalled\x22};\ngoog.events.getPointerFallbackEventName_ \x3d function(pointerEventName, msPointerEventName, fallbackEventName) {\n  if (goog.events.BrowserFeature.POINTER_EVENTS) {\n    return pointerEventName;\n  }\n  if (goog.events.BrowserFeature.MSPOINTER_EVENTS) {\n    return msPointerEventName;\n  }\n  return fallbackEventName;\n};\ngoog.events.PointerFallbackEventType \x3d {POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN, goog.events.EventType.MOUSEDOWN), POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP, goog.events.EventType.MOUSEUP), POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL, goog.events.EventType.MSPOINTERCANCEL, goog.events.EventType.MOUSECANCEL), \nPOINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE, goog.events.EventType.MSPOINTERMOVE, goog.events.EventType.MOUSEMOVE), POINTEROVER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROVER, goog.events.EventType.MSPOINTEROVER, goog.events.EventType.MOUSEOVER), POINTEROUT:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTEROUT, goog.events.EventType.MSPOINTEROUT, goog.events.EventType.MOUSEOUT), POINTERENTER:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERENTER, \ngoog.events.EventType.MSPOINTERENTER, goog.events.EventType.MOUSEENTER), POINTERLEAVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERLEAVE, goog.events.EventType.MSPOINTERLEAVE, goog.events.EventType.MOUSELEAVE)};\ngoog.events.PointerTouchFallbackEventType \x3d {POINTERDOWN:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERDOWN, goog.events.EventType.MSPOINTERDOWN, goog.events.EventType.TOUCHSTART), POINTERUP:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERUP, goog.events.EventType.MSPOINTERUP, goog.events.EventType.TOUCHEND), POINTERCANCEL:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERCANCEL, goog.events.EventType.MSPOINTERCANCEL, goog.events.EventType.TOUCHCANCEL), \nPOINTERMOVE:goog.events.getPointerFallbackEventName_(goog.events.EventType.POINTERMOVE, goog.events.EventType.MSPOINTERMOVE, goog.events.EventType.TOUCHMOVE)};\ngoog.events.MouseEvents;\ngoog.events.PointerAsMouseEventType \x3d {MOUSEDOWN:goog.events.PointerFallbackEventType.POINTERDOWN, MOUSEUP:goog.events.PointerFallbackEventType.POINTERUP, MOUSECANCEL:goog.events.PointerFallbackEventType.POINTERCANCEL, MOUSEMOVE:goog.events.PointerFallbackEventType.POINTERMOVE, MOUSEOVER:goog.events.PointerFallbackEventType.POINTEROVER, MOUSEOUT:goog.events.PointerFallbackEventType.POINTEROUT, MOUSEENTER:goog.events.PointerFallbackEventType.POINTERENTER, MOUSELEAVE:goog.events.PointerFallbackEventType.POINTERLEAVE};\ngoog.events.MouseAsMouseEventType \x3d {MOUSEDOWN:goog.events.EventType.MOUSEDOWN, MOUSEUP:goog.events.EventType.MOUSEUP, MOUSECANCEL:goog.events.EventType.MOUSECANCEL, MOUSEMOVE:goog.events.EventType.MOUSEMOVE, MOUSEOVER:goog.events.EventType.MOUSEOVER, MOUSEOUT:goog.events.EventType.MOUSEOUT, MOUSEENTER:goog.events.EventType.MOUSEENTER, MOUSELEAVE:goog.events.EventType.MOUSELEAVE};\ngoog.events.PointerAsTouchEventType \x3d {TOUCHCANCEL:goog.events.PointerTouchFallbackEventType.POINTERCANCEL, TOUCHEND:goog.events.PointerTouchFallbackEventType.POINTERUP, TOUCHMOVE:goog.events.PointerTouchFallbackEventType.POINTERMOVE, TOUCHSTART:goog.events.PointerTouchFallbackEventType.POINTERDOWN};\n");
SHADOW_ENV.evalLoad("goog.events.browserevent.js", true , "goog.provide(\x22goog.events.BrowserEvent\x22);\ngoog.provide(\x22goog.events.BrowserEvent.MouseButton\x22);\ngoog.provide(\x22goog.events.BrowserEvent.PointerType\x22);\ngoog.require(\x22goog.debug\x22);\ngoog.require(\x22goog.events.Event\x22);\ngoog.require(\x22goog.events.EventType\x22);\ngoog.require(\x22goog.reflect\x22);\ngoog.require(\x22goog.userAgent\x22);\ngoog.events.USE_LAYER_XY_AS_OFFSET_XY \x3d goog.define(\x22goog.events.USE_LAYER_XY_AS_OFFSET_XY\x22, false);\ngoog.events.BrowserEvent \x3d function(opt_e, opt_currentTarget) {\n  goog.events.BrowserEvent.base(this, \x22constructor\x22, opt_e ? opt_e.type : \x22\x22);\n  this.target \x3d null;\n  this.currentTarget \x3d null;\n  this.relatedTarget \x3d null;\n  this.offsetX \x3d 0;\n  this.offsetY \x3d 0;\n  this.clientX \x3d 0;\n  this.clientY \x3d 0;\n  this.screenX \x3d 0;\n  this.screenY \x3d 0;\n  this.button \x3d 0;\n  this.key \x3d \x22\x22;\n  this.keyCode \x3d 0;\n  this.charCode \x3d 0;\n  this.ctrlKey \x3d false;\n  this.altKey \x3d false;\n  this.shiftKey \x3d false;\n  this.metaKey \x3d false;\n  this.state \x3d null;\n  this.platformModifierKey \x3d false;\n  this.pointerId \x3d 0;\n  this.pointerType \x3d \x22\x22;\n  this.event_ \x3d null;\n  if (opt_e) {\n    this.init(opt_e, opt_currentTarget);\n  }\n};\ngoog.inherits(goog.events.BrowserEvent, goog.events.Event);\ngoog.events.BrowserEvent.MouseButton \x3d {LEFT:0, MIDDLE:1, RIGHT:2};\ngoog.events.BrowserEvent.PointerType \x3d {MOUSE:\x22mouse\x22, PEN:\x22pen\x22, TOUCH:\x22touch\x22};\ngoog.events.BrowserEvent.IEButtonMap \x3d goog.debug.freeze([1, 4, 2]);\ngoog.events.BrowserEvent.IE_BUTTON_MAP \x3d goog.events.BrowserEvent.IEButtonMap;\ngoog.events.BrowserEvent.IE_POINTER_TYPE_MAP \x3d goog.debug.freeze({2:goog.events.BrowserEvent.PointerType.TOUCH, 3:goog.events.BrowserEvent.PointerType.PEN, 4:goog.events.BrowserEvent.PointerType.MOUSE});\ngoog.events.BrowserEvent.prototype.init \x3d function(e, opt_currentTarget) {\n  var type \x3d this.type \x3d e.type;\n  var relevantTouch \x3d e.changedTouches \x26\x26 e.changedTouches.length ? e.changedTouches[0] : null;\n  this.target \x3d e.target || e.srcElement;\n  this.currentTarget \x3d opt_currentTarget;\n  var relatedTarget \x3d e.relatedTarget;\n  if (relatedTarget) {\n    if (goog.userAgent.GECKO) {\n      if (!goog.reflect.canAccessProperty(relatedTarget, \x22nodeName\x22)) {\n        relatedTarget \x3d null;\n      }\n    }\n  } else if (type \x3d\x3d goog.events.EventType.MOUSEOVER) {\n    relatedTarget \x3d e.fromElement;\n  } else if (type \x3d\x3d goog.events.EventType.MOUSEOUT) {\n    relatedTarget \x3d e.toElement;\n  }\n  this.relatedTarget \x3d relatedTarget;\n  if (relevantTouch) {\n    this.clientX \x3d relevantTouch.clientX !\x3d\x3d undefined ? relevantTouch.clientX : relevantTouch.pageX;\n    this.clientY \x3d relevantTouch.clientY !\x3d\x3d undefined ? relevantTouch.clientY : relevantTouch.pageY;\n    this.screenX \x3d relevantTouch.screenX || 0;\n    this.screenY \x3d relevantTouch.screenY || 0;\n  } else {\n    if (goog.events.USE_LAYER_XY_AS_OFFSET_XY) {\n      this.offsetX \x3d e.layerX !\x3d\x3d undefined ? e.layerX : e.offsetX;\n      this.offsetY \x3d e.layerY !\x3d\x3d undefined ? e.layerY : e.offsetY;\n    } else {\n      this.offsetX \x3d goog.userAgent.WEBKIT || e.offsetX !\x3d\x3d undefined ? e.offsetX : e.layerX;\n      this.offsetY \x3d goog.userAgent.WEBKIT || e.offsetY !\x3d\x3d undefined ? e.offsetY : e.layerY;\n    }\n    this.clientX \x3d e.clientX !\x3d\x3d undefined ? e.clientX : e.pageX;\n    this.clientY \x3d e.clientY !\x3d\x3d undefined ? e.clientY : e.pageY;\n    this.screenX \x3d e.screenX || 0;\n    this.screenY \x3d e.screenY || 0;\n  }\n  this.button \x3d e.button;\n  this.keyCode \x3d e.keyCode || 0;\n  this.key \x3d e.key || \x22\x22;\n  this.charCode \x3d e.charCode || (type \x3d\x3d \x22keypress\x22 ? e.keyCode : 0);\n  this.ctrlKey \x3d e.ctrlKey;\n  this.altKey \x3d e.altKey;\n  this.shiftKey \x3d e.shiftKey;\n  this.metaKey \x3d e.metaKey;\n  this.platformModifierKey \x3d goog.userAgent.MAC ? e.metaKey : e.ctrlKey;\n  this.pointerId \x3d e.pointerId || 0;\n  this.pointerType \x3d goog.events.BrowserEvent.getPointerType_(e);\n  this.state \x3d e.state;\n  this.event_ \x3d e;\n  if (e.defaultPrevented) {\n    goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  }\n};\ngoog.events.BrowserEvent.prototype.isButton \x3d function(button) {\n  return this.event_.button \x3d\x3d button;\n};\ngoog.events.BrowserEvent.prototype.isMouseActionButton \x3d function() {\n  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) \x26\x26 !(goog.userAgent.MAC \x26\x26 this.ctrlKey);\n};\ngoog.events.BrowserEvent.prototype.stopPropagation \x3d function() {\n  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);\n  if (this.event_.stopPropagation) {\n    this.event_.stopPropagation();\n  } else {\n    this.event_.cancelBubble \x3d true;\n  }\n};\ngoog.events.BrowserEvent.prototype.preventDefault \x3d function() {\n  goog.events.BrowserEvent.superClass_.preventDefault.call(this);\n  var be \x3d this.event_;\n  if (!be.preventDefault) {\n    be.returnValue \x3d false;\n  } else {\n    be.preventDefault();\n  }\n};\ngoog.events.BrowserEvent.prototype.getBrowserEvent \x3d function() {\n  return this.event_;\n};\ngoog.events.BrowserEvent.getPointerType_ \x3d function(e) {\n  if (typeof e.pointerType \x3d\x3d\x3d \x22string\x22) {\n    return e.pointerType;\n  }\n  return goog.events.BrowserEvent.IE_POINTER_TYPE_MAP[e.pointerType] || \x22\x22;\n};\n");
SHADOW_ENV.evalLoad("goog.events.eventlike.js", true , "goog.provide(\x22goog.events.EventLike\x22);\ngoog.requireType(\x22goog.events.Event\x22);\ngoog.requireType(\x22goog.events.EventId\x22);\ngoog.events.EventLike;\n");
SHADOW_ENV.evalLoad("goog.events.listenablekey.js", true , "goog.provide(\x22goog.events.ListenableKey\x22);\ngoog.requireType(\x22goog.events.Listenable\x22);\ngoog.events.ListenableKey \x3d function() {\n};\ngoog.events.ListenableKey.counter_ \x3d 0;\ngoog.events.ListenableKey.reserveKey \x3d function() {\n  return ++goog.events.ListenableKey.counter_;\n};\ngoog.events.ListenableKey.prototype.src;\ngoog.events.ListenableKey.prototype.type;\ngoog.events.ListenableKey.prototype.listener;\ngoog.events.ListenableKey.prototype.capture;\ngoog.events.ListenableKey.prototype.handler;\ngoog.events.ListenableKey.prototype.key;\n");
SHADOW_ENV.evalLoad("goog.events.listenable.js", true , "goog.provide(\x22goog.events.Listenable\x22);\ngoog.requireType(\x22goog.events.EventId\x22);\ngoog.requireType(\x22goog.events.EventLike\x22);\ngoog.requireType(\x22goog.events.ListenableKey\x22);\ngoog.events.Listenable \x3d function() {\n};\ngoog.events.Listenable.IMPLEMENTED_BY_PROP \x3d \x22closure_listenable_\x22 + (Math.random() * 1e6 | 0);\ngoog.events.Listenable.addImplementation \x3d function(cls) {\n  cls.prototype[goog.events.Listenable.IMPLEMENTED_BY_PROP] \x3d true;\n};\ngoog.events.Listenable.isImplementedBy \x3d function(obj) {\n  return !!(obj \x26\x26 obj[goog.events.Listenable.IMPLEMENTED_BY_PROP]);\n};\ngoog.events.Listenable.prototype.listen \x3d function(type, listener, opt_useCapture, opt_listenerScope) {\n};\ngoog.events.Listenable.prototype.listenOnce \x3d function(type, listener, opt_useCapture, opt_listenerScope) {\n};\ngoog.events.Listenable.prototype.unlisten \x3d function(type, listener, opt_useCapture, opt_listenerScope) {\n};\ngoog.events.Listenable.prototype.unlistenByKey \x3d function(key) {\n};\ngoog.events.Listenable.prototype.dispatchEvent \x3d function(e) {\n};\ngoog.events.Listenable.prototype.removeAllListeners \x3d function(opt_type) {\n};\ngoog.events.Listenable.prototype.getParentEventTarget \x3d function() {\n};\ngoog.events.Listenable.prototype.fireListeners \x3d function(type, capture, eventObject) {\n};\ngoog.events.Listenable.prototype.getListeners \x3d function(type, capture) {\n};\ngoog.events.Listenable.prototype.getListener \x3d function(type, listener, capture, opt_listenerScope) {\n};\ngoog.events.Listenable.prototype.hasListener \x3d function(opt_type, opt_capture) {\n};\n");
SHADOW_ENV.evalLoad("goog.events.listener.js", true , "goog.provide(\x22goog.events.Listener\x22);\ngoog.require(\x22goog.events.ListenableKey\x22);\ngoog.requireType(\x22goog.events.Listenable\x22);\ngoog.events.Listener \x3d function(listener, proxy, src, type, capture, opt_handler) {\n  if (goog.events.Listener.ENABLE_MONITORING) {\n    this.creationStack \x3d (new Error()).stack;\n  }\n  this.listener \x3d listener;\n  this.proxy \x3d proxy;\n  this.src \x3d src;\n  this.type \x3d type;\n  this.capture \x3d !!capture;\n  this.handler \x3d opt_handler;\n  this.key \x3d goog.events.ListenableKey.reserveKey();\n  this.callOnce \x3d false;\n  this.removed \x3d false;\n};\ngoog.events.Listener.ENABLE_MONITORING \x3d goog.define(\x22goog.events.Listener.ENABLE_MONITORING\x22, false);\ngoog.events.Listener.prototype.creationStack;\ngoog.events.Listener.prototype.markAsRemoved \x3d function() {\n  this.removed \x3d true;\n  this.listener \x3d null;\n  this.proxy \x3d null;\n  this.src \x3d null;\n  this.handler \x3d null;\n};\n");
SHADOW_ENV.evalLoad("goog.events.listenermap.js", true , "goog.provide(\x22goog.events.ListenerMap\x22);\ngoog.require(\x22goog.array\x22);\ngoog.require(\x22goog.events.Listener\x22);\ngoog.require(\x22goog.object\x22);\ngoog.requireType(\x22goog.events.EventId\x22);\ngoog.requireType(\x22goog.events.Listenable\x22);\ngoog.requireType(\x22goog.events.ListenableKey\x22);\ngoog.events.ListenerMap \x3d function(src) {\n  this.src \x3d src;\n  this.listeners \x3d {};\n  this.typeCount_ \x3d 0;\n};\ngoog.events.ListenerMap.prototype.getTypeCount \x3d function() {\n  return this.typeCount_;\n};\ngoog.events.ListenerMap.prototype.getListenerCount \x3d function() {\n  var count \x3d 0;\n  for (var type in this.listeners) {\n    count +\x3d this.listeners[type].length;\n  }\n  return count;\n};\ngoog.events.ListenerMap.prototype.add \x3d function(type, listener, callOnce, opt_useCapture, opt_listenerScope) {\n  var typeStr \x3d type.toString();\n  var listenerArray \x3d this.listeners[typeStr];\n  if (!listenerArray) {\n    listenerArray \x3d this.listeners[typeStr] \x3d [];\n    this.typeCount_++;\n  }\n  var listenerObj;\n  var index \x3d goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (index \x3e -1) {\n    listenerObj \x3d listenerArray[index];\n    if (!callOnce) {\n      listenerObj.callOnce \x3d false;\n    }\n  } else {\n    listenerObj \x3d new goog.events.Listener(listener, null, this.src, typeStr, !!opt_useCapture, opt_listenerScope);\n    listenerObj.callOnce \x3d callOnce;\n    listenerArray.push(listenerObj);\n  }\n  return listenerObj;\n};\ngoog.events.ListenerMap.prototype.remove \x3d function(type, listener, opt_useCapture, opt_listenerScope) {\n  var typeStr \x3d type.toString();\n  if (!(typeStr in this.listeners)) {\n    return false;\n  }\n  var listenerArray \x3d this.listeners[typeStr];\n  var index \x3d goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, opt_useCapture, opt_listenerScope);\n  if (index \x3e -1) {\n    var listenerObj \x3d listenerArray[index];\n    listenerObj.markAsRemoved();\n    goog.array.removeAt(listenerArray, index);\n    if (listenerArray.length \x3d\x3d 0) {\n      delete this.listeners[typeStr];\n      this.typeCount_--;\n    }\n    return true;\n  }\n  return false;\n};\ngoog.events.ListenerMap.prototype.removeByKey \x3d function(listener) {\n  var type \x3d listener.type;\n  if (!(type in this.listeners)) {\n    return false;\n  }\n  var removed \x3d goog.array.remove(this.listeners[type], listener);\n  if (removed) {\n    listener.markAsRemoved();\n    if (this.listeners[type].length \x3d\x3d 0) {\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return removed;\n};\ngoog.events.ListenerMap.prototype.removeAll \x3d function(opt_type) {\n  var typeStr \x3d opt_type \x26\x26 opt_type.toString();\n  var count \x3d 0;\n  for (var type in this.listeners) {\n    if (!typeStr || type \x3d\x3d typeStr) {\n      var listenerArray \x3d this.listeners[type];\n      for (var i \x3d 0; i \x3c listenerArray.length; i++) {\n        ++count;\n        listenerArray[i].markAsRemoved();\n      }\n      delete this.listeners[type];\n      this.typeCount_--;\n    }\n  }\n  return count;\n};\ngoog.events.ListenerMap.prototype.getListeners \x3d function(type, capture) {\n  var listenerArray \x3d this.listeners[type.toString()];\n  var rv \x3d [];\n  if (listenerArray) {\n    for (var i \x3d 0; i \x3c listenerArray.length; ++i) {\n      var listenerObj \x3d listenerArray[i];\n      if (listenerObj.capture \x3d\x3d capture) {\n        rv.push(listenerObj);\n      }\n    }\n  }\n  return rv;\n};\ngoog.events.ListenerMap.prototype.getListener \x3d function(type, listener, capture, opt_listenerScope) {\n  var listenerArray \x3d this.listeners[type.toString()];\n  var i \x3d -1;\n  if (listenerArray) {\n    i \x3d goog.events.ListenerMap.findListenerIndex_(listenerArray, listener, capture, opt_listenerScope);\n  }\n  return i \x3e -1 ? listenerArray[i] : null;\n};\ngoog.events.ListenerMap.prototype.hasListener \x3d function(opt_type, opt_capture) {\n  var hasType \x3d opt_type !\x3d\x3d undefined;\n  var typeStr \x3d hasType ? opt_type.toString() : \x22\x22;\n  var hasCapture \x3d opt_capture !\x3d\x3d undefined;\n  return goog.object.some(this.listeners, function(listenerArray, type) {\n    for (var i \x3d 0; i \x3c listenerArray.length; ++i) {\n      if ((!hasType || listenerArray[i].type \x3d\x3d typeStr) \x26\x26 (!hasCapture || listenerArray[i].capture \x3d\x3d opt_capture)) {\n        return true;\n      }\n    }\n    return false;\n  });\n};\ngoog.events.ListenerMap.findListenerIndex_ \x3d function(listenerArray, listener, opt_useCapture, opt_listenerScope) {\n  for (var i \x3d 0; i \x3c listenerArray.length; ++i) {\n    var listenerObj \x3d listenerArray[i];\n    if (!listenerObj.removed \x26\x26 listenerObj.listener \x3d\x3d listener \x26\x26 listenerObj.capture \x3d\x3d !!opt_useCapture \x26\x26 listenerObj.handler \x3d\x3d opt_listenerScope) {\n      return i;\n    }\n  }\n  return -1;\n};\n");
SHADOW_ENV.evalLoad("goog.debug.errorhandler.js", true , "goog.provide(\x22goog.debug.ErrorHandler\x22);\ngoog.provide(\x22goog.debug.ErrorHandler.ProtectedFunctionError\x22);\ngoog.require(\x22goog.Disposable\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.debug.EntryPointMonitor\x22);\ngoog.require(\x22goog.debug.Error\x22);\ngoog.debug.ErrorHandler \x3d function(handler) {\n  goog.debug.ErrorHandler.base(this, \x22constructor\x22);\n  this.errorHandlerFn_ \x3d handler;\n  this.wrapErrors_ \x3d true;\n  this.prefixErrorMessages_ \x3d false;\n};\ngoog.inherits(goog.debug.ErrorHandler, goog.Disposable);\ngoog.debug.ErrorHandler.prototype.wrap \x3d function(fn) {\n  return this.protectEntryPoint(goog.asserts.assertFunction(fn));\n};\ngoog.debug.ErrorHandler.prototype.unwrap \x3d function(fn) {\n  goog.asserts.assertFunction(fn);\n  return fn[this.getFunctionIndex_(false)] || fn;\n};\ngoog.debug.ErrorHandler.prototype.getFunctionIndex_ \x3d function(wrapper) {\n  return (wrapper ? \x22__wrapper_\x22 : \x22__protected_\x22) + goog.getUid(this) + \x22__\x22;\n};\ngoog.debug.ErrorHandler.prototype.protectEntryPoint \x3d function(fn) {\n  var protectedFnName \x3d this.getFunctionIndex_(true);\n  if (!fn[protectedFnName]) {\n    var wrapper \x3d fn[protectedFnName] \x3d this.getProtectedFunction(fn);\n    wrapper[this.getFunctionIndex_(false)] \x3d fn;\n  }\n  return fn[protectedFnName];\n};\ngoog.debug.ErrorHandler.prototype.getProtectedFunction \x3d function(fn) {\n  var that \x3d this;\n  var googDebugErrorHandlerProtectedFunction \x3d function() {\n    var self \x3d this;\n    if (that.isDisposed()) {\n      return fn.apply(self, arguments);\n    }\n    try {\n      return fn.apply(self, arguments);\n    } catch (e) {\n      that.handleError_(e);\n    }\n  };\n  googDebugErrorHandlerProtectedFunction[this.getFunctionIndex_(false)] \x3d fn;\n  return googDebugErrorHandlerProtectedFunction;\n};\ngoog.debug.ErrorHandler.prototype.handleError_ \x3d function(e) {\n  var MESSAGE_PREFIX \x3d goog.debug.ErrorHandler.ProtectedFunctionError.MESSAGE_PREFIX;\n  if (e \x26\x26 typeof e \x3d\x3d\x3d \x22object\x22 \x26\x26 typeof e.message \x3d\x3d\x3d \x22string\x22 \x26\x26 e.message.indexOf(MESSAGE_PREFIX) \x3d\x3d 0 || typeof e \x3d\x3d\x3d \x22string\x22 \x26\x26 e.indexOf(MESSAGE_PREFIX) \x3d\x3d 0) {\n    return;\n  }\n  this.errorHandlerFn_(e);\n  if (!this.wrapErrors_) {\n    if (this.prefixErrorMessages_) {\n      if (typeof e \x3d\x3d\x3d \x22object\x22 \x26\x26 e \x26\x26 typeof e.message \x3d\x3d\x3d \x22string\x22) {\n        e.message \x3d MESSAGE_PREFIX + e.message;\n      } else {\n        e \x3d MESSAGE_PREFIX + e;\n      }\n    }\n    if (goog.DEBUG) {\n      if (e \x26\x26 typeof e.stack \x3d\x3d\x3d \x22string\x22 \x26\x26 Error.captureStackTrace \x26\x26 goog.global[\x22console\x22]) {\n        goog.global[\x22console\x22][\x22error\x22](e.message, e.stack);\n      }\n    }\n    throw e;\n  }\n  throw new goog.debug.ErrorHandler.ProtectedFunctionError(e);\n};\ngoog.debug.ErrorHandler.prototype.protectWindowSetTimeout \x3d function() {\n  this.protectWindowFunctionsHelper_(\x22setTimeout\x22);\n};\ngoog.debug.ErrorHandler.prototype.protectWindowSetInterval \x3d function() {\n  this.protectWindowFunctionsHelper_(\x22setInterval\x22);\n};\ngoog.debug.ErrorHandler.prototype.catchUnhandledRejections \x3d function(win) {\n  win \x3d win || goog.global[\x22window\x22];\n  if (\x22onunhandledrejection\x22 in win) {\n    win.onunhandledrejection \x3d event \x3d\x3e {\n      const e \x3d event \x26\x26 event.reason ? event.reason : new Error(\x22uncaught error\x22);\n      this.handleError_(e);\n    };\n  }\n};\ngoog.debug.ErrorHandler.prototype.protectWindowRequestAnimationFrame \x3d function() {\n  var win \x3d goog.global[\x22window\x22];\n  var fnNames \x3d [\x22requestAnimationFrame\x22, \x22mozRequestAnimationFrame\x22, \x22webkitAnimationFrame\x22, \x22msRequestAnimationFrame\x22];\n  for (var i \x3d 0; i \x3c fnNames.length; i++) {\n    var fnName \x3d fnNames[i];\n    if (fnNames[i] in win) {\n      this.protectWindowFunctionsHelper_(fnName);\n    }\n  }\n};\ngoog.debug.ErrorHandler.prototype.protectWindowFunctionsHelper_ \x3d function(fnName) {\n  var win \x3d goog.global[\x22window\x22];\n  var originalFn \x3d win[fnName];\n  var that \x3d this;\n  win[fnName] \x3d function(fn, time) {\n    if (typeof fn \x3d\x3d\x3d \x22string\x22) {\n      fn \x3d goog.partial(goog.globalEval, fn);\n    }\n    arguments[0] \x3d fn \x3d that.protectEntryPoint(fn);\n    if (originalFn.apply) {\n      return originalFn.apply(this, arguments);\n    } else {\n      var callback \x3d fn;\n      if (arguments.length \x3e 2) {\n        var args \x3d Array.prototype.slice.call(arguments, 2);\n        callback \x3d function() {\n          fn.apply(this, args);\n        };\n      }\n      return originalFn(callback, time);\n    }\n  };\n  win[fnName][this.getFunctionIndex_(false)] \x3d originalFn;\n};\ngoog.debug.ErrorHandler.prototype.setWrapErrors \x3d function(wrapErrors) {\n  this.wrapErrors_ \x3d wrapErrors;\n};\ngoog.debug.ErrorHandler.prototype.setPrefixErrorMessages \x3d function(prefixErrorMessages) {\n  this.prefixErrorMessages_ \x3d prefixErrorMessages;\n};\ngoog.debug.ErrorHandler.prototype.disposeInternal \x3d function() {\n  var win \x3d goog.global[\x22window\x22];\n  win.setTimeout \x3d this.unwrap(win.setTimeout);\n  win.setInterval \x3d this.unwrap(win.setInterval);\n  goog.debug.ErrorHandler.base(this, \x22disposeInternal\x22);\n};\ngoog.debug.ErrorHandler.ProtectedFunctionError \x3d function(cause) {\n  var message \x3d goog.debug.ErrorHandler.ProtectedFunctionError.MESSAGE_PREFIX + (cause \x26\x26 cause.message ? String(cause.message) : String(cause));\n  goog.debug.ErrorHandler.ProtectedFunctionError.base(this, \x22constructor\x22, message, cause);\n  var stack \x3d cause \x26\x26 cause.stack;\n  if (stack \x26\x26 typeof stack \x3d\x3d\x3d \x22string\x22) {\n    this.stack \x3d stack;\n  }\n};\ngoog.inherits(goog.debug.ErrorHandler.ProtectedFunctionError, goog.debug.Error);\ngoog.debug.ErrorHandler.ProtectedFunctionError.MESSAGE_PREFIX \x3d \x22Error in protected function: \x22;\n");
SHADOW_ENV.evalLoad("goog.events.eventtarget.js", true , "goog.provide(\x22goog.events.EventTarget\x22);\ngoog.require(\x22goog.Disposable\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.events\x22);\ngoog.require(\x22goog.events.Event\x22);\ngoog.require(\x22goog.events.Listenable\x22);\ngoog.require(\x22goog.events.ListenerMap\x22);\ngoog.require(\x22goog.object\x22);\ngoog.requireType(\x22goog.events.EventId\x22);\ngoog.requireType(\x22goog.events.EventLike\x22);\ngoog.requireType(\x22goog.events.ListenableKey\x22);\ngoog.events.EventTarget \x3d function() {\n  goog.Disposable.call(this);\n  this.eventTargetListeners_ \x3d new goog.events.ListenerMap(this);\n  this.actualEventTarget_ \x3d this;\n  this.parentEventTarget_ \x3d null;\n};\ngoog.inherits(goog.events.EventTarget, goog.Disposable);\ngoog.events.Listenable.addImplementation(goog.events.EventTarget);\ngoog.events.EventTarget.MAX_ANCESTORS_ \x3d 1000;\ngoog.events.EventTarget.prototype.getParentEventTarget \x3d function() {\n  return this.parentEventTarget_;\n};\ngoog.events.EventTarget.prototype.setParentEventTarget \x3d function(parent) {\n  this.parentEventTarget_ \x3d parent;\n};\ngoog.events.EventTarget.prototype.addEventListener \x3d function(type, handler, opt_capture, opt_handlerScope) {\n  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope);\n};\ngoog.events.EventTarget.prototype.removeEventListener \x3d function(type, handler, opt_capture, opt_handlerScope) {\n  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope);\n};\ngoog.events.EventTarget.prototype.dispatchEvent \x3d function(e) {\n  this.assertInitialized_();\n  var ancestorsTree, ancestor \x3d this.getParentEventTarget();\n  if (ancestor) {\n    ancestorsTree \x3d [];\n    var ancestorCount \x3d 1;\n    for (; ancestor; ancestor \x3d ancestor.getParentEventTarget()) {\n      ancestorsTree.push(ancestor);\n      goog.asserts.assert(++ancestorCount \x3c goog.events.EventTarget.MAX_ANCESTORS_, \x22infinite loop\x22);\n    }\n  }\n  return goog.events.EventTarget.dispatchEventInternal_(this.actualEventTarget_, e, ancestorsTree);\n};\ngoog.events.EventTarget.prototype.disposeInternal \x3d function() {\n  goog.events.EventTarget.superClass_.disposeInternal.call(this);\n  this.removeAllListeners();\n  this.parentEventTarget_ \x3d null;\n};\ngoog.events.EventTarget.prototype.listen \x3d function(type, listener, opt_useCapture, opt_listenerScope) {\n  this.assertInitialized_();\n  return this.eventTargetListeners_.add(String(type), listener, false, opt_useCapture, opt_listenerScope);\n};\ngoog.events.EventTarget.prototype.listenOnce \x3d function(type, listener, opt_useCapture, opt_listenerScope) {\n  return this.eventTargetListeners_.add(String(type), listener, true, opt_useCapture, opt_listenerScope);\n};\ngoog.events.EventTarget.prototype.unlisten \x3d function(type, listener, opt_useCapture, opt_listenerScope) {\n  return this.eventTargetListeners_.remove(String(type), listener, opt_useCapture, opt_listenerScope);\n};\ngoog.events.EventTarget.prototype.unlistenByKey \x3d function(key) {\n  return this.eventTargetListeners_.removeByKey(key);\n};\ngoog.events.EventTarget.prototype.removeAllListeners \x3d function(opt_type) {\n  if (!this.eventTargetListeners_) {\n    return 0;\n  }\n  return this.eventTargetListeners_.removeAll(opt_type);\n};\ngoog.events.EventTarget.prototype.fireListeners \x3d function(type, capture, eventObject) {\n  var listenerArray \x3d this.eventTargetListeners_.listeners[String(type)];\n  if (!listenerArray) {\n    return true;\n  }\n  listenerArray \x3d listenerArray.concat();\n  var rv \x3d true;\n  for (var i \x3d 0; i \x3c listenerArray.length; ++i) {\n    var listener \x3d listenerArray[i];\n    if (listener \x26\x26 !listener.removed \x26\x26 listener.capture \x3d\x3d capture) {\n      var listenerFn \x3d listener.listener;\n      var listenerHandler \x3d listener.handler || listener.src;\n      if (listener.callOnce) {\n        this.unlistenByKey(listener);\n      }\n      rv \x3d listenerFn.call(listenerHandler, eventObject) !\x3d\x3d false \x26\x26 rv;\n    }\n  }\n  return rv \x26\x26 !eventObject.defaultPrevented;\n};\ngoog.events.EventTarget.prototype.getListeners \x3d function(type, capture) {\n  return this.eventTargetListeners_.getListeners(String(type), capture);\n};\ngoog.events.EventTarget.prototype.getListener \x3d function(type, listener, capture, opt_listenerScope) {\n  return this.eventTargetListeners_.getListener(String(type), listener, capture, opt_listenerScope);\n};\ngoog.events.EventTarget.prototype.hasListener \x3d function(opt_type, opt_capture) {\n  var id \x3d opt_type !\x3d\x3d undefined ? String(opt_type) : undefined;\n  return this.eventTargetListeners_.hasListener(id, opt_capture);\n};\ngoog.events.EventTarget.prototype.setTargetForTesting \x3d function(target) {\n  this.actualEventTarget_ \x3d target;\n};\ngoog.events.EventTarget.prototype.assertInitialized_ \x3d function() {\n  goog.asserts.assert(this.eventTargetListeners_, \x22Event target is not initialized. Did you call the superclass \x22 + \x22(goog.events.EventTarget) constructor?\x22);\n};\ngoog.events.EventTarget.dispatchEventInternal_ \x3d function(target, e, opt_ancestorsTree) {\n  var type \x3d e.type || e;\n  if (typeof e \x3d\x3d\x3d \x22string\x22) {\n    e \x3d new goog.events.Event(e, target);\n  } else if (!(e instanceof goog.events.Event)) {\n    var oldEvent \x3d e;\n    e \x3d new goog.events.Event(type, target);\n    goog.object.extend(e, oldEvent);\n  } else {\n    e.target \x3d e.target || target;\n  }\n  var rv \x3d true, currentTarget;\n  if (opt_ancestorsTree) {\n    for (var i \x3d opt_ancestorsTree.length - 1; !e.hasPropagationStopped() \x26\x26 i \x3e\x3d 0; i--) {\n      currentTarget \x3d e.currentTarget \x3d opt_ancestorsTree[i];\n      rv \x3d currentTarget.fireListeners(type, true, e) \x26\x26 rv;\n    }\n  }\n  if (!e.hasPropagationStopped()) {\n    currentTarget \x3d e.currentTarget \x3d target;\n    rv \x3d currentTarget.fireListeners(type, true, e) \x26\x26 rv;\n    if (!e.hasPropagationStopped()) {\n      rv \x3d currentTarget.fireListeners(type, false, e) \x26\x26 rv;\n    }\n  }\n  if (opt_ancestorsTree) {\n    for (i \x3d 0; !e.hasPropagationStopped() \x26\x26 i \x3c opt_ancestorsTree.length; i++) {\n      currentTarget \x3d e.currentTarget \x3d opt_ancestorsTree[i];\n      rv \x3d currentTarget.fireListeners(type, false, e) \x26\x26 rv;\n    }\n  }\n  return rv;\n};\n");
SHADOW_ENV.evalLoad("goog.events.eventhandler.js", true , "goog.provide(\x22goog.events.EventHandler\x22);\ngoog.require(\x22goog.Disposable\x22);\ngoog.require(\x22goog.events\x22);\ngoog.require(\x22goog.object\x22);\ngoog.requireType(\x22goog.events.Event\x22);\ngoog.requireType(\x22goog.events.EventId\x22);\ngoog.requireType(\x22goog.events.EventTarget\x22);\ngoog.requireType(\x22goog.events.EventWrapper\x22);\ngoog.events.EventHandler \x3d function(opt_scope) {\n  goog.Disposable.call(this);\n  this.handler_ \x3d opt_scope;\n  this.keys_ \x3d {};\n};\ngoog.inherits(goog.events.EventHandler, goog.Disposable);\ngoog.events.EventHandler.typeArray_ \x3d [];\ngoog.events.EventHandler.prototype.listen \x3d function(src, type, opt_fn, opt_options) {\n  var self \x3d this;\n  return self.listen_(src, type, opt_fn, opt_options);\n};\ngoog.events.EventHandler.prototype.listenWithScope \x3d function(src, type, fn, options, scope) {\n  var self \x3d this;\n  return self.listen_(src, type, fn, options, scope);\n};\ngoog.events.EventHandler.prototype.listen_ \x3d function(src, type, opt_fn, opt_options, opt_scope) {\n  var self \x3d this;\n  if (!Array.isArray(type)) {\n    if (type) {\n      goog.events.EventHandler.typeArray_[0] \x3d type.toString();\n    }\n    type \x3d goog.events.EventHandler.typeArray_;\n  }\n  for (var i \x3d 0; i \x3c type.length; i++) {\n    var listenerObj \x3d goog.events.listen(src, type[i], opt_fn || self.handleEvent, opt_options || false, opt_scope || self.handler_ || self);\n    if (!listenerObj) {\n      return self;\n    }\n    var key \x3d listenerObj.key;\n    self.keys_[key] \x3d listenerObj;\n  }\n  return self;\n};\ngoog.events.EventHandler.prototype.listenOnce \x3d function(src, type, opt_fn, opt_options) {\n  var self \x3d this;\n  return self.listenOnce_(src, type, opt_fn, opt_options);\n};\ngoog.events.EventHandler.prototype.listenOnceWithScope \x3d function(src, type, fn, capture, scope) {\n  var self \x3d this;\n  return self.listenOnce_(src, type, fn, capture, scope);\n};\ngoog.events.EventHandler.prototype.listenOnce_ \x3d function(src, type, opt_fn, opt_options, opt_scope) {\n  var self \x3d this;\n  if (Array.isArray(type)) {\n    for (var i \x3d 0; i \x3c type.length; i++) {\n      self.listenOnce_(src, type[i], opt_fn, opt_options, opt_scope);\n    }\n  } else {\n    var listenerObj \x3d goog.events.listenOnce(src, type, opt_fn || self.handleEvent, opt_options, opt_scope || self.handler_ || self);\n    if (!listenerObj) {\n      return self;\n    }\n    var key \x3d listenerObj.key;\n    self.keys_[key] \x3d listenerObj;\n  }\n  return self;\n};\ngoog.events.EventHandler.prototype.listenWithWrapper \x3d function(src, wrapper, listener, opt_capt) {\n  var self \x3d this;\n  return self.listenWithWrapper_(src, wrapper, listener, opt_capt);\n};\ngoog.events.EventHandler.prototype.listenWithWrapperAndScope \x3d function(src, wrapper, listener, capture, scope) {\n  var self \x3d this;\n  return self.listenWithWrapper_(src, wrapper, listener, capture, scope);\n};\ngoog.events.EventHandler.prototype.listenWithWrapper_ \x3d function(src, wrapper, listener, opt_capt, opt_scope) {\n  var self \x3d this;\n  wrapper.listen(src, listener, opt_capt, opt_scope || self.handler_ || self, self);\n  return self;\n};\ngoog.events.EventHandler.prototype.getListenerCount \x3d function() {\n  var count \x3d 0;\n  for (var key in this.keys_) {\n    if (Object.prototype.hasOwnProperty.call(this.keys_, key)) {\n      count++;\n    }\n  }\n  return count;\n};\ngoog.events.EventHandler.prototype.unlisten \x3d function(src, type, opt_fn, opt_options, opt_scope) {\n  var self \x3d this;\n  if (Array.isArray(type)) {\n    for (var i \x3d 0; i \x3c type.length; i++) {\n      self.unlisten(src, type[i], opt_fn, opt_options, opt_scope);\n    }\n  } else {\n    var capture \x3d goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    var listener \x3d goog.events.getListener(src, type, opt_fn || self.handleEvent, capture, opt_scope || self.handler_ || self);\n    if (listener) {\n      goog.events.unlistenByKey(listener);\n      delete self.keys_[listener.key];\n    }\n  }\n  return self;\n};\ngoog.events.EventHandler.prototype.unlistenWithWrapper \x3d function(src, wrapper, listener, opt_capt, opt_scope) {\n  var self \x3d this;\n  wrapper.unlisten(src, listener, opt_capt, opt_scope || self.handler_ || self, self);\n  return self;\n};\ngoog.events.EventHandler.prototype.removeAll \x3d function() {\n  goog.object.forEach(this.keys_, function(listenerObj, key) {\n    if (this.keys_.hasOwnProperty(key)) {\n      goog.events.unlistenByKey(listenerObj);\n    }\n  }, this);\n  this.keys_ \x3d {};\n};\ngoog.events.EventHandler.prototype.disposeInternal \x3d function() {\n  goog.events.EventHandler.superClass_.disposeInternal.call(this);\n  this.removeAll();\n};\ngoog.events.EventHandler.prototype.handleEvent \x3d function(e) {\n  throw new Error(\x22EventHandler.handleEvent not implemented\x22);\n};\n");
SHADOW_ENV.evalLoad("goog.events.eventwrapper.js", true , "goog.provide(\x22goog.events.EventWrapper\x22);\ngoog.requireType(\x22goog.events.EventHandler\x22);\ngoog.requireType(\x22goog.events.ListenableType\x22);\ngoog.events.EventWrapper \x3d function() {\n};\ngoog.events.EventWrapper.prototype.listen \x3d function(src, listener, opt_capt, opt_scope, opt_eventHandler) {\n};\ngoog.events.EventWrapper.prototype.unlisten \x3d function(src, listener, opt_capt, opt_scope, opt_eventHandler) {\n};\n");
SHADOW_ENV.evalLoad("goog.events.events.js", true , "goog.provide(\x22goog.events\x22);\ngoog.provide(\x22goog.events.CaptureSimulationMode\x22);\ngoog.provide(\x22goog.events.Key\x22);\ngoog.provide(\x22goog.events.ListenableType\x22);\ngoog.require(\x22goog.asserts\x22);\ngoog.require(\x22goog.debug.entryPointRegistry\x22);\ngoog.require(\x22goog.events.BrowserEvent\x22);\ngoog.require(\x22goog.events.BrowserFeature\x22);\ngoog.require(\x22goog.events.Listenable\x22);\ngoog.require(\x22goog.events.ListenerMap\x22);\ngoog.requireType(\x22goog.debug.ErrorHandler\x22);\ngoog.requireType(\x22goog.events.EventId\x22);\ngoog.requireType(\x22goog.events.EventLike\x22);\ngoog.requireType(\x22goog.events.EventWrapper\x22);\ngoog.requireType(\x22goog.events.ListenableKey\x22);\ngoog.requireType(\x22goog.events.Listener\x22);\ngoog.events.Key;\ngoog.events.ListenableType;\ngoog.events.LISTENER_MAP_PROP_ \x3d \x22closure_lm_\x22 + (Math.random() * 1e6 | 0);\ngoog.events.onString_ \x3d \x22on\x22;\ngoog.events.onStringMap_ \x3d {};\ngoog.events.CaptureSimulationMode \x3d {OFF_AND_FAIL:0, OFF_AND_SILENT:1, ON:2};\ngoog.events.CAPTURE_SIMULATION_MODE \x3d goog.define(\x22goog.events.CAPTURE_SIMULATION_MODE\x22, 2);\ngoog.events.listenerCountEstimate_ \x3d 0;\ngoog.events.listen \x3d function(src, type, listener, opt_options, opt_handler) {\n  if (opt_options \x26\x26 opt_options.once) {\n    return goog.events.listenOnce(src, type, listener, opt_options, opt_handler);\n  }\n  if (Array.isArray(type)) {\n    for (var i \x3d 0; i \x3c type.length; i++) {\n      goog.events.listen(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n  listener \x3d goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    var capture \x3d goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    return src.listen(type, listener, capture, opt_handler);\n  } else {\n    return goog.events.listen_(src, type, listener, false, opt_options, opt_handler);\n  }\n};\ngoog.events.listen_ \x3d function(src, type, listener, callOnce, opt_options, opt_handler) {\n  if (!type) {\n    throw new Error(\x22Invalid event type\x22);\n  }\n  var capture \x3d goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n  var listenerMap \x3d goog.events.getListenerMap_(src);\n  if (!listenerMap) {\n    src[goog.events.LISTENER_MAP_PROP_] \x3d listenerMap \x3d new goog.events.ListenerMap(src);\n  }\n  var listenerObj \x3d listenerMap.add(type, listener, callOnce, capture, opt_handler);\n  if (listenerObj.proxy) {\n    return listenerObj;\n  }\n  var proxy \x3d goog.events.getProxy();\n  listenerObj.proxy \x3d proxy;\n  proxy.src \x3d src;\n  proxy.listener \x3d listenerObj;\n  if (src.addEventListener) {\n    if (!goog.events.BrowserFeature.PASSIVE_EVENTS) {\n      opt_options \x3d capture;\n    }\n    if (opt_options \x3d\x3d\x3d undefined) {\n      opt_options \x3d false;\n    }\n    src.addEventListener(type.toString(), proxy, opt_options);\n  } else if (src.attachEvent) {\n    src.attachEvent(goog.events.getOnString_(type.toString()), proxy);\n  } else if (src.addListener \x26\x26 src.removeListener) {\n    goog.asserts.assert(type \x3d\x3d\x3d \x22change\x22, \x22MediaQueryList only has a change event\x22);\n    src.addListener(proxy);\n  } else {\n    throw new Error(\x22addEventListener and attachEvent are unavailable.\x22);\n  }\n  goog.events.listenerCountEstimate_++;\n  return listenerObj;\n};\ngoog.events.getProxy \x3d function() {\n  const proxyCallbackFunction \x3d goog.events.handleBrowserEvent_;\n  const f \x3d function(eventObject) {\n    return proxyCallbackFunction.call(f.src, f.listener, eventObject);\n  };\n  return f;\n};\ngoog.events.listenOnce \x3d function(src, type, listener, opt_options, opt_handler) {\n  if (Array.isArray(type)) {\n    for (var i \x3d 0; i \x3c type.length; i++) {\n      goog.events.listenOnce(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n  listener \x3d goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    var capture \x3d goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n    return src.listenOnce(type, listener, capture, opt_handler);\n  } else {\n    return goog.events.listen_(src, type, listener, true, opt_options, opt_handler);\n  }\n};\ngoog.events.listenWithWrapper \x3d function(src, wrapper, listener, opt_capt, opt_handler) {\n  wrapper.listen(src, listener, opt_capt, opt_handler);\n};\ngoog.events.unlisten \x3d function(src, type, listener, opt_options, opt_handler) {\n  if (Array.isArray(type)) {\n    for (var i \x3d 0; i \x3c type.length; i++) {\n      goog.events.unlisten(src, type[i], listener, opt_options, opt_handler);\n    }\n    return null;\n  }\n  var capture \x3d goog.isObject(opt_options) ? !!opt_options.capture : !!opt_options;\n  listener \x3d goog.events.wrapListener(listener);\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.unlisten(type, listener, capture, opt_handler);\n  }\n  if (!src) {\n    return false;\n  }\n  var listenerMap \x3d goog.events.getListenerMap_(src);\n  if (listenerMap) {\n    var listenerObj \x3d listenerMap.getListener(type, listener, capture, opt_handler);\n    if (listenerObj) {\n      return goog.events.unlistenByKey(listenerObj);\n    }\n  }\n  return false;\n};\ngoog.events.unlistenByKey \x3d function(key) {\n  if (typeof key \x3d\x3d\x3d \x22number\x22) {\n    return false;\n  }\n  var listener \x3d key;\n  if (!listener || listener.removed) {\n    return false;\n  }\n  var src \x3d listener.src;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.unlistenByKey(listener);\n  }\n  var type \x3d listener.type;\n  var proxy \x3d listener.proxy;\n  if (src.removeEventListener) {\n    src.removeEventListener(type, proxy, listener.capture);\n  } else if (src.detachEvent) {\n    src.detachEvent(goog.events.getOnString_(type), proxy);\n  } else if (src.addListener \x26\x26 src.removeListener) {\n    src.removeListener(proxy);\n  }\n  goog.events.listenerCountEstimate_--;\n  var listenerMap \x3d goog.events.getListenerMap_(src);\n  if (listenerMap) {\n    listenerMap.removeByKey(listener);\n    if (listenerMap.getTypeCount() \x3d\x3d 0) {\n      listenerMap.src \x3d null;\n      src[goog.events.LISTENER_MAP_PROP_] \x3d null;\n    }\n  } else {\n    listener.markAsRemoved();\n  }\n  return true;\n};\ngoog.events.unlistenWithWrapper \x3d function(src, wrapper, listener, opt_capt, opt_handler) {\n  wrapper.unlisten(src, listener, opt_capt, opt_handler);\n};\ngoog.events.removeAll \x3d function(obj, opt_type) {\n  if (!obj) {\n    return 0;\n  }\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.removeAllListeners(opt_type);\n  }\n  var listenerMap \x3d goog.events.getListenerMap_(obj);\n  if (!listenerMap) {\n    return 0;\n  }\n  var count \x3d 0;\n  var typeStr \x3d opt_type \x26\x26 opt_type.toString();\n  for (var type in listenerMap.listeners) {\n    if (!typeStr || type \x3d\x3d typeStr) {\n      var listeners \x3d listenerMap.listeners[type].concat();\n      for (var i \x3d 0; i \x3c listeners.length; ++i) {\n        if (goog.events.unlistenByKey(listeners[i])) {\n          ++count;\n        }\n      }\n    }\n  }\n  return count;\n};\ngoog.events.getListeners \x3d function(obj, type, capture) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.getListeners(type, capture);\n  } else {\n    if (!obj) {\n      return [];\n    }\n    var listenerMap \x3d goog.events.getListenerMap_(obj);\n    return listenerMap ? listenerMap.getListeners(type, capture) : [];\n  }\n};\ngoog.events.getListener \x3d function(src, type, listener, opt_capt, opt_handler) {\n  type \x3d type;\n  listener \x3d goog.events.wrapListener(listener);\n  var capture \x3d !!opt_capt;\n  if (goog.events.Listenable.isImplementedBy(src)) {\n    return src.getListener(type, listener, capture, opt_handler);\n  }\n  if (!src) {\n    return null;\n  }\n  var listenerMap \x3d goog.events.getListenerMap_(src);\n  if (listenerMap) {\n    return listenerMap.getListener(type, listener, capture, opt_handler);\n  }\n  return null;\n};\ngoog.events.hasListener \x3d function(obj, opt_type, opt_capture) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.hasListener(opt_type, opt_capture);\n  }\n  var listenerMap \x3d goog.events.getListenerMap_(obj);\n  return !!listenerMap \x26\x26 listenerMap.hasListener(opt_type, opt_capture);\n};\ngoog.events.expose \x3d function(e) {\n  var str \x3d [];\n  for (var key in e) {\n    if (e[key] \x26\x26 e[key].id) {\n      str.push(key + \x22 \\x3d \x22 + e[key] + \x22 (\x22 + e[key].id + \x22)\x22);\n    } else {\n      str.push(key + \x22 \\x3d \x22 + e[key]);\n    }\n  }\n  return str.join(\x22\\n\x22);\n};\ngoog.events.getOnString_ \x3d function(type) {\n  if (type in goog.events.onStringMap_) {\n    return goog.events.onStringMap_[type];\n  }\n  return goog.events.onStringMap_[type] \x3d goog.events.onString_ + type;\n};\ngoog.events.fireListeners \x3d function(obj, type, capture, eventObject) {\n  if (goog.events.Listenable.isImplementedBy(obj)) {\n    return obj.fireListeners(type, capture, eventObject);\n  }\n  return goog.events.fireListeners_(obj, type, capture, eventObject);\n};\ngoog.events.fireListeners_ \x3d function(obj, type, capture, eventObject) {\n  var retval \x3d true;\n  var listenerMap \x3d goog.events.getListenerMap_(obj);\n  if (listenerMap) {\n    var listenerArray \x3d listenerMap.listeners[type.toString()];\n    if (listenerArray) {\n      listenerArray \x3d listenerArray.concat();\n      for (var i \x3d 0; i \x3c listenerArray.length; i++) {\n        var listener \x3d listenerArray[i];\n        if (listener \x26\x26 listener.capture \x3d\x3d capture \x26\x26 !listener.removed) {\n          var result \x3d goog.events.fireListener(listener, eventObject);\n          retval \x3d retval \x26\x26 result !\x3d\x3d false;\n        }\n      }\n    }\n  }\n  return retval;\n};\ngoog.events.fireListener \x3d function(listener, eventObject) {\n  var listenerFn \x3d listener.listener;\n  var listenerHandler \x3d listener.handler || listener.src;\n  if (listener.callOnce) {\n    goog.events.unlistenByKey(listener);\n  }\n  return listenerFn.call(listenerHandler, eventObject);\n};\ngoog.events.getTotalListenerCount \x3d function() {\n  return goog.events.listenerCountEstimate_;\n};\ngoog.events.dispatchEvent \x3d function(src, e) {\n  goog.asserts.assert(goog.events.Listenable.isImplementedBy(src), \x22Can not use goog.events.dispatchEvent with \x22 + \x22non-goog.events.Listenable instance.\x22);\n  return src.dispatchEvent(e);\n};\ngoog.events.protectBrowserEventEntryPoint \x3d function(errorHandler) {\n  goog.events.handleBrowserEvent_ \x3d errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_);\n};\ngoog.events.handleBrowserEvent_ \x3d function(listener, opt_evt) {\n  if (listener.removed) {\n    return true;\n  }\n  return goog.events.fireListener(listener, new goog.events.BrowserEvent(opt_evt, this));\n};\ngoog.events.markIeEvent_ \x3d function(e) {\n  var useReturnValue \x3d false;\n  if (e.keyCode \x3d\x3d 0) {\n    try {\n      e.keyCode \x3d -1;\n      return;\n    } catch (ex) {\n      useReturnValue \x3d true;\n    }\n  }\n  if (useReturnValue || e.returnValue \x3d\x3d undefined) {\n    e.returnValue \x3d true;\n  }\n};\ngoog.events.isMarkedIeEvent_ \x3d function(e) {\n  return e.keyCode \x3c 0 || e.returnValue !\x3d undefined;\n};\ngoog.events.uniqueIdCounter_ \x3d 0;\ngoog.events.getUniqueId \x3d function(identifier) {\n  return identifier + \x22_\x22 + goog.events.uniqueIdCounter_++;\n};\ngoog.events.getListenerMap_ \x3d function(src) {\n  var listenerMap \x3d src[goog.events.LISTENER_MAP_PROP_];\n  return listenerMap instanceof goog.events.ListenerMap ? listenerMap : null;\n};\ngoog.events.LISTENER_WRAPPER_PROP_ \x3d \x22__closure_events_fn_\x22 + (Math.random() * 1e9 \x3e\x3e\x3e 0);\ngoog.events.wrapListener \x3d function(listener) {\n  goog.asserts.assert(listener, \x22Listener can not be null.\x22);\n  if (typeof listener \x3d\x3d\x3d \x22function\x22) {\n    return listener;\n  }\n  goog.asserts.assert(listener.handleEvent, \x22An object listener must have handleEvent method.\x22);\n  if (!listener[goog.events.LISTENER_WRAPPER_PROP_]) {\n    listener[goog.events.LISTENER_WRAPPER_PROP_] \x3d function(e) {\n      return listener.handleEvent(e);\n    };\n  }\n  return listener[goog.events.LISTENER_WRAPPER_PROP_];\n};\ngoog.debug.entryPointRegistry.register(function(transformer) {\n  goog.events.handleBrowserEvent_ \x3d transformer(goog.events.handleBrowserEvent_);\n});\n");
SHADOW_ENV.evalLoad("reagent.core.js", true , "goog.provide(\x27reagent.core\x27);\nreagent.core.is_client \x3d reagent.impl.util.is_client;\n/**\n * Create a native React element, by calling React.createElement directly.\n * \n *   That means the second argument must be a javascript object (or nil), and\n *   that any Reagent hiccup forms must be processed with as-element. For example\n *   like this:\n * \n *   ```cljs\n *   (r/create-element \x22div\x22 #js{:className \x22foo\x22}\n *  \x22Hi \x22 (r/as-element [:strong \x22world!\x22])\n *   ```\n * \n *   which is equivalent to\n * \n *   ```cljs\n *   [:div.foo \x22Hi\x22 [:strong \x22world!\x22]]\n *   ```\n */\nreagent.core.create_element \x3d (function reagent$core$create_element(var_args){\nvar G__22896 \x3d arguments.length;\nswitch (G__22896) {\ncase 1:\nreturn reagent.core.create_element.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.create_element.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn reagent.core.create_element.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___23130 \x3d arguments.length;\nvar i__5770__auto___23131 \x3d (0);\nwhile(true){\nif((i__5770__auto___23131 \x3c len__5769__auto___23130)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___23131]));\n\nvar G__23132 \x3d (i__5770__auto___23131 + (1));\ni__5770__auto___23131 \x3d G__23132;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((3)),(0),null));\nreturn reagent.core.create_element.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5795__auto__);\n\n}\n});\n\n(reagent.core.create_element.cljs$core$IFn$_invoke$arity$1 \x3d (function (type){\nreturn reagent.core.create_element.cljs$core$IFn$_invoke$arity$2(type,null);\n}));\n\n(reagent.core.create_element.cljs$core$IFn$_invoke$arity$2 \x3d (function (type,props){\nif((!(cljs.core.map_QMARK_(props)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a JS object, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([props], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/not (clojure.core/map? props))\x22].join(\x27\x27)));\n}\n\nreturn shadow.js.shim.module$react.createElement(type,props);\n}));\n\n(reagent.core.create_element.cljs$core$IFn$_invoke$arity$3 \x3d (function (type,props,child){\nif((!(cljs.core.map_QMARK_(props)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a JS object, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([props], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/not (clojure.core/map? props))\x22].join(\x27\x27)));\n}\n\nreturn shadow.js.shim.module$react.createElement(type,props,child);\n}));\n\n(reagent.core.create_element.cljs$core$IFn$_invoke$arity$variadic \x3d (function (type,props,child,children){\nif((!(cljs.core.map_QMARK_(props)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a JS object, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([props], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/not (clojure.core/map? props))\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(shadow.js.shim.module$react.createElement,type,props,child,children);\n}));\n\n/** @this {Function} */\n(reagent.core.create_element.cljs$lang$applyTo \x3d (function (seq22882){\nvar G__22883 \x3d cljs.core.first(seq22882);\nvar seq22882__$1 \x3d cljs.core.next(seq22882);\nvar G__22884 \x3d cljs.core.first(seq22882__$1);\nvar seq22882__$2 \x3d cljs.core.next(seq22882__$1);\nvar G__22885 \x3d cljs.core.first(seq22882__$2);\nvar seq22882__$3 \x3d cljs.core.next(seq22882__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22883,G__22884,G__22885,seq22882__$3);\n}));\n\n(reagent.core.create_element.cljs$lang$maxFixedArity \x3d (3));\n\n/**\n * Turns a vector of Hiccup syntax into a React element. Returns form\n *   unchanged if it is not a vector.\n */\nreagent.core.as_element \x3d (function reagent$core$as_element(var_args){\nvar G__22926 \x3d arguments.length;\nswitch (G__22926) {\ncase 1:\nreturn reagent.core.as_element.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.as_element.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(reagent.core.as_element.cljs$core$IFn$_invoke$arity$1 \x3d (function (form){\nreturn reagent.impl.protocols.as_element(reagent.impl.template.default_compiler,form);\n}));\n\n(reagent.core.as_element.cljs$core$IFn$_invoke$arity$2 \x3d (function (form,compiler){\nreturn reagent.impl.protocols.as_element(compiler,form);\n}));\n\n(reagent.core.as_element.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns an adapter for a native React class, that may be used\n *   just like a Reagent component function or class in Hiccup forms.\n */\nreagent.core.adapt_react_class \x3d (function reagent$core$adapt_react_class(c){\nif(cljs.core.truth_(c)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Component\x22,\x22 must not be nil\x22].join(\x27\x27),\x22\\n\x22,\x22c\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.template.adapt_react_class(c);\n});\n/**\n * Returns an adapter for a Reagent component, that may be used from\n *   React, for example in JSX. A single argument, props, is passed to\n *   the component, converted to a map.\n */\nreagent.core.reactify_component \x3d (function reagent$core$reactify_component(var_args){\nvar G__22938 \x3d arguments.length;\nswitch (G__22938) {\ncase 1:\nreturn reagent.core.reactify_component.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.reactify_component.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(reagent.core.reactify_component.cljs$core$IFn$_invoke$arity$1 \x3d (function (c){\nreturn reagent.core.reactify_component.cljs$core$IFn$_invoke$arity$2(c,reagent.impl.template.default_compiler);\n}));\n\n(reagent.core.reactify_component.cljs$core$IFn$_invoke$arity$2 \x3d (function (c,compiler){\nif(cljs.core.truth_(c)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Component\x22,\x22 must not be nil\x22].join(\x27\x27),\x22\\n\x22,\x22c\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.component.reactify_component(c,compiler);\n}));\n\n(reagent.core.reactify_component.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Creates JS class based on provided Clojure map, for example:\n * \n *   ```cljs\n *   {;; Constructor\n * :constructor (fn [this props])\n * :get-initial-state (fn [this])\n * ;; Static methods\n * :get-derived-state-from-props (fn [props state] partial-state)\n * :get-derived-state-from-error (fn [error] partial-state)\n * ;; Methods\n * :get-snapshot-before-update (fn [this old-argv new-argv] snapshot)\n * :should-component-update (fn [this old-argv new-argv])\n * :component-did-mount (fn [this])\n * :component-did-update (fn [this old-argv old-state snapshot])\n * :component-will-unmount (fn [this])\n * :component-did-catch (fn [this error info])\n * :reagent-render (fn [args....])\n * ;; Or alternatively:\n * :render (fn [this])\n * ;; Deprecated methods:\n * :UNSAFE_component-will-receive-props (fn [this new-argv])\n * :UNSAFE_component-will-update (fn [this new-argv new-state])\n * :UNSAFE_component-will-mount (fn [this])}\n *   ```\n * \n *   Everything is optional, except either :reagent-render or :render.\n * \n *   Map keys should use `React.Component` method names (https://reactjs.org/docs/react-component.html),\n *   and can be provided in snake-case or camelCase.\n * \n *   State can be initialized using constructor, which matches React.Component class,\n *   or using getInitialState which matches old React createClass function and is\n *   now implemented by Reagent for compatibility.\n * \n *   State can usually be anything, e.g. Cljs object. But if using getDerivedState\n *   methods, the state has to be plain JS object as React implementation uses\n *   Object.assign to merge partial state into the current state.\n * \n *   React built-in static methods or properties are automatically defined as statics.\n */\nreagent.core.create_class \x3d (function reagent$core$create_class(var_args){\nvar G__22956 \x3d arguments.length;\nswitch (G__22956) {\ncase 1:\nreturn reagent.core.create_class.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.create_class.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(reagent.core.create_class.cljs$core$IFn$_invoke$arity$1 \x3d (function (spec){\nreturn reagent.impl.component.create_class(spec,reagent.impl.template.default_compiler);\n}));\n\n(reagent.core.create_class.cljs$core$IFn$_invoke$arity$2 \x3d (function (spec,compiler){\nreturn reagent.impl.component.create_class(spec,compiler);\n}));\n\n(reagent.core.create_class.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns the current React component (a.k.a `this`) in a component\n *   function.\n */\nreagent.core.current_component \x3d (function reagent$core$current_component(){\nreturn reagent.impl.component._STAR_current_component_STAR_;\n});\n/**\n * Returns an atom containing a components state.\n */\nreagent.core.state_atom \x3d (function reagent$core$state_atom(this$){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.component.state_atom(this$);\n});\n/**\n * Returns the state of a component, as set with replace-state or set-state.\n *   Equivalent to `(deref (r/state-atom this))`\n */\nreagent.core.state \x3d (function reagent$core$state(this$){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.deref(reagent.core.state_atom(this$));\n});\n/**\n * Set state of a component.\n *   Equivalent to `(reset! (state-atom this) new-state)`\n */\nreagent.core.replace_state \x3d (function reagent$core$replace_state(this$,new_state){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nif((((new_state \x3d\x3d null)) || (cljs.core.map_QMARK_(new_state)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a valid new state, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new_state], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/or (clojure.core/nil? new-state) (clojure.core/map? new-state))\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.reset_BANG_(reagent.core.state_atom(this$),new_state);\n});\n/**\n * Merge component state with new-state.\n *   Equivalent to `(swap! (state-atom this) merge new-state)`\n */\nreagent.core.set_state \x3d (function reagent$core$set_state(this$,new_state){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nif((((new_state \x3d\x3d null)) || (cljs.core.map_QMARK_(new_state)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a valid new state, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new_state], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/or (clojure.core/nil? new-state) (clojure.core/map? new-state))\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(reagent.core.state_atom(this$),cljs.core.merge,new_state);\n});\n/**\n * Force a component to re-render immediately.\n * \n *   If the second argument is true, child components will also be\n *   re-rendered, even is their arguments have not changed.\n */\nreagent.core.force_update \x3d (function reagent$core$force_update(var_args){\nvar G__22990 \x3d arguments.length;\nswitch (G__22990) {\ncase 1:\nreturn reagent.core.force_update.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.force_update.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(reagent.core.force_update.cljs$core$IFn$_invoke$arity$1 \x3d (function (this$){\nreturn reagent.core.force_update.cljs$core$IFn$_invoke$arity$2(this$,false);\n}));\n\n(reagent.core.force_update.cljs$core$IFn$_invoke$arity$2 \x3d (function (this$,deep){\nreagent.ratom.flush_BANG_();\n\nreagent.impl.util.force_update(this$,deep);\n\nreturn reagent.impl.batching.flush_after_render();\n}));\n\n(reagent.core.force_update.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns the props passed to a component.\n */\nreagent.core.props \x3d (function reagent$core$props(this$){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.component.get_props(this$);\n});\n/**\n * Returns the children passed to a component.\n */\nreagent.core.children \x3d (function reagent$core$children(this$){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.component.get_children(this$);\n});\n/**\n * Returns the entire Hiccup form passed to the component.\n */\nreagent.core.argv \x3d (function reagent$core$argv(this$){\nif(reagent.impl.component.reagent_component_QMARK_(this$)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected a reagent component, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([this$], 0))].join(\x27\x27),\x22\\n\x22,\x22(comp/reagent-component? this)\x22].join(\x27\x27)));\n}\n\nreturn reagent.impl.component.get_argv(this$);\n});\n/**\n * Function which normalizes and combines class values to a string\n * \n *   Reagent allows classes to be defined as:\n *   - Strings\n *   - Named objects (Symbols or Keywords)\n *   - Collections of previous types\n */\nreagent.core.class_names \x3d (function reagent$core$class_names(var_args){\nvar G__23016 \x3d arguments.length;\nswitch (G__23016) {\ncase 0:\nreturn reagent.core.class_names.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn reagent.core.class_names.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.class_names.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___23145 \x3d arguments.length;\nvar i__5770__auto___23146 \x3d (0);\nwhile(true){\nif((i__5770__auto___23146 \x3c len__5769__auto___23145)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___23146]));\n\nvar G__23147 \x3d (i__5770__auto___23146 + (1));\ni__5770__auto___23146 \x3d G__23147;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn reagent.core.class_names.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(reagent.core.class_names.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn null;\n}));\n\n(reagent.core.class_names.cljs$core$IFn$_invoke$arity$1 \x3d (function (class$){\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$1(class$);\n}));\n\n(reagent.core.class_names.cljs$core$IFn$_invoke$arity$2 \x3d (function (class1,class2){\nreturn reagent.impl.util.class_names.cljs$core$IFn$_invoke$arity$2(class1,class2);\n}));\n\n(reagent.core.class_names.cljs$core$IFn$_invoke$arity$variadic \x3d (function (class1,class2,others){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(reagent.impl.util.class_names,class1,class2,others);\n}));\n\n/** @this {Function} */\n(reagent.core.class_names.cljs$lang$applyTo \x3d (function (seq23013){\nvar G__23014 \x3d cljs.core.first(seq23013);\nvar seq23013__$1 \x3d cljs.core.next(seq23013);\nvar G__23015 \x3d cljs.core.first(seq23013__$1);\nvar seq23013__$2 \x3d cljs.core.next(seq23013__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23014,G__23015,seq23013__$2);\n}));\n\n(reagent.core.class_names.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Utility function that merges some maps, handling `:class` and `:style`.\n * \n *   The :class value is always normalized (using `class-names`) even if no\n *   merging is done.\n */\nreagent.core.merge_props \x3d (function reagent$core$merge_props(var_args){\nvar G__23031 \x3d arguments.length;\nswitch (G__23031) {\ncase 0:\nreturn reagent.core.merge_props.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn reagent.core.merge_props.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn reagent.core.merge_props.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___23149 \x3d arguments.length;\nvar i__5770__auto___23150 \x3d (0);\nwhile(true){\nif((i__5770__auto___23150 \x3c len__5769__auto___23149)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___23150]));\n\nvar G__23152 \x3d (i__5770__auto___23150 + (1));\ni__5770__auto___23150 \x3d G__23152;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((2)),(0),null));\nreturn reagent.core.merge_props.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5795__auto__);\n\n}\n});\n\n(reagent.core.merge_props.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$0();\n}));\n\n(reagent.core.merge_props.cljs$core$IFn$_invoke$arity$1 \x3d (function (defaults){\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$1(defaults);\n}));\n\n(reagent.core.merge_props.cljs$core$IFn$_invoke$arity$2 \x3d (function (defaults,props){\nreturn reagent.impl.util.merge_props.cljs$core$IFn$_invoke$arity$2(defaults,props);\n}));\n\n(reagent.core.merge_props.cljs$core$IFn$_invoke$arity$variadic \x3d (function (defaults,props,others){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(reagent.impl.util.merge_props,defaults,props,others);\n}));\n\n/** @this {Function} */\n(reagent.core.merge_props.cljs$lang$applyTo \x3d (function (seq23028){\nvar G__23029 \x3d cljs.core.first(seq23028);\nvar seq23028__$1 \x3d cljs.core.next(seq23028);\nvar G__23030 \x3d cljs.core.first(seq23028__$1);\nvar seq23028__$2 \x3d cljs.core.next(seq23028__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23029,G__23030,seq23028__$2);\n}));\n\n(reagent.core.merge_props.cljs$lang$maxFixedArity \x3d (2));\n\n/**\n * Render dirty components immediately.\n * \n *   Note that this may not work in event handlers, since React.js does\n *   batching of updates there.\n */\nreagent.core.flush \x3d (function reagent$core$flush(){\nreturn reagent.impl.batching.flush();\n});\n/**\n * Like clojure.core/atom, except that it keeps track of derefs.\n *   Reagent components that derefs one of these are automatically\n *   re-rendered.\n */\nreagent.core.atom \x3d (function reagent$core$atom(var_args){\nvar G__23046 \x3d arguments.length;\nswitch (G__23046) {\ncase 1:\nreturn reagent.core.atom.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nvar args_arr__5794__auto__ \x3d [];\nvar len__5769__auto___23158 \x3d arguments.length;\nvar i__5770__auto___23159 \x3d (0);\nwhile(true){\nif((i__5770__auto___23159 \x3c len__5769__auto___23158)){\nargs_arr__5794__auto__.push((arguments[i__5770__auto___23159]));\n\nvar G__23160 \x3d (i__5770__auto___23159 + (1));\ni__5770__auto___23159 \x3d G__23160;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5795__auto__ \x3d (new cljs.core.IndexedSeq(args_arr__5794__auto__.slice((1)),(0),null));\nreturn reagent.core.atom.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5795__auto__);\n\n}\n});\n\n(reagent.core.atom.cljs$core$IFn$_invoke$arity$1 \x3d (function (x){\nreturn reagent.ratom.atom.cljs$core$IFn$_invoke$arity$1(x);\n}));\n\n(reagent.core.atom.cljs$core$IFn$_invoke$arity$variadic \x3d (function (x,rest){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(reagent.ratom.atom,x,rest);\n}));\n\n/** @this {Function} */\n(reagent.core.atom.cljs$lang$applyTo \x3d (function (seq23044){\nvar G__23045 \x3d cljs.core.first(seq23044);\nvar seq23044__$1 \x3d cljs.core.next(seq23044);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23045,seq23044__$1);\n}));\n\n(reagent.core.atom.cljs$lang$maxFixedArity \x3d (1));\n\n/**\n * Takes a function and optional arguments, and returns a derefable\n *   containing the output of that function. If the function derefs\n *   Reagent atoms (or track, etc), the value will be updated whenever\n *   the atom changes.\n * \n *   In other words, `@(track foo bar)` will produce the same result\n *   as `(foo bar)`, but foo will only be called again when the atoms it\n *   depends on changes, and will only trigger updates of components when\n *   its result changes.\n * \n *   track is lazy, i.e the function is only evaluated on deref.\n */\nreagent.core.track \x3d (function reagent$core$track(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___23162 \x3d arguments.length;\nvar i__5770__auto___23163 \x3d (0);\nwhile(true){\nif((i__5770__auto___23163 \x3c len__5769__auto___23162)){\nargs__5775__auto__.push((arguments[i__5770__auto___23163]));\n\nvar G__23165 \x3d (i__5770__auto___23163 + (1));\ni__5770__auto___23163 \x3d G__23165;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn reagent.core.track.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(reagent.core.track.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\x22Assert failed: (ifn? f)\x22));\n}\n\nreturn reagent.ratom.make_track(f,args);\n}));\n\n(reagent.core.track.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.core.track.cljs$lang$applyTo \x3d (function (seq23055){\nvar G__23057 \x3d cljs.core.first(seq23055);\nvar seq23055__$1 \x3d cljs.core.next(seq23055);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23057,seq23055__$1);\n}));\n\n/**\n * An eager version of track. The function passed is called\n *   immediately, and continues to be called when needed, until stopped\n *   with dispose!.\n */\nreagent.core.track_BANG_ \x3d (function reagent$core$track_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___23169 \x3d arguments.length;\nvar i__5770__auto___23170 \x3d (0);\nwhile(true){\nif((i__5770__auto___23170 \x3c len__5769__auto___23169)){\nargs__5775__auto__.push((arguments[i__5770__auto___23170]));\n\nvar G__23171 \x3d (i__5770__auto___23170 + (1));\ni__5770__auto___23170 \x3d G__23171;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn reagent.core.track_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(reagent.core.track_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\x22Assert failed: (ifn? f)\x22));\n}\n\nreturn reagent.ratom.make_track_BANG_(f,args);\n}));\n\n(reagent.core.track_BANG_.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.core.track_BANG_.cljs$lang$applyTo \x3d (function (seq23061){\nvar G__23062 \x3d cljs.core.first(seq23061);\nvar seq23061__$1 \x3d cljs.core.next(seq23061);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23062,seq23061__$1);\n}));\n\n/**\n * Stop the result of track! from updating.\n */\nreagent.core.dispose_BANG_ \x3d (function reagent$core$dispose_BANG_(x){\nreturn reagent.ratom.dispose_BANG_(x);\n});\n/**\n * Provide a combination of value and callback, that looks like an atom.\n * \n *   The first argument can be any value, that will be returned when the\n *   result is deref\x27ed.\n * \n *   The second argument should be a function, that is called with the\n *   optional extra arguments provided to wrap, and the new value of the\n *   resulting \x27atom\x27.\n * \n *   Use for example like this:\n * \n *   ```cljs\n *   (wrap (:foo @state)\n *      swap! state assoc :foo)\n *   ```\n * \n *   Probably useful only for passing to child components.\n */\nreagent.core.wrap \x3d (function reagent$core$wrap(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___23174 \x3d arguments.length;\nvar i__5770__auto___23175 \x3d (0);\nwhile(true){\nif((i__5770__auto___23175 \x3c len__5769__auto___23174)){\nargs__5775__auto__.push((arguments[i__5770__auto___23175]));\n\nvar G__23176 \x3d (i__5770__auto___23175 + (1));\ni__5770__auto___23175 \x3d G__23176;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn reagent.core.wrap.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(reagent.core.wrap.cljs$core$IFn$_invoke$arity$variadic \x3d (function (value,reset_fn,args){\nif(cljs.core.ifn_QMARK_(reset_fn)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22Expected something callable, not \x22,cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([reset_fn], 0))].join(\x27\x27),\x22\\n\x22,\x22(clojure.core/ifn? reset-fn)\x22].join(\x27\x27)));\n}\n\nreturn reagent.ratom.make_wrapper(value,reset_fn,args);\n}));\n\n(reagent.core.wrap.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(reagent.core.wrap.cljs$lang$applyTo \x3d (function (seq23081){\nvar G__23082 \x3d cljs.core.first(seq23081);\nvar seq23081__$1 \x3d cljs.core.next(seq23081);\nvar G__23083 \x3d cljs.core.first(seq23081__$1);\nvar seq23081__$2 \x3d cljs.core.next(seq23081__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23082,G__23083,seq23081__$2);\n}));\n\n/**\n * Provide a cursor into a Reagent atom.\n * \n *   Behaves like a Reagent atom but focuses updates and derefs to\n *   the specified path within the wrapped Reagent atom. e.g.,\n * \n *   ```cljs\n *   (let [c (cursor ra [:nested :content])]\n *  ... @c ;; equivalent to (get-in @ra [:nested :content])\n *  ... (reset! c 42) ;; equivalent to (swap! ra assoc-in [:nested :content] 42)\n *  ... (swap! c inc) ;; equivalence to (swap! ra update-in [:nested :content] inc)\n *  )\n *   ```\n * \n *   The first parameter can also be a function, that should look\n *   something like this:\n * \n *   ```cljs\n *   (defn set-get\n *  ([k] (get-in @state k))\n *  ([k v] (swap! state assoc-in k v)))\n *   ```\n * \n *   The function will be called with one argument \u2013 the path passed to\n *   cursor \u2013 when the cursor is deref\x27ed, and two arguments (path and\n *   new value) when the cursor is modified.\n * \n *   Given that set-get function, (and that state is a Reagent atom, or\n *   another cursor) these cursors are equivalent:\n *   `(cursor state [:foo])` and `(cursor set-get [:foo])`.\n * \n *   Note that a cursor is lazy: its value will not change until it is\n *   used. This may be noticed with add-watch.\n */\nreagent.core.cursor \x3d (function reagent$core$cursor(src,path){\nreturn reagent.ratom.cursor(src,path);\n});\n/**\n * Swaps the value of a to be `(apply f current-value-of-atom args)`.\n * \n *   rswap! works like swap!, except that recursive calls to rswap! on\n *   the same atom are allowed \u2013 and it always returns nil.\n */\nreagent.core.rswap_BANG_ \x3d (function reagent$core$rswap_BANG_(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___23177 \x3d arguments.length;\nvar i__5770__auto___23178 \x3d (0);\nwhile(true){\nif((i__5770__auto___23178 \x3c len__5769__auto___23177)){\nargs__5775__auto__.push((arguments[i__5770__auto___23178]));\n\nvar G__23179 \x3d (i__5770__auto___23178 + (1));\ni__5770__auto___23178 \x3d G__23179;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn reagent.core.rswap_BANG_.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(reagent.core.rswap_BANG_.cljs$core$IFn$_invoke$arity$variadic \x3d (function (a,f,args){\nif((((!((a \x3d\x3d null))))?(((((a.cljs$lang$protocol_mask$partition1$ \x26 (16384))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d a.cljs$core$IAtom$))))?true:(((!a.cljs$lang$protocol_mask$partition1$))?cljs.core.native_satisfies_QMARK_(cljs.core.IAtom,a):false)):cljs.core.native_satisfies_QMARK_(cljs.core.IAtom,a))){\n} else {\nthrow (new Error(\x22Assert failed: (satisfies? IAtom a)\x22));\n}\n\nif(cljs.core.ifn_QMARK_(f)){\n} else {\nthrow (new Error(\x22Assert failed: (ifn? f)\x22));\n}\n\nif(cljs.core.truth_(a.rswapping)){\n(function (){var or__5045__auto__ \x3d a.rswapfs;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (a.rswapfs \x3d []);\n}\n})().push((function (p1__23088_SHARP_){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,p1__23088_SHARP_,args);\n}));\n} else {\n(a.rswapping \x3d true);\n\ntry{cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,(function (state){\nvar s \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,state,args);\nwhile(true){\nvar temp__5806__auto__ \x3d (function (){var G__23103 \x3d a;\nvar G__23103__$1 \x3d (((G__23103 \x3d\x3d null))?null:G__23103.rswapfs);\nif((G__23103__$1 \x3d\x3d null)){\nreturn null;\n} else {\nreturn G__23103__$1.shift();\n}\n})();\nif((temp__5806__auto__ \x3d\x3d null)){\nreturn s;\n} else {\nvar sf \x3d temp__5806__auto__;\nvar G__23184 \x3d (sf.cljs$core$IFn$_invoke$arity$1 ? sf.cljs$core$IFn$_invoke$arity$1(s) : sf.call(null,s));\ns \x3d G__23184;\ncontinue;\n}\nbreak;\n}\n}));\n}finally {(a.rswapping \x3d false);\n}}\n\nreturn null;\n}));\n\n(reagent.core.rswap_BANG_.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(reagent.core.rswap_BANG_.cljs$lang$applyTo \x3d (function (seq23095){\nvar G__23097 \x3d cljs.core.first(seq23095);\nvar seq23095__$1 \x3d cljs.core.next(seq23095);\nvar G__23098 \x3d cljs.core.first(seq23095__$1);\nvar seq23095__$2 \x3d cljs.core.next(seq23095__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23097,G__23098,seq23095__$2);\n}));\n\n/**\n * Run f using requestAnimationFrame or equivalent.\n * \n *   f will be called just before components are rendered.\n */\nreagent.core.next_tick \x3d (function reagent$core$next_tick(f){\nreturn reagent.impl.batching.do_before_flush(f);\n});\n/**\n * Run f using requestAnimationFrame or equivalent.\n * \n *   f will be called just after any queued renders in the next animation\n *   frame (and even if no renders actually occur).\n */\nreagent.core.after_render \x3d (function reagent$core$after_render(f){\nreturn reagent.impl.batching.do_after_render(f);\n});\n/**\n * Works just like clojure.core/partial, but the result can be compared with \x3d\n */\nreagent.core.partial \x3d (function reagent$core$partial(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___23190 \x3d arguments.length;\nvar i__5770__auto___23191 \x3d (0);\nwhile(true){\nif((i__5770__auto___23191 \x3c len__5769__auto___23190)){\nargs__5775__auto__.push((arguments[i__5770__auto___23191]));\n\nvar G__23192 \x3d (i__5770__auto___23191 + (1));\ni__5770__auto___23191 \x3d G__23192;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn reagent.core.partial.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(reagent.core.partial.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nreturn reagent.impl.util.make_partial_fn(f,args);\n}));\n\n(reagent.core.partial.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(reagent.core.partial.cljs$lang$applyTo \x3d (function (seq23114){\nvar G__23115 \x3d cljs.core.first(seq23114);\nvar seq23114__$1 \x3d cljs.core.next(seq23114);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__23115,seq23114__$1);\n}));\n\n/**\n * Creates Compiler object with given `opts`,\n *   this can be passed to `render`, `as-element` and other functions to control\n *   how they turn the Reagent-style Hiccup into React components and elements.\n */\nreagent.core.create_compiler \x3d (function reagent$core$create_compiler(opts){\nreturn reagent.impl.template.create_compiler(opts);\n});\n/**\n * Globally sets the Compiler object used by `render`, `as-element` and other\n *   calls by default, when no `compiler` parameter is provided.\n * \n *   Use `nil` value to restore the original default compiler.\n */\nreagent.core.set_default_compiler_BANG_ \x3d (function reagent$core$set_default_compiler_BANG_(compiler){\nreturn reagent.impl.template.set_default_compiler_BANG_((((compiler \x3d\x3d null))?reagent.impl.template.default_compiler_STAR_:compiler));\n});\nreagent.core.render \x3d (function reagent$core$render(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___23193 \x3d arguments.length;\nvar i__5770__auto___23194 \x3d (0);\nwhile(true){\nif((i__5770__auto___23194 \x3c len__5769__auto___23193)){\nargs__5775__auto__.push((arguments[i__5770__auto___23194]));\n\nvar G__23196 \x3d (i__5770__auto___23194 + (1));\ni__5770__auto___23194 \x3d G__23196;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn reagent.core.render.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(reagent.core.render.cljs$core$IFn$_invoke$arity$variadic \x3d (function (_){\nthrow (new Error(\x22Reagent.core/render function was moved to reagent.dom namespace in Reagent v1.0.\x22));\n}));\n\n(reagent.core.render.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(reagent.core.render.cljs$lang$applyTo \x3d (function (seq23125){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq23125));\n}));\n\n");
SHADOW_ENV.evalLoad("re_frame.interop.js", true , "goog.provide(\x27re_frame.interop\x27);\nre_frame.interop.on_load \x3d (function re_frame$interop$on_load(listener){\ntry{return goog.events.listen(self,\x22load\x22,listener);\n}catch (e23138){var _ \x3d e23138;\nreturn null;\n}});\nre_frame.interop.next_tick \x3d goog.async.nextTick;\nre_frame.interop.empty_queue \x3d cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentQueue.EMPTY,cljs.core.PersistentVector.EMPTY);\nre_frame.interop.after_render \x3d reagent.core.after_render;\n/**\n * @define {boolean}\n */\nre_frame.interop.debug_enabled_QMARK_ \x3d goog.DEBUG;\nre_frame.interop.ratom \x3d (function re_frame$interop$ratom(x){\nreturn reagent.core.atom.cljs$core$IFn$_invoke$arity$1(x);\n});\nre_frame.interop.ratom_QMARK_ \x3d (function re_frame$interop$ratom_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif(((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.reagent$ratom$IReactiveAtom$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition$)){\nreturn cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(reagent.ratom.IReactiveAtom,x);\n}\n});\nre_frame.interop.deref_QMARK_ \x3d (function re_frame$interop$deref_QMARK_(x){\nif((!((x \x3d\x3d null)))){\nif((((x.cljs$lang$protocol_mask$partition0$ \x26 (32768))) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d x.cljs$core$IDeref$)))){\nreturn true;\n} else {\nif((!x.cljs$lang$protocol_mask$partition0$)){\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,x);\n} else {\nreturn false;\n}\n}\n} else {\nreturn cljs.core.native_satisfies_QMARK_(cljs.core.IDeref,x);\n}\n});\nre_frame.interop.make_reaction \x3d (function re_frame$interop$make_reaction(f){\nreturn reagent.ratom.make_reaction(f);\n});\nre_frame.interop.add_on_dispose_BANG_ \x3d (function re_frame$interop$add_on_dispose_BANG_(a_ratom,f){\nreturn reagent.ratom.add_on_dispose_BANG_(a_ratom,f);\n});\nre_frame.interop.dispose_BANG_ \x3d (function re_frame$interop$dispose_BANG_(a_ratom){\nreturn reagent.ratom.dispose_BANG_(a_ratom);\n});\nre_frame.interop.set_timeout_BANG_ \x3d (function re_frame$interop$set_timeout_BANG_(f,ms){\nreturn setTimeout(f,ms);\n});\nre_frame.interop.now \x3d (function re_frame$interop$now(){\nif((((typeof performance !\x3d\x3d \x27undefined\x27)) \x26\x26 ((typeof performance !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof performance.now !\x3d\x3d \x27undefined\x27)))){\nreturn performance.now();\n} else {\nreturn Date.now();\n}\n});\n/**\n * Produces an id for reactive Reagent values\n *   e.g. reactions, ratoms, cursors.\n */\nre_frame.interop.reagent_id \x3d (function re_frame$interop$reagent_id(reactive_val){\nif((((!((reactive_val \x3d\x3d null))))?((((false) || ((cljs.core.PROTOCOL_SENTINEL \x3d\x3d\x3d reactive_val.reagent$ratom$IReactiveAtom$))))?true:false):false)){\nreturn [(function (){var pred__23187 \x3d cljs.core.instance_QMARK_;\nvar expr__23188 \x3d reactive_val;\nif(cljs.core.truth_((pred__23187.cljs$core$IFn$_invoke$arity$2 ? pred__23187.cljs$core$IFn$_invoke$arity$2(reagent.ratom.RAtom,expr__23188) : pred__23187.call(null,reagent.ratom.RAtom,expr__23188)))){\nreturn \x22ra\x22;\n} else {\nif(cljs.core.truth_((pred__23187.cljs$core$IFn$_invoke$arity$2 ? pred__23187.cljs$core$IFn$_invoke$arity$2(reagent.ratom.RCursor,expr__23188) : pred__23187.call(null,reagent.ratom.RCursor,expr__23188)))){\nreturn \x22rc\x22;\n} else {\nif(cljs.core.truth_((pred__23187.cljs$core$IFn$_invoke$arity$2 ? pred__23187.cljs$core$IFn$_invoke$arity$2(reagent.ratom.Reaction,expr__23188) : pred__23187.call(null,reagent.ratom.Reaction,expr__23188)))){\nreturn \x22rx\x22;\n} else {\nif(cljs.core.truth_((pred__23187.cljs$core$IFn$_invoke$arity$2 ? pred__23187.cljs$core$IFn$_invoke$arity$2(reagent.ratom.Track,expr__23188) : pred__23187.call(null,reagent.ratom.Track,expr__23188)))){\nreturn \x22tr\x22;\n} else {\nreturn \x22other\x22;\n}\n}\n}\n}\n})(),cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.hash(reactive_val))].join(\x27\x27);\n} else {\nreturn null;\n}\n});\nre_frame.interop.reactive_QMARK_ \x3d (function re_frame$interop$reactive_QMARK_(){\nreturn reagent.ratom.reactive_QMARK_();\n});\n");
SHADOW_ENV.evalLoad("re_frame.db.js", true , "goog.provide(\x27re_frame.db\x27);\nre_frame.db.app_db \x3d re_frame.interop.ratom(cljs.core.PersistentArrayMap.EMPTY);\n");
SHADOW_ENV.evalLoad("re_frame.loggers.js", true , "goog.provide(\x27re_frame.loggers\x27);\n/**\n * Holds the current set of logging functions.\n * By default, re-frame uses the functions provided by js/console.\n * Use `set-loggers!` to change these defaults\n *   \n */\nre_frame.loggers.loggers \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22log\x22,\x22log\x22,-1595516004),console.log.bind(console),new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),console.warn.bind(console),new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),console.error.bind(console),new cljs.core.Keyword(null,\x22debug\x22,\x22debug\x22,-1608172596),console.debug.bind(console),new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),(cljs.core.truth_(console.group)?console.group.bind(console):console.log.bind(console)),new cljs.core.Keyword(null,\x22groupEnd\x22,\x22groupEnd\x22,-337721382),(cljs.core.truth_(console.groupEnd)?console.groupEnd.bind(console):(function (){\nreturn cljs.core.List.EMPTY;\n}))], null));\nre_frame.loggers.console \x3d (function re_frame$loggers$console(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___22520 \x3d arguments.length;\nvar i__5770__auto___22521 \x3d (0);\nwhile(true){\nif((i__5770__auto___22521 \x3c len__5769__auto___22520)){\nargs__5775__auto__.push((arguments[i__5770__auto___22521]));\n\nvar G__22523 \x3d (i__5770__auto___22521 + (1));\ni__5770__auto___22521 \x3d G__22523;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic \x3d (function (level,args){\nif(cljs.core.contains_QMARK_(cljs.core.deref(re_frame.loggers.loggers),level)){\n} else {\nthrow (new Error([\x22Assert failed: \x22,[\x22re-frame: log called with unknown level: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(level)].join(\x27\x27),\x22\\n\x22,\x22(contains? (clojure.core/deref loggers) level)\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2((function (){var G__22484 \x3d cljs.core.deref(re_frame.loggers.loggers);\nreturn (level.cljs$core$IFn$_invoke$arity$1 ? level.cljs$core$IFn$_invoke$arity$1(G__22484) : level.call(null,G__22484));\n})(),args);\n}));\n\n(re_frame.loggers.console.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(re_frame.loggers.console.cljs$lang$applyTo \x3d (function (seq22478){\nvar G__22479 \x3d cljs.core.first(seq22478);\nvar seq22478__$1 \x3d cljs.core.next(seq22478);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22479,seq22478__$1);\n}));\n\nre_frame.loggers.set_loggers_BANG_ \x3d (function re_frame$loggers$set_loggers_BANG_(new_loggers){\nif(cljs.core.empty_QMARK_(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(new_loggers)),cljs.core.set(cljs.core.keys(cljs.core.deref(re_frame.loggers.loggers)))))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,\x22Unknown keys in new-loggers\x22,\x22\\n\x22,\x22(empty? (difference (set (keys new-loggers)) (-\x3e (clojure.core/deref loggers) keys set)))\x22].join(\x27\x27)));\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.loggers.loggers,cljs.core.merge,new_loggers);\n});\n/**\n * Get the current logging functions used by re-frame.\n */\nre_frame.loggers.get_loggers \x3d (function re_frame$loggers$get_loggers(){\nreturn cljs.core.deref(re_frame.loggers.loggers);\n});\n");
SHADOW_ENV.evalLoad("re_frame.utils.js", true , "goog.provide(\x27re_frame.utils\x27);\n/**\n * Dissociates an entry from a nested associative structure returning a new\n *   nested structure. keys is a sequence of keys. Any empty maps that result\n *   will not be present in the new structure.\n *   The key thing is that \x27m\x27 remains identical? to itself if the path was never present\n */\nre_frame.utils.dissoc_in \x3d (function re_frame$utils$dissoc_in(m,p__22575){\nvar vec__22576 \x3d p__22575;\nvar seq__22577 \x3d cljs.core.seq(vec__22576);\nvar first__22578 \x3d cljs.core.first(seq__22577);\nvar seq__22577__$1 \x3d cljs.core.next(seq__22577);\nvar k \x3d first__22578;\nvar ks \x3d seq__22577__$1;\nvar keys \x3d vec__22576;\nif(ks){\nvar temp__5802__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar nextmap \x3d temp__5802__auto__;\nvar newmap \x3d (re_frame.utils.dissoc_in.cljs$core$IFn$_invoke$arity$2 ? re_frame.utils.dissoc_in.cljs$core$IFn$_invoke$arity$2(nextmap,ks) : re_frame.utils.dissoc_in.call(null,nextmap,ks));\nif(cljs.core.seq(newmap)){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,newmap);\n} else {\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,k);\n}\n} else {\nreturn m;\n}\n} else {\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,k);\n}\n});\nre_frame.utils.first_in_vector \x3d (function re_frame$utils$first_in_vector(v){\nif(cljs.core.vector_QMARK_(v)){\nreturn cljs.core.first(v);\n} else {\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: expected a vector, but got:\x22,v], 0));\n}\n});\n/**\n * Like apply, but f takes keyword arguments and the last argument is\n *   not a seq but a map with the arguments for f\n */\nre_frame.utils.apply_kw \x3d (function re_frame$utils$apply_kw(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___22600 \x3d arguments.length;\nvar i__5770__auto___22601 \x3d (0);\nwhile(true){\nif((i__5770__auto___22601 \x3c len__5769__auto___22600)){\nargs__5775__auto__.push((arguments[i__5770__auto___22601]));\n\nvar G__22602 \x3d (i__5770__auto___22601 + (1));\ni__5770__auto___22601 \x3d G__22602;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn re_frame.utils.apply_kw.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(re_frame.utils.apply_kw.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,args){\nif(cljs.core.map_QMARK_(cljs.core.last(args))){\n} else {\nthrow (new Error(\x22Assert failed: (map? (last args))\x22));\n}\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.concat,cljs.core.butlast(args),cljs.core.last(args)));\n}));\n\n(re_frame.utils.apply_kw.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(re_frame.utils.apply_kw.cljs$lang$applyTo \x3d (function (seq22591){\nvar G__22592 \x3d cljs.core.first(seq22591);\nvar seq22591__$1 \x3d cljs.core.next(seq22591);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__22592,seq22591__$1);\n}));\n\n");
SHADOW_ENV.evalLoad("re_frame.settings.js", true , "goog.provide(\x27re_frame.settings\x27);\nre_frame.settings.defaults \x3d new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22loaded?\x22,\x22loaded?\x22,-1108015206),false,new cljs.core.Keyword(null,\x22global-interceptors\x22,\x22global-interceptors\x22,-1995759472),re_frame.interop.empty_queue], null);\nre_frame.settings.store \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(re_frame.settings.defaults);\nre_frame.interop.on_load((function (){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(re_frame.settings.store,(function (m){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,new cljs.core.Keyword(null,\x22loaded?\x22,\x22loaded?\x22,-1108015206),true);\n}));\n}));\nre_frame.settings.loaded_QMARK_ \x3d (function re_frame$settings$loaded_QMARK_(){\nreturn new cljs.core.Keyword(null,\x22loaded?\x22,\x22loaded?\x22,-1108015206).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frame.settings.store));\n});\nre_frame.settings._replace_global_interceptor \x3d (function re_frame$settings$_replace_global_interceptor(global_interceptors,interceptor){\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,existing_interceptor){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092).cljs$core$IFn$_invoke$arity$1(interceptor),new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092).cljs$core$IFn$_invoke$arity$1(existing_interceptor))){\nif(re_frame.interop.debug_enabled_QMARK_){\nif(cljs.core.not(re_frame.settings.loaded_QMARK_())){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: replacing duplicate global interceptor id: \x22,new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092).cljs$core$IFn$_invoke$arity$1(interceptor)], 0));\n} else {\n}\n} else {\n}\n\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,interceptor);\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,existing_interceptor);\n}\n}),re_frame.interop.empty_queue,global_interceptors);\n});\nre_frame.settings.reg_global_interceptor \x3d (function re_frame$settings$reg_global_interceptor(p__23988){\nvar map__23989 \x3d p__23988;\nvar map__23989__$1 \x3d cljs.core.__destructure_map(map__23989);\nvar interceptor \x3d map__23989__$1;\nvar id \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23989__$1,new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092));\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frame.settings.store,cljs.core.update,new cljs.core.Keyword(null,\x22global-interceptors\x22,\x22global-interceptors\x22,-1995759472),(function (global_interceptors){\nvar ids \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),global_interceptors);\nif(cljs.core.truth_(cljs.core.some(cljs.core.PersistentHashSet.createAsIfByAssoc([id]),ids))){\nreturn re_frame.settings._replace_global_interceptor(global_interceptors,interceptor);\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(global_interceptors,interceptor);\n}\n}));\n});\nre_frame.settings.get_global_interceptors \x3d (function re_frame$settings$get_global_interceptors(){\nreturn new cljs.core.Keyword(null,\x22global-interceptors\x22,\x22global-interceptors\x22,-1995759472).cljs$core$IFn$_invoke$arity$1(cljs.core.deref(re_frame.settings.store));\n});\nre_frame.settings.clear_global_interceptors \x3d (function re_frame$settings$clear_global_interceptors(var_args){\nvar G__23998 \x3d arguments.length;\nswitch (G__23998) {\ncase 0:\nreturn re_frame.settings.clear_global_interceptors.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn re_frame.settings.clear_global_interceptors.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.settings.clear_global_interceptors.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frame.settings.store,cljs.core.assoc,new cljs.core.Keyword(null,\x22global-interceptors\x22,\x22global-interceptors\x22,-1995759472),re_frame.interop.empty_queue);\n}));\n\n(re_frame.settings.clear_global_interceptors.cljs$core$IFn$_invoke$arity$1 \x3d (function (id){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frame.settings.store,cljs.core.update,new cljs.core.Keyword(null,\x22global-interceptors\x22,\x22global-interceptors\x22,-1995759472),(function (global_interceptors){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(re_frame.interop.empty_queue,cljs.core.remove.cljs$core$IFn$_invoke$arity$2((function (p1__23992_SHARP_){\nreturn cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(id,new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092).cljs$core$IFn$_invoke$arity$1(p1__23992_SHARP_));\n}),global_interceptors));\n}));\n}));\n\n(re_frame.settings.clear_global_interceptors.cljs$lang$maxFixedArity \x3d 1);\n\n");
SHADOW_ENV.evalLoad("re_frame.registrar.js", true , "goog.provide(\x27re_frame.registrar\x27);\nre_frame.registrar.kinds \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22sub\x22,\x22sub\x22,-2093760025),null,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442),null,new cljs.core.Keyword(null,\x22cofx\x22,\x22cofx\x22,2013202907),null,new cljs.core.Keyword(null,\x22fx\x22,\x22fx\x22,-1237829572),null], null), null);\nre_frame.registrar.kind__GT_id__GT_handler \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nre_frame.registrar.get_handler \x3d (function re_frame$registrar$get_handler(var_args){\nvar G__24053 \x3d arguments.length;\nswitch (G__24053) {\ncase 1:\nreturn re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$1 \x3d (function (kind){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frame.registrar.kind__GT_id__GT_handler),kind);\n}));\n\n(re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2 \x3d (function (kind,id){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frame.registrar.kind__GT_id__GT_handler),kind),id);\n}));\n\n(re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3 \x3d (function (kind,id,required_QMARK_){\nvar handler \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(kind,id);\nif(re_frame.interop.debug_enabled_QMARK_){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d required_QMARK_;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (handler \x3d\x3d null);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: no\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(kind),\x22handler registered for:\x22,id], 0));\n} else {\n}\n} else {\n}\n\nreturn handler;\n}));\n\n(re_frame.registrar.get_handler.cljs$lang$maxFixedArity \x3d 3);\n\nre_frame.registrar.register_handler \x3d (function re_frame$registrar$register_handler(kind,id,handler_fn){\nif(re_frame.interop.debug_enabled_QMARK_){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d cljs.core.not(re_frame.settings.loaded_QMARK_());\nif(and__5043__auto__){\nreturn re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(kind,id,false);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: overwriting\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(kind),\x22handler for:\x22,id], 0));\n} else {\n}\n} else {\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frame.registrar.kind__GT_id__GT_handler,cljs.core.assoc_in,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [kind,id], null),handler_fn);\n\nreturn handler_fn;\n});\nre_frame.registrar.clear_handlers \x3d (function re_frame$registrar$clear_handlers(var_args){\nvar G__24060 \x3d arguments.length;\nswitch (G__24060) {\ncase 0:\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn cljs.core.reset_BANG_(re_frame.registrar.kind__GT_id__GT_handler,cljs.core.PersistentArrayMap.EMPTY);\n}));\n\n(re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1 \x3d (function (kind){\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(kind) : re_frame.registrar.kinds.call(null,kind)))){\n} else {\nthrow (new Error(\x22Assert failed: (kinds kind)\x22));\n}\n\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.registrar.kind__GT_id__GT_handler,cljs.core.dissoc,kind);\n}));\n\n(re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$2 \x3d (function (kind,id){\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(kind) : re_frame.registrar.kinds.call(null,kind)))){\n} else {\nthrow (new Error(\x22Assert failed: (kinds kind)\x22));\n}\n\nif(cljs.core.truth_(re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(kind,id))){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$variadic(re_frame.registrar.kind__GT_id__GT_handler,cljs.core.update_in,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [kind], null),cljs.core.dissoc,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([id], 0));\n} else {\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: can\x27t clear\x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(kind),\x22handler for\x22,[cljs.core.str.cljs$core$IFn$_invoke$arity$1(id),\x22. Handler not found.\x22].join(\x27\x27)], 0));\n}\n}));\n\n(re_frame.registrar.clear_handlers.cljs$lang$maxFixedArity \x3d 2);\n\n");
SHADOW_ENV.evalLoad("re_frame.trace.js", true , "goog.provide(\x27re_frame.trace\x27);\nre_frame.trace.id \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\nre_frame.trace._STAR_current_trace_STAR_ \x3d null;\nre_frame.trace.reset_tracing_BANG_ \x3d (function re_frame$trace$reset_tracing_BANG_(){\nreturn cljs.core.reset_BANG_(re_frame.trace.id,(0));\n});\n/**\n * @define {boolean}\n */\nre_frame.trace.trace_enabled_QMARK_ \x3d goog.define(\x22re_frame.trace.trace_enabled_QMARK_\x22,false);\n/**\n * See https://groups.google.com/d/msg/clojurescript/jk43kmYiMhA/IHglVr_TPdgJ for more details\n */\nre_frame.trace.is_trace_enabled_QMARK_ \x3d (function re_frame$trace$is_trace_enabled_QMARK_(){\nreturn re_frame.trace.trace_enabled_QMARK_;\n});\nre_frame.trace.trace_cbs \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\nif((typeof re_frame !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof re_frame.trace !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof re_frame.trace.traces !\x3d\x3d \x27undefined\x27)){\n} else {\nre_frame.trace.traces \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentVector.EMPTY);\n}\nif((typeof re_frame !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof re_frame.trace !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof re_frame.trace.next_delivery !\x3d\x3d \x27undefined\x27)){\n} else {\nre_frame.trace.next_delivery \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1((0));\n}\n/**\n * Registers a tracing callback function which will receive a collection of one or more traces.\n *   Will replace an existing callback function if it shares the same key.\n */\nre_frame.trace.register_trace_cb \x3d (function re_frame$trace$register_trace_cb(key,f){\nif(re_frame.trace.trace_enabled_QMARK_){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(re_frame.trace.trace_cbs,cljs.core.assoc,key,f);\n} else {\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Tracing is not enabled. Please set {\\\x22re_frame.trace.trace_enabled_QMARK_\\\x22 true} in :closure-defines. See: https://github.com/day8/re-frame-10x#installation.\x22], 0));\n}\n});\nre_frame.trace.remove_trace_cb \x3d (function re_frame$trace$remove_trace_cb(key){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.trace_cbs,cljs.core.dissoc,key);\n\nreturn null;\n});\nre_frame.trace.next_id \x3d (function re_frame$trace$next_id(){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(re_frame.trace.id,cljs.core.inc);\n});\nre_frame.trace.start_trace \x3d (function re_frame$trace$start_trace(p__23990){\nvar map__23991 \x3d p__23990;\nvar map__23991__$1 \x3d cljs.core.__destructure_map(map__23991);\nvar operation \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23991__$1,new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310));\nvar op_type \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23991__$1,new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668));\nvar tags \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23991__$1,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977));\nvar child_of \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__23991__$1,new cljs.core.Keyword(null,\x22child-of\x22,\x22child-of\x22,-903376662));\nreturn new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),re_frame.trace.next_id(),new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),operation,new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),op_type,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),tags,new cljs.core.Keyword(null,\x22child-of\x22,\x22child-of\x22,-903376662),(function (){var or__5045__auto__ \x3d child_of;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_);\n}\n})(),new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981),re_frame.interop.now()], null);\n});\nre_frame.trace.debounce_time \x3d (50);\nre_frame.trace.debounce \x3d (function re_frame$trace$debounce(f,interval){\nreturn goog.functions.debounce(f,interval);\n});\nre_frame.trace.schedule_debounce \x3d re_frame.trace.debounce((function re_frame$trace$tracing_cb_debounced(){\nvar seq__23994_24023 \x3d cljs.core.seq(cljs.core.deref(re_frame.trace.trace_cbs));\nvar chunk__23995_24024 \x3d null;\nvar count__23996_24025 \x3d (0);\nvar i__23997_24026 \x3d (0);\nwhile(true){\nif((i__23997_24026 \x3c count__23996_24025)){\nvar vec__24009_24027 \x3d chunk__23995_24024.cljs$core$IIndexed$_nth$arity$2(null,i__23997_24026);\nvar k_24028 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24009_24027,(0),null);\nvar cb_24029 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24009_24027,(1),null);\ntry{var G__24013_24030 \x3d cljs.core.deref(re_frame.trace.traces);\n(cb_24029.cljs$core$IFn$_invoke$arity$1 ? cb_24029.cljs$core$IFn$_invoke$arity$1(G__24013_24030) : cb_24029.call(null,G__24013_24030));\n}catch (e24012){var e_24031 \x3d e24012;\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Error thrown from trace cb\x22,k_24028,\x22while storing\x22,cljs.core.deref(re_frame.trace.traces),e_24031], 0));\n}\n\nvar G__24032 \x3d seq__23994_24023;\nvar G__24033 \x3d chunk__23995_24024;\nvar G__24034 \x3d count__23996_24025;\nvar G__24035 \x3d (i__23997_24026 + (1));\nseq__23994_24023 \x3d G__24032;\nchunk__23995_24024 \x3d G__24033;\ncount__23996_24025 \x3d G__24034;\ni__23997_24026 \x3d G__24035;\ncontinue;\n} else {\nvar temp__5804__auto___24036 \x3d cljs.core.seq(seq__23994_24023);\nif(temp__5804__auto___24036){\nvar seq__23994_24037__$1 \x3d temp__5804__auto___24036;\nif(cljs.core.chunked_seq_QMARK_(seq__23994_24037__$1)){\nvar c__5568__auto___24038 \x3d cljs.core.chunk_first(seq__23994_24037__$1);\nvar G__24039 \x3d cljs.core.chunk_rest(seq__23994_24037__$1);\nvar G__24040 \x3d c__5568__auto___24038;\nvar G__24041 \x3d cljs.core.count(c__5568__auto___24038);\nvar G__24042 \x3d (0);\nseq__23994_24023 \x3d G__24039;\nchunk__23995_24024 \x3d G__24040;\ncount__23996_24025 \x3d G__24041;\ni__23997_24026 \x3d G__24042;\ncontinue;\n} else {\nvar vec__24014_24043 \x3d cljs.core.first(seq__23994_24037__$1);\nvar k_24044 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24014_24043,(0),null);\nvar cb_24045 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24014_24043,(1),null);\ntry{var G__24018_24046 \x3d cljs.core.deref(re_frame.trace.traces);\n(cb_24045.cljs$core$IFn$_invoke$arity$1 ? cb_24045.cljs$core$IFn$_invoke$arity$1(G__24018_24046) : cb_24045.call(null,G__24018_24046));\n}catch (e24017){var e_24047 \x3d e24017;\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Error thrown from trace cb\x22,k_24044,\x22while storing\x22,cljs.core.deref(re_frame.trace.traces),e_24047], 0));\n}\n\nvar G__24048 \x3d cljs.core.next(seq__23994_24037__$1);\nvar G__24049 \x3d null;\nvar G__24050 \x3d (0);\nvar G__24051 \x3d (0);\nseq__23994_24023 \x3d G__24048;\nchunk__23995_24024 \x3d G__24049;\ncount__23996_24025 \x3d G__24050;\ni__23997_24026 \x3d G__24051;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn cljs.core.reset_BANG_(re_frame.trace.traces,cljs.core.PersistentVector.EMPTY);\n}),re_frame.trace.debounce_time);\nre_frame.trace.run_tracing_callbacks_BANG_ \x3d (function re_frame$trace$run_tracing_callbacks_BANG_(now){\nif(((cljs.core.deref(re_frame.trace.next_delivery) - (25)) \x3c now)){\n(re_frame.trace.schedule_debounce.cljs$core$IFn$_invoke$arity$0 ? re_frame.trace.schedule_debounce.cljs$core$IFn$_invoke$arity$0() : re_frame.trace.schedule_debounce.call(null));\n\nreturn cljs.core.reset_BANG_(re_frame.trace.next_delivery,(now + re_frame.trace.debounce_time));\n} else {\nreturn null;\n}\n});\n");
SHADOW_ENV.evalLoad("re_frame.interceptor.js", true , "goog.provide(\x27re_frame.interceptor\x27);\nre_frame.interceptor.mandatory_interceptor_keys \x3d new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),null,new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),null,new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),null], null), null);\nre_frame.interceptor.interceptor_QMARK_ \x3d (function re_frame$interceptor$interceptor_QMARK_(m){\nreturn ((cljs.core.map_QMARK_(m)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(re_frame.interceptor.mandatory_interceptor_keys,cljs.core.set(cljs.core.keys(m)))));\n});\nre_frame.interceptor.__GT_interceptor \x3d (function re_frame$interceptor$__GT_interceptor(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24082 \x3d arguments.length;\nvar i__5770__auto___24083 \x3d (0);\nwhile(true){\nif((i__5770__auto___24083 \x3c len__5769__auto___24082)){\nargs__5775__auto__.push((arguments[i__5770__auto___24083]));\n\nvar G__24084 \x3d (i__5770__auto___24083 + (1));\ni__5770__auto___24083 \x3d G__24084;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic \x3d (function (p__24055){\nvar map__24056 \x3d p__24055;\nvar map__24056__$1 \x3d cljs.core.__destructure_map(map__24056);\nvar m \x3d map__24056__$1;\nvar id \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24056__$1,new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092));\nvar before \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24056__$1,new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388));\nvar after \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24056__$1,new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914));\nif(re_frame.interop.debug_enabled_QMARK_){\nvar temp__5802__auto___24085 \x3d cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(cljs.core.set(cljs.core.keys(m)),re_frame.interceptor.mandatory_interceptor_keys));\nif(temp__5802__auto___24085){\nvar unknown_keys_24086 \x3d temp__5802__auto___24085;\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: -\x3einterceptor\x22,m,\x22has unknown keys:\x22,unknown_keys_24086], 0));\n} else {\n}\n} else {\n}\n\nreturn new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),(function (){var or__5045__auto__ \x3d id;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn new cljs.core.Keyword(null,\x22unnamed\x22,\x22unnamed\x22,-26044928);\n}\n})(),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),before,new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),after], null);\n}));\n\n(re_frame.interceptor.__GT_interceptor.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(re_frame.interceptor.__GT_interceptor.cljs$lang$applyTo \x3d (function (seq24054){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24054));\n}));\n\nre_frame.interceptor.get_effect \x3d (function re_frame$interceptor$get_effect(var_args){\nvar G__24058 \x3d arguments.length;\nswitch (G__24058) {\ncase 1:\nreturn re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1 \x3d (function (context){\nreturn new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292).cljs$core$IFn$_invoke$arity$1(context);\n}));\n\n(re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2 \x3d (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),key], null));\n}));\n\n(re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3 \x3d (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),key], null),not_found);\n}));\n\n(re_frame.interceptor.get_effect.cljs$lang$maxFixedArity \x3d 3);\n\nre_frame.interceptor.assoc_effect \x3d (function re_frame$interceptor$assoc_effect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),key], null),value);\n});\nre_frame.interceptor.update_effect \x3d (function re_frame$interceptor$update_effect(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24088 \x3d arguments.length;\nvar i__5770__auto___24089 \x3d (0);\nwhile(true){\nif((i__5770__auto___24089 \x3c len__5769__auto___24088)){\nargs__5775__auto__.push((arguments[i__5770__auto___24089]));\n\nvar G__24090 \x3d (i__5770__auto___24089 + (1));\ni__5770__auto___24089 \x3d G__24090;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((3) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn re_frame.interceptor.update_effect.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(re_frame.interceptor.update_effect.cljs$core$IFn$_invoke$arity$variadic \x3d (function (context,key,f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in,context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),key], null),f,args);\n}));\n\n(re_frame.interceptor.update_effect.cljs$lang$maxFixedArity \x3d (3));\n\n/** @this {Function} */\n(re_frame.interceptor.update_effect.cljs$lang$applyTo \x3d (function (seq24061){\nvar G__24062 \x3d cljs.core.first(seq24061);\nvar seq24061__$1 \x3d cljs.core.next(seq24061);\nvar G__24063 \x3d cljs.core.first(seq24061__$1);\nvar seq24061__$2 \x3d cljs.core.next(seq24061__$1);\nvar G__24064 \x3d cljs.core.first(seq24061__$2);\nvar seq24061__$3 \x3d cljs.core.next(seq24061__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24062,G__24063,G__24064,seq24061__$3);\n}));\n\nre_frame.interceptor.get_coeffect \x3d (function re_frame$interceptor$get_coeffect(var_args){\nvar G__24066 \x3d arguments.length;\nswitch (G__24066) {\ncase 1:\nreturn re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1 \x3d (function (context){\nreturn new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985).cljs$core$IFn$_invoke$arity$1(context);\n}));\n\n(re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2 \x3d (function (context,key){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),key], null));\n}));\n\n(re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3 \x3d (function (context,key,not_found){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),key], null),not_found);\n}));\n\n(re_frame.interceptor.get_coeffect.cljs$lang$maxFixedArity \x3d 3);\n\nre_frame.interceptor.assoc_coeffect \x3d (function re_frame$interceptor$assoc_coeffect(context,key,value){\nreturn cljs.core.assoc_in(context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),key], null),value);\n});\nre_frame.interceptor.update_coeffect \x3d (function re_frame$interceptor$update_coeffect(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24099 \x3d arguments.length;\nvar i__5770__auto___24100 \x3d (0);\nwhile(true){\nif((i__5770__auto___24100 \x3c len__5769__auto___24099)){\nargs__5775__auto__.push((arguments[i__5770__auto___24100]));\n\nvar G__24101 \x3d (i__5770__auto___24100 + (1));\ni__5770__auto___24100 \x3d G__24101;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((3) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((3)),(0),null)):null);\nreturn re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),argseq__5776__auto__);\n});\n\n(re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic \x3d (function (context,key,f,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$5(cljs.core.update_in,context,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),key], null),f,args);\n}));\n\n(re_frame.interceptor.update_coeffect.cljs$lang$maxFixedArity \x3d (3));\n\n/** @this {Function} */\n(re_frame.interceptor.update_coeffect.cljs$lang$applyTo \x3d (function (seq24076){\nvar G__24077 \x3d cljs.core.first(seq24076);\nvar seq24076__$1 \x3d cljs.core.next(seq24076);\nvar G__24078 \x3d cljs.core.first(seq24076__$1);\nvar seq24076__$2 \x3d cljs.core.next(seq24076__$1);\nvar G__24079 \x3d cljs.core.first(seq24076__$2);\nvar seq24076__$3 \x3d cljs.core.next(seq24076__$2);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24077,G__24078,G__24079,seq24076__$3);\n}));\n\nre_frame.interceptor.invoke_interceptor_fn \x3d (function re_frame$interceptor$invoke_interceptor_fn(context,interceptor,direction){\nvar temp__5802__auto__ \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(interceptor,direction);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar f \x3d temp__5802__auto__;\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(context) : f.call(null,context));\n} else {\nreturn context;\n}\n});\n/**\n * Loop over all interceptors, calling `direction` function on each,\n *   threading the value of `context` through every call.\n * \n *   `direction` is one of `:before` or `:after`.\n * \n *   Each iteration, the next interceptor to process is obtained from\n *   context\x27s `:queue`. After they are processed, interceptors are popped\n *   from `:queue` and added to `:stack`.\n * \n *   After sufficient iteration, `:queue` will be empty, and `:stack` will\n *   contain all interceptors processed.\n * \n *   Returns updated `context`. Ie. the `context` which has been threaded\n *   through all interceptor functions.\n * \n *   Generally speaking, an interceptor\x27s `:before` function will (if present)\n *   add to a `context\x27s` `:coeffects`, while its `:after` function\n *   will modify the `context`\x27s `:effects`.  Very approximately.\n * \n *   But because all interceptor functions are given `context`, and can\n *   return a modified version of it, the way is clear for an interceptor\n *   to introspect the stack or queue, or even modify the queue\n *   (add new interceptors via `enqueue`?). This is a very fluid arrangement.\n */\nre_frame.interceptor.invoke_interceptors \x3d (function re_frame$interceptor$invoke_interceptors(context,direction){\nvar context__$1 \x3d context;\nwhile(true){\nvar queue \x3d new cljs.core.Keyword(null,\x22queue\x22,\x22queue\x22,1455835879).cljs$core$IFn$_invoke$arity$1(context__$1);\nif(cljs.core.empty_QMARK_(queue)){\nreturn context__$1;\n} else {\nvar interceptor \x3d cljs.core.peek(queue);\nvar stack \x3d new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930).cljs$core$IFn$_invoke$arity$1(context__$1);\nvar G__24105 \x3d re_frame.interceptor.invoke_interceptor_fn(cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(context__$1,new cljs.core.Keyword(null,\x22queue\x22,\x22queue\x22,1455835879),cljs.core.pop(queue),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,interceptor)], 0)),interceptor,direction);\ncontext__$1 \x3d G__24105;\ncontinue;\n}\nbreak;\n}\n});\nre_frame.interceptor.enqueue \x3d (function re_frame$interceptor$enqueue(context,interceptors){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\x22queue\x22,\x22queue\x22,1455835879),cljs.core.fnil.cljs$core$IFn$_invoke$arity$2(cljs.core.into,re_frame.interop.empty_queue),interceptors);\n});\n/**\n * Create a fresh context\n */\nre_frame.interceptor.context \x3d (function re_frame$interceptor$context(var_args){\nvar G__24081 \x3d arguments.length;\nswitch (G__24081) {\ncase 2:\nreturn re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2 \x3d (function (event,interceptors){\nreturn re_frame.interceptor.enqueue(re_frame.interceptor.assoc_coeffect(re_frame.interceptor.assoc_coeffect(cljs.core.PersistentArrayMap.EMPTY,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442),event),new cljs.core.Keyword(null,\x22original-event\x22,\x22original-event\x22,2121330403),event),interceptors);\n}));\n\n(re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$3 \x3d (function (event,interceptors,db){\nreturn re_frame.interceptor.assoc_coeffect(re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event,interceptors),new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),db);\n}));\n\n(re_frame.interceptor.context.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Called on completion of `:before` processing, this function prepares/modifies\n * `context` for the backwards sweep of processing in which an interceptor\n * chain\x27s `:after` fns are called.\n * \n *   At this point in processing, the `:queue` is empty and `:stack` holds all\n *   the previously run interceptors. So this function enables the backwards walk\n *   by priming `:queue` with what\x27s currently in `:stack`\n */\nre_frame.interceptor.change_direction \x3d (function re_frame$interceptor$change_direction(context){\nreturn re_frame.interceptor.enqueue(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22queue\x22,\x22queue\x22,1455835879)),new cljs.core.Keyword(null,\x22stack\x22,\x22stack\x22,-793405930).cljs$core$IFn$_invoke$arity$1(context));\n});\n/**\n * Executes the given chain (coll) of interceptors.\n * \n * Each interceptor has this form:\n *     {:before  (fn [context] ...)     ;; returns possibly modified context\n *      :after   (fn [context] ...)}    ;; `identity` would be a noop\n * \n * Walks the queue of interceptors from beginning to end, calling the\n * `:before` fn on each, then reverse direction and walk backwards,\n * calling the `:after` fn on each.\n * \n * The last interceptor in the chain presumably wraps an event\n * handler fn. So the overall goal of the process is to \x22handle\n * the given event\x22.\n * \n * Thread a `context` through all calls. `context` has this form:\n * \n *   {:coeffects {:event [:a-query-id :some-param]\n *                :db    \x3coriginal contents of app-db\x3e}\n *    :effects   {:db    \x3cnew value for app-db\x3e\n *                :fx  [:dispatch [:an-event-id :param1]]}\n *    :queue     \x3ca collection of further interceptors\x3e\n *    :stack     \x3ca collection of interceptors already walked\x3e}\n * \n * `context` has `:coeffects` and `:effects` which, if this was a web\n * server, would be somewhat analogous to `request` and `response`\n * respectively.\n * \n * `coeffects` will contain data like `event` and the initial\n * state of `db` -  the inputs required by the event handler\n * (sitting presumably on the end of the chain), while handler-returned\n * side effects are put into `:effects` including, but not limited to,\n * new values for `db`.\n * \n * The first few interceptors in a chain will likely have `:before`\n * functions which \x22prime\x22 the `context` by adding the event, and\n * the current state of app-db into `:coeffects`. But interceptors can\n * add whatever they want to `:coeffects` - perhaps the event handler needs\n * some information from localstore, or a random number, or access to\n * a DataScript connection.\n * \n * Equally, some interceptors in the chain will have `:after` fn\n * which can process the side effects accumulated into `:effects`\n * including but, not limited to, updates to app-db.\n * \n * Through both stages (before and after), `context` contains a `:queue`\n * of interceptors yet to be processed, and a `:stack` of interceptors\n * already done.  In advanced cases, these values can be modified by the\n * functions through which the context is threaded.\n */\nre_frame.interceptor.execute \x3d (function re_frame$interceptor$execute(event_v,interceptors){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24110 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22interceptors\x22,\x22interceptors\x22,-1546782951),interceptors], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22interceptors\x22,\x22interceptors\x22,-1546782951),interceptors], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24110);\n\n} else {\n}\n\nreturn re_frame.interceptor.invoke_interceptors(re_frame.interceptor.change_direction(re_frame.interceptor.invoke_interceptors(re_frame.interceptor.context.cljs$core$IFn$_invoke$arity$2(event_v,interceptors),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388))),new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914));\n});\n");
SHADOW_ENV.evalLoad("re_frame.events.js", true , "goog.provide(\x27re_frame.events\x27);\nre_frame.events.kind \x3d new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.events.kind) : re_frame.registrar.kinds.call(null,re_frame.events.kind)))){\n} else {\nthrow (new Error(\x22Assert failed: (re-frame.registrar/kinds kind)\x22));\n}\n/**\n * `interceptors` might have nested collections, and contain nil elements.\n *   return a flat collection, with all nils removed.\n *   This function is 9/10 about giving good error messages.\n */\nre_frame.events.flatten_and_remove_nils \x3d (function re_frame$events$flatten_and_remove_nils(id,interceptors){\nvar make_chain \x3d (function (p1__24114_SHARP_){\nreturn cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,cljs.core.flatten(p1__24114_SHARP_));\n});\nif((!(re_frame.interop.debug_enabled_QMARK_))){\nreturn make_chain(interceptors);\n} else {\nif(cljs.core.coll_QMARK_(interceptors)){\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: when registering\x22,id,\x22, expected a collection of interceptors, got:\x22,interceptors], 0));\n}\n\nvar chain \x3d make_chain(interceptors);\nif(cljs.core.empty_QMARK_(chain)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: when registering\x22,id,\x22, given an empty interceptor chain\x22], 0));\n} else {\n}\n\nvar temp__5804__auto___24126 \x3d cljs.core.first(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(re_frame.interceptor.interceptor_QMARK_,chain));\nif(cljs.core.truth_(temp__5804__auto___24126)){\nvar not_i_24127 \x3d temp__5804__auto___24126;\nif(cljs.core.fn_QMARK_(not_i_24127)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: when registering\x22,id,\x22, got a function instead of an interceptor. Did you provide old style middleware by mistake? Got:\x22,not_i_24127], 0));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: when registering\x22,id,\x22, expected interceptors, but got:\x22,not_i_24127], 0));\n}\n} else {\n}\n\nreturn chain;\n}\n});\n/**\n * Associate the given event `id` with the given collection of `interceptors`.\n * \n * `interceptors` may contain nested collections and there may be nils\n * at any level,so process this structure into a simple, nil-less vector\n * before registration.\n * \n * Typically, an `event handler` will be at the end of the chain (wrapped\n * in an interceptor).\n */\nre_frame.events.register \x3d (function re_frame$events$register(id,interceptors){\nreturn re_frame.registrar.register_handler(re_frame.events.kind,id,re_frame.events.flatten_and_remove_nils(id,interceptors));\n});\nre_frame.events._STAR_handling_STAR_ \x3d null;\n/**\n * Given an event vector `event-v`, look up the associated interceptor chain, and execute it.\n */\nre_frame.events.handle \x3d (function re_frame$events$handle(event_v){\nvar event_id \x3d re_frame.utils.first_in_vector(event_v);\nvar temp__5802__auto__ \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.events.kind,event_id,true);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar interceptors \x3d temp__5802__auto__;\nif(cljs.core.truth_(re_frame.events._STAR_handling_STAR_)){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: while handling\x22,re_frame.events._STAR_handling_STAR_,\x22, dispatch-sync was called for\x22,event_v,\x22. You can\x27t call dispatch-sync within an event handler.\x22], 0));\n} else {\nvar _STAR_handling_STAR__orig_val__24119 \x3d re_frame.events._STAR_handling_STAR_;\nvar _STAR_handling_STAR__temp_val__24120 \x3d event_v;\n(re_frame.events._STAR_handling_STAR_ \x3d _STAR_handling_STAR__temp_val__24120);\n\ntry{if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__24121 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24122 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),event_id,new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),re_frame.events.kind,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442),event_v], null)], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24122);\n\ntry{try{if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24130 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22app-db-before\x22,\x22app-db-before\x22,-1442902645),cljs.core.deref(re_frame.db.app_db)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22app-db-before\x22,\x22app-db-before\x22,-1442902645),cljs.core.deref(re_frame.db.app_db)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24130);\n\n} else {\n}\n\nre_frame.interceptor.execute(event_v,interceptors);\n\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24131 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22app-db-after\x22,\x22app-db-after\x22,1477492964),cljs.core.deref(re_frame.db.app_db)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22app-db-after\x22,\x22app-db-after\x22,1477492964),cljs.core.deref(re_frame.db.app_db)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24131);\n\nreturn null;\n} else {\nreturn null;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24132 \x3d re_frame.interop.now();\nvar duration__23969__auto___24133 \x3d (end__23968__auto___24132 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24133,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24132);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24121);\n}} else {\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24136 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22app-db-before\x22,\x22app-db-before\x22,-1442902645),cljs.core.deref(re_frame.db.app_db)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22app-db-before\x22,\x22app-db-before\x22,-1442902645),cljs.core.deref(re_frame.db.app_db)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24136);\n\n} else {\n}\n\nre_frame.interceptor.execute(event_v,interceptors);\n\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24137 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22app-db-after\x22,\x22app-db-after\x22,1477492964),cljs.core.deref(re_frame.db.app_db)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22app-db-after\x22,\x22app-db-after\x22,1477492964),cljs.core.deref(re_frame.db.app_db)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24137);\n\nreturn null;\n} else {\nreturn null;\n}\n}\n}finally {(re_frame.events._STAR_handling_STAR_ \x3d _STAR_handling_STAR__orig_val__24119);\n}}\n} else {\nreturn null;\n}\n});\n");
SHADOW_ENV.evalLoad("re_frame.subs.js", true , "goog.provide(\x27re_frame.subs\x27);\nre_frame.subs.kind \x3d new cljs.core.Keyword(null,\x22sub\x22,\x22sub\x22,-2093760025);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.subs.kind) : re_frame.registrar.kinds.call(null,re_frame.subs.kind)))){\n} else {\nthrow (new Error(\x22Assert failed: (re-frame.registrar/kinds kind)\x22));\n}\nre_frame.subs.query__GT_reaction \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(cljs.core.PersistentArrayMap.EMPTY);\n/**\n * calls `on-dispose` for each cached item, \n * which will cause the value to be removed from the cache\n */\nre_frame.subs.clear_subscription_cache_BANG_ \x3d (function re_frame$subs$clear_subscription_cache_BANG_(){\nvar seq__24091_24204 \x3d cljs.core.seq(cljs.core.deref(re_frame.subs.query__GT_reaction));\nvar chunk__24092_24205 \x3d null;\nvar count__24093_24206 \x3d (0);\nvar i__24094_24207 \x3d (0);\nwhile(true){\nif((i__24094_24207 \x3c count__24093_24206)){\nvar vec__24107_24208 \x3d chunk__24092_24205.cljs$core$IIndexed$_nth$arity$2(null,i__24094_24207);\nvar k_24209 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24107_24208,(0),null);\nvar rxn_24210 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24107_24208,(1),null);\nre_frame.interop.dispose_BANG_(rxn_24210);\n\n\nvar G__24211 \x3d seq__24091_24204;\nvar G__24212 \x3d chunk__24092_24205;\nvar G__24213 \x3d count__24093_24206;\nvar G__24214 \x3d (i__24094_24207 + (1));\nseq__24091_24204 \x3d G__24211;\nchunk__24092_24205 \x3d G__24212;\ncount__24093_24206 \x3d G__24213;\ni__24094_24207 \x3d G__24214;\ncontinue;\n} else {\nvar temp__5804__auto___24215 \x3d cljs.core.seq(seq__24091_24204);\nif(temp__5804__auto___24215){\nvar seq__24091_24216__$1 \x3d temp__5804__auto___24215;\nif(cljs.core.chunked_seq_QMARK_(seq__24091_24216__$1)){\nvar c__5568__auto___24217 \x3d cljs.core.chunk_first(seq__24091_24216__$1);\nvar G__24218 \x3d cljs.core.chunk_rest(seq__24091_24216__$1);\nvar G__24219 \x3d c__5568__auto___24217;\nvar G__24220 \x3d cljs.core.count(c__5568__auto___24217);\nvar G__24221 \x3d (0);\nseq__24091_24204 \x3d G__24218;\nchunk__24092_24205 \x3d G__24219;\ncount__24093_24206 \x3d G__24220;\ni__24094_24207 \x3d G__24221;\ncontinue;\n} else {\nvar vec__24111_24222 \x3d cljs.core.first(seq__24091_24216__$1);\nvar k_24223 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24111_24222,(0),null);\nvar rxn_24224 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24111_24222,(1),null);\nre_frame.interop.dispose_BANG_(rxn_24224);\n\n\nvar G__24225 \x3d cljs.core.next(seq__24091_24216__$1);\nvar G__24226 \x3d null;\nvar G__24227 \x3d (0);\nvar G__24228 \x3d (0);\nseq__24091_24204 \x3d G__24225;\nchunk__24092_24205 \x3d G__24226;\ncount__24093_24206 \x3d G__24227;\ni__24094_24207 \x3d G__24228;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nif(cljs.core.truth_(cljs.core.not_empty(cljs.core.deref(re_frame.subs.query__GT_reaction)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: The subscription cache isn\x27t empty after being cleared\x22], 0));\n} else {\nreturn null;\n}\n});\n/**\n * Unregisters all existing subscription handlers\n */\nre_frame.subs.clear_all_handlers_BANG_ \x3d (function re_frame$subs$clear_all_handlers_BANG_(){\nre_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1(re_frame.subs.kind);\n\nreturn re_frame.subs.clear_subscription_cache_BANG_();\n});\n/**\n * cache the reaction r\n */\nre_frame.subs.cache_and_return \x3d (function re_frame$subs$cache_and_return(query_v,dynv,r){\nvar cache_key \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [query_v,dynv], null);\nre_frame.interop.add_on_dispose_BANG_(r,(function (){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__24115 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24116 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),re_frame.utils.first_in_vector(query_v),new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),new cljs.core.Keyword(\x22sub\x22,\x22dispose\x22,\x22sub/dispose\x22,365440536),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22query-v\x22,\x22query-v\x22,-1514170131),query_v,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(r)], null)], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24116);\n\ntry{try{return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(re_frame.subs.query__GT_reaction,(function (query_cache){\nif(((cljs.core.contains_QMARK_(query_cache,cache_key)) \x26\x26 ((r \x3d\x3d\x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key))))){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key);\n} else {\nreturn query_cache;\n}\n}));\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24229 \x3d re_frame.interop.now();\nvar duration__23969__auto___24230 \x3d (end__23968__auto___24229 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24230,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24229);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24115);\n}} else {\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(re_frame.subs.query__GT_reaction,(function (query_cache){\nif(((cljs.core.contains_QMARK_(query_cache,cache_key)) \x26\x26 ((r \x3d\x3d\x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key))))){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(query_cache,cache_key);\n} else {\nreturn query_cache;\n}\n}));\n}\n}));\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(re_frame.subs.query__GT_reaction,(function (query_cache){\nif(re_frame.interop.debug_enabled_QMARK_){\nif(cljs.core.contains_QMARK_(query_cache,cache_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: Adding a new subscription to the cache while there is an existing subscription in the cache\x22,cache_key], 0));\n} else {\n}\n} else {\n}\n\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(query_cache,cache_key,r);\n}));\n\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24231 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(r)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(r)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24231);\n\n} else {\n}\n\nreturn r;\n});\nre_frame.subs.cache_lookup \x3d (function re_frame$subs$cache_lookup(var_args){\nvar G__24124 \x3d arguments.length;\nswitch (G__24124) {\ncase 1:\nreturn re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1 \x3d (function (query_v){\nreturn re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2(query_v,cljs.core.PersistentVector.EMPTY);\n}));\n\n(re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2 \x3d (function (query_v,dyn_v){\nreturn cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(re_frame.subs.query__GT_reaction),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [query_v,dyn_v], null));\n}));\n\n(re_frame.subs.cache_lookup.cljs$lang$maxFixedArity \x3d 2);\n\nre_frame.subs.warn_when_not_reactive \x3d (function re_frame$subs$warn_when_not_reactive(){\nif(((re_frame.interop.debug_enabled_QMARK_) \x26\x26 ((!(re_frame.interop.reactive_QMARK_()))))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: Subscribe was called outside of a reactive context.\\n\x22,\x22See: https://day8.github.io/re-frame/FAQs/UseASubscriptionInAJsEvent/\\n\x22,\x22https://day8.github.io/re-frame/FAQs/UseASubscriptionInAnEventHandler/\x22], 0));\n} else {\nreturn null;\n}\n});\nre_frame.subs.subscribe \x3d (function re_frame$subs$subscribe(var_args){\nvar G__24129 \x3d arguments.length;\nswitch (G__24129) {\ncase 1:\nreturn re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1 \x3d (function (query){\nre_frame.subs.warn_when_not_reactive();\n\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__24134 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24135 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),re_frame.utils.first_in_vector(query),new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),new cljs.core.Keyword(\x22sub\x22,\x22create\x22,\x22sub/create\x22,-1301317560),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22query-v\x22,\x22query-v\x22,-1514170131),query], null)], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24135);\n\ntry{try{var temp__5802__auto__ \x3d re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1(query);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar cached \x3d temp__5802__auto__;\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24235 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),true,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),true,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24235);\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id \x3d re_frame.utils.first_in_vector(query);\nvar handler_fn \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(re_frame.subs.kind,query_id);\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24236 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),false], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24236);\n\n} else {\n}\n\nif((handler_fn \x3d\x3d null)){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24237 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),true], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24237);\n\n} else {\n}\n\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\x22re-frame: no subscription handler registered for: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\x22. Returning a nil subscription.\x22].join(\x27\x27)], 0));\n} else {\nreturn re_frame.subs.cache_and_return(query,cljs.core.PersistentVector.EMPTY,(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(re_frame.db.app_db,query) : handler_fn.call(null,re_frame.db.app_db,query)));\n}\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24238 \x3d re_frame.interop.now();\nvar duration__23969__auto___24239 \x3d (end__23968__auto___24238 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24239,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24238);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24134);\n}} else {\nvar temp__5802__auto__ \x3d re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$1(query);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar cached \x3d temp__5802__auto__;\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24240 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),true,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),true,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24240);\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id \x3d re_frame.utils.first_in_vector(query);\nvar handler_fn \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(re_frame.subs.kind,query_id);\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24241 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),false], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24241);\n\n} else {\n}\n\nif((handler_fn \x3d\x3d null)){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24242 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),true], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24242);\n\n} else {\n}\n\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\x22re-frame: no subscription handler registered for: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\x22. Returning a nil subscription.\x22].join(\x27\x27)], 0));\n} else {\nreturn re_frame.subs.cache_and_return(query,cljs.core.PersistentVector.EMPTY,(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(re_frame.db.app_db,query) : handler_fn.call(null,re_frame.db.app_db,query)));\n}\n}\n}\n}));\n\n(re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$2 \x3d (function (query,dynv){\nre_frame.subs.warn_when_not_reactive();\n\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__24138 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24139 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),re_frame.utils.first_in_vector(query),new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),new cljs.core.Keyword(\x22sub\x22,\x22create\x22,\x22sub/create\x22,-1301317560),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22query-v\x22,\x22query-v\x22,-1514170131),query,new cljs.core.Keyword(null,\x22dyn-v\x22,\x22dyn-v\x22,949994592),dynv], null)], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24139);\n\ntry{try{var temp__5802__auto__ \x3d re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2(query,dynv);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar cached \x3d temp__5802__auto__;\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24247 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),true,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),true,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24247);\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id \x3d re_frame.utils.first_in_vector(query);\nvar handler_fn \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(re_frame.subs.kind,query_id);\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24248 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),false], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24248);\n\n} else {\n}\n\nif(re_frame.interop.debug_enabled_QMARK_){\nvar temp__5804__auto___24249 \x3d cljs.core.not_empty(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(re_frame.interop.ratom_QMARK_,dynv));\nif(cljs.core.truth_(temp__5804__auto___24249)){\nvar not_reactive_24250 \x3d temp__5804__auto___24249;\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: your subscription\x27s dynamic parameters that don\x27t implement IReactiveAtom:\x22,not_reactive_24250], 0));\n} else {\n}\n} else {\n}\n\nif((handler_fn \x3d\x3d null)){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24251 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),true], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24251);\n\n} else {\n}\n\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\x22re-frame: no subscription handler registered for: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\x22. Returning a nil subscription.\x22].join(\x27\x27)], 0));\n} else {\nvar dyn_vals \x3d re_frame.interop.make_reaction((function (){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.deref,dynv);\n}));\nvar sub \x3d re_frame.interop.make_reaction((function (){\nvar G__24147 \x3d re_frame.db.app_db;\nvar G__24148 \x3d query;\nvar G__24149 \x3d cljs.core.deref(dyn_vals);\nreturn (handler_fn.cljs$core$IFn$_invoke$arity$3 ? handler_fn.cljs$core$IFn$_invoke$arity$3(G__24147,G__24148,G__24149) : handler_fn.call(null,G__24147,G__24148,G__24149));\n}));\nreturn re_frame.subs.cache_and_return(query,dynv,re_frame.interop.make_reaction((function (){\nreturn cljs.core.deref(cljs.core.deref(sub));\n})));\n}\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24252 \x3d re_frame.interop.now();\nvar duration__23969__auto___24253 \x3d (end__23968__auto___24252 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24253,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24252);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24138);\n}} else {\nvar temp__5802__auto__ \x3d re_frame.subs.cache_lookup.cljs$core$IFn$_invoke$arity$2(query,dynv);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar cached \x3d temp__5802__auto__;\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24256 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),true,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(cached)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),true,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),re_frame.interop.reagent_id(cached)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24256);\n\n} else {\n}\n\nreturn cached;\n} else {\nvar query_id \x3d re_frame.utils.first_in_vector(query);\nvar handler_fn \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(re_frame.subs.kind,query_id);\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24258 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),false], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22cached?\x22,\x22cached?\x22,86081880),false], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24258);\n\n} else {\n}\n\nif(re_frame.interop.debug_enabled_QMARK_){\nvar temp__5804__auto___24259 \x3d cljs.core.not_empty(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(re_frame.interop.ratom_QMARK_,dynv));\nif(cljs.core.truth_(temp__5804__auto___24259)){\nvar not_reactive_24260 \x3d temp__5804__auto___24259;\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: your subscription\x27s dynamic parameters that don\x27t implement IReactiveAtom:\x22,not_reactive_24260], 0));\n} else {\n}\n} else {\n}\n\nif((handler_fn \x3d\x3d null)){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24261 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),true], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),true], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24261);\n\n} else {\n}\n\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([[\x22re-frame: no subscription handler registered for: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\x22. Returning a nil subscription.\x22].join(\x27\x27)], 0));\n} else {\nvar dyn_vals \x3d re_frame.interop.make_reaction((function (){\nreturn cljs.core.mapv.cljs$core$IFn$_invoke$arity$2(cljs.core.deref,dynv);\n}));\nvar sub \x3d re_frame.interop.make_reaction((function (){\nvar G__24150 \x3d re_frame.db.app_db;\nvar G__24151 \x3d query;\nvar G__24152 \x3d cljs.core.deref(dyn_vals);\nreturn (handler_fn.cljs$core$IFn$_invoke$arity$3 ? handler_fn.cljs$core$IFn$_invoke$arity$3(G__24150,G__24151,G__24152) : handler_fn.call(null,G__24150,G__24151,G__24152));\n}));\nreturn re_frame.subs.cache_and_return(query,dynv,re_frame.interop.make_reaction((function (){\nreturn cljs.core.deref(cljs.core.deref(sub));\n})));\n}\n}\n}\n}));\n\n(re_frame.subs.subscribe.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Returns a new version of \x27m\x27 in which \x27f\x27 has been applied to each value.\n *   (map-vals inc {:a 4, :b 2}) \x3d\x3e {:a 5, :b 3}\n */\nre_frame.subs.map_vals \x3d (function re_frame$subs$map_vals(f,m){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$3(cljs.core.empty(m),cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p__24155){\nvar vec__24156 \x3d p__24155;\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24156,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24156,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(v) : f.call(null,v))], null);\n})),m);\n});\n/**\n * Runs f over signals. Signals may take several\n *   forms, this function handles all of them.\n */\nre_frame.subs.map_signals \x3d (function re_frame$subs$map_signals(f,signals){\nif(cljs.core.sequential_QMARK_(signals)){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,signals);\n} else {\nif(cljs.core.map_QMARK_(signals)){\nreturn re_frame.subs.map_vals(f,signals);\n} else {\nif(re_frame.interop.deref_QMARK_(signals)){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(signals) : f.call(null,signals));\n} else {\nreturn cljs.core.List.EMPTY;\n\n}\n}\n}\n});\n/**\n * Coerces x to a seq if it isn\x27t one already\n */\nre_frame.subs.to_seq \x3d (function re_frame$subs$to_seq(x){\nif(cljs.core.sequential_QMARK_(x)){\nreturn x;\n} else {\nreturn (new cljs.core.List(null,x,null,(1),null));\n}\n});\nre_frame.subs.deref_input_signals \x3d (function re_frame$subs$deref_input_signals(signals,query_id){\nvar dereffed_signals \x3d re_frame.subs.map_signals(cljs.core.deref,signals);\nif(cljs.core.sequential_QMARK_(signals)){\ncljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.deref,signals);\n} else {\nif(cljs.core.map_QMARK_(signals)){\nre_frame.subs.map_vals(cljs.core.deref,signals);\n} else {\nif(re_frame.interop.deref_QMARK_(signals)){\ncljs.core.deref(signals);\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: in the reg-sub for\x22,query_id,\x22, the input-signals function returns:\x22,signals], 0));\n\n}\n}\n}\n\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24266 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22input-signals\x22,\x22input-signals\x22,563633497),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(re_frame.subs.to_seq(re_frame.subs.map_signals(re_frame.interop.reagent_id,signals)))], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22input-signals\x22,\x22input-signals\x22,563633497),cljs.core.doall.cljs$core$IFn$_invoke$arity$1(re_frame.subs.to_seq(re_frame.subs.map_signals(re_frame.interop.reagent_id,signals)))], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24266);\n\n} else {\n}\n\nreturn dereffed_signals;\n});\nre_frame.subs.reg_sub \x3d (function re_frame$subs$reg_sub(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24269 \x3d arguments.length;\nvar i__5770__auto___24270 \x3d (0);\nwhile(true){\nif((i__5770__auto___24270 \x3c len__5769__auto___24269)){\nargs__5775__auto__.push((arguments[i__5770__auto___24270]));\n\nvar G__24271 \x3d (i__5770__auto___24270 + (1));\ni__5770__auto___24270 \x3d G__24271;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn re_frame.subs.reg_sub.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(re_frame.subs.reg_sub.cljs$core$IFn$_invoke$arity$variadic \x3d (function (query_id,args){\nvar err_header \x3d [\x22re-frame: reg-sub for \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(query_id),\x22, \x22].join(\x27\x27);\nvar vec__24167 \x3d (function (){var vec__24170 \x3d cljs.core.take_last((2),args);\nvar op \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24170,(0),null);\nvar f \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24170,(1),null);\nvar comp_f \x3d vec__24170;\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),cljs.core.count(comp_f))) || (((cljs.core.fn_QMARK_(op)) || (cljs.core.vector_QMARK_(op)))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.butlast(args),cljs.core.last(args)], null);\n} else {\nvar args__$1 \x3d cljs.core.drop_last.cljs$core$IFn$_invoke$arity$2((2),args);\nvar G__24173 \x3d op;\nvar G__24173__$1 \x3d (((G__24173 instanceof cljs.core.Keyword))?G__24173.fqn:null);\nswitch (G__24173__$1) {\ncase \x22-\x3e\x22:\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [args__$1,(function (db,_){\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(db) : f.call(null,db));\n})], null);\n\nbreak;\ncase \x22\x3d\x3e\x22:\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [args__$1,(function (db,p__24174){\nvar vec__24175 \x3d p__24174;\nvar seq__24176 \x3d cljs.core.seq(vec__24175);\nvar first__24177 \x3d cljs.core.first(seq__24176);\nvar seq__24176__$1 \x3d cljs.core.next(seq__24176);\nvar _ \x3d first__24177;\nvar qs \x3d seq__24176__$1;\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,db,qs);\n})], null);\n\nbreak;\ndefault:\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([err_header,\x22expected :-\x3e or :\x3d\x3e as second to last argument, got:\x22,op], 0));\n\n}\n}\n})();\nvar input_args \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24167,(0),null);\nvar computation_fn \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24167,(1),null);\nvar inputs_fn \x3d (function (){var G__24180 \x3d cljs.core.count(input_args);\nswitch (G__24180) {\ncase (0):\nreturn (function() {\nvar G__24281 \x3d null;\nvar G__24281__1 \x3d (function (_){\nreturn re_frame.db.app_db;\n});\nvar G__24281__2 \x3d (function (_,___$1){\nreturn re_frame.db.app_db;\n});\nG__24281 \x3d function(_,___$1){\nswitch(arguments.length){\ncase 1:\nreturn G__24281__1.call(this,_);\ncase 2:\nreturn G__24281__2.call(this,_,___$1);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nG__24281.cljs$core$IFn$_invoke$arity$1 \x3d G__24281__1;\nG__24281.cljs$core$IFn$_invoke$arity$2 \x3d G__24281__2;\nreturn G__24281;\n})()\n\nbreak;\ncase (1):\nvar f \x3d cljs.core.first(input_args);\nif(cljs.core.fn_QMARK_(f)){\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([err_header,\x222nd argument expected to be an inputs function, got:\x22,f], 0));\n}\n\nreturn f;\n\nbreak;\ncase (2):\nvar vec__24181 \x3d input_args;\nvar marker \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24181,(0),null);\nvar vec \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24181,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22\x3c-\x22,\x22\x3c-\x22,760412998),marker)){\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([err_header,\x22expected :\x3c-, got:\x22,marker], 0));\n}\n\nreturn (function() {\nvar re_frame$subs$inp_fn \x3d null;\nvar re_frame$subs$inp_fn__1 \x3d (function (_){\nreturn re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1(vec);\n});\nvar re_frame$subs$inp_fn__2 \x3d (function (_,___$1){\nreturn re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1(vec);\n});\nre_frame$subs$inp_fn \x3d function(_,___$1){\nswitch(arguments.length){\ncase 1:\nreturn re_frame$subs$inp_fn__1.call(this,_);\ncase 2:\nreturn re_frame$subs$inp_fn__2.call(this,_,___$1);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nre_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$1 \x3d re_frame$subs$inp_fn__1;\nre_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$2 \x3d re_frame$subs$inp_fn__2;\nreturn re_frame$subs$inp_fn;\n})()\n\nbreak;\ndefault:\nvar pairs \x3d cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),input_args);\nvar markers \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,pairs);\nvar vecs \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.second,pairs);\nif(((cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22\x3c-\x22,\x22\x3c-\x22,760412998),null], null), null),markers)) \x26\x26 (cljs.core.every_QMARK_(cljs.core.vector_QMARK_,vecs)))){\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([err_header,\x22expected pairs of :\x3c- and vectors, got:\x22,pairs], 0));\n}\n\nreturn (function() {\nvar re_frame$subs$inp_fn \x3d null;\nvar re_frame$subs$inp_fn__1 \x3d (function (_){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(re_frame.subs.subscribe,vecs);\n});\nvar re_frame$subs$inp_fn__2 \x3d (function (_,___$1){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(re_frame.subs.subscribe,vecs);\n});\nre_frame$subs$inp_fn \x3d function(_,___$1){\nswitch(arguments.length){\ncase 1:\nreturn re_frame$subs$inp_fn__1.call(this,_);\ncase 2:\nreturn re_frame$subs$inp_fn__2.call(this,_,___$1);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nre_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$1 \x3d re_frame$subs$inp_fn__1;\nre_frame$subs$inp_fn.cljs$core$IFn$_invoke$arity$2 \x3d re_frame$subs$inp_fn__2;\nreturn re_frame$subs$inp_fn;\n})()\n\n}\n})();\nreturn re_frame.registrar.register_handler(re_frame.subs.kind,query_id,(function() {\nvar re_frame$subs$subs_handler_fn \x3d null;\nvar re_frame$subs$subs_handler_fn__2 \x3d (function (db,query_vec){\nvar subscriptions \x3d (inputs_fn.cljs$core$IFn$_invoke$arity$2 ? inputs_fn.cljs$core$IFn$_invoke$arity$2(query_vec,null) : inputs_fn.call(null,query_vec,null));\nvar reaction_id \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar reaction \x3d re_frame.interop.make_reaction((function (){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__24185 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24186 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),re_frame.utils.first_in_vector(query_vec),new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),new cljs.core.Keyword(\x22sub\x22,\x22run\x22,\x22sub/run\x22,-1821315581),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22query-v\x22,\x22query-v\x22,-1514170131),query_vec,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),cljs.core.deref(reaction_id)], null)], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24186);\n\ntry{try{var subscription \x3d (function (){var G__24187 \x3d re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__24188 \x3d query_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$2 ? computation_fn.cljs$core$IFn$_invoke$arity$2(G__24187,G__24188) : computation_fn.call(null,G__24187,G__24188));\n})();\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24288 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22value\x22,\x22value\x22,305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22value\x22,\x22value\x22,305978217),subscription], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24288);\n\n} else {\n}\n\nreturn subscription;\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24289 \x3d re_frame.interop.now();\nvar duration__23969__auto___24290 \x3d (end__23968__auto___24289 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24290,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24289);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24185);\n}} else {\nvar subscription \x3d (function (){var G__24189 \x3d re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__24190 \x3d query_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$2 ? computation_fn.cljs$core$IFn$_invoke$arity$2(G__24189,G__24190) : computation_fn.call(null,G__24189,G__24190));\n})();\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24291 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22value\x22,\x22value\x22,305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22value\x22,\x22value\x22,305978217),subscription], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24291);\n\n} else {\n}\n\nreturn subscription;\n}\n}));\ncljs.core.reset_BANG_(reaction_id,re_frame.interop.reagent_id(reaction));\n\nreturn reaction;\n});\nvar re_frame$subs$subs_handler_fn__3 \x3d (function (db,query_vec,dyn_vec){\nvar subscriptions \x3d (inputs_fn.cljs$core$IFn$_invoke$arity$2 ? inputs_fn.cljs$core$IFn$_invoke$arity$2(query_vec,dyn_vec) : inputs_fn.call(null,query_vec,dyn_vec));\nvar reaction_id \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\nvar reaction \x3d re_frame.interop.make_reaction((function (){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__24191 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24192 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),re_frame.utils.first_in_vector(query_vec),new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),new cljs.core.Keyword(\x22sub\x22,\x22run\x22,\x22sub/run\x22,-1821315581),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22query-v\x22,\x22query-v\x22,-1514170131),query_vec,new cljs.core.Keyword(null,\x22dyn-v\x22,\x22dyn-v\x22,949994592),dyn_vec,new cljs.core.Keyword(null,\x22reaction\x22,\x22reaction\x22,490869788),cljs.core.deref(reaction_id)], null)], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24192);\n\ntry{try{var subscription \x3d (function (){var G__24193 \x3d re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__24194 \x3d query_vec;\nvar G__24195 \x3d dyn_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$3 ? computation_fn.cljs$core$IFn$_invoke$arity$3(G__24193,G__24194,G__24195) : computation_fn.call(null,G__24193,G__24194,G__24195));\n})();\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24296 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22value\x22,\x22value\x22,305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22value\x22,\x22value\x22,305978217),subscription], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24296);\n\n} else {\n}\n\nreturn subscription;\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24297 \x3d re_frame.interop.now();\nvar duration__23969__auto___24298 \x3d (end__23968__auto___24297 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24298,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24297);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24191);\n}} else {\nvar subscription \x3d (function (){var G__24196 \x3d re_frame.subs.deref_input_signals(subscriptions,query_id);\nvar G__24197 \x3d query_vec;\nvar G__24198 \x3d dyn_vec;\nreturn (computation_fn.cljs$core$IFn$_invoke$arity$3 ? computation_fn.cljs$core$IFn$_invoke$arity$3(G__24196,G__24197,G__24198) : computation_fn.call(null,G__24196,G__24197,G__24198));\n})();\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24299 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22value\x22,\x22value\x22,305978217),subscription], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22value\x22,\x22value\x22,305978217),subscription], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24299);\n\n} else {\n}\n\nreturn subscription;\n}\n}));\ncljs.core.reset_BANG_(reaction_id,re_frame.interop.reagent_id(reaction));\n\nreturn reaction;\n});\nre_frame$subs$subs_handler_fn \x3d function(db,query_vec,dyn_vec){\nswitch(arguments.length){\ncase 2:\nreturn re_frame$subs$subs_handler_fn__2.call(this,db,query_vec);\ncase 3:\nreturn re_frame$subs$subs_handler_fn__3.call(this,db,query_vec,dyn_vec);\n}\nthrow(new Error(\x27Invalid arity: \x27 + arguments.length));\n};\nre_frame$subs$subs_handler_fn.cljs$core$IFn$_invoke$arity$2 \x3d re_frame$subs$subs_handler_fn__2;\nre_frame$subs$subs_handler_fn.cljs$core$IFn$_invoke$arity$3 \x3d re_frame$subs$subs_handler_fn__3;\nreturn re_frame$subs$subs_handler_fn;\n})()\n);\n}));\n\n(re_frame.subs.reg_sub.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(re_frame.subs.reg_sub.cljs$lang$applyTo \x3d (function (seq24163){\nvar G__24164 \x3d cljs.core.first(seq24163);\nvar seq24163__$1 \x3d cljs.core.next(seq24163);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24164,seq24163__$1);\n}));\n\n");
SHADOW_ENV.evalLoad("re_frame.router.js", true , "goog.provide(\x27re_frame.router\x27);\nre_frame.router.later_fns \x3d new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22flush-dom\x22,\x22flush-dom\x22,-933676816),(function (f){\nvar G__24143 \x3d (function (){\nreturn (re_frame.interop.next_tick.cljs$core$IFn$_invoke$arity$1 ? re_frame.interop.next_tick.cljs$core$IFn$_invoke$arity$1(f) : re_frame.interop.next_tick.call(null,f));\n});\nreturn (re_frame.interop.after_render.cljs$core$IFn$_invoke$arity$1 ? re_frame.interop.after_render.cljs$core$IFn$_invoke$arity$1(G__24143) : re_frame.interop.after_render.call(null,G__24143));\n}),new cljs.core.Keyword(null,\x22yield\x22,\x22yield\x22,177875009),re_frame.interop.next_tick], null);\n\n/**\n * @interface\n */\nre_frame.router.IEventQueue \x3d function(){};\n\nvar re_frame$router$IEventQueue$push$dyn_24306 \x3d (function (this$,event){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router.push[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,event) : m__5394__auto__.call(null,this$,event));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router.push[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,event) : m__5392__auto__.call(null,this$,event));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.push\x22,this$);\n}\n}\n});\nre_frame.router.push \x3d (function re_frame$router$push(this$,event){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$push$arity$2 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$push$arity$2(this$,event);\n} else {\nreturn re_frame$router$IEventQueue$push$dyn_24306(this$,event);\n}\n});\n\nvar re_frame$router$IEventQueue$add_post_event_callback$dyn_24307 \x3d (function (this$,id,callback_fn){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router.add_post_event_callback[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(this$,id,callback_fn) : m__5394__auto__.call(null,this$,id,callback_fn));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router.add_post_event_callback[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(this$,id,callback_fn) : m__5392__auto__.call(null,this$,id,callback_fn));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.add-post-event-callback\x22,this$);\n}\n}\n});\nre_frame.router.add_post_event_callback \x3d (function re_frame$router$add_post_event_callback(this$,id,callback_fn){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$add_post_event_callback$arity$3 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$add_post_event_callback$arity$3(this$,id,callback_fn);\n} else {\nreturn re_frame$router$IEventQueue$add_post_event_callback$dyn_24307(this$,id,callback_fn);\n}\n});\n\nvar re_frame$router$IEventQueue$remove_post_event_callback$dyn_24308 \x3d (function (this$,id){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router.remove_post_event_callback[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,id) : m__5394__auto__.call(null,this$,id));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router.remove_post_event_callback[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,id) : m__5392__auto__.call(null,this$,id));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.remove-post-event-callback\x22,this$);\n}\n}\n});\nre_frame.router.remove_post_event_callback \x3d (function re_frame$router$remove_post_event_callback(this$,id){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$remove_post_event_callback$arity$2 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$remove_post_event_callback$arity$2(this$,id);\n} else {\nreturn re_frame$router$IEventQueue$remove_post_event_callback$dyn_24308(this$,id);\n}\n});\n\nvar re_frame$router$IEventQueue$purge$dyn_24309 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router.purge[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router.purge[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.purge\x22,this$);\n}\n}\n});\nre_frame.router.purge \x3d (function re_frame$router$purge(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$purge$arity$1 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$purge$arity$1(this$);\n} else {\nreturn re_frame$router$IEventQueue$purge$dyn_24309(this$);\n}\n});\n\nvar re_frame$router$IEventQueue$_fsm_trigger$dyn_24310 \x3d (function (this$,trigger,arg){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router._fsm_trigger[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$3(this$,trigger,arg) : m__5394__auto__.call(null,this$,trigger,arg));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router._fsm_trigger[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$3 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$3(this$,trigger,arg) : m__5392__auto__.call(null,this$,trigger,arg));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.-fsm-trigger\x22,this$);\n}\n}\n});\nre_frame.router._fsm_trigger \x3d (function re_frame$router$_fsm_trigger(this$,trigger,arg){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$_fsm_trigger$arity$3 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$_fsm_trigger$arity$3(this$,trigger,arg);\n} else {\nreturn re_frame$router$IEventQueue$_fsm_trigger$dyn_24310(this$,trigger,arg);\n}\n});\n\nvar re_frame$router$IEventQueue$_add_event$dyn_24311 \x3d (function (this$,event){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router._add_event[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,event) : m__5394__auto__.call(null,this$,event));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router._add_event[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,event) : m__5392__auto__.call(null,this$,event));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.-add-event\x22,this$);\n}\n}\n});\nre_frame.router._add_event \x3d (function re_frame$router$_add_event(this$,event){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$_add_event$arity$2 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$_add_event$arity$2(this$,event);\n} else {\nreturn re_frame$router$IEventQueue$_add_event$dyn_24311(this$,event);\n}\n});\n\nvar re_frame$router$IEventQueue$_process_1st_event_in_queue$dyn_24312 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router._process_1st_event_in_queue[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router._process_1st_event_in_queue[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.-process-1st-event-in-queue\x22,this$);\n}\n}\n});\nre_frame.router._process_1st_event_in_queue \x3d (function re_frame$router$_process_1st_event_in_queue(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$_process_1st_event_in_queue$arity$1 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$_process_1st_event_in_queue$arity$1(this$);\n} else {\nreturn re_frame$router$IEventQueue$_process_1st_event_in_queue$dyn_24312(this$);\n}\n});\n\nvar re_frame$router$IEventQueue$_run_next_tick$dyn_24313 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router._run_next_tick[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router._run_next_tick[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.-run-next-tick\x22,this$);\n}\n}\n});\nre_frame.router._run_next_tick \x3d (function re_frame$router$_run_next_tick(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$_run_next_tick$arity$1 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$_run_next_tick$arity$1(this$);\n} else {\nreturn re_frame$router$IEventQueue$_run_next_tick$dyn_24313(this$);\n}\n});\n\nvar re_frame$router$IEventQueue$_run_queue$dyn_24314 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router._run_queue[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router._run_queue[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.-run-queue\x22,this$);\n}\n}\n});\nre_frame.router._run_queue \x3d (function re_frame$router$_run_queue(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$_run_queue$arity$1 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$_run_queue$arity$1(this$);\n} else {\nreturn re_frame$router$IEventQueue$_run_queue$dyn_24314(this$);\n}\n});\n\nvar re_frame$router$IEventQueue$_exception$dyn_24315 \x3d (function (this$,ex){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router._exception[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,ex) : m__5394__auto__.call(null,this$,ex));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router._exception[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,ex) : m__5392__auto__.call(null,this$,ex));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.-exception\x22,this$);\n}\n}\n});\nre_frame.router._exception \x3d (function re_frame$router$_exception(this$,ex){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$_exception$arity$2 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$_exception$arity$2(this$,ex);\n} else {\nreturn re_frame$router$IEventQueue$_exception$dyn_24315(this$,ex);\n}\n});\n\nvar re_frame$router$IEventQueue$_pause$dyn_24316 \x3d (function (this$,later_fn){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router._pause[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,later_fn) : m__5394__auto__.call(null,this$,later_fn));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router._pause[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,later_fn) : m__5392__auto__.call(null,this$,later_fn));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.-pause\x22,this$);\n}\n}\n});\nre_frame.router._pause \x3d (function re_frame$router$_pause(this$,later_fn){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$_pause$arity$2 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$_pause$arity$2(this$,later_fn);\n} else {\nreturn re_frame$router$IEventQueue$_pause$dyn_24316(this$,later_fn);\n}\n});\n\nvar re_frame$router$IEventQueue$_resume$dyn_24317 \x3d (function (this$){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router._resume[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5394__auto__.call(null,this$));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router._resume[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$1 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$1(this$) : m__5392__auto__.call(null,this$));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.-resume\x22,this$);\n}\n}\n});\nre_frame.router._resume \x3d (function re_frame$router$_resume(this$){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$_resume$arity$1 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$_resume$arity$1(this$);\n} else {\nreturn re_frame$router$IEventQueue$_resume$dyn_24317(this$);\n}\n});\n\nvar re_frame$router$IEventQueue$_call_post_event_callbacks$dyn_24318 \x3d (function (this$,event){\nvar x__5393__auto__ \x3d (((this$ \x3d\x3d null))?null:this$);\nvar m__5394__auto__ \x3d (re_frame.router._call_post_event_callbacks[goog.typeOf(x__5393__auto__)]);\nif((!((m__5394__auto__ \x3d\x3d null)))){\nreturn (m__5394__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5394__auto__.cljs$core$IFn$_invoke$arity$2(this$,event) : m__5394__auto__.call(null,this$,event));\n} else {\nvar m__5392__auto__ \x3d (re_frame.router._call_post_event_callbacks[\x22_\x22]);\nif((!((m__5392__auto__ \x3d\x3d null)))){\nreturn (m__5392__auto__.cljs$core$IFn$_invoke$arity$2 ? m__5392__auto__.cljs$core$IFn$_invoke$arity$2(this$,event) : m__5392__auto__.call(null,this$,event));\n} else {\nthrow cljs.core.missing_protocol(\x22IEventQueue.-call-post-event-callbacks\x22,this$);\n}\n}\n});\nre_frame.router._call_post_event_callbacks \x3d (function re_frame$router$_call_post_event_callbacks(this$,event){\nif((((!((this$ \x3d\x3d null)))) \x26\x26 ((!((this$.re_frame$router$IEventQueue$_call_post_event_callbacks$arity$2 \x3d\x3d null)))))){\nreturn this$.re_frame$router$IEventQueue$_call_post_event_callbacks$arity$2(this$,event);\n} else {\nreturn re_frame$router$IEventQueue$_call_post_event_callbacks$dyn_24318(this$,event);\n}\n});\n\n\n/**\n* @constructor\n * @implements {re_frame.router.IEventQueue}\n*/\nre_frame.router.EventQueue \x3d (function (fsm_state,queue,post_event_callback_fns){\nthis.fsm_state \x3d fsm_state;\nthis.queue \x3d queue;\nthis.post_event_callback_fns \x3d post_event_callback_fns;\n});\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$ \x3d cljs.core.PROTOCOL_SENTINEL);\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$_run_queue$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar n \x3d cljs.core.count(self__.queue);\nwhile(true){\nif((n \x3d\x3d\x3d (0))){\nreturn this$__$1.re_frame$router$IEventQueue$_fsm_trigger$arity$3(null,new cljs.core.Keyword(null,\x22finish-run\x22,\x22finish-run\x22,753148477),null);\n} else {\nvar temp__5802__auto__ \x3d cljs.core.some(re_frame.router.later_fns,cljs.core.keys(cljs.core.meta(cljs.core.peek(self__.queue))));\nif(cljs.core.truth_(temp__5802__auto__)){\nvar later_fn \x3d temp__5802__auto__;\nreturn this$__$1.re_frame$router$IEventQueue$_fsm_trigger$arity$3(null,new cljs.core.Keyword(null,\x22pause\x22,\x22pause\x22,-2095325672),later_fn);\n} else {\nthis$__$1.re_frame$router$IEventQueue$_process_1st_event_in_queue$arity$1(null);\n\nvar G__24319 \x3d (n - (1));\nn \x3d G__24319;\ncontinue;\n}\n}\nbreak;\n}\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$remove_post_event_callback$arity$2 \x3d (function (_,id){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nif((!(cljs.core.contains_QMARK_(self__.post_event_callback_fns,id)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: could not remove post event call back with id:\x22,id], 0));\n} else {\nreturn (self__.post_event_callback_fns \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.post_event_callback_fns,id));\n}\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$_add_event$arity$2 \x3d (function (_,event){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (self__.queue \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.queue,event));\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$_resume$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nthis$__$1.re_frame$router$IEventQueue$_process_1st_event_in_queue$arity$1(null);\n\nreturn this$__$1.re_frame$router$IEventQueue$_run_queue$arity$1(null);\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$push$arity$2 \x3d (function (this$,event){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nreturn this$__$1.re_frame$router$IEventQueue$_fsm_trigger$arity$3(null,new cljs.core.Keyword(null,\x22add-event\x22,\x22add-event\x22,938429088),event);\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$_run_next_tick$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar G__24262 \x3d (function (){\nreturn this$__$1.re_frame$router$IEventQueue$_fsm_trigger$arity$3(null,new cljs.core.Keyword(null,\x22run-queue\x22,\x22run-queue\x22,-1701798027),null);\n});\nreturn (re_frame.interop.next_tick.cljs$core$IFn$_invoke$arity$1 ? re_frame.interop.next_tick.cljs$core$IFn$_invoke$arity$1(G__24262) : re_frame.interop.next_tick.call(null,G__24262));\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$_fsm_trigger$arity$3 \x3d (function (this$,trigger,arg){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__24267 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24268 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),new cljs.core.Keyword(\x22re-frame.router\x22,\x22fsm-trigger\x22,\x22re-frame.router/fsm-trigger\x22,1379787274)], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24268);\n\ntry{try{var vec__24276 \x3d (function (){var G__24279 \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.fsm_state,trigger], null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22idle\x22,\x22idle\x22,-2007156861),new cljs.core.Keyword(null,\x22add-event\x22,\x22add-event\x22,938429088)], null),G__24279)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22scheduled\x22,\x22scheduled\x22,553898551),(function (){\nthis$__$1.re_frame$router$IEventQueue$_add_event$arity$2(null,arg);\n\nreturn this$__$1.re_frame$router$IEventQueue$_run_next_tick$arity$1(null);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),new cljs.core.Keyword(null,\x22exception\x22,\x22exception\x22,-335277064)], null),G__24279)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22idle\x22,\x22idle\x22,-2007156861),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_exception$arity$2(null,arg);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),new cljs.core.Keyword(null,\x22finish-run\x22,\x22finish-run\x22,753148477)], null),G__24279)){\nif(cljs.core.empty_QMARK_(self__.queue)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22idle\x22,\x22idle\x22,-2007156861)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22scheduled\x22,\x22scheduled\x22,553898551),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_run_next_tick$arity$1(null);\n})], null);\n}\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),new cljs.core.Keyword(null,\x22pause\x22,\x22pause\x22,-2095325672)], null),G__24279)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22paused\x22,\x22paused\x22,-1710376127),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_pause$arity$2(null,arg);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22paused\x22,\x22paused\x22,-1710376127),new cljs.core.Keyword(null,\x22resume\x22,\x22resume\x22,-118572261)], null),G__24279)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_resume$arity$1(null);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22scheduled\x22,\x22scheduled\x22,553898551),new cljs.core.Keyword(null,\x22run-queue\x22,\x22run-queue\x22,-1701798027)], null),G__24279)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_run_queue$arity$1(null);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22paused\x22,\x22paused\x22,-1710376127),new cljs.core.Keyword(null,\x22add-event\x22,\x22add-event\x22,938429088)], null),G__24279)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22paused\x22,\x22paused\x22,-1710376127),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_add_event$arity$2(null,arg);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),new cljs.core.Keyword(null,\x22add-event\x22,\x22add-event\x22,938429088)], null),G__24279)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_add_event$arity$2(null,arg);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22scheduled\x22,\x22scheduled\x22,553898551),new cljs.core.Keyword(null,\x22add-event\x22,\x22add-event\x22,938429088)], null),G__24279)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22scheduled\x22,\x22scheduled\x22,553898551),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_add_event$arity$2(null,arg);\n})], null);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\x22re-frame: router state transition not found. \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fsm_state),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(trigger)].join(\x27\x27),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22fsm-state\x22,\x22fsm-state\x22,1656310533),self__.fsm_state,new cljs.core.Keyword(null,\x22trigger\x22,\x22trigger\x22,103466139),trigger], null));\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n})();\nvar new_fsm_state \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24276,(0),null);\nvar action_fn \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24276,(1),null);\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24323 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.fsm_state,trigger], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22current-state\x22,\x22current-state\x22,1048284452),self__.fsm_state,new cljs.core.Keyword(null,\x22new-state\x22,\x22new-state\x22,-490349212),new_fsm_state], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.fsm_state,trigger], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22current-state\x22,\x22current-state\x22,1048284452),self__.fsm_state,new cljs.core.Keyword(null,\x22new-state\x22,\x22new-state\x22,-490349212),new_fsm_state], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24323);\n\n} else {\n}\n\n(self__.fsm_state \x3d new_fsm_state);\n\nif(cljs.core.truth_(action_fn)){\nreturn (action_fn.cljs$core$IFn$_invoke$arity$0 ? action_fn.cljs$core$IFn$_invoke$arity$0() : action_fn.call(null));\n} else {\nreturn null;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24331 \x3d re_frame.interop.now();\nvar duration__23969__auto___24332 \x3d (end__23968__auto___24331 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24332,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24331);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24267);\n}} else {\nvar vec__24292 \x3d (function (){var G__24295 \x3d new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.fsm_state,trigger], null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22idle\x22,\x22idle\x22,-2007156861),new cljs.core.Keyword(null,\x22add-event\x22,\x22add-event\x22,938429088)], null),G__24295)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22scheduled\x22,\x22scheduled\x22,553898551),(function (){\nthis$__$1.re_frame$router$IEventQueue$_add_event$arity$2(null,arg);\n\nreturn this$__$1.re_frame$router$IEventQueue$_run_next_tick$arity$1(null);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),new cljs.core.Keyword(null,\x22exception\x22,\x22exception\x22,-335277064)], null),G__24295)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22idle\x22,\x22idle\x22,-2007156861),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_exception$arity$2(null,arg);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),new cljs.core.Keyword(null,\x22finish-run\x22,\x22finish-run\x22,753148477)], null),G__24295)){\nif(cljs.core.empty_QMARK_(self__.queue)){\nreturn new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22idle\x22,\x22idle\x22,-2007156861)], null);\n} else {\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22scheduled\x22,\x22scheduled\x22,553898551),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_run_next_tick$arity$1(null);\n})], null);\n}\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),new cljs.core.Keyword(null,\x22pause\x22,\x22pause\x22,-2095325672)], null),G__24295)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22paused\x22,\x22paused\x22,-1710376127),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_pause$arity$2(null,arg);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22paused\x22,\x22paused\x22,-1710376127),new cljs.core.Keyword(null,\x22resume\x22,\x22resume\x22,-118572261)], null),G__24295)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_resume$arity$1(null);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22scheduled\x22,\x22scheduled\x22,553898551),new cljs.core.Keyword(null,\x22run-queue\x22,\x22run-queue\x22,-1701798027)], null),G__24295)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_run_queue$arity$1(null);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22paused\x22,\x22paused\x22,-1710376127),new cljs.core.Keyword(null,\x22add-event\x22,\x22add-event\x22,938429088)], null),G__24295)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22paused\x22,\x22paused\x22,-1710376127),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_add_event$arity$2(null,arg);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),new cljs.core.Keyword(null,\x22add-event\x22,\x22add-event\x22,938429088)], null),G__24295)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22running\x22,\x22running\x22,1554969103),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_add_event$arity$2(null,arg);\n})], null);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22scheduled\x22,\x22scheduled\x22,553898551),new cljs.core.Keyword(null,\x22add-event\x22,\x22add-event\x22,938429088)], null),G__24295)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22scheduled\x22,\x22scheduled\x22,553898551),(function (){\nreturn this$__$1.re_frame$router$IEventQueue$_add_event$arity$2(null,arg);\n})], null);\n} else {\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2([\x22re-frame: router state transition not found. \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(self__.fsm_state),\x22 \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(trigger)].join(\x27\x27),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22fsm-state\x22,\x22fsm-state\x22,1656310533),self__.fsm_state,new cljs.core.Keyword(null,\x22trigger\x22,\x22trigger\x22,103466139),trigger], null));\n\n}\n}\n}\n}\n}\n}\n}\n}\n}\n})();\nvar new_fsm_state \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24292,(0),null);\nvar action_fn \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24292,(1),null);\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24336 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.fsm_state,trigger], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22current-state\x22,\x22current-state\x22,1048284452),self__.fsm_state,new cljs.core.Keyword(null,\x22new-state\x22,\x22new-state\x22,-490349212),new_fsm_state], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.fsm_state,trigger], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22current-state\x22,\x22current-state\x22,1048284452),self__.fsm_state,new cljs.core.Keyword(null,\x22new-state\x22,\x22new-state\x22,-490349212),new_fsm_state], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24336);\n\n} else {\n}\n\n(self__.fsm_state \x3d new_fsm_state);\n\nif(cljs.core.truth_(action_fn)){\nreturn (action_fn.cljs$core$IFn$_invoke$arity$0 ? action_fn.cljs$core$IFn$_invoke$arity$0() : action_fn.call(null));\n} else {\nreturn null;\n}\n}\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$_pause$arity$2 \x3d (function (this$,later_fn){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar G__24300 \x3d (function (){\nreturn this$__$1.re_frame$router$IEventQueue$_fsm_trigger$arity$3(null,new cljs.core.Keyword(null,\x22resume\x22,\x22resume\x22,-118572261),null);\n});\nreturn (later_fn.cljs$core$IFn$_invoke$arity$1 ? later_fn.cljs$core$IFn$_invoke$arity$1(G__24300) : later_fn.call(null,G__24300));\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$add_post_event_callback$arity$3 \x3d (function (_,id,callback_fn){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nif(cljs.core.contains_QMARK_(self__.post_event_callback_fns,id)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: overwriting existing post event call back with id:\x22,id], 0));\n} else {\n}\n\nreturn (self__.post_event_callback_fns \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.post_event_callback_fns,id,callback_fn));\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$_process_1st_event_in_queue$arity$1 \x3d (function (this$){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nvar event_v \x3d cljs.core.peek(self__.queue);\ntry{re_frame.events.handle(event_v);\n\n(self__.queue \x3d cljs.core.pop(self__.queue));\n\nreturn this$__$1.re_frame$router$IEventQueue$_call_post_event_callbacks$arity$2(null,event_v);\n}catch (e24301){var ex \x3d e24301;\nreturn this$__$1.re_frame$router$IEventQueue$_fsm_trigger$arity$3(null,new cljs.core.Keyword(null,\x22exception\x22,\x22exception\x22,-335277064),ex);\n}}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$_call_post_event_callbacks$arity$2 \x3d (function (_,event_v){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nvar seq__24302 \x3d cljs.core.seq(cljs.core.vals(self__.post_event_callback_fns));\nvar chunk__24303 \x3d null;\nvar count__24304 \x3d (0);\nvar i__24305 \x3d (0);\nwhile(true){\nif((i__24305 \x3c count__24304)){\nvar callback \x3d chunk__24303.cljs$core$IIndexed$_nth$arity$2(null,i__24305);\n(callback.cljs$core$IFn$_invoke$arity$2 ? callback.cljs$core$IFn$_invoke$arity$2(event_v,self__.queue) : callback.call(null,event_v,self__.queue));\n\n\nvar G__24343 \x3d seq__24302;\nvar G__24344 \x3d chunk__24303;\nvar G__24345 \x3d count__24304;\nvar G__24346 \x3d (i__24305 + (1));\nseq__24302 \x3d G__24343;\nchunk__24303 \x3d G__24344;\ncount__24304 \x3d G__24345;\ni__24305 \x3d G__24346;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__24302);\nif(temp__5804__auto__){\nvar seq__24302__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__24302__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__24302__$1);\nvar G__24347 \x3d cljs.core.chunk_rest(seq__24302__$1);\nvar G__24348 \x3d c__5568__auto__;\nvar G__24349 \x3d cljs.core.count(c__5568__auto__);\nvar G__24350 \x3d (0);\nseq__24302 \x3d G__24347;\nchunk__24303 \x3d G__24348;\ncount__24304 \x3d G__24349;\ni__24305 \x3d G__24350;\ncontinue;\n} else {\nvar callback \x3d cljs.core.first(seq__24302__$1);\n(callback.cljs$core$IFn$_invoke$arity$2 ? callback.cljs$core$IFn$_invoke$arity$2(event_v,self__.queue) : callback.call(null,event_v,self__.queue));\n\n\nvar G__24351 \x3d cljs.core.next(seq__24302__$1);\nvar G__24352 \x3d null;\nvar G__24353 \x3d (0);\nvar G__24354 \x3d (0);\nseq__24302 \x3d G__24351;\nchunk__24303 \x3d G__24352;\ncount__24304 \x3d G__24353;\ni__24305 \x3d G__24354;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$purge$arity$1 \x3d (function (_){\nvar self__ \x3d this;\nvar ___$1 \x3d this;\nreturn (self__.queue \x3d re_frame.interop.empty_queue);\n}));\n\n(re_frame.router.EventQueue.prototype.re_frame$router$IEventQueue$_exception$arity$2 \x3d (function (this$,ex){\nvar self__ \x3d this;\nvar this$__$1 \x3d this;\nthis$__$1.re_frame$router$IEventQueue$purge$arity$1(null);\n\nthrow ex;\n}));\n\n(re_frame.router.EventQueue.getBasis \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.with_meta(new cljs.core.Symbol(null,\x22fsm-state\x22,\x22fsm-state\x22,-998125236,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22queue\x22,\x22queue\x22,-1198599890,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null)),cljs.core.with_meta(new cljs.core.Symbol(null,\x22post-event-callback-fns\x22,\x22post-event-callback-fns\x22,-297038335,null),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22mutable\x22,\x22mutable\x22,875778266),true], null))], null);\n}));\n\n(re_frame.router.EventQueue.cljs$lang$type \x3d true);\n\n(re_frame.router.EventQueue.cljs$lang$ctorStr \x3d \x22re-frame.router/EventQueue\x22);\n\n(re_frame.router.EventQueue.cljs$lang$ctorPrWriter \x3d (function (this__5330__auto__,writer__5331__auto__,opt__5332__auto__){\nreturn cljs.core._write(writer__5331__auto__,\x22re-frame.router/EventQueue\x22);\n}));\n\n/**\n * Positional factory function for re-frame.router/EventQueue.\n */\nre_frame.router.__GT_EventQueue \x3d (function re_frame$router$__GT_EventQueue(fsm_state,queue,post_event_callback_fns){\nreturn (new re_frame.router.EventQueue(fsm_state,queue,post_event_callback_fns));\n});\n\nre_frame.router.event_queue \x3d re_frame.router.__GT_EventQueue(new cljs.core.Keyword(null,\x22idle\x22,\x22idle\x22,-2007156861),re_frame.interop.empty_queue,cljs.core.PersistentArrayMap.EMPTY);\nre_frame.router.dispatch \x3d (function re_frame$router$dispatch(event){\nif((event \x3d\x3d null)){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\x22re-frame: you called \\\x22dispatch\\\x22 without an event vector.\x22,cljs.core.PersistentArrayMap.EMPTY);\n} else {\nre_frame.router.event_queue.re_frame$router$IEventQueue$push$arity$2(null,event);\n}\n\nreturn null;\n});\nre_frame.router.dispatch_sync \x3d (function re_frame$router$dispatch_sync(event_v){\nre_frame.events.handle(event_v);\n\nre_frame.router.event_queue.re_frame$router$IEventQueue$_call_post_event_callbacks$arity$2(null,event_v);\n\nreturn null;\n});\n");
SHADOW_ENV.evalLoad("re_frame.fx.js", true , "goog.provide(\x27re_frame.fx\x27);\nre_frame.fx.kind \x3d new cljs.core.Keyword(null,\x22fx\x22,\x22fx\x22,-1237829572);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind) : re_frame.registrar.kinds.call(null,re_frame.fx.kind)))){\n} else {\nthrow (new Error(\x22Assert failed: (re-frame.registrar/kinds kind)\x22));\n}\nre_frame.fx.reg_fx \x3d (function re_frame$fx$reg_fx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.fx.kind,id,handler);\n});\n/**\n * An interceptor whose `:after` actions the contents of `:effects`. As a result,\n *   this interceptor is Domino 3.\n * \n *   This interceptor is silently added (by reg-event-db etc) to the front of\n *   interceptor chains for all events.\n * \n *   For each key in `:effects` (a map), it calls the registered `effects handler`\n *   (see `reg-fx` for registration of effect handlers).\n * \n *   So, if `:effects` was:\n *    {:dispatch  [:hello 42]\n *     :db        {...}\n *     :undo      \x22set flag\x22}\n * \n *   it will call the registered effect handlers for each of the map\x27s keys:\n *   `:dispatch`, `:undo` and `:db`. When calling each handler, provides the map\n *   value for that key - so in the example above the effect handler for :dispatch\n *   will be given one arg `[:hello 42]`.\n * \n *   You cannot rely on the ordering in which effects are executed, other than that\n *   `:db` is guaranteed to be executed first.\n */\nre_frame.fx.do_fx \x3d re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22do-fx\x22,\x22do-fx\x22,1194163050),new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),(function re_frame$fx$do_fx_after(context){\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar _STAR_current_trace_STAR__orig_val__24320 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24321 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),new cljs.core.Keyword(\x22event\x22,\x22do-fx\x22,\x22event/do-fx\x22,1357330452)], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24321);\n\ntry{try{var effects \x3d new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759));\nvar temp__5804__auto___24402 \x3d new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5804__auto___24402)){\nvar new_db_24403 \x3d temp__5804__auto___24402;\nvar fexpr__24322_24404 \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),false);\n(fexpr__24322_24404.cljs$core$IFn$_invoke$arity$1 ? fexpr__24322_24404.cljs$core$IFn$_invoke$arity$1(new_db_24403) : fexpr__24322_24404.call(null,new_db_24403));\n} else {\n}\n\nvar seq__24324 \x3d cljs.core.seq(effects_without_db);\nvar chunk__24325 \x3d null;\nvar count__24326 \x3d (0);\nvar i__24327 \x3d (0);\nwhile(true){\nif((i__24327 \x3c count__24326)){\nvar vec__24337 \x3d chunk__24325.cljs$core$IIndexed$_nth$arity$2(null,i__24327);\nvar effect_key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24337,(0),null);\nvar effect_value \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24337,(1),null);\nvar temp__5802__auto___24405 \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___24405)){\nvar effect_fn_24406 \x3d temp__5802__auto___24405;\n(effect_fn_24406.cljs$core$IFn$_invoke$arity$1 ? effect_fn_24406.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_24406.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: no handler registered for effect:\x22,effect_key,\x22. Ignoring.\x22], 0));\n}\n\n\nvar G__24407 \x3d seq__24324;\nvar G__24408 \x3d chunk__24325;\nvar G__24409 \x3d count__24326;\nvar G__24410 \x3d (i__24327 + (1));\nseq__24324 \x3d G__24407;\nchunk__24325 \x3d G__24408;\ncount__24326 \x3d G__24409;\ni__24327 \x3d G__24410;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__24324);\nif(temp__5804__auto__){\nvar seq__24324__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__24324__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__24324__$1);\nvar G__24411 \x3d cljs.core.chunk_rest(seq__24324__$1);\nvar G__24412 \x3d c__5568__auto__;\nvar G__24413 \x3d cljs.core.count(c__5568__auto__);\nvar G__24414 \x3d (0);\nseq__24324 \x3d G__24411;\nchunk__24325 \x3d G__24412;\ncount__24326 \x3d G__24413;\ni__24327 \x3d G__24414;\ncontinue;\n} else {\nvar vec__24340 \x3d cljs.core.first(seq__24324__$1);\nvar effect_key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24340,(0),null);\nvar effect_value \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24340,(1),null);\nvar temp__5802__auto___24415 \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___24415)){\nvar effect_fn_24416 \x3d temp__5802__auto___24415;\n(effect_fn_24416.cljs$core$IFn$_invoke$arity$1 ? effect_fn_24416.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_24416.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: no handler registered for effect:\x22,effect_key,\x22. Ignoring.\x22], 0));\n}\n\n\nvar G__24417 \x3d cljs.core.next(seq__24324__$1);\nvar G__24418 \x3d null;\nvar G__24419 \x3d (0);\nvar G__24420 \x3d (0);\nseq__24324 \x3d G__24417;\nchunk__24325 \x3d G__24418;\ncount__24326 \x3d G__24419;\ni__24327 \x3d G__24420;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24421 \x3d re_frame.interop.now();\nvar duration__23969__auto___24422 \x3d (end__23968__auto___24421 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24422,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24421);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24320);\n}} else {\nvar effects \x3d new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292).cljs$core$IFn$_invoke$arity$1(context);\nvar effects_without_db \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(effects,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759));\nvar temp__5804__auto___24423 \x3d new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759).cljs$core$IFn$_invoke$arity$1(effects);\nif(cljs.core.truth_(temp__5804__auto___24423)){\nvar new_db_24424 \x3d temp__5804__auto___24423;\nvar fexpr__24355_24425 \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),false);\n(fexpr__24355_24425.cljs$core$IFn$_invoke$arity$1 ? fexpr__24355_24425.cljs$core$IFn$_invoke$arity$1(new_db_24424) : fexpr__24355_24425.call(null,new_db_24424));\n} else {\n}\n\nvar seq__24356 \x3d cljs.core.seq(effects_without_db);\nvar chunk__24357 \x3d null;\nvar count__24358 \x3d (0);\nvar i__24359 \x3d (0);\nwhile(true){\nif((i__24359 \x3c count__24358)){\nvar vec__24366 \x3d chunk__24357.cljs$core$IIndexed$_nth$arity$2(null,i__24359);\nvar effect_key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24366,(0),null);\nvar effect_value \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24366,(1),null);\nvar temp__5802__auto___24426 \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___24426)){\nvar effect_fn_24427 \x3d temp__5802__auto___24426;\n(effect_fn_24427.cljs$core$IFn$_invoke$arity$1 ? effect_fn_24427.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_24427.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: no handler registered for effect:\x22,effect_key,\x22. Ignoring.\x22], 0));\n}\n\n\nvar G__24428 \x3d seq__24356;\nvar G__24429 \x3d chunk__24357;\nvar G__24430 \x3d count__24358;\nvar G__24431 \x3d (i__24359 + (1));\nseq__24356 \x3d G__24428;\nchunk__24357 \x3d G__24429;\ncount__24358 \x3d G__24430;\ni__24359 \x3d G__24431;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__24356);\nif(temp__5804__auto__){\nvar seq__24356__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__24356__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__24356__$1);\nvar G__24432 \x3d cljs.core.chunk_rest(seq__24356__$1);\nvar G__24433 \x3d c__5568__auto__;\nvar G__24434 \x3d cljs.core.count(c__5568__auto__);\nvar G__24435 \x3d (0);\nseq__24356 \x3d G__24432;\nchunk__24357 \x3d G__24433;\ncount__24358 \x3d G__24434;\ni__24359 \x3d G__24435;\ncontinue;\n} else {\nvar vec__24369 \x3d cljs.core.first(seq__24356__$1);\nvar effect_key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24369,(0),null);\nvar effect_value \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24369,(1),null);\nvar temp__5802__auto___24436 \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___24436)){\nvar effect_fn_24437 \x3d temp__5802__auto___24436;\n(effect_fn_24437.cljs$core$IFn$_invoke$arity$1 ? effect_fn_24437.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_24437.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: no handler registered for effect:\x22,effect_key,\x22. Ignoring.\x22], 0));\n}\n\n\nvar G__24438 \x3d cljs.core.next(seq__24356__$1);\nvar G__24439 \x3d null;\nvar G__24440 \x3d (0);\nvar G__24441 \x3d (0);\nseq__24356 \x3d G__24438;\nchunk__24357 \x3d G__24439;\ncount__24358 \x3d G__24440;\ni__24359 \x3d G__24441;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n})], 0));\nre_frame.fx.dispatch_later \x3d (function re_frame$fx$dispatch_later(p__24372){\nvar map__24373 \x3d p__24372;\nvar map__24373__$1 \x3d cljs.core.__destructure_map(map__24373);\nvar effect \x3d map__24373__$1;\nvar ms \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24373__$1,new cljs.core.Keyword(null,\x22ms\x22,\x22ms\x22,-1152709733));\nvar dispatch \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24373__$1,new cljs.core.Keyword(null,\x22dispatch\x22,\x22dispatch\x22,1319337009));\nif(((cljs.core.empty_QMARK_(dispatch)) || ((!(typeof ms \x3d\x3d\x3d \x27number\x27))))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: ignoring bad :dispatch-later value:\x22,effect], 0));\n} else {\nreturn re_frame.interop.set_timeout_BANG_((function (){\nreturn re_frame.router.dispatch(dispatch);\n}),ms);\n}\n});\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\x22dispatch-later\x22,\x22dispatch-later\x22,291951390),(function (value){\nif(cljs.core.map_QMARK_(value)){\nreturn re_frame.fx.dispatch_later(value);\n} else {\nvar seq__24374 \x3d cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__24375 \x3d null;\nvar count__24376 \x3d (0);\nvar i__24377 \x3d (0);\nwhile(true){\nif((i__24377 \x3c count__24376)){\nvar effect \x3d chunk__24375.cljs$core$IIndexed$_nth$arity$2(null,i__24377);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__24442 \x3d seq__24374;\nvar G__24443 \x3d chunk__24375;\nvar G__24444 \x3d count__24376;\nvar G__24445 \x3d (i__24377 + (1));\nseq__24374 \x3d G__24442;\nchunk__24375 \x3d G__24443;\ncount__24376 \x3d G__24444;\ni__24377 \x3d G__24445;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__24374);\nif(temp__5804__auto__){\nvar seq__24374__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__24374__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__24374__$1);\nvar G__24446 \x3d cljs.core.chunk_rest(seq__24374__$1);\nvar G__24447 \x3d c__5568__auto__;\nvar G__24448 \x3d cljs.core.count(c__5568__auto__);\nvar G__24449 \x3d (0);\nseq__24374 \x3d G__24446;\nchunk__24375 \x3d G__24447;\ncount__24376 \x3d G__24448;\ni__24377 \x3d G__24449;\ncontinue;\n} else {\nvar effect \x3d cljs.core.first(seq__24374__$1);\nre_frame.fx.dispatch_later(effect);\n\n\nvar G__24450 \x3d cljs.core.next(seq__24374__$1);\nvar G__24451 \x3d null;\nvar G__24452 \x3d (0);\nvar G__24453 \x3d (0);\nseq__24374 \x3d G__24450;\nchunk__24375 \x3d G__24451;\ncount__24376 \x3d G__24452;\ni__24377 \x3d G__24453;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\x22fx\x22,\x22fx\x22,-1237829572),(function (seq_of_effects){\nif((!(cljs.core.sequential_QMARK_(seq_of_effects)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: \\\x22:fx\\\x22 effect expects a seq, but was given \x22,cljs.core.type(seq_of_effects)], 0));\n} else {\nvar seq__24378 \x3d cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,seq_of_effects));\nvar chunk__24379 \x3d null;\nvar count__24380 \x3d (0);\nvar i__24381 \x3d (0);\nwhile(true){\nif((i__24381 \x3c count__24380)){\nvar vec__24388 \x3d chunk__24379.cljs$core$IIndexed$_nth$arity$2(null,i__24381);\nvar effect_key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24388,(0),null);\nvar effect_value \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24388,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: \\\x22:fx\\\x22 effect should not contain a :db effect\x22], 0));\n} else {\n}\n\nvar temp__5802__auto___24454 \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___24454)){\nvar effect_fn_24455 \x3d temp__5802__auto___24454;\n(effect_fn_24455.cljs$core$IFn$_invoke$arity$1 ? effect_fn_24455.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_24455.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: in \\\x22:fx\\\x22 effect found \x22,effect_key,\x22 which has no associated handler. Ignoring.\x22], 0));\n}\n\n\nvar G__24456 \x3d seq__24378;\nvar G__24457 \x3d chunk__24379;\nvar G__24458 \x3d count__24380;\nvar G__24459 \x3d (i__24381 + (1));\nseq__24378 \x3d G__24456;\nchunk__24379 \x3d G__24457;\ncount__24380 \x3d G__24458;\ni__24381 \x3d G__24459;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__24378);\nif(temp__5804__auto__){\nvar seq__24378__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__24378__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__24378__$1);\nvar G__24460 \x3d cljs.core.chunk_rest(seq__24378__$1);\nvar G__24461 \x3d c__5568__auto__;\nvar G__24462 \x3d cljs.core.count(c__5568__auto__);\nvar G__24463 \x3d (0);\nseq__24378 \x3d G__24460;\nchunk__24379 \x3d G__24461;\ncount__24380 \x3d G__24462;\ni__24381 \x3d G__24463;\ncontinue;\n} else {\nvar vec__24391 \x3d cljs.core.first(seq__24378__$1);\nvar effect_key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24391,(0),null);\nvar effect_value \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24391,(1),null);\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),effect_key)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: \\\x22:fx\\\x22 effect should not contain a :db effect\x22], 0));\n} else {\n}\n\nvar temp__5802__auto___24464 \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$3(re_frame.fx.kind,effect_key,false);\nif(cljs.core.truth_(temp__5802__auto___24464)){\nvar effect_fn_24465 \x3d temp__5802__auto___24464;\n(effect_fn_24465.cljs$core$IFn$_invoke$arity$1 ? effect_fn_24465.cljs$core$IFn$_invoke$arity$1(effect_value) : effect_fn_24465.call(null,effect_value));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: in \\\x22:fx\\\x22 effect found \x22,effect_key,\x22 which has no associated handler. Ignoring.\x22], 0));\n}\n\n\nvar G__24466 \x3d cljs.core.next(seq__24378__$1);\nvar G__24467 \x3d null;\nvar G__24468 \x3d (0);\nvar G__24469 \x3d (0);\nseq__24378 \x3d G__24466;\nchunk__24379 \x3d G__24467;\ncount__24380 \x3d G__24468;\ni__24381 \x3d G__24469;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\x22dispatch\x22,\x22dispatch\x22,1319337009),(function (value){\nif((!(cljs.core.vector_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: ignoring bad :dispatch value. Expected a vector, but got:\x22,value], 0));\n} else {\nreturn re_frame.router.dispatch(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\x22dispatch-n\x22,\x22dispatch-n\x22,-504469236),(function (value){\nif((!(cljs.core.sequential_QMARK_(value)))){\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: ignoring bad :dispatch-n value. Expected a collection, but got:\x22,value], 0));\n} else {\nvar seq__24394 \x3d cljs.core.seq(cljs.core.remove.cljs$core$IFn$_invoke$arity$2(cljs.core.nil_QMARK_,value));\nvar chunk__24395 \x3d null;\nvar count__24396 \x3d (0);\nvar i__24397 \x3d (0);\nwhile(true){\nif((i__24397 \x3c count__24396)){\nvar event \x3d chunk__24395.cljs$core$IIndexed$_nth$arity$2(null,i__24397);\nre_frame.router.dispatch(event);\n\n\nvar G__24470 \x3d seq__24394;\nvar G__24471 \x3d chunk__24395;\nvar G__24472 \x3d count__24396;\nvar G__24473 \x3d (i__24397 + (1));\nseq__24394 \x3d G__24470;\nchunk__24395 \x3d G__24471;\ncount__24396 \x3d G__24472;\ni__24397 \x3d G__24473;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__24394);\nif(temp__5804__auto__){\nvar seq__24394__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__24394__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__24394__$1);\nvar G__24474 \x3d cljs.core.chunk_rest(seq__24394__$1);\nvar G__24475 \x3d c__5568__auto__;\nvar G__24476 \x3d cljs.core.count(c__5568__auto__);\nvar G__24477 \x3d (0);\nseq__24394 \x3d G__24474;\nchunk__24395 \x3d G__24475;\ncount__24396 \x3d G__24476;\ni__24397 \x3d G__24477;\ncontinue;\n} else {\nvar event \x3d cljs.core.first(seq__24394__$1);\nre_frame.router.dispatch(event);\n\n\nvar G__24478 \x3d cljs.core.next(seq__24394__$1);\nvar G__24479 \x3d null;\nvar G__24480 \x3d (0);\nvar G__24481 \x3d (0);\nseq__24394 \x3d G__24478;\nchunk__24395 \x3d G__24479;\ncount__24396 \x3d G__24480;\ni__24397 \x3d G__24481;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\x22deregister-event-handler\x22,\x22deregister-event-handler\x22,-1096518994),(function (value){\nvar clear_event \x3d cljs.core.partial.cljs$core$IFn$_invoke$arity$2(re_frame.registrar.clear_handlers,re_frame.events.kind);\nif(cljs.core.sequential_QMARK_(value)){\nvar seq__24398 \x3d cljs.core.seq(value);\nvar chunk__24399 \x3d null;\nvar count__24400 \x3d (0);\nvar i__24401 \x3d (0);\nwhile(true){\nif((i__24401 \x3c count__24400)){\nvar event \x3d chunk__24399.cljs$core$IIndexed$_nth$arity$2(null,i__24401);\nclear_event(event);\n\n\nvar G__24482 \x3d seq__24398;\nvar G__24483 \x3d chunk__24399;\nvar G__24484 \x3d count__24400;\nvar G__24485 \x3d (i__24401 + (1));\nseq__24398 \x3d G__24482;\nchunk__24399 \x3d G__24483;\ncount__24400 \x3d G__24484;\ni__24401 \x3d G__24485;\ncontinue;\n} else {\nvar temp__5804__auto__ \x3d cljs.core.seq(seq__24398);\nif(temp__5804__auto__){\nvar seq__24398__$1 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(seq__24398__$1)){\nvar c__5568__auto__ \x3d cljs.core.chunk_first(seq__24398__$1);\nvar G__24486 \x3d cljs.core.chunk_rest(seq__24398__$1);\nvar G__24487 \x3d c__5568__auto__;\nvar G__24488 \x3d cljs.core.count(c__5568__auto__);\nvar G__24489 \x3d (0);\nseq__24398 \x3d G__24486;\nchunk__24399 \x3d G__24487;\ncount__24400 \x3d G__24488;\ni__24401 \x3d G__24489;\ncontinue;\n} else {\nvar event \x3d cljs.core.first(seq__24398__$1);\nclear_event(event);\n\n\nvar G__24490 \x3d cljs.core.next(seq__24398__$1);\nvar G__24491 \x3d null;\nvar G__24492 \x3d (0);\nvar G__24493 \x3d (0);\nseq__24398 \x3d G__24490;\nchunk__24399 \x3d G__24491;\ncount__24400 \x3d G__24492;\ni__24401 \x3d G__24493;\ncontinue;\n}\n} else {\nreturn null;\n}\n}\nbreak;\n}\n} else {\nreturn clear_event(value);\n}\n}));\nre_frame.fx.reg_fx(new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),(function (value){\nif((!((cljs.core.deref(re_frame.db.app_db) \x3d\x3d\x3d value)))){\nreturn cljs.core.reset_BANG_(re_frame.db.app_db,value);\n} else {\nreturn null;\n}\n}));\n");
SHADOW_ENV.evalLoad("re_frame.cofx.js", true , "goog.provide(\x27re_frame.cofx\x27);\nre_frame.cofx.kind \x3d new cljs.core.Keyword(null,\x22cofx\x22,\x22cofx\x22,2013202907);\nif(cljs.core.truth_((re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1 ? re_frame.registrar.kinds.cljs$core$IFn$_invoke$arity$1(re_frame.cofx.kind) : re_frame.registrar.kinds.call(null,re_frame.cofx.kind)))){\n} else {\nthrow (new Error(\x22Assert failed: (re-frame.registrar/kinds kind)\x22));\n}\nre_frame.cofx.reg_cofx \x3d (function re_frame$cofx$reg_cofx(id,handler){\nreturn re_frame.registrar.register_handler(re_frame.cofx.kind,id,handler);\n});\nre_frame.cofx.inject_cofx \x3d (function re_frame$cofx$inject_cofx(var_args){\nvar G__24118 \x3d arguments.length;\nswitch (G__24118) {\ncase 1:\nreturn re_frame.cofx.inject_cofx.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.cofx.inject_cofx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.cofx.inject_cofx.cljs$core$IFn$_invoke$arity$1 \x3d (function (id){\nreturn re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),(function re_frame$cofx$coeffects_before(context){\nvar temp__5802__auto__ \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(re_frame.cofx.kind,id);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar handler \x3d temp__5802__auto__;\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),handler);\n} else {\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22No cofx handler registered for\x22,id], 0));\n}\n})], 0));\n}));\n\n(re_frame.cofx.inject_cofx.cljs$core$IFn$_invoke$arity$2 \x3d (function (id,value){\nreturn re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),(function re_frame$cofx$coeffects_before(context){\nvar temp__5802__auto__ \x3d re_frame.registrar.get_handler.cljs$core$IFn$_invoke$arity$2(re_frame.cofx.kind,id);\nif(cljs.core.truth_(temp__5802__auto__)){\nvar handler \x3d temp__5802__auto__;\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),handler,value);\n} else {\nreturn re_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22No cofx handler registered for\x22,id], 0));\n}\n})], 0));\n}));\n\n(re_frame.cofx.inject_cofx.cljs$lang$maxFixedArity \x3d 2);\n\nre_frame.cofx.reg_cofx(new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),(function re_frame$cofx$db_coeffects_handler(coeffects){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(coeffects,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),cljs.core.deref(re_frame.db.app_db));\n}));\nre_frame.cofx.inject_db \x3d re_frame.cofx.inject_cofx.cljs$core$IFn$_invoke$arity$1(new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759));\n");
SHADOW_ENV.evalLoad("re_frame.std_interceptors.js", true , "goog.provide(\x27re_frame.std_interceptors\x27);\nre_frame.std_interceptors.debug \x3d re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22debug\x22,\x22debug\x22,-1608172596),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),(function re_frame$std_interceptors$debug_before(context){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22log\x22,\x22log\x22,-1595516004),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22Handling re-frame event:\x22,re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442))], 0));\n\nreturn context;\n}),new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),(function re_frame$std_interceptors$debug_after(context){\nvar event \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442));\nvar orig_db \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759));\nvar new_db \x3d re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),new cljs.core.Keyword(\x22re-frame.std-interceptors\x22,\x22not-found\x22,\x22re-frame.std-interceptors/not-found\x22,-1614827865));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(new_db,new cljs.core.Keyword(\x22re-frame.std-interceptors\x22,\x22not-found\x22,\x22re-frame.std-interceptors/not-found\x22,-1614827865))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22log\x22,\x22log\x22,-1595516004),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22No app-db changes in:\x22,event], 0));\n} else {\nvar vec__24140_24243 \x3d clojure.data.diff(orig_db,new_db);\nvar only_before_24244 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24140_24243,(0),null);\nvar only_after_24245 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24140_24243,(1),null);\nvar db_changed_QMARK__24246 \x3d (((!((only_before_24244 \x3d\x3d null)))) || ((!((only_after_24245 \x3d\x3d null)))));\nif(db_changed_QMARK__24246){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22db clojure.data/diff for:\x22,event], 0));\n\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22log\x22,\x22log\x22,-1595516004),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22only before:\x22,only_before_24244], 0));\n\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22log\x22,\x22log\x22,-1595516004),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22only after :\x22,only_after_24245], 0));\n\nre_frame.loggers.console(new cljs.core.Keyword(null,\x22groupEnd\x22,\x22groupEnd\x22,-337721382));\n} else {\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22log\x22,\x22log\x22,-1595516004),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22No app-db changes resulted from:\x22,event], 0));\n}\n}\n\nreturn context;\n})], 0));\nre_frame.std_interceptors.unwrap \x3d re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22unwrap\x22,\x22unwrap\x22,-1399175462),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),(function re_frame$std_interceptors$unwrap_before(context){\nvar vec__24144 \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442));\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24144,(0),null);\nvar payload \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__24144,(1),null);\nvar event \x3d vec__24144;\nif((!(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((2),cljs.core.count(event))) \x26\x26 (cljs.core.map_QMARK_(payload)))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: \\\x22unwrap\\\x22 interceptor requires event to be a 2-vector of [event-id payload-map]. Got \x22,event], 0));\n\nreturn context;\n} else {\nreturn re_frame.interceptor.assoc_coeffect(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442),payload);\n}\n}),new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),(function re_frame$std_interceptors$unwrap_after(context){\nreturn re_frame.interceptor.assoc_coeffect(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22original-event\x22,\x22original-event\x22,2121330403)));\n})], 0));\nre_frame.std_interceptors.trim_v \x3d re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22trim-v\x22,\x22trim-v\x22,-1274938640),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),(function re_frame$std_interceptors$trim_v_before(context){\nif((!(cljs.core.vector_QMARK_(re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442)))))){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: \\\x22trim-v\\\x22 interceptor expected event to be a vector. Got a \x22,cljs.core.type(re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442)))], 0));\n\nreturn context;\n} else {\nreturn re_frame.interceptor.update_coeffect.cljs$core$IFn$_invoke$arity$variadic(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442),cljs.core.subvec,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(1)], 0));\n}\n}),new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),(function re_frame$std_interceptors$trim_v_after(context){\nreturn re_frame.interceptor.assoc_coeffect(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22original-event\x22,\x22original-event\x22,2121330403)));\n})], 0));\n/**\n * Returns an interceptor which wraps the kind of event handler given to `reg-event-db`.\n * \n *   These handlers take two arguments;  `db` and `event`, and they return `db`.\n * \n *    (fn [db event]\n *       ....)\n * \n *   So, the interceptor wraps the given handler:\n *   1. extracts two `:coeffects` keys: db and event\n *   2. calls handler-fn\n *   3. stores the db result back into context\x27s `:effects`\n */\nre_frame.std_interceptors.db_handler__GT_interceptor \x3d (function re_frame$std_interceptors$db_handler__GT_interceptor(handler_fn){\nreturn re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22db-handler\x22,\x22db-handler\x22,579530098),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),(function re_frame$std_interceptors$db_handler__GT_interceptor_$_db_handler_before(context){\nvar new_context \x3d ((re_frame.trace.is_trace_enabled_QMARK_())?(function (){var _STAR_current_trace_STAR__orig_val__24153 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24154 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),new cljs.core.Keyword(\x22event\x22,\x22handler\x22,\x22event/handler\x22,-295903150),new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22original-event\x22,\x22original-event\x22,2121330403))], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24154);\n\ntry{try{var map__24159 \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context);\nvar map__24159__$1 \x3d cljs.core.__destructure_map(map__24159);\nvar db \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24159__$1,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759));\nvar event \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24159__$1,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442));\nreturn re_frame.interceptor.assoc_effect(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(db,event) : handler_fn.call(null,db,event)));\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24254 \x3d re_frame.interop.now();\nvar duration__23969__auto___24255 \x3d (end__23968__auto___24254 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24255,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24254);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24153);\n}})():(function (){var map__24160 \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context);\nvar map__24160__$1 \x3d cljs.core.__destructure_map(map__24160);\nvar db \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24160__$1,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759));\nvar event \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24160__$1,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442));\nreturn re_frame.interceptor.assoc_effect(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(db,event) : handler_fn.call(null,db,event)));\n})());\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24257 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24257);\n\n} else {\n}\n\nreturn new_context;\n})], 0));\n});\n/**\n * Returns an interceptor which wraps the kind of event handler given to `reg-event-fx`.\n * \n *   These handlers take two arguments;  `coeffects` and `event`, and they return `effects`.\n * \n *    (fn [coeffects event]\n *       {:db ...\n *        :fx ...})\n * \n * Wrap handler in an interceptor so it can be added to (the RHS) of a chain:\n *   1. extracts `:coeffects`\n *   2. call handler-fn giving coeffects\n *   3. stores the result back into the `:effects`\n */\nre_frame.std_interceptors.fx_handler__GT_interceptor \x3d (function re_frame$std_interceptors$fx_handler__GT_interceptor(handler_fn){\nreturn re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22fx-handler\x22,\x22fx-handler\x22,-549783097),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),(function re_frame$std_interceptors$fx_handler__GT_interceptor_$_fx_handler_before(context){\nvar new_context \x3d ((re_frame.trace.is_trace_enabled_QMARK_())?(function (){var _STAR_current_trace_STAR__orig_val__24161 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24162 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),new cljs.core.Keyword(\x22event\x22,\x22handler\x22,\x22event/handler\x22,-295903150),new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22original-event\x22,\x22original-event\x22,2121330403))], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24162);\n\ntry{try{var map__24165 \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context);\nvar map__24165__$1 \x3d cljs.core.__destructure_map(map__24165);\nvar coeffects \x3d map__24165__$1;\nvar event \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24165__$1,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(coeffects,event) : handler_fn.call(null,coeffects,event)));\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24263 \x3d re_frame.interop.now();\nvar duration__23969__auto___24264 \x3d (end__23968__auto___24263 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24264,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24263);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24161);\n}})():(function (){var map__24166 \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context);\nvar map__24166__$1 \x3d cljs.core.__destructure_map(map__24166);\nvar coeffects \x3d map__24166__$1;\nvar event \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24166__$1,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),(handler_fn.cljs$core$IFn$_invoke$arity$2 ? handler_fn.cljs$core$IFn$_invoke$arity$2(coeffects,event) : handler_fn.call(null,coeffects,event)));\n})());\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24265 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24265);\n\n} else {\n}\n\nreturn new_context;\n})], 0));\n});\n/**\n * Returns an interceptor which wraps the kind of event handler given to `reg-event-ctx`.\n *   These advanced handlers take one argument: `context` and they return a modified `context`.\n *   Example:\n * \n *    (fn [context]\n *       (enqueue context [more interceptors]))\n */\nre_frame.std_interceptors.ctx_handler__GT_interceptor \x3d (function re_frame$std_interceptors$ctx_handler__GT_interceptor(handler_fn){\nreturn re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22ctx-handler\x22,\x22ctx-handler\x22,-1777672230),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),(function re_frame$std_interceptors$ctx_handler__GT_interceptor_$_ctx_handler_before(context){\nvar new_context \x3d ((re_frame.trace.is_trace_enabled_QMARK_())?(function (){var _STAR_current_trace_STAR__orig_val__24178 \x3d re_frame.trace._STAR_current_trace_STAR_;\nvar _STAR_current_trace_STAR__temp_val__24179 \x3d re_frame.trace.start_trace(new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22op-type\x22,\x22op-type\x22,-1636141668),new cljs.core.Keyword(\x22event\x22,\x22handler\x22,\x22event/handler\x22,-295903150),new cljs.core.Keyword(null,\x22operation\x22,\x22operation\x22,-1267664310),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22original-event\x22,\x22original-event\x22,2121330403))], null));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__temp_val__24179);\n\ntry{try{return (handler_fn.cljs$core$IFn$_invoke$arity$1 ? handler_fn.cljs$core$IFn$_invoke$arity$1(context) : handler_fn.call(null,context));\n}finally {if(re_frame.trace.is_trace_enabled_QMARK_()){\nvar end__23968__auto___24272 \x3d re_frame.interop.now();\nvar duration__23969__auto___24273 \x3d (end__23968__auto___24272 - new cljs.core.Keyword(null,\x22start\x22,\x22start\x22,-355208981).cljs$core$IFn$_invoke$arity$1(re_frame.trace._STAR_current_trace_STAR_));\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(re_frame.trace.traces,cljs.core.conj,cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22duration\x22,\x22duration\x22,1444101068),duration__23969__auto___24273,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958),re_frame.interop.now()], 0)));\n\nre_frame.trace.run_tracing_callbacks_BANG_(end__23968__auto___24272);\n} else {\n}\n}}finally {(re_frame.trace._STAR_current_trace_STAR_ \x3d _STAR_current_trace_STAR__orig_val__24178);\n}})():(handler_fn.cljs$core$IFn$_invoke$arity$1 ? handler_fn.cljs$core$IFn$_invoke$arity$1(context) : handler_fn.call(null,context)));\nif(re_frame.trace.is_trace_enabled_QMARK_()){\nvar new_trace__23970__auto___24275 \x3d cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.update.cljs$core$IFn$_invoke$arity$4(re_frame.trace._STAR_current_trace_STAR_,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),cljs.core.merge,new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977).cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null))),cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22effects\x22,\x22effects\x22,-282369292),re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(new_context),new cljs.core.Keyword(null,\x22coeffects\x22,\x22coeffects\x22,497912985),re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context)], null)], null),new cljs.core.Keyword(null,\x22tags\x22,\x22tags\x22,1771418977))], 0));\n(re_frame.trace._STAR_current_trace_STAR_ \x3d new_trace__23970__auto___24275);\n\n} else {\n}\n\nreturn new_context;\n})], 0));\n});\nre_frame.std_interceptors.path \x3d (function re_frame$std_interceptors$path(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24282 \x3d arguments.length;\nvar i__5770__auto___24283 \x3d (0);\nwhile(true){\nif((i__5770__auto___24283 \x3c len__5769__auto___24282)){\nargs__5775__auto__.push((arguments[i__5770__auto___24283]));\n\nvar G__24284 \x3d (i__5770__auto___24283 + (1));\ni__5770__auto___24283 \x3d G__24284;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn re_frame.std_interceptors.path.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(re_frame.std_interceptors.path.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\nvar path \x3d cljs.core.flatten(args);\nvar db_store_key \x3d new cljs.core.Keyword(\x22re-frame-path\x22,\x22db-store\x22,\x22re-frame-path/db-store\x22,655758490);\nif(cljs.core.empty_QMARK_(path)){\nre_frame.loggers.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22error\x22,\x22error\x22,-978969032),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: \\\x22path\\\x22 interceptor given no params\x22], 0));\n} else {\n}\n\nreturn re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22path\x22,\x22path\x22,-188191168),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),(function (context){\nvar original_db \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759));\nreturn re_frame.interceptor.assoc_coeffect(cljs.core.update.cljs$core$IFn$_invoke$arity$4(context,db_store_key,cljs.core.conj,original_db),new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(original_db,path));\n}),new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),(function (context){\nvar db_store \x3d db_store_key.cljs$core$IFn$_invoke$arity$1(context);\nvar original_db \x3d cljs.core.peek(db_store);\nvar new_db_store \x3d cljs.core.pop(db_store);\nvar context_SINGLEQUOTE_ \x3d re_frame.interceptor.assoc_coeffect(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(context,db_store_key,new_db_store),new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),original_db);\nvar db \x3d re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),new cljs.core.Keyword(\x22re-frame.std-interceptors\x22,\x22not-found\x22,\x22re-frame.std-interceptors/not-found\x22,-1614827865));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(db,new cljs.core.Keyword(\x22re-frame.std-interceptors\x22,\x22not-found\x22,\x22re-frame.std-interceptors/not-found\x22,-1614827865))){\nreturn context_SINGLEQUOTE_;\n} else {\nreturn re_frame.interceptor.assoc_effect(context_SINGLEQUOTE_,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),cljs.core.assoc_in(original_db,path,db));\n}\n})], 0));\n}));\n\n(re_frame.std_interceptors.path.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(re_frame.std_interceptors.path.cljs$lang$applyTo \x3d (function (seq24184){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24184));\n}));\n\nre_frame.std_interceptors.enrich \x3d (function re_frame$std_interceptors$enrich(f){\nreturn re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22enrich\x22,\x22enrich\x22,-2108921925),new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),(function re_frame$std_interceptors$enrich_$_enrich_after(context){\nvar event \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442));\nvar prev_db \x3d ((cljs.core.contains_QMARK_(re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(context),new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759)))?re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759)):re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759)));\nvar new_db \x3d (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(prev_db,event) : f.call(null,prev_db,event));\nreturn re_frame.interceptor.assoc_effect(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),(function (){var or__5045__auto__ \x3d new_db;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn prev_db;\n}\n})());\n})], 0));\n});\nre_frame.std_interceptors.after \x3d (function re_frame$std_interceptors$after(f){\nreturn re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),(function re_frame$std_interceptors$after_$_after_after(context){\nvar db \x3d ((cljs.core.contains_QMARK_(re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(context),new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759)))?re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759)):re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759)));\nvar event \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22event\x22,\x22event\x22,301435442));\n(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(db,event) : f.call(null,db,event));\n\nreturn context;\n})], 0));\n});\nre_frame.std_interceptors.on_changes \x3d (function re_frame$std_interceptors$on_changes(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24285 \x3d arguments.length;\nvar i__5770__auto___24286 \x3d (0);\nwhile(true){\nif((i__5770__auto___24286 \x3c len__5769__auto___24285)){\nargs__5775__auto__.push((arguments[i__5770__auto___24286]));\n\nvar G__24287 \x3d (i__5770__auto___24286 + (1));\ni__5770__auto___24286 \x3d G__24287;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn re_frame.std_interceptors.on_changes.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(re_frame.std_interceptors.on_changes.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,out_path,in_paths){\nreturn re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22on-changes\x22,\x22on-changes\x22,1345912602),new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914),(function re_frame$std_interceptors$on_change_after(context){\nvar new_db \x3d re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759));\nvar old_db \x3d re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759));\nvar new_ins \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24199_SHARP_){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(new_db,p1__24199_SHARP_);\n}),in_paths);\nvar old_ins \x3d cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__24200_SHARP_){\nreturn cljs.core.get_in.cljs$core$IFn$_invoke$arity$2(old_db,p1__24200_SHARP_);\n}),in_paths);\nvar changed_ins_QMARK_ \x3d (function (){var and__5043__auto__ \x3d cljs.core.contains_QMARK_(re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(context),new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759));\nif(and__5043__auto__){\nreturn cljs.core.some(cljs.core.false_QMARK_,cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.identical_QMARK_,new_ins,old_ins));\n} else {\nreturn and__5043__auto__;\n}\n})();\nif(cljs.core.truth_(changed_ins_QMARK_)){\nreturn re_frame.interceptor.assoc_effect(context,new cljs.core.Keyword(null,\x22db\x22,\x22db\x22,993250759),cljs.core.assoc_in(new_db,out_path,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,new_ins)));\n} else {\nreturn context;\n}\n})], 0));\n}));\n\n(re_frame.std_interceptors.on_changes.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(re_frame.std_interceptors.on_changes.cljs$lang$applyTo \x3d (function (seq24201){\nvar G__24202 \x3d cljs.core.first(seq24201);\nvar seq24201__$1 \x3d cljs.core.next(seq24201);\nvar G__24203 \x3d cljs.core.first(seq24201__$1);\nvar seq24201__$2 \x3d cljs.core.next(seq24201__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24202,G__24203,seq24201__$2);\n}));\n\n/**\n * An interceptor which adds registered global interceptors to the context\x27s queue.\n * \n * NOTE: :queue is a Clojure.lang.PersistentQueue and not a vector.\n */\nre_frame.std_interceptors.inject_global_interceptors \x3d re_frame.interceptor.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092),new cljs.core.Keyword(null,\x22inject-global-interceptors\x22,\x22inject-global-interceptors\x22,-2144129737),new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388),(function re_frame$std_interceptors$inject_global_interceptors_before(context){\nreturn cljs.core.update.cljs$core$IFn$_invoke$arity$3(context,new cljs.core.Keyword(null,\x22queue\x22,\x22queue\x22,1455835879),(function (p1__24233_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(re_frame.settings.get_global_interceptors(),p1__24233_SHARP_);\n}));\n})], 0));\n");
SHADOW_ENV.evalLoad("re_frame.core.js", true , "goog.provide(\x27re_frame.core\x27);\n/**\n * Queue `event` for processing (handling).\n * \n *   `event` is a vector and the first element is typically a keyword\n *   which identifies the kind of event.\n * \n *   The event will be added to a FIFO processing queue, so event\n *   handling does not happen immediately. It will happen \x27very soon\x27\n *   but not now. And if the queue already contains events, they\n *   will be processed first.\n * \n *   Usage:\n * \n *    #!clj\n *    (dispatch [:order \x22pizza\x22 {:supreme 2 :meatlovers 1 :veg 1}])\n *   \n */\nre_frame.core.dispatch \x3d (function re_frame$core$dispatch(event){\nreturn re_frame.router.dispatch(event);\n});\n/**\n * Synchronously (immediately) process `event`. It does **not** queue\n *   the event for handling later as `dispatch` does.\n * \n *   `event` is a vector and the first element is typically a keyword\n *   which identifies the kind of event.\n * \n *   It is an error to use `dispatch-sync` within an event handler because\n *   you can\x27t immediately process an new event when one is already\n *   part way through being processed.\n * \n *   Generally, avoid using this function, and instead, use `dispatch`.\n *   Only use it in the narrow set of cases where any delay in\n *   processing is a problem:\n * \n *  1. the `:on-change` handler of a text field where we are expecting fast typing\n *  2. when initialising your app - see \x27main\x27 in examples/todomvc/src/core.cljs\n *  3. in a unit test where immediate, synchronous processing is useful\n * \n *   Usage:\n * \n *    #!clj\n *    (dispatch-sync [:sing :falsetto \x22piano accordion\x22])\n *   \n */\nre_frame.core.dispatch_sync \x3d (function re_frame$core$dispatch_sync(event){\nreturn re_frame.router.dispatch_sync(event);\n});\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain:\n * \n *  - `id` is typically a namespaced keyword  (but can be anything)\n *  - `handler` is a function: (db event) -\x3e db\n *  - `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n * \n *   Example Usage:\n * \n *    #!clj\n *    (reg-event-db\n *      :token\n *      (fn [db event]\n *        (assoc db :some-key (get event 2)))  ;; return updated db\n * \n *   Or perhaps:\n * \n *    #!clj\n *    (reg-event-db\n *      :namespaced/id           ;; \x3c-- namespaced keywords are often used\n *      [one two three]          ;; \x3c-- a seq of interceptors\n *      (fn [db [_ arg1 arg2]]   ;; \x3c-- event vector is destructured\n *        (-\x3e db\n *          (dissoc arg1)\n *          (update :key + arg2))))   ;; return updated db\n *   \n */\nre_frame.core.reg_event_db \x3d (function re_frame$core$reg_event_db(var_args){\nvar G__24495 \x3d arguments.length;\nswitch (G__24495) {\ncase 2:\nreturn re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2 \x3d (function (id,handler){\nreturn re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n}));\n\n(re_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$3 \x3d (function (id,interceptors,handler){\nreturn re_frame.events.register(id,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_frame.cofx.inject_db,re_frame.fx.do_fx,re_frame.std_interceptors.inject_global_interceptors,interceptors,re_frame.std_interceptors.db_handler__GT_interceptor(handler)], null));\n}));\n\n(re_frame.core.reg_event_db.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain:\n * \n *  - `id` is typically a namespaced keyword  (but can be anything)\n *  - `handler` is a function: (coeffects-map event-vector) -\x3e effects-map\n *  - `interceptors` is a collection of interceptors. Will be flattened and nils removed.\n * \n * \n *   Example Usage:\n * \n *    #!clj\n *    (reg-event-fx\n *      :event-id\n *      (fn [cofx event]\n *        {:db (assoc (:db cofx) :some-key (get event 2))}))   ;; return a map of effects\n * \n * \n *   Or perhaps:\n * \n *    #!clj\n *    (reg-event-fx\n *      :namespaced/id           ;; \x3c-- namespaced keywords are often used\n *      [one two three]          ;; \x3c-- a seq of interceptors\n *      (fn [{:keys [db] :as cofx} [_ arg1 arg2]] ;; destructure both arguments\n *        {:db (assoc db :some-key arg1)          ;; return a map of effects\n *         :fx [[:dispatch [:some-event arg2]]]}))\n *   \n */\nre_frame.core.reg_event_fx \x3d (function re_frame$core$reg_event_fx(var_args){\nvar G__24497 \x3d arguments.length;\nswitch (G__24497) {\ncase 2:\nreturn re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$2 \x3d (function (id,handler){\nreturn re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n}));\n\n(re_frame.core.reg_event_fx.cljs$core$IFn$_invoke$arity$3 \x3d (function (id,interceptors,handler){\nreturn re_frame.events.register(id,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_frame.cofx.inject_db,re_frame.fx.do_fx,re_frame.std_interceptors.inject_global_interceptors,interceptors,re_frame.std_interceptors.fx_handler__GT_interceptor(handler)], null));\n}));\n\n(re_frame.core.reg_event_fx.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Register the given event `handler` (function) for the given `id`. Optionally, provide\n *   an `interceptors` chain:\n * \n *  - `id` is typically a namespaced keyword  (but can be anything)\n *  - `handler` is a function: context-map -\x3e context-map\n * \n *   You can explore what is provided in `context` [here](https://day8.github.io/re-frame/Interceptors/#what-is-context).\n * \n *   Example Usage:\n * \n *    #!clj\n *    (reg-event-ctx\n *      :event-id\n *      (fn [{:keys [coeffects] :as context}]\n *        (let [initial  {:db     (:db coeffects)\n *                        :event  (:event coeffects)\n *                        :fx     []}\n *              result   (-\x3e initial\n *                           function1\n *                           function2\n *                           function3)\n *              effects  (select-keys result [:db :fx])]\n *           (assoc context :effects effects))))\n *   \n */\nre_frame.core.reg_event_ctx \x3d (function re_frame$core$reg_event_ctx(var_args){\nvar G__24499 \x3d arguments.length;\nswitch (G__24499) {\ncase 2:\nreturn re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$2 \x3d (function (id,handler){\nreturn re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3(id,null,handler);\n}));\n\n(re_frame.core.reg_event_ctx.cljs$core$IFn$_invoke$arity$3 \x3d (function (id,interceptors,handler){\nreturn re_frame.events.register(id,new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [re_frame.cofx.inject_db,re_frame.fx.do_fx,re_frame.std_interceptors.inject_global_interceptors,interceptors,re_frame.std_interceptors.ctx_handler__GT_interceptor(handler)], null));\n}));\n\n(re_frame.core.reg_event_ctx.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * Unregisters event handlers (presumably registered previously via the use of `reg-event-db` or `reg-event-fx`).\n * \n *   When called with no args, it will unregister all currently registered event handlers.\n * \n *   When given one arg, assumed to be the `id` of a previously registered\n *   event handler, it will unregister the associated handler. Will produce a warning to\n *   console if it finds no matching registration.\n */\nre_frame.core.clear_event \x3d (function re_frame$core$clear_event(var_args){\nvar G__24501 \x3d arguments.length;\nswitch (G__24501) {\ncase 0:\nreturn re_frame.core.clear_event.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn re_frame.core.clear_event.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.clear_event.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1(re_frame.events.kind);\n}));\n\n(re_frame.core.clear_event.cljs$core$IFn$_invoke$arity$1 \x3d (function (id){\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$2(re_frame.events.kind,id);\n}));\n\n(re_frame.core.clear_event.cljs$lang$maxFixedArity \x3d 1);\n\n/**\n * A call to `reg-sub` associates a `query-id` WITH two functions.\n * \n *   The two functions provide \x27a mechanism\x27 for creating a node\n *   in the Signal Graph. When a node of type `query-id` is needed,\n *   the two functions can be used to create it.\n * \n *   The three arguments are:\n * \n *  - `query-id` - typically a namespaced keyword (later used in subscribe)\n *  - optionally, an `input signals` function which returns the input data\n *    flows required by this kind of node.\n *  - a `computation function` which computes the value (output) of the\n *    node (from the input data flows)\n * \n *   Later, during app execution, a call to `(subscribe [:sub-id 3 :blue])`,\n *   will trigger the need for a new `:sub-id` Signal Graph node (matching the\n *   query `[:sub-id 3 :blue]`). And, to create that node the two functions\n *   associated with `:sub-id` will be looked up and used.\n * \n *   Just to be clear: calling `reg-sub` does not immediately create a node.\n *   It only registers \x27a mechanism\x27 (the two functions) by which nodes\n *   can be created later, when a node is bought into existence by the\n *   use of `subscribe` in a `View Function`.\n * \n *   `reg-sub` arguments are:\n * \n *  - a `query-id` (typically a namespaced keyword)\n *  - a function which returns the inputs required by this kind of node (can be supplied  in one of three ways)\n *  - a function which computes the value of this kind of node (can be supplied in one of three ways)\n * \n *   The `computation function` is always the last argument supplied and has three ways to be called.\n *   Two of these methods are syntactic sugar to provide easier access to functional abstractions around your data.\n * \n *   1. A function that will accept two parameters, the `input-values` and `query-vector`. This is the\n *   standard way to provide a `computation-function`\n * \n *        #!clj\n *        (reg-sub\n *          :query-id\n *          (fn [input-values query-vector]\n *            (:foo input-values)))\n * \n *   2. A single sugary tuple of `:-\x3e` and a 1-arity `computation-function`:\n * \n *        #!clj\n *        (reg-sub\n *          :query-id\n *          :-\x3e computation-fn)\n * \n *    This sugary variation allows you to pass a function that will expect only one parameter,\n *    namely the `input-values` and entirely omit the `query-vector`. A typical `computation-function`\n *    expects two parameters which can cause unfortunate results when attempting to use\n *    clojure standard library functions, or other functions, in a functional manner.\n * \n *    For example, a significant number of subscriptions exist only to get a value\n *    from the `input-values`. As shown below, this subscription will simply retrieve\n *    the value associated with the `:foo` key in our db:\n * \n *        #!clj\n *        (reg-sub\n *          :query-id\n *          (fn [db _]    ;; :\x3c---- trivial boilerplate we might want to skip over\n *            (:foo db)))\n * \n *    This is slightly more boilerplate than we might like to do,\n *    as we can use a keyword directly as a function, and we might like to do this:\n * \n *        #!clj\n *        (reg-sub\n *          :query-id\n *          :foo)  ;; :\x3c---- This could be dangerous. If `:foo` is not in db, we get the `query-vector` instead of `nil`.\n * \n *    By using `:-\x3e` our function would not contain the `query-vector`, and any\n *    missing keys would be represented as such:\n * \n *        #!clj\n *        (reg-sub\n *          :query-id\n *          :-\x3e :foo)\n * \n *    This form allows us to ignore the `query-vector` if our `computation-function`\n *    has no need for it, and be safe from any accidents. Any 1-arity function can be provided,\n *    and for more complicated use cases, `partial`, `comp`, and anonymous functions can still be used.\n * \n *   3. A single sugary tuple of `:\x3d\x3e` and a multi-arity `computation-function`\n * \n *        #!clj\n *        (reg-sub\n *          :query-id\n *          :\x3d\x3e computation-fn)\n * \n *    The `query-vector` can be broken into two components `[query-id \x26 optional-values]`, and\n *    some subscriptions require the `optional-values` for extra work within the subscription.\n *    To use them in variation #1, we need to destructure our `computation-function` parameters\n *    in order to use them.\n * \n *        #!clj\n *        (reg-sub\n *          :query-id\n *          (fn [db [_ foo]]\n *            [db foo]))\n * \n *    Again we are writing boilerplate just to reach our values, and we might prefer to\n *    have direction access through a parameter vector like `[input-values optional-values]`\n *    instead, so we might be able to use a multi-arity function directly as our `computation-function`.\n *    A rewrite of the above sub using this sugary syntax would look like this:\n * \n *        #!clj\n *        (reg-sub\n *          :query-id\n *          :\x3d\x3e vector)  ;; :\x3c---- Could also be `(fn [db foo] [db foo])`\n * \n *   The `computation function` is expected to take two arguments:\n * \n *  - `input-values` - the values which flow into this node (how is it wired into the graph?)\n *  - `query-vector` - the vector given to `subscribe`\n * \n *   and it returns a computed value (which then becomes the output of the node)\n * \n *   When `computation function` is called, the 2nd `query-vector` argument will be that\n *   vector supplied to the `subscribe`. So, if the call was `(subscribe [:sub-id 3 :blue])`,\n *   then the `query-vector` supplied to the computation function will be `[:sub-id 3 :blue]`.\n * \n *   The argument(s) supplied to `reg-sub` between `query-id` and the `computation-function`\n *   can vary in 3 ways, but whatever is there defines the `input signals` part\n *   of `the mechanism`, specifying what input values \x22flow into\x22 the\n *   `computation function` (as the 1st argument) when it is called.\n * \n *   So, `reg-sub` can be called in one of three ways, because there are three ways\n *   to define the input signals part. But note, the 2nd method, in which a\n *   `signals function` is explicitly supplied, is the most canonical and\n *   instructive. The other two are really just sugary variations.\n * \n *   **First variation** - no input signal function given:\n * \n *    #!clj\n *    (reg-sub\n *      :query-id\n *      a-computation-fn)   ;; has signature:  (fn [db query-vec]  ... ret-value)\n * \n *   In the absence of an explicit `signals function`, the node\x27s input signal defaults to `app-db`\n *   and, as a result, the value within `app-db` (a map) is\n *   given as the 1st argument when `a-computation-fn` is called.\n * \n * \n *   **Second variation** - a signal function is explicitly supplied:\n * \n *    #!clj\n *    (reg-sub\n *      :query-id\n *      signal-fn     ;; \x3c-- here\n *      computation-fn)\n * \n *   This is the most canonical and instructive of the three variations.\n * \n *   When a node is created from the template, the `signal function` will be called and it\n *   is expected to return the input signal(s) as either a singleton, if there is only\n *   one, or a sequence if there are many, or a map with the signals as the values.\n * \n *   The current values of the returned signals will be supplied as the 1st argument to\n *   the `a-computation-fn` when it is called - and subject to what this `signal-fn` returns,\n *   this value will be either a singleton, sequence or map of them (paralleling\n *   the structure returned by the `signal function`).\n * \n *   This example `signal function` returns a 2-vector of input signals.\n * \n *    #!clj\n *    (fn [query-vec dynamic-vec]\n *       [(subscribe [:a-sub])\n *        (subscribe [:b-sub])])\n * \n *   The associated computation function must be written\n *   to expect a 2-vector of values for its first argument:\n * \n *    #!clj\n *    (fn [[a b] query-vec]     ;; 1st argument is a seq of two values\n *      ....)\n * \n *   If, on the other hand, the signal function was simpler and returned a singleton, like this:\n * \n *    #!clj\n *    (fn [query-vec dynamic-vec]\n *      (subscribe [:a-sub]))      ;; \x3c-- returning a singleton\n * \n *   then the associated computation function must be written to expect a single value\n *   as the 1st argument:\n * \n *    #!clj\n *    (fn [a query-vec]       ;; 1st argument is a single value\n *       ...)\n * \n *   Further Note: variation #1 above, in which an `input-fn` was not supplied, like this:\n * \n *    #!clj\n *    (reg-sub\n *      :query-id\n *      a-computation-fn)   ;; has signature:  (fn [db query-vec]  ... ret-value)\n * \n *   is the equivalent of using this\n *   2nd variation and explicitly supplying a `signal-fn` which returns `app-db`:\n * \n *    #!clj\n *    (reg-sub\n *      :query-id\n *      (fn [_ _]  re-frame/app-db)   ;; \x3c--- explicit signal-fn\n *      a-computation-fn)             ;; has signature:  (fn [db query-vec]  ... ret-value)\n * \n *   **Third variation** - syntax Sugar\n * \n *    #!clj\n *    (reg-sub\n *      :a-b-sub\n *      :\x3c- [:a-sub]\n *      :\x3c- [:b-sub]\n *      (fn [[a b] query-vec]    ;; 1st argument is a seq of two values\n *        {:a a :b b}))\n * \n *   This 3rd variation is just syntactic sugar for the 2nd.  Instead of providing an\n *   `signals-fn` you provide one or more pairs of `:\x3c-` and a subscription vector.\n * \n *   If you supply only one pair a singleton will be supplied to the computation function,\n *   as if you had supplied a `signal-fn` returning only a single value:\n * \n *    #!clj\n *    (reg-sub\n *      :a-sub\n *      :\x3c- [:a-sub]\n *      (fn [a query-vec]      ;; only one pair, so 1st argument is a single value\n *        ...))\n * \n *   Syntactic sugar for both the `signal-fn` and `computation-fn` can be used together\n *   and the direction of arrows shows the flow of data and functions. The example from\n *   directly above is reproduced here:\n * \n *    #!clj\n *    (reg-sub\n *      :a-b-sub\n *      :\x3c- [:a-sub]\n *      :\x3c- [:b-sub]\n *      :-\x3e (partial zipmap [:a :b]))\n * \n *   For further understanding, read the tutorials, and look at the detailed comments in\n *   /examples/todomvc/src/subs.cljs.\n * \n *   See also: `subscribe`\n *   \n */\nre_frame.core.reg_sub \x3d (function re_frame$core$reg_sub(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24541 \x3d arguments.length;\nvar i__5770__auto___24542 \x3d (0);\nwhile(true){\nif((i__5770__auto___24542 \x3c len__5769__auto___24541)){\nargs__5775__auto__.push((arguments[i__5770__auto___24542]));\n\nvar G__24543 \x3d (i__5770__auto___24542 + (1));\ni__5770__auto___24542 \x3d G__24543;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn re_frame.core.reg_sub.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(re_frame.core.reg_sub.cljs$core$IFn$_invoke$arity$variadic \x3d (function (query_id,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(re_frame.subs.reg_sub,query_id,args);\n}));\n\n(re_frame.core.reg_sub.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(re_frame.core.reg_sub.cljs$lang$applyTo \x3d (function (seq24502){\nvar G__24503 \x3d cljs.core.first(seq24502);\nvar seq24502__$1 \x3d cljs.core.next(seq24502);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24503,seq24502__$1);\n}));\n\n/**\n * Given a `query` vector, returns a Reagent `reaction` which will, over\n *   time, reactively deliver a stream of values. So, in FRP-ish terms,\n *   it returns a `Signal`.\n * \n *   To obtain the current value from the Signal, it must be dereferenced:\n * \n *    #!clj\n *    (let [signal (subscribe [:items])\n *          value  (deref signal)]     ;; could be written as @signal\n *      ...)\n * \n * which is typically written tersely as simple:\n * \n *    #!clj\n *    (let [items  @(subscribe [:items])]\n *      ...)\n * \n * \n *   `query` is a vector of at least one element. The first element is the\n *   `query-id`, typically a namespaced keyword. The rest of the vector\x27s\n *   elements are optional, additional values which parameterise the query\n *   performed.\n * \n *   `dynv` is an optional 3rd argument, which is a vector of further input\n *   signals (atoms, reactions, etc), NOT values. This argument exists for\n *   historical reasons and is borderline deprecated these days.\n * \n *   **Example Usage**:\n * \n *    #!clj\n *    (subscribe [:items])\n *    (subscribe [:items \x22blue\x22 :small])\n *    (subscribe [:items {:colour \x22blue\x22  :size :small}])\n * \n *   Note: for any given call to `subscribe` there must have been a previous call\n *   to `reg-sub`, registering the query handler (functions) associated with\n *   `query-id`.\n * \n *   **Hint**\n * \n *   When used in a view function BE SURE to `deref` the returned value.\n *   In fact, to avoid any mistakes, some prefer to define:\n * \n *    #!clj\n *    (def \x3csub  (comp deref re-frame.core/subscribe))\n * \n *   And then, within their views, they call  `(\x3csub [:items :small])` rather\n *   than using `subscribe` directly.\n * \n *   **De-duplication**\n * \n *   Two, or more, concurrent subscriptions for the same query will\n *   source reactive updates from the one executing handler.\n * \n *   See also: `reg-sub`\n *   \n */\nre_frame.core.subscribe \x3d (function re_frame$core$subscribe(var_args){\nvar G__24505 \x3d arguments.length;\nswitch (G__24505) {\ncase 1:\nreturn re_frame.core.subscribe.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.core.subscribe.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.subscribe.cljs$core$IFn$_invoke$arity$1 \x3d (function (query){\nreturn re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$1(query);\n}));\n\n(re_frame.core.subscribe.cljs$core$IFn$_invoke$arity$2 \x3d (function (query,dynv){\nreturn re_frame.subs.subscribe.cljs$core$IFn$_invoke$arity$2(query,dynv);\n}));\n\n(re_frame.core.subscribe.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Unregisters subscription handlers (presumably registered previously via the use of `reg-sub`).\n * \n *   When called with no args, it will unregister all currently registered subscription handlers.\n * \n *   When given one arg, assumed to be the `id` of a previously registered\n *   subscription handler, it will unregister the associated handler. Will produce a warning to\n *   console if it finds no matching registration.\n * \n *   NOTE: Depending on the usecase, it may be necessary to call `clear-subscription-cache!` afterwards\n */\nre_frame.core.clear_sub \x3d (function re_frame$core$clear_sub(var_args){\nvar G__24507 \x3d arguments.length;\nswitch (G__24507) {\ncase 0:\nreturn re_frame.core.clear_sub.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn re_frame.core.clear_sub.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.clear_sub.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1(re_frame.subs.kind);\n}));\n\n(re_frame.core.clear_sub.cljs$core$IFn$_invoke$arity$1 \x3d (function (query_id){\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$2(re_frame.subs.kind,query_id);\n}));\n\n(re_frame.core.clear_sub.cljs$lang$maxFixedArity \x3d 1);\n\n/**\n * This is a low level, advanced function.  You should probably be\n *   using `reg-sub` instead.\n * \n *   Some explanation is available in the docs at\n *   \x3ca href\x3d\x22http://day8.github.io/re-frame/flow-mechanics/\x22 target\x3d\x22_blank\x22\x3ehttp://day8.github.io/re-frame/flow-mechanics/\x3c/a\x3e\n */\nre_frame.core.reg_sub_raw \x3d (function re_frame$core$reg_sub_raw(query_id,handler_fn){\nreturn re_frame.registrar.register_handler(re_frame.subs.kind,query_id,handler_fn);\n});\n/**\n * Removes all subscriptions from the cache.\n * \n *   This function can be used at development time or test time. Useful when hot reloading\n *   namespaces containing subscription handlers. Also call it after a React/render exception,\n *   because React components won\x27t have been cleaned up properly. And this, in turn, means\n *   the subscriptions within those components won\x27t have been cleaned up correctly. So this\n *   forces the issue.\n *   \n */\nre_frame.core.clear_subscription_cache_BANG_ \x3d (function re_frame$core$clear_subscription_cache_BANG_(){\nreturn re_frame.subs.clear_subscription_cache_BANG_();\n});\n/**\n * Register the given effect `handler` for the given `id`:\n * \n *  - `id` is keyword, often namespaced.\n *  - `handler` is a side-effecting function which takes a single argument and whose return\n *    value is ignored.\n * \n *   To use, first, associate `:effect2` with a handler:\n * \n *    #!clj\n *    (reg-fx\n *       :effect2\n *       (fn [value]\n *          ... do something side-effect-y))\n * \n *   Then, later, if an event handler were to return this effects map:\n * \n *    #!clj\n *    {:effect2  [1 2]}\n * \n *   then the `handler` `fn` we registered previously, using `reg-fx`, will be\n *   called with an argument of `[1 2]`.\n *   \n */\nre_frame.core.reg_fx \x3d (function re_frame$core$reg_fx(id,handler){\nreturn re_frame.fx.reg_fx(id,handler);\n});\n/**\n * Unregisters effect handlers (presumably registered previously via the use of `reg-fx`).\n * \n *   When called with no args, it will unregister all currently registered effect handlers.\n * \n *   When given one arg, assumed to be the `id` of a previously registered\n *   effect handler, it will unregister the associated handler. Will produce a warning to\n *   console if it finds no matching registration.\n *   \n */\nre_frame.core.clear_fx \x3d (function re_frame$core$clear_fx(var_args){\nvar G__24509 \x3d arguments.length;\nswitch (G__24509) {\ncase 0:\nreturn re_frame.core.clear_fx.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn re_frame.core.clear_fx.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.clear_fx.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1(re_frame.fx.kind);\n}));\n\n(re_frame.core.clear_fx.cljs$core$IFn$_invoke$arity$1 \x3d (function (id){\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$2(re_frame.fx.kind,id);\n}));\n\n(re_frame.core.clear_fx.cljs$lang$maxFixedArity \x3d 1);\n\n/**\n * Register the given coeffect `handler` for the given `id`, for later use\n *   within `inject-cofx`:\n * \n *  - `id` is keyword, often namespaced.\n *  - `handler` is a function which takes either one or two arguments, the first of which is\n *     always `coeffects` and which returns an updated `coeffects`.\n * \n *   See also: `inject-cofx`\n *   \n */\nre_frame.core.reg_cofx \x3d (function re_frame$core$reg_cofx(id,handler){\nreturn re_frame.cofx.reg_cofx(id,handler);\n});\n/**\n * Given an `id`, and an optional, arbitrary `value`, returns an interceptor\n *   whose `:before` adds to the `:coeffects` (map) by calling a pre-registered\n *   \x27coeffect handler\x27 identified by the `id`.\n * \n *   The previous association of a `coeffect handler` with an `id` will have\n *   happened via a call to `re-frame.core/reg-cofx` - generally on program startup.\n * \n *   Within the created interceptor, this \x27looked up\x27 `coeffect handler` will\n *   be called (within the `:before`) with two arguments:\n * \n *   - the current value of `:coeffects`\n *   - optionally, the originally supplied arbitrary `value`\n * \n *   This `coeffect handler` is expected to modify and return its first, `coeffects` argument.\n * \n *   **Example of `inject-cofx` and `reg-cofx` working together**\n * \n * \n *   First - Early in app startup, you register a `coeffect handler` for `:datetime`:\n * \n *    #!clj\n *    (re-frame.core/reg-cofx\n *      :datetime                        ;; usage  (inject-cofx :datetime)\n *      (fn coeffect-handler\n *        [coeffect]\n *        (assoc coeffect :now (js/Date.))))   ;; modify and return first arg\n * \n *   Second - Later, add an interceptor to an -fx event handler, using `inject-cofx`:\n * \n *    #!clj\n *    (re-frame.core/reg-event-fx            ;; when registering an event handler\n *      :event-id\n *      [ ... (inject-cofx :datetime) ... ]  ;; \x3c-- create an injecting interceptor\n *      (fn event-handler\n *        [coeffect event]\n *          ;;... in here can access (:now coeffect) to obtain current datetime ...\n *        )))\n * \n *   **Background**\n * \n *   `coeffects` are the input resources required by an event handler\n *   to perform its job. The two most obvious ones are `db` and `event`.\n *   But sometimes an event handler might need other resources.\n * \n *   Perhaps an event handler needs a random number or a GUID or the current\n *   datetime. Perhaps it needs access to a DataScript database connection.\n * \n *   If an event handler directly accesses these resources, it stops being\n *   pure and, consequently, it becomes harder to test, etc. So we don\x27t\n *   want that.\n * \n *   Instead, the interceptor created by this function is a way to \x27inject\x27\n *   \x27necessary resources\x27 into the `:coeffects` (map) subsequently given\n *   to the event handler at call time.\n * \n *   See also `reg-cofx`\n *   \n */\nre_frame.core.inject_cofx \x3d (function re_frame$core$inject_cofx(var_args){\nvar G__24511 \x3d arguments.length;\nswitch (G__24511) {\ncase 1:\nreturn re_frame.core.inject_cofx.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.core.inject_cofx.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.inject_cofx.cljs$core$IFn$_invoke$arity$1 \x3d (function (id){\nreturn re_frame.cofx.inject_cofx.cljs$core$IFn$_invoke$arity$1(id);\n}));\n\n(re_frame.core.inject_cofx.cljs$core$IFn$_invoke$arity$2 \x3d (function (id,value){\nreturn re_frame.cofx.inject_cofx.cljs$core$IFn$_invoke$arity$2(id,value);\n}));\n\n(re_frame.core.inject_cofx.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Unregisters coeffect handlers (presumably registered previously via the use of `reg-cofx`).\n * \n *   When called with no args, it will unregister all currently registered coeffect handlers.\n * \n *   When given one arg, assumed to be the `id` of a previously registered\n *   coeffect handler, it will unregister the associated handler. Will produce a warning to\n *   console if it finds no matching registration.\n */\nre_frame.core.clear_cofx \x3d (function re_frame$core$clear_cofx(var_args){\nvar G__24513 \x3d arguments.length;\nswitch (G__24513) {\ncase 0:\nreturn re_frame.core.clear_cofx.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn re_frame.core.clear_cofx.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.clear_cofx.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$1(re_frame.cofx.kind);\n}));\n\n(re_frame.core.clear_cofx.cljs$core$IFn$_invoke$arity$1 \x3d (function (id){\nreturn re_frame.registrar.clear_handlers.cljs$core$IFn$_invoke$arity$2(re_frame.cofx.kind,id);\n}));\n\n(re_frame.core.clear_cofx.cljs$lang$maxFixedArity \x3d 1);\n\n/**\n * An interceptor which logs/instruments an event handler\x27s actions to\n *   `js/console.debug`. See examples/todomvc/src/events.cljs for use.\n * \n *   Output includes:\n * \n *  1. the event vector\n *  2. a `clojure.data/diff` of db, before vs after, which shows\n *     the changes caused by the event handler. To understand the output,\n *     you should understand:\n *     \x3ca href\x3d\x22https://clojuredocs.org/clojure.data/diff\x22 target\x3d\x22_blank\x22\x3ehttps://clojuredocs.org/clojure.data/diff\x3c/a\x3e.\n * \n *   You\x27d typically include this interceptor after (to the right of) any\n *   `path` interceptor.\n * \n *   Warning:  calling `clojure.data/diff` on large, complex data structures\n *   can be slow. So, you won\x27t want this interceptor present in production\n *   code. So, you should condition it out like this:\n * \n *    #!clj\n *    (re-frame.core/reg-event-db\n *      :evt-id\n *      [(when ^boolean goog.DEBUG re-frame.core/debug)]  ;; \x3c-- conditional\n *      (fn [db v]\n *         ...))\n * \n *   To make this code fragment work, you\x27ll also have to set `goog.DEBUG` to\n *   `false` in your production builds. For an example, look in `project.clj` of /examples/todomvc.\n *   \n */\nre_frame.core.debug \x3d re_frame.std_interceptors.debug;\n/**\n * Returns an interceptor which acts somewhat like `clojure.core/update-in`, in the sense that\n *   the event handler is given a specific part of `app-db` to change, not all of `app-db`.\n * \n *   The interceptor has both a `:before` and `:after` functions. The `:before` replaces\n *   the `:db` key within coeffects with a sub-path within `app-db`. The `:after` reverses the process,\n *   and it grafts the handler\x27s return value back into db, at the right path.\n * \n *   Examples:\n * \n *    #!clj\n *    (path :some :path)\n *    (path [:some :path])\n *    (path [:some :path] :to :here)\n *    (path [:some :path] [:to] :here)\n * \n *   Example Use:\n * \n *    #!clj\n *    (reg-event-db\n *      :event-id\n *      (path [:a :b])  ;; \x3c-- used here, in interceptor chain\n *      (fn [b v]       ;; 1st arg is not db. Is the value from path [:a :b] within db\n *        ... new-b))   ;; returns a new value for that path (not the entire db)\n * \n *   Notes:\n * \n *  1. `path` may appear more than once in an interceptor chain. Progressive narrowing.\n *  2. if `:effects` contains no `:db` effect, can\x27t graft a value back in.\n *   \n */\nre_frame.core.path \x3d (function re_frame$core$path(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24549 \x3d arguments.length;\nvar i__5770__auto___24550 \x3d (0);\nwhile(true){\nif((i__5770__auto___24550 \x3c len__5769__auto___24549)){\nargs__5775__auto__.push((arguments[i__5770__auto___24550]));\n\nvar G__24551 \x3d (i__5770__auto___24550 + (1));\ni__5770__auto___24550 \x3d G__24551;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn re_frame.core.path.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(re_frame.core.path.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(re_frame.std_interceptors.path,args);\n}));\n\n(re_frame.core.path.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(re_frame.core.path.cljs$lang$applyTo \x3d (function (seq24514){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24514));\n}));\n\n/**\n * Returns an interceptor which will run the given function `f` in the `:after`\n *   position.\n * \n *   `f` is called with two arguments: `db` and `event`, and is expected to\n *   return a modified `db`.\n * \n *   Unlike the `after` interceptor which is only about side effects, `enrich`\n *   expects `f` to process and alter the given `db` coeffect in some useful way,\n *   contributing to the derived data, flowing vibe.\n * \n *   If `f` returns `nil`, the `db` value passed to `f` will be returned instead.\n * \n *   #### Example Use:\n * \n *   Imagine that todomvc needed to do duplicate detection - if any two todos had\n *   the same text, then highlight their background, and report them via a warning\n *   at the bottom of the panel.\n * \n *   Almost any user action (edit text, add new todo, remove a todo) requires a\n *   complete reassessment of duplication errors and warnings. E.g. that edit\n *   just made might have introduced a new duplicate, or removed one. Same with\n *   any todo removal. So we need to re-calculate warnings after any CRUD events\n *   associated with the todos list.\n * \n *   Unless we are careful, we might end up coding subtly different checks\n *   for each kind of CRUD operation.  The duplicates check made after\n *   \x27delete todo\x27 event might be subtly different to that done after an\n *   editing operation. Nice and efficient, but fiddly. A bug generator\n *   approach.\n * \n *   So, instead, we create an `f` which recalculates ALL warnings from scratch\n *   every time there is ANY change. It will inspect all the todos, and\n *   reset ALL FLAGS every time (overwriting what was there previously)\n *   and fully recalculate the list of duplicates (displayed at the bottom?).\n * \n *   \x3ca href\x3d\x22https://twitter.com/nathanmarz/status/879722740776939520\x22 target\x3d\x22_blank\x22\x3ehttps://twitter.com/nathanmarz/status/879722740776939520\x3c/a\x3e\n * \n *   By applying `f` in an `:enrich` interceptor, after every CRUD event,\n *   we keep the handlers simple and yet we ensure this important step\n *   (of getting warnings right) is not missed on any change.\n * \n *   We can test `f` easily - it is a pure function - independently of\n *   any CRUD operation.\n * \n *   This brings huge simplicity at the expense of some re-computation\n *   each time. This may be a very satisfactory trade-off in many cases.\n * \n *   #### Returning nil\n * \n *   In some cases, it\x27s useful to apply a change to specific situations that can\n *   be determined at runtime instead of when defining the handler with an\n *   `:enrich` interceptor. Instead of forcing you to return the `db` from every\n *   non-applicable branch, you can return `nil` to use the given `db` value:\n * \n *    #!clj\n *    (def set-last-update\n *      (core/enrich\n *        (fn [{db :db} [_ {user :user}]]\n *          (when (active-user? user)  ;; \x3c- Only perform an update if user is active\n *            ...))))\n *   \n */\nre_frame.core.enrich \x3d (function re_frame$core$enrich(f){\nreturn re_frame.std_interceptors.enrich(f);\n});\n/**\n * \x3e New in v1.2.0\n * \n * An interceptor which decreases the amount of destructuring necessary in an\n * event handler where the event is structured as a 2-vector of\n * [event-id payload-map].\n * \n * It promotes the `payload-map` part to be the event ultimately given to the\n * event handler. Should you want the full original event, it can be found in\n * `coeffects` under the key `:original-event`.\n * \n * If a dispatch looked like this:\n * \n *    #!clj\n *     (dispatch [:event-id {:x 1 :y 2 :z 3}])\n * \n * Your event handlers can look like this:\n * \n *    #!clj\n *     (reg-event-fx\n *       :event-id\n *       [... unwrap ...]                    ;; \x3c-- added to the interceptors\n *       (fn [{:keys [db]} {:keys [x y z]}]  ;; \x3c-- instead of [_ {:keys [x y z]}]\n *         ...)\n * \n */\nre_frame.core.unwrap \x3d re_frame.std_interceptors.unwrap;\n/**\n * An interceptor which removes the first element of the event vector,\n *   before it is supplied to the event handler, allowing you to write more\n * aesthetically pleasing event handlers. No leading underscore on the event-v!\n * \n *   Should you want the full original event, it can be found in `coeffects` under\n *   the key `:original-event`.\n * \n *   Your event handlers will look like this:\n * \n *    #!clj\n *    (reg-event-db\n *      :event-id\n *      [... trim-v ...]    ;; \x3c-- added to the interceptors\n *      (fn [db [x y z]]    ;; \x3c-- instead of [_ x y z]\n *        ...)\n *  \n */\nre_frame.core.trim_v \x3d re_frame.std_interceptors.trim_v;\n/**\n * Returns an interceptor which runs the given function `f` in the `:after`\n *   position, presumably for side effects.\n * \n *   `f` is called with two arguments: the `:effects` value for `:db`\n *   (or the `:coeffect` value of `:db` if no `:db` effect is returned) and the event.\n *   Its return value is ignored, so `f` can only side-effect.\n * \n *   An example of use can be seen in the re-frame github repo in `/examples/todomvc/events.cljs`:\n * \n *   - `f` runs schema validation (reporting any errors found).\n *   - `f` writes to localstorage.\n */\nre_frame.core.after \x3d (function re_frame$core$after(f){\nreturn re_frame.std_interceptors.after(f);\n});\n/**\n * Returns an interceptor which will observe N paths within `db`, and if any of them\n *   test not `identical?` to their previous value  (as a result of a event handler\n *   being run), then it will run `f` to compute a new value, which is then assoc-ed\n *   into the given `out-path` within `db`.\n * \n *   Example Usage:\n * \n *    #!clj\n *    (defn my-f\n *      [a-val b-val]\n *      ... some computation on a and b in here)\n * \n *    ;; use it\n *    (def my-interceptor (on-changes my-f [:c] [:a] [:b]))\n * \n *    (reg-event-db\n *      :event-id\n *      [... my-interceptor ...]  ;; \x3c-- ultimately used here\n *      (fn [db v]\n *         ...))\n * \n * \n *   If you put this interceptor on handlers which might change paths `:a` or `:b`,\n *   it will:\n * \n *  - call `f` each time the value at path `[:a]` or `[:b]` changes\n *  - call `f` with the values extracted from `[:a]` `[:b]`\n *  - assoc the return value from `f` into the path  `[:c]`\n *   \n */\nre_frame.core.on_changes \x3d (function re_frame$core$on_changes(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24552 \x3d arguments.length;\nvar i__5770__auto___24553 \x3d (0);\nwhile(true){\nif((i__5770__auto___24553 \x3c len__5769__auto___24552)){\nargs__5775__auto__.push((arguments[i__5770__auto___24553]));\n\nvar G__24554 \x3d (i__5770__auto___24553 + (1));\ni__5770__auto___24553 \x3d G__24554;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((2) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((2)),(0),null)):null);\nreturn re_frame.core.on_changes.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),(arguments[(1)]),argseq__5776__auto__);\n});\n\n(re_frame.core.on_changes.cljs$core$IFn$_invoke$arity$variadic \x3d (function (f,out_path,in_paths){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(re_frame.std_interceptors.on_changes,f,out_path,in_paths);\n}));\n\n(re_frame.core.on_changes.cljs$lang$maxFixedArity \x3d (2));\n\n/** @this {Function} */\n(re_frame.core.on_changes.cljs$lang$applyTo \x3d (function (seq24515){\nvar G__24516 \x3d cljs.core.first(seq24515);\nvar seq24515__$1 \x3d cljs.core.next(seq24515);\nvar G__24517 \x3d cljs.core.first(seq24515__$1);\nvar seq24515__$2 \x3d cljs.core.next(seq24515__$1);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24516,G__24517,seq24515__$2);\n}));\n\n/**\n * Registers the given `interceptor` as a global interceptor. Global interceptors are\n * included in the processing chain of every event.\n * \n * When you register an event handler, you have the option of supplying an\n * interceptor chain. Any global interceptors you register are effectively\n * prepending to this chain.\n * \n * Global interceptors are run in the order that they are registered.\n */\nre_frame.core.reg_global_interceptor \x3d (function re_frame$core$reg_global_interceptor(interceptor){\nreturn re_frame.settings.reg_global_interceptor(interceptor);\n});\n/**\n * Unregisters global interceptors (presumably registered previously via the use of `reg-global-interceptor`).\n * \n *   When called with no args, it will unregister all currently registered global interceptors.\n * \n *   When given one arg, assumed to be the `id` of a previously registered\n *   global interceptors, it will unregister the associated interceptor. Will produce a warning to\n *   console if it finds no matching registration.\n */\nre_frame.core.clear_global_interceptor \x3d (function re_frame$core$clear_global_interceptor(var_args){\nvar G__24519 \x3d arguments.length;\nswitch (G__24519) {\ncase 0:\nreturn re_frame.core.clear_global_interceptor.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn re_frame.core.clear_global_interceptor.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.clear_global_interceptor.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn re_frame.settings.clear_global_interceptors.cljs$core$IFn$_invoke$arity$0();\n}));\n\n(re_frame.core.clear_global_interceptor.cljs$core$IFn$_invoke$arity$1 \x3d (function (id){\nreturn re_frame.settings.clear_global_interceptors.cljs$core$IFn$_invoke$arity$1(id);\n}));\n\n(re_frame.core.clear_global_interceptor.cljs$lang$maxFixedArity \x3d 1);\n\n/**\n * A utility function for creating interceptors.\n * \n *   Accepts three optional, named arguments:\n * \n *   - `:id` - an id for the interceptor (decorative only)\n *   - `:before` - the interceptor\x27s before function\n *   - `:after`  - the interceptor\x27s after function\n * \n *   Example use:\n * \n *    #!clj\n *    (def my-interceptor\n *      (-\x3einterceptor\n *       :id     :my-interceptor\n *       :before (fn [context]\n *                 ... modifies and returns `context`)\n *       :after  (fn [context]\n *                 ... modifies and returns `context`)))\n * \n *   Notes:\n * \n *  - `:before` functions modify and return their `context` argument. Sometimes they\n *    only side effect, in which case, they\x27ll perform the side effect and return\n *    `context` unchanged.\n *  - `:before` functions often modify the `:coeffects` map within `context` and,\n *    if they do, then they should use the utility functions `get-coeffect` and\n *    `assoc-coeffect`.\n *  - `:after` functions modify and return their `context` argument. Sometimes they\n *    only side effect, in which case, they\x27ll perform the side effect and return\n *    `context` unchanged.\n *  - `:after` functions often modify the `:effects` map within `context` and,\n *    if they do, then they should use the utility functions `get-effect`\n *    and `assoc-effect`\n */\nre_frame.core.__GT_interceptor \x3d (function re_frame$core$__GT_interceptor(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24556 \x3d arguments.length;\nvar i__5770__auto___24557 \x3d (0);\nwhile(true){\nif((i__5770__auto___24557 \x3c len__5769__auto___24556)){\nargs__5775__auto__.push((arguments[i__5770__auto___24557]));\n\nvar G__24558 \x3d (i__5770__auto___24557 + (1));\ni__5770__auto___24557 \x3d G__24558;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn re_frame.core.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(re_frame.core.__GT_interceptor.cljs$core$IFn$_invoke$arity$variadic \x3d (function (p__24521){\nvar map__24522 \x3d p__24521;\nvar map__24522__$1 \x3d cljs.core.__destructure_map(map__24522);\nvar m \x3d map__24522__$1;\nvar id \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24522__$1,new cljs.core.Keyword(null,\x22id\x22,\x22id\x22,-1388402092));\nvar before \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24522__$1,new cljs.core.Keyword(null,\x22before\x22,\x22before\x22,-1633692388));\nvar after \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__24522__$1,new cljs.core.Keyword(null,\x22after\x22,\x22after\x22,594996914));\nreturn re_frame.utils.apply_kw.cljs$core$IFn$_invoke$arity$variadic(re_frame.interceptor.__GT_interceptor,cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([m], 0));\n}));\n\n(re_frame.core.__GT_interceptor.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(re_frame.core.__GT_interceptor.cljs$lang$applyTo \x3d (function (seq24520){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24520));\n}));\n\n/**\n * A utility function, typically used when writing an interceptor\x27s `:before` function.\n * \n * When called with one argument, it returns the `:coeffects` map from within that `context`.\n * \n * When called with two or three arguments, behaves like `clojure.core/get` and\n * returns the value mapped to `key` in the `:coeffects` map within `context`, `not-found` or\n * `nil` if `key` is not present.\n */\nre_frame.core.get_coeffect \x3d (function re_frame$core$get_coeffect(var_args){\nvar G__24524 \x3d arguments.length;\nswitch (G__24524) {\ncase 1:\nreturn re_frame.core.get_coeffect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.core.get_coeffect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn re_frame.core.get_coeffect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.get_coeffect.cljs$core$IFn$_invoke$arity$1 \x3d (function (context){\nreturn re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$1(context);\n}));\n\n(re_frame.core.get_coeffect.cljs$core$IFn$_invoke$arity$2 \x3d (function (context,key){\nreturn re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$2(context,key);\n}));\n\n(re_frame.core.get_coeffect.cljs$core$IFn$_invoke$arity$3 \x3d (function (context,key,not_found){\nreturn re_frame.interceptor.get_coeffect.cljs$core$IFn$_invoke$arity$3(context,key,not_found);\n}));\n\n(re_frame.core.get_coeffect.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * A utility function, typically used when writing an interceptor\x27s `:before` function.\n * \n * Adds or updates a key/value pair in the `:coeffects` map within `context`. \n */\nre_frame.core.assoc_coeffect \x3d (function re_frame$core$assoc_coeffect(context,key,value){\nreturn re_frame.interceptor.assoc_coeffect(context,key,value);\n});\n/**\n * A utility function, used when writing interceptors, typically within an `:after` function.\n * \n * When called with one argument, returns the `:effects` map from the `context`.\n * \n * When called with two or three arguments, behaves like `clojure.core/get` and\n * returns the value mapped to `key` in the effects map, `not-found` or\n * `nil` if `key` is not present.\n */\nre_frame.core.get_effect \x3d (function re_frame$core$get_effect(var_args){\nvar G__24526 \x3d arguments.length;\nswitch (G__24526) {\ncase 1:\nreturn re_frame.core.get_effect.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.core.get_effect.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ncase 3:\nreturn re_frame.core.get_effect.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.get_effect.cljs$core$IFn$_invoke$arity$1 \x3d (function (context){\nreturn re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$1(context);\n}));\n\n(re_frame.core.get_effect.cljs$core$IFn$_invoke$arity$2 \x3d (function (context,key){\nreturn re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$2(context,key);\n}));\n\n(re_frame.core.get_effect.cljs$core$IFn$_invoke$arity$3 \x3d (function (context,key,not_found){\nreturn re_frame.interceptor.get_effect.cljs$core$IFn$_invoke$arity$3(context,key,not_found);\n}));\n\n(re_frame.core.get_effect.cljs$lang$maxFixedArity \x3d 3);\n\n/**\n * A utility function, typically used when writing an interceptor\x27s `:after` function.\n * \n * Adds or updates a key/value pair in the `:effects` map within `context`. \n */\nre_frame.core.assoc_effect \x3d (function re_frame$core$assoc_effect(context,key,value){\nreturn re_frame.interceptor.assoc_effect(context,key,value);\n});\n/**\n * A utility function, used when writing an interceptor\x27s `:before` function.\n * \n *   Adds the given collection of `interceptors` to those already in `context\x27s`\n *   execution `:queue`. It returns the updated `context`.\n * \n *   So, it provides a way for one interceptor to add more interceptors to the\n *   currently executing interceptor chain.\n *   \n */\nre_frame.core.enqueue \x3d (function re_frame$core$enqueue(context,interceptors){\nreturn re_frame.interceptor.enqueue(context,interceptors);\n});\n/**\n * re-frame outputs warnings and errors via the API function `console`\n * which, by default, delegates to `js/console`\x27s default implementation for\n *   `log`, `error`, `warn`, `debug`, `group` and `groupEnd`. But, using this function,\n * you can override that behaviour with your own functions.\n * \n *   The argument `new-loggers` should be a map containing a subset of they keys\n *   for the standard `loggers`, namely  `:log` `:error` `:warn` `:debug` `:group`\n *   or `:groupEnd`.\n * \n *   Example Usage:\n * \n *    #!clj\n *    (defn my-logger      ;; my alternative logging function\n *      [\x26 args]\n *      (post-it-somewhere (apply str args)))\n * \n *    ;; now install my alternative loggers\n *    (re-frame.core/set-loggers!  {:warn my-logger :log my-logger})\n * \n */\nre_frame.core.set_loggers_BANG_ \x3d (function re_frame$core$set_loggers_BANG_(new_loggers){\nreturn re_frame.loggers.set_loggers_BANG_(new_loggers);\n});\n/**\n * A utility logging function which is used internally within re-frame to produce\n *   warnings and other output. It can also be used by libraries which\n *   extend re-frame, such as effect handlers.\n * \n *   By default, it will output the given `args` to `js/console` at the given log `level`.\n *   However, an application using re-frame can redirect `console` output via `set-loggers!`.\n * \n *   `level` can be one of `:log`, `:error`, `:warn`, `:debug`, `:group` or `:groupEnd`.\n * \n *   Example usage:\n * \n *    #!clj\n *    (console :error \x22Sure enough it happened:\x22 a-var \x22and\x22 another)\n *    (console :warn \x22Possible breach of containment wall at:\x22 dt)\n *   \n */\nre_frame.core.console \x3d (function re_frame$core$console(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24561 \x3d arguments.length;\nvar i__5770__auto___24562 \x3d (0);\nwhile(true){\nif((i__5770__auto___24562 \x3c len__5769__auto___24561)){\nargs__5775__auto__.push((arguments[i__5770__auto___24562]));\n\nvar G__24563 \x3d (i__5770__auto___24562 + (1));\ni__5770__auto___24562 \x3d G__24563;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn re_frame.core.console.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(re_frame.core.console.cljs$core$IFn$_invoke$arity$variadic \x3d (function (level,args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(re_frame.loggers.console,level,args);\n}));\n\n(re_frame.core.console.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(re_frame.core.console.cljs$lang$applyTo \x3d (function (seq24527){\nvar G__24528 \x3d cljs.core.first(seq24527);\nvar seq24527__$1 \x3d cljs.core.next(seq24527);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__24528,seq24527__$1);\n}));\n\n/**\n * This is a utility function, typically used in testing.\n * \n *   It checkpoints the current state of re-frame and returns a function which, when\n *   later called, will restore re-frame to the checkpointed state.\n * \n *   The checkpoint includes `app-db`, all registered handlers and all subscriptions.\n *   \n */\nre_frame.core.make_restore_fn \x3d (function re_frame$core$make_restore_fn(){\nvar handlers \x3d cljs.core.deref(re_frame.registrar.kind__GT_id__GT_handler);\nvar app_db \x3d cljs.core.deref(re_frame.db.app_db);\nvar subs_cache \x3d cljs.core.deref(re_frame.subs.query__GT_reaction);\nreturn (function (){\nvar original_subs_24564 \x3d cljs.core.set(cljs.core.vals(subs_cache));\nvar current_subs_24565 \x3d cljs.core.set(cljs.core.vals(cljs.core.deref(re_frame.subs.query__GT_reaction)));\nvar seq__24529_24566 \x3d cljs.core.seq(clojure.set.difference.cljs$core$IFn$_invoke$arity$2(current_subs_24565,original_subs_24564));\nvar chunk__24530_24567 \x3d null;\nvar count__24531_24568 \x3d (0);\nvar i__24532_24569 \x3d (0);\nwhile(true){\nif((i__24532_24569 \x3c count__24531_24568)){\nvar sub_24570 \x3d chunk__24530_24567.cljs$core$IIndexed$_nth$arity$2(null,i__24532_24569);\nre_frame.interop.dispose_BANG_(sub_24570);\n\n\nvar G__24571 \x3d seq__24529_24566;\nvar G__24572 \x3d chunk__24530_24567;\nvar G__24573 \x3d count__24531_24568;\nvar G__24574 \x3d (i__24532_24569 + (1));\nseq__24529_24566 \x3d G__24571;\nchunk__24530_24567 \x3d G__24572;\ncount__24531_24568 \x3d G__24573;\ni__24532_24569 \x3d G__24574;\ncontinue;\n} else {\nvar temp__5804__auto___24575 \x3d cljs.core.seq(seq__24529_24566);\nif(temp__5804__auto___24575){\nvar seq__24529_24576__$1 \x3d temp__5804__auto___24575;\nif(cljs.core.chunked_seq_QMARK_(seq__24529_24576__$1)){\nvar c__5568__auto___24577 \x3d cljs.core.chunk_first(seq__24529_24576__$1);\nvar G__24578 \x3d cljs.core.chunk_rest(seq__24529_24576__$1);\nvar G__24579 \x3d c__5568__auto___24577;\nvar G__24580 \x3d cljs.core.count(c__5568__auto___24577);\nvar G__24581 \x3d (0);\nseq__24529_24566 \x3d G__24578;\nchunk__24530_24567 \x3d G__24579;\ncount__24531_24568 \x3d G__24580;\ni__24532_24569 \x3d G__24581;\ncontinue;\n} else {\nvar sub_24582 \x3d cljs.core.first(seq__24529_24576__$1);\nre_frame.interop.dispose_BANG_(sub_24582);\n\n\nvar G__24583 \x3d cljs.core.next(seq__24529_24576__$1);\nvar G__24584 \x3d null;\nvar G__24585 \x3d (0);\nvar G__24586 \x3d (0);\nseq__24529_24566 \x3d G__24583;\nchunk__24530_24567 \x3d G__24584;\ncount__24531_24568 \x3d G__24585;\ni__24532_24569 \x3d G__24586;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.core.reset_BANG_(re_frame.registrar.kind__GT_id__GT_handler,handlers);\n\ncljs.core.reset_BANG_(re_frame.db.app_db,app_db);\n\nreturn null;\n});\n});\n/**\n * Removes all events currently queued for processing\n */\nre_frame.core.purge_event_queue \x3d (function re_frame$core$purge_event_queue(){\nreturn re_frame.router.event_queue.re_frame$router$IEventQueue$purge$arity$1(null);\n});\n/**\n * Registers the given function `f` to be called after each event is processed.\n * \n * `f` will be called with two arguments:\n * \n *  - `event`: a vector. The event just processed.\n *  - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n * \n * This facility is useful in advanced cases like:\n * \n *   - you are implementing a complex bootstrap pipeline\n *   - you want to create your own handling infrastructure, with perhaps multiple\n *     handlers for the one event, etc.  Hook in here.\n *   - libraries providing \x27isomorphic javascript\x27 rendering on  Nodejs or Nashorn.\n * \n *   `id` is typically a keyword. If it supplied when an `f` is added, it can be\n *   subsequently be used to identify it for removal. See `remove-post-event-callback`.\n *   \n */\nre_frame.core.add_post_event_callback \x3d (function re_frame$core$add_post_event_callback(var_args){\nvar G__24534 \x3d arguments.length;\nswitch (G__24534) {\ncase 1:\nreturn re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$1 \x3d (function (f){\nreturn re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2(f,f);\n}));\n\n(re_frame.core.add_post_event_callback.cljs$core$IFn$_invoke$arity$2 \x3d (function (id,f){\nreturn re_frame.router.event_queue.re_frame$router$IEventQueue$add_post_event_callback$arity$3(null,id,f);\n}));\n\n(re_frame.core.add_post_event_callback.cljs$lang$maxFixedArity \x3d 2);\n\n/**\n * Unregisters a post event callback function, identified by `id`.\n * \n *   Such a function must have been previously registered via `add-post-event-callback`\n */\nre_frame.core.remove_post_event_callback \x3d (function re_frame$core$remove_post_event_callback(id){\nreturn re_frame.router.event_queue.re_frame$router$IEventQueue$remove_post_event_callback$arity$2(null,id);\n});\n/**\n * Deprecated. Use `reg-event-db` instead.\n */\nre_frame.core.register_handler \x3d (function re_frame$core$register_handler(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24588 \x3d arguments.length;\nvar i__5770__auto___24589 \x3d (0);\nwhile(true){\nif((i__5770__auto___24589 \x3c len__5769__auto___24588)){\nargs__5775__auto__.push((arguments[i__5770__auto___24589]));\n\nvar G__24590 \x3d (i__5770__auto___24589 + (1));\ni__5770__auto___24589 \x3d G__24590;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(re_frame.core.register_handler.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\nre_frame.core.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: \\\x22register-handler\\\x22 has been renamed \\\x22reg-event-db\\\x22 (look for registration of \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args)),\x22)\x22], 0));\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(re_frame.core.reg_event_db,args);\n}));\n\n(re_frame.core.register_handler.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(re_frame.core.register_handler.cljs$lang$applyTo \x3d (function (seq24535){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24535));\n}));\n\n/**\n * Deprecated. Use `reg-sub-raw` instead.\n */\nre_frame.core.register_sub \x3d (function re_frame$core$register_sub(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___24591 \x3d arguments.length;\nvar i__5770__auto___24592 \x3d (0);\nwhile(true){\nif((i__5770__auto___24592 \x3c len__5769__auto___24591)){\nargs__5775__auto__.push((arguments[i__5770__auto___24592]));\n\nvar G__24593 \x3d (i__5770__auto___24592 + (1));\ni__5770__auto___24592 \x3d G__24593;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(re_frame.core.register_sub.cljs$core$IFn$_invoke$arity$variadic \x3d (function (args){\nre_frame.core.console.cljs$core$IFn$_invoke$arity$variadic(new cljs.core.Keyword(null,\x22warn\x22,\x22warn\x22,-436710552),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([\x22re-frame: \\\x22register-sub\\\x22 is used to register the event \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(args)),\x22 but it is a deprecated part of the API. Please use \\\x22reg-sub-raw\\\x22 instead.\x22], 0));\n\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(re_frame.core.reg_sub_raw,args);\n}));\n\n(re_frame.core.register_sub.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(re_frame.core.register_sub.cljs$lang$applyTo \x3d (function (seq24536){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq24536));\n}));\n\n");
SHADOW_ENV.evalLoad("tableground.events.js", true , "goog.provide(\x27tableground.events\x27);\ntableground.events.default_db \x3d cljs.core.PersistentArrayMap.EMPTY;\nre_frame.core.reg_event_db.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(\x22tableground.events\x22,\x22initialize-db\x22,\x22tableground.events/initialize-db\x22,-1268042262),(function (_,___$1){\nreturn tableground.events.default_db;\n}));\n");
SHADOW_ENV.evalLoad("shadow.js.shim.module$three.js", true , "goog.provide(\x22shadow.js.shim.module$three\x22);\ngoog.provide(\x22module$shadow_js_shim_module$three\x22);\nshadow.js.shim.module$three \x3d shadow$bridge(\x22three\x22);\nmodule$shadow_js_shim_module$three.default \x3d shadow.js.shim.module$three;\n");
SHADOW_ENV.evalLoad("shadow.js.shim.module$$react_three$fiber.js", true , "goog.provide(\x22shadow.js.shim.module$$react_three$fiber\x22);\ngoog.provide(\x22module$shadow_js_shim_module$$react_three$fiber\x22);\nshadow.js.shim.module$$react_three$fiber \x3d shadow$bridge(\x22@react-three/fiber\x22);\nmodule$shadow_js_shim_module$$react_three$fiber.default \x3d shadow.js.shim.module$$react_three$fiber;\n");
SHADOW_ENV.evalLoad("shadow.js.shim.module$$react_three$drei.js", true , "goog.provide(\x22shadow.js.shim.module$$react_three$drei\x22);\ngoog.provide(\x22module$shadow_js_shim_module$$react_three$drei\x22);\nshadow.js.shim.module$$react_three$drei \x3d shadow$bridge(\x22@react-three/drei\x22);\nmodule$shadow_js_shim_module$$react_three$drei.default \x3d shadow.js.shim.module$$react_three$drei;\n");
SHADOW_ENV.evalLoad("shadow.js.shim.module$three$addons$loaders$FontLoader.js", true , "goog.provide(\x22shadow.js.shim.module$three$addons$loaders$FontLoader\x22);\ngoog.provide(\x22module$shadow_js_shim_module$three$addons$loaders$FontLoader\x22);\nshadow.js.shim.module$three$addons$loaders$FontLoader \x3d shadow$bridge(\x22three/addons/loaders/FontLoader\x22);\nmodule$shadow_js_shim_module$three$addons$loaders$FontLoader.default \x3d shadow.js.shim.module$three$addons$loaders$FontLoader;\n");
SHADOW_ENV.evalLoad("clojure.math.combinatorics.js", true , "goog.provide(\x27clojure.math.combinatorics\x27);\nclojure.math.combinatorics._STAR__SINGLEQUOTE_ \x3d cljs.core._STAR_;\nclojure.math.combinatorics._PLUS__SINGLEQUOTE_ \x3d cljs.core._PLUS_;\n/**\n * Lazily concatenates a collection of collections into a flat sequence,\n *   because Clojure\x27s `apply concat` is insufficiently lazy.\n */\nclojure.math.combinatorics.join \x3d (function clojure$math$combinatorics$join(colls){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d cljs.core.seq(colls);\nif(temp__5804__auto__){\nvar s \x3d temp__5804__auto__;\nreturn cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.first(s),(function (){var G__7144 \x3d cljs.core.rest(s);\nreturn (clojure.math.combinatorics.join.cljs$core$IFn$_invoke$arity$1 ? clojure.math.combinatorics.join.cljs$core$IFn$_invoke$arity$1(G__7144) : clojure.math.combinatorics.join.call(null,G__7144));\n})());\n} else {\nreturn null;\n}\n}),null,null));\n});\n/**\n * Uses join to achieve lazier version of mapcat (on one collection)\n */\nclojure.math.combinatorics.mapjoin \x3d (function clojure$math$combinatorics$mapjoin(f,coll){\nreturn clojure.math.combinatorics.join(cljs.core.map.cljs$core$IFn$_invoke$arity$2(f,coll));\n});\n/**\n * Annoyingly, the built-in distinct? doesn\x27t handle 0 args, so we need\n *   to write our own version that considers the empty-list to be distinct\n */\nclojure.math.combinatorics.all_different_QMARK_ \x3d (function clojure$math$combinatorics$all_different_QMARK_(s){\nif(cljs.core.seq(s)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.distinct_QMARK_,s);\n} else {\nreturn true;\n}\n});\nclojure.math.combinatorics.index_combinations \x3d (function clojure$math$combinatorics$index_combinations(n,cnt){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar c \x3d cljs.core.vec(cljs.core.cons(null,(function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$index_combinations_$_iter__7145(s__7146){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7146__$1 \x3d s__7146;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7146__$1);\nif(temp__5804__auto__){\nvar s__7146__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7146__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7146__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7148 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7147 \x3d (0);\nwhile(true){\nif((i__7147 \x3c size__5522__auto__)){\nvar j \x3d cljs.core._nth(c__5521__auto__,i__7147);\ncljs.core.chunk_append(b__7148,((j + cnt) + (- (n + (1)))));\n\nvar G__7393 \x3d (i__7147 + (1));\ni__7147 \x3d G__7393;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7148),clojure$math$combinatorics$index_combinations_$_iter__7145(cljs.core.chunk_rest(s__7146__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7148),null);\n}\n} else {\nvar j \x3d cljs.core.first(s__7146__$2);\nreturn cljs.core.cons(((j + cnt) + (- (n + (1)))),clojure$math$combinatorics$index_combinations_$_iter__7145(cljs.core.rest(s__7146__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2((1),(n + (1))));\n})()));\nvar iter_comb \x3d (function clojure$math$combinatorics$index_combinations_$_iter_comb(c__$1,j){\nif((j \x3e n)){\nreturn null;\n} else {\nvar c__$2 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c__$1,j,((c__$1.cljs$core$IFn$_invoke$arity$1 ? c__$1.cljs$core$IFn$_invoke$arity$1(j) : c__$1.call(null,j)) - (1)));\nif(((c__$2.cljs$core$IFn$_invoke$arity$1 ? c__$2.cljs$core$IFn$_invoke$arity$1(j) : c__$2.call(null,j)) \x3c j)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c__$2,(j + (1))], null);\n} else {\nvar c__$3 \x3d c__$2;\nvar j__$1 \x3d j;\nwhile(true){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(j__$1,(1))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [c__$3,j__$1], null);\n} else {\nvar G__7394 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c__$3,(j__$1 - (1)),((c__$3.cljs$core$IFn$_invoke$arity$1 ? c__$3.cljs$core$IFn$_invoke$arity$1(j__$1) : c__$3.call(null,j__$1)) - (1)));\nvar G__7395 \x3d (j__$1 - (1));\nc__$3 \x3d G__7394;\nj__$1 \x3d G__7395;\ncontinue;\n}\nbreak;\n}\n}\n}\n});\nvar step \x3d (function clojure$math$combinatorics$index_combinations_$_step(c__$1,j){\nreturn cljs.core.cons(cljs.core.rseq(cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(c__$1,(1),(n + (1)))),(new cljs.core.LazySeq(null,(function (){\nvar next_step \x3d iter_comb(c__$1,j);\nif(cljs.core.truth_(next_step)){\nreturn clojure$math$combinatorics$index_combinations_$_step((next_step.cljs$core$IFn$_invoke$arity$1 ? next_step.cljs$core$IFn$_invoke$arity$1((0)) : next_step.call(null,(0))),(next_step.cljs$core$IFn$_invoke$arity$1 ? next_step.cljs$core$IFn$_invoke$arity$1((1)) : next_step.call(null,(1))));\n} else {\nreturn null;\n}\n}),null,null)));\n});\nreturn step(c,(1));\n}),null,null));\n});\nclojure.math.combinatorics.distribute \x3d (function clojure$math$combinatorics$distribute(m,index,total,distribution,already_distributed){\nvar distribution__$1 \x3d distribution;\nvar index__$1 \x3d index;\nvar already_distributed__$1 \x3d already_distributed;\nwhile(true){\nif((index__$1 \x3e\x3d cljs.core.count(m))){\nreturn null;\n} else {\nvar quantity_to_distribute \x3d (total - already_distributed__$1);\nvar mi \x3d (m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(index__$1) : m.call(null,index__$1));\nif((quantity_to_distribute \x3c\x3d mi)){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(distribution__$1,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [index__$1,quantity_to_distribute,total], null));\n} else {\nvar G__7414 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(distribution__$1,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [index__$1,mi,(already_distributed__$1 + mi)], null));\nvar G__7415 \x3d (index__$1 + (1));\nvar G__7416 \x3d (already_distributed__$1 + mi);\ndistribution__$1 \x3d G__7414;\nindex__$1 \x3d G__7415;\nalready_distributed__$1 \x3d G__7416;\ncontinue;\n}\n}\nbreak;\n}\n});\nclojure.math.combinatorics.next_distribution \x3d (function clojure$math$combinatorics$next_distribution(m,total,distribution){\nvar vec__7149 \x3d cljs.core.peek(distribution);\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7149,(0),null);\nvar this_bucket \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7149,(1),null);\nvar this_and_to_the_left \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7149,(2),null);\nif((index \x3c (cljs.core.count(m) - (1)))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this_bucket,(1))){\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(distribution),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(index + (1)),(1),this_and_to_the_left], null));\n} else {\nreturn cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(cljs.core.pop(distribution),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,(this_bucket - (1)),(this_and_to_the_left - (1))], null),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(index + (1)),(1),this_and_to_the_left], null)], 0));\n}\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this_bucket,total)){\nreturn null;\n} else {\nvar distribution__$1 \x3d cljs.core.pop(distribution);\nwhile(true){\nvar vec__7152 \x3d cljs.core.peek(distribution__$1);\nvar index__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7152,(0),null);\nvar this_bucket__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7152,(1),null);\nvar this_and_to_the_left__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7152,(2),null);\nvar distribution__$2 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(this_bucket__$1,(1)))?cljs.core.pop(distribution__$1):cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.pop(distribution__$1),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [index__$1,(this_bucket__$1 - (1)),(this_and_to_the_left__$1 - (1))], null)));\nif(((total - (this_and_to_the_left__$1 - (1))) \x3c\x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,cljs.core.subvec.cljs$core$IFn$_invoke$arity$2(m,(index__$1 + (1)))))){\nreturn clojure.math.combinatorics.distribute(m,(index__$1 + (1)),total,distribution__$2,(this_and_to_the_left__$1 - (1)));\n} else {\nif(cljs.core.seq(distribution__$2)){\nvar G__7436 \x3d distribution__$2;\ndistribution__$1 \x3d G__7436;\ncontinue;\n} else {\nreturn null;\n\n}\n}\nbreak;\n}\n\n}\n}\n});\nclojure.math.combinatorics.bounded_distributions \x3d (function clojure$math$combinatorics$bounded_distributions(m,t){\nvar step \x3d (function clojure$math$combinatorics$bounded_distributions_$_step(distribution){\nreturn cljs.core.cons(distribution,(new cljs.core.LazySeq(null,(function (){\nvar temp__5804__auto__ \x3d clojure.math.combinatorics.next_distribution(m,t,distribution);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar next_step \x3d temp__5804__auto__;\nreturn clojure$math$combinatorics$bounded_distributions_$_step(next_step);\n} else {\nreturn null;\n}\n}),null,null)));\n});\nreturn step(clojure.math.combinatorics.distribute(m,(0),t,cljs.core.PersistentVector.EMPTY,(0)));\n});\n/**\n * Handles the case when you want the combinations of a list with duplicate items.\n */\nclojure.math.combinatorics.multi_comb \x3d (function clojure$math$combinatorics$multi_comb(l,t){\nvar f \x3d cljs.core.frequencies(l);\nvar v \x3d cljs.core.vec(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(l));\nvar domain \x3d cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(v));\nvar m \x3d cljs.core.vec((function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$multi_comb_$_iter__7155(s__7156){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7156__$1 \x3d s__7156;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7156__$1);\nif(temp__5804__auto__){\nvar s__7156__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7156__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7156__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7158 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7157 \x3d (0);\nwhile(true){\nif((i__7157 \x3c size__5522__auto__)){\nvar i \x3d cljs.core._nth(c__5521__auto__,i__7157);\ncljs.core.chunk_append(b__7158,(function (){var G__7159 \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7159) : f.call(null,G__7159));\n})());\n\nvar G__7439 \x3d (i__7157 + (1));\ni__7157 \x3d G__7439;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7158),clojure$math$combinatorics$multi_comb_$_iter__7155(cljs.core.chunk_rest(s__7156__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7158),null);\n}\n} else {\nvar i \x3d cljs.core.first(s__7156__$2);\nreturn cljs.core.cons((function (){var G__7160 \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7160) : f.call(null,G__7160));\n})(),clojure$math$combinatorics$multi_comb_$_iter__7155(cljs.core.rest(s__7156__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(domain);\n})());\nvar qs \x3d clojure.math.combinatorics.bounded_distributions(m,t);\nvar iter__5523__auto__ \x3d (function clojure$math$combinatorics$multi_comb_$_iter__7161(s__7162){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7162__$1 \x3d s__7162;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7162__$1);\nif(temp__5804__auto__){\nvar s__7162__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7162__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7162__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7164 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7163 \x3d (0);\nwhile(true){\nif((i__7163 \x3c size__5522__auto__)){\nvar q \x3d cljs.core._nth(c__5521__auto__,i__7163);\ncljs.core.chunk_append(b__7164,clojure.math.combinatorics.join((function (){var iter__5523__auto__ \x3d ((function (i__7163,q,c__5521__auto__,size__5522__auto__,b__7164,s__7162__$2,temp__5804__auto__,f,v,domain,m,qs){\nreturn (function clojure$math$combinatorics$multi_comb_$_iter__7161_$_iter__7165(s__7166){\nreturn (new cljs.core.LazySeq(null,((function (i__7163,q,c__5521__auto__,size__5522__auto__,b__7164,s__7162__$2,temp__5804__auto__,f,v,domain,m,qs){\nreturn (function (){\nvar s__7166__$1 \x3d s__7166;\nwhile(true){\nvar temp__5804__auto____$1 \x3d cljs.core.seq(s__7166__$1);\nif(temp__5804__auto____$1){\nvar s__7166__$2 \x3d temp__5804__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__7166__$2)){\nvar c__5521__auto____$1 \x3d cljs.core.chunk_first(s__7166__$2);\nvar size__5522__auto____$1 \x3d cljs.core.count(c__5521__auto____$1);\nvar b__7168 \x3d cljs.core.chunk_buffer(size__5522__auto____$1);\nif((function (){var i__7167 \x3d (0);\nwhile(true){\nif((i__7167 \x3c size__5522__auto____$1)){\nvar vec__7169 \x3d cljs.core._nth(c__5521__auto____$1,i__7167);\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7169,(0),null);\nvar this_bucket \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7169,(1),null);\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7169,(2),null);\ncljs.core.chunk_append(b__7168,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(this_bucket,(v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(index) : v.call(null,index))));\n\nvar G__7442 \x3d (i__7167 + (1));\ni__7167 \x3d G__7442;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7168),clojure$math$combinatorics$multi_comb_$_iter__7161_$_iter__7165(cljs.core.chunk_rest(s__7166__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7168),null);\n}\n} else {\nvar vec__7172 \x3d cljs.core.first(s__7166__$2);\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7172,(0),null);\nvar this_bucket \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7172,(1),null);\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7172,(2),null);\nreturn cljs.core.cons(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(this_bucket,(v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(index) : v.call(null,index))),clojure$math$combinatorics$multi_comb_$_iter__7161_$_iter__7165(cljs.core.rest(s__7166__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(i__7163,q,c__5521__auto__,size__5522__auto__,b__7164,s__7162__$2,temp__5804__auto__,f,v,domain,m,qs))\n,null,null));\n});})(i__7163,q,c__5521__auto__,size__5522__auto__,b__7164,s__7162__$2,temp__5804__auto__,f,v,domain,m,qs))\n;\nreturn iter__5523__auto__(q);\n})()));\n\nvar G__7445 \x3d (i__7163 + (1));\ni__7163 \x3d G__7445;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7164),clojure$math$combinatorics$multi_comb_$_iter__7161(cljs.core.chunk_rest(s__7162__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7164),null);\n}\n} else {\nvar q \x3d cljs.core.first(s__7162__$2);\nreturn cljs.core.cons(clojure.math.combinatorics.join((function (){var iter__5523__auto__ \x3d ((function (q,s__7162__$2,temp__5804__auto__,f,v,domain,m,qs){\nreturn (function clojure$math$combinatorics$multi_comb_$_iter__7161_$_iter__7175(s__7176){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7176__$1 \x3d s__7176;\nwhile(true){\nvar temp__5804__auto____$1 \x3d cljs.core.seq(s__7176__$1);\nif(temp__5804__auto____$1){\nvar s__7176__$2 \x3d temp__5804__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__7176__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7176__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7178 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7177 \x3d (0);\nwhile(true){\nif((i__7177 \x3c size__5522__auto__)){\nvar vec__7179 \x3d cljs.core._nth(c__5521__auto__,i__7177);\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7179,(0),null);\nvar this_bucket \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7179,(1),null);\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7179,(2),null);\ncljs.core.chunk_append(b__7178,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(this_bucket,(v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(index) : v.call(null,index))));\n\nvar G__7450 \x3d (i__7177 + (1));\ni__7177 \x3d G__7450;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7178),clojure$math$combinatorics$multi_comb_$_iter__7161_$_iter__7175(cljs.core.chunk_rest(s__7176__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7178),null);\n}\n} else {\nvar vec__7182 \x3d cljs.core.first(s__7176__$2);\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7182,(0),null);\nvar this_bucket \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7182,(1),null);\nvar _ \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7182,(2),null);\nreturn cljs.core.cons(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(this_bucket,(v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(index) : v.call(null,index))),clojure$math$combinatorics$multi_comb_$_iter__7161_$_iter__7175(cljs.core.rest(s__7176__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});})(q,s__7162__$2,temp__5804__auto__,f,v,domain,m,qs))\n;\nreturn iter__5523__auto__(q);\n})()),clojure$math$combinatorics$multi_comb_$_iter__7161(cljs.core.rest(s__7162__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(qs);\n});\n/**\n * All the unique ways of taking t different elements from items\n */\nclojure.math.combinatorics.combinations \x3d (function clojure$math$combinatorics$combinations(items,t){\nvar v_items \x3d cljs.core.vec(cljs.core.reverse(items));\nif((t \x3d\x3d\x3d (0))){\nreturn (new cljs.core.List(null,cljs.core.List.EMPTY,null,(1),null));\n} else {\nvar cnt \x3d cljs.core.count(items);\nif((t \x3e cnt)){\nreturn null;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(t,(1))){\nvar iter__5523__auto__ \x3d (function clojure$math$combinatorics$combinations_$_iter__7186(s__7187){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7187__$1 \x3d s__7187;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7187__$1);\nif(temp__5804__auto__){\nvar s__7187__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7187__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7187__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7189 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7188 \x3d (0);\nwhile(true){\nif((i__7188 \x3c size__5522__auto__)){\nvar item \x3d cljs.core._nth(c__5521__auto__,i__7188);\ncljs.core.chunk_append(b__7189,(new cljs.core.List(null,item,null,(1),null)));\n\nvar G__7451 \x3d (i__7188 + (1));\ni__7188 \x3d G__7451;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7189),clojure$math$combinatorics$combinations_$_iter__7186(cljs.core.chunk_rest(s__7187__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7189),null);\n}\n} else {\nvar item \x3d cljs.core.first(s__7187__$2);\nreturn cljs.core.cons((new cljs.core.List(null,item,null,(1),null)),clojure$math$combinatorics$combinations_$_iter__7186(cljs.core.rest(s__7187__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(items));\n} else {\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(t,cnt)){\nreturn (new cljs.core.List(null,cljs.core.seq(items),null,(1),null));\n} else {\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__7185_SHARP_){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(v_items,p1__7185_SHARP_);\n}),clojure.math.combinatorics.index_combinations(t,cnt));\n}\n} else {\nreturn clojure.math.combinatorics.multi_comb(items,t);\n\n}\n}\n}\n}\n});\n/**\n * Given a sequence that may have chunks, return a sequence that is 1-at-a-time\n * lazy with no chunks. Chunks are good for efficiency when the data items are\n * small, but when being processed via map, for example, a reference is kept to\n * every function result in the chunk until the entire chunk has been processed,\n * which increases the amount of memory in use that cannot be garbage\n * collected.\n */\nclojure.math.combinatorics.unchunk \x3d (function clojure$math$combinatorics$unchunk(s){\nreturn (new cljs.core.LazySeq(null,(function (){\nif(cljs.core.seq(s)){\nreturn cljs.core.cons(cljs.core.first(s),(function (){var G__7190 \x3d cljs.core.rest(s);\nreturn (clojure.math.combinatorics.unchunk.cljs$core$IFn$_invoke$arity$1 ? clojure.math.combinatorics.unchunk.cljs$core$IFn$_invoke$arity$1(G__7190) : clojure.math.combinatorics.unchunk.call(null,G__7190));\n})());\n} else {\nreturn null;\n}\n}),null,null));\n});\n/**\n * All the subsets of items\n */\nclojure.math.combinatorics.subsets \x3d (function clojure$math$combinatorics$subsets(items){\nreturn clojure.math.combinatorics.mapjoin((function (n){\nreturn clojure.math.combinatorics.combinations(items,n);\n}),clojure.math.combinatorics.unchunk(cljs.core.range.cljs$core$IFn$_invoke$arity$1((cljs.core.count(items) + (1)))));\n});\n/**\n * All the ways to take one item from each sequence\n */\nclojure.math.combinatorics.cartesian_product \x3d (function clojure$math$combinatorics$cartesian_product(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___7452 \x3d arguments.length;\nvar i__5770__auto___7453 \x3d (0);\nwhile(true){\nif((i__5770__auto___7453 \x3c len__5769__auto___7452)){\nargs__5775__auto__.push((arguments[i__5770__auto___7453]));\n\nvar G__7454 \x3d (i__5770__auto___7453 + (1));\ni__5770__auto___7453 \x3d G__7454;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((0) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((0)),(0),null)):null);\nreturn clojure.math.combinatorics.cartesian_product.cljs$core$IFn$_invoke$arity$variadic(argseq__5776__auto__);\n});\n\n(clojure.math.combinatorics.cartesian_product.cljs$core$IFn$_invoke$arity$variadic \x3d (function (seqs){\nvar v_original_seqs \x3d cljs.core.vec(seqs);\nvar step \x3d (function clojure$math$combinatorics$step(v_seqs){\nvar increment \x3d (function (v_seqs__$1){\nvar i \x3d (cljs.core.count(v_seqs__$1) - (1));\nvar v_seqs__$2 \x3d v_seqs__$1;\nwhile(true){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(i,(-1))){\nreturn null;\n} else {\nvar temp__5802__auto__ \x3d cljs.core.next((v_seqs__$2.cljs$core$IFn$_invoke$arity$1 ? v_seqs__$2.cljs$core$IFn$_invoke$arity$1(i) : v_seqs__$2.call(null,i)));\nif(temp__5802__auto__){\nvar rst \x3d temp__5802__auto__;\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v_seqs__$2,i,rst);\n} else {\nvar G__7455 \x3d (i - (1));\nvar G__7456 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v_seqs__$2,i,(v_original_seqs.cljs$core$IFn$_invoke$arity$1 ? v_original_seqs.cljs$core$IFn$_invoke$arity$1(i) : v_original_seqs.call(null,i)));\ni \x3d G__7455;\nv_seqs__$2 \x3d G__7456;\ncontinue;\n}\n}\nbreak;\n}\n});\nif(cljs.core.truth_(v_seqs)){\nreturn cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,v_seqs),(new cljs.core.LazySeq(null,(function (){\nreturn clojure$math$combinatorics$step(increment(v_seqs));\n}),null,null)));\n} else {\nreturn null;\n}\n});\nif(cljs.core.every_QMARK_(cljs.core.seq,seqs)){\nreturn (new cljs.core.LazySeq(null,(function (){\nreturn step(v_original_seqs);\n}),null,null));\n} else {\nreturn null;\n}\n}));\n\n(clojure.math.combinatorics.cartesian_product.cljs$lang$maxFixedArity \x3d (0));\n\n/** @this {Function} */\n(clojure.math.combinatorics.cartesian_product.cljs$lang$applyTo \x3d (function (seq7191){\nvar self__5755__auto__ \x3d this;\nreturn self__5755__auto__.cljs$core$IFn$_invoke$arity$variadic(cljs.core.seq(seq7191));\n}));\n\n/**\n * All the ways of taking n (possibly the same) elements from the sequence of items\n */\nclojure.math.combinatorics.selections \x3d (function clojure$math$combinatorics$selections(items,n){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(clojure.math.combinatorics.cartesian_product,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(items)));\n});\nclojure.math.combinatorics.iter_perm \x3d (function clojure$math$combinatorics$iter_perm(v){\nvar len \x3d cljs.core.count(v);\nvar j \x3d (function (){var i \x3d (len - (2));\nwhile(true){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(i,(-1))){\nreturn null;\n} else {\nif(((v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i)) \x3c (function (){var G__7192 \x3d (i + (1));\nreturn (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(G__7192) : v.call(null,G__7192));\n})())){\nreturn i;\n} else {\nvar G__7457 \x3d (i - (1));\ni \x3d G__7457;\ncontinue;\n\n}\n}\nbreak;\n}\n})();\nif(cljs.core.truth_(j)){\nvar vj \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(j) : v.call(null,j));\nvar l \x3d (function (){var i \x3d (len - (1));\nwhile(true){\nif((vj \x3c (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i)))){\nreturn i;\n} else {\nvar G__7458 \x3d (i - (1));\ni \x3d G__7458;\ncontinue;\n}\nbreak;\n}\n})();\nvar v__$1 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(v,j,(v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(l) : v.call(null,l)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([l,vj], 0));\nvar k \x3d (j + (1));\nvar l__$1 \x3d (len - (1));\nwhile(true){\nif((k \x3c l__$1)){\nvar G__7459 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(v__$1,k,(v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(l__$1) : v__$1.call(null,l__$1)),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([l__$1,(v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(k) : v__$1.call(null,k))], 0));\nvar G__7460 \x3d (k + (1));\nvar G__7461 \x3d (l__$1 - (1));\nv__$1 \x3d G__7459;\nk \x3d G__7460;\nl__$1 \x3d G__7461;\ncontinue;\n} else {\nreturn v__$1;\n}\nbreak;\n}\n} else {\nreturn null;\n}\n});\nclojure.math.combinatorics.vec_lex_permutations \x3d (function clojure$math$combinatorics$vec_lex_permutations(v){\nif(cljs.core.truth_(v)){\nreturn cljs.core.cons(v,(new cljs.core.LazySeq(null,(function (){\nvar G__7193 \x3d clojure.math.combinatorics.iter_perm(v);\nreturn (clojure.math.combinatorics.vec_lex_permutations.cljs$core$IFn$_invoke$arity$1 ? clojure.math.combinatorics.vec_lex_permutations.cljs$core$IFn$_invoke$arity$1(G__7193) : clojure.math.combinatorics.vec_lex_permutations.call(null,G__7193));\n}),null,null)));\n} else {\nreturn null;\n}\n});\n/**\n * DEPRECATED as a public function.\n * \n * In prior versions of the combinatorics library, there were two similar functions: permutations and lex-permutations.  It was a source of confusion to know which to call.  Now, you can always call permutations.  When appropriate (i.e., when you pass in a sorted sequence of numbers), permutations will automatically call lex-permutations as a speed optimization.\n */\nclojure.math.combinatorics.lex_permutations \x3d (function clojure$math$combinatorics$lex_permutations(c){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar vec_sorted \x3d cljs.core.vec(cljs.core.sort.cljs$core$IFn$_invoke$arity$1(c));\nif((cljs.core.count(vec_sorted) \x3d\x3d\x3d (0))){\nreturn (new cljs.core.List(null,cljs.core.PersistentVector.EMPTY,null,(1),null));\n} else {\nreturn clojure.math.combinatorics.vec_lex_permutations(vec_sorted);\n}\n}),null,null));\n});\n/**\n * Returns true iff s is a sequence of numbers in non-decreasing order\n */\nclojure.math.combinatorics.sorted_numbers_QMARK_ \x3d (function clojure$math$combinatorics$sorted_numbers_QMARK_(s){\nvar and__5043__auto__ \x3d cljs.core.every_QMARK_(cljs.core.number_QMARK_,s);\nif(and__5043__auto__){\nvar or__5045__auto__ \x3d cljs.core.empty_QMARK_(s);\nif(or__5045__auto__){\nreturn or__5045__auto__;\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._LT__EQ_,s);\n}\n} else {\nreturn and__5043__auto__;\n}\n});\n/**\n * Handles the case when you want the permutations of a list with duplicate items.\n */\nclojure.math.combinatorics.multi_perm \x3d (function clojure$math$combinatorics$multi_perm(l){\nvar f \x3d cljs.core.frequencies(l);\nvar v \x3d cljs.core.vec(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(l));\nvar indices \x3d clojure.math.combinatorics.join((function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$multi_perm_$_iter__7194(s__7195){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7195__$1 \x3d s__7195;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7195__$1);\nif(temp__5804__auto__){\nvar s__7195__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7195__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7195__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7197 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7196 \x3d (0);\nwhile(true){\nif((i__7196 \x3c size__5522__auto__)){\nvar i \x3d cljs.core._nth(c__5521__auto__,i__7196);\ncljs.core.chunk_append(b__7197,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((function (){var G__7198 \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7198) : f.call(null,G__7198));\n})(),i));\n\nvar G__7467 \x3d (i__7196 + (1));\ni__7196 \x3d G__7467;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7197),clojure$math$combinatorics$multi_perm_$_iter__7194(cljs.core.chunk_rest(s__7195__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7197),null);\n}\n} else {\nvar i \x3d cljs.core.first(s__7195__$2);\nreturn cljs.core.cons(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((function (){var G__7199 \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7199) : f.call(null,G__7199));\n})(),i),clojure$math$combinatorics$multi_perm_$_iter__7194(cljs.core.rest(s__7195__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(v)));\n})());\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.map,v),clojure.math.combinatorics.lex_permutations(indices));\n});\n/**\n * All the distinct permutations of items, lexicographic by index \n *   (special handling for duplicate items).\n */\nclojure.math.combinatorics.permutations \x3d (function clojure$math$combinatorics$permutations(items){\nif(cljs.core.truth_(clojure.math.combinatorics.sorted_numbers_QMARK_(items))){\nreturn clojure.math.combinatorics.lex_permutations(items);\n} else {\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nvar v \x3d cljs.core.vec(items);\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__7200_SHARP_){\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(v,p1__7200_SHARP_);\n}),clojure.math.combinatorics.lex_permutations(cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(v))));\n} else {\nreturn clojure.math.combinatorics.multi_perm(items);\n\n}\n}\n});\n/**\n * Every permutation of every combination of t elements from items\n */\nclojure.math.combinatorics.permuted_combinations \x3d (function clojure$math$combinatorics$permuted_combinations(items,t){\nreturn clojure.math.combinatorics.join(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clojure.math.combinatorics.permutations,clojure.math.combinatorics.combinations(items,t)));\n});\nclojure.math.combinatorics.factorial \x3d (function clojure$math$combinatorics$factorial(n){\nif(cljs.core.integer_QMARK_(n)){\n} else {\nthrow (new Error(\x22Assert failed: (integer? n)\x22));\n}\n\nif((!((n \x3c (0))))){\n} else {\nthrow (new Error(\x22Assert failed: (not (neg? n))\x22));\n}\n\nvar acc \x3d (1);\nvar n__$1 \x3d n;\nwhile(true){\nif((n__$1 \x3d\x3d\x3d (0))){\nreturn acc;\n} else {\nvar G__7468 \x3d (clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 ? clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(acc,n__$1) : clojure.math.combinatorics._STAR__SINGLEQUOTE_.call(null,acc,n__$1));\nvar G__7469 \x3d (n__$1 - (1));\nacc \x3d G__7468;\nn__$1 \x3d G__7469;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Input is a non-negative base 10 integer, output is the number in the\n * factorial number system (http://en.wikipedia.org/wiki/Factorial_number_system)\n * expressed as a list of \x27digits\x27\n */\nclojure.math.combinatorics.factorial_numbers \x3d (function clojure$math$combinatorics$factorial_numbers(n){\nif(cljs.core.integer_QMARK_(n)){\n} else {\nthrow (new Error(\x22Assert failed: (integer? n)\x22));\n}\n\nif((!((n \x3c (0))))){\n} else {\nthrow (new Error(\x22Assert failed: (not (neg? n))\x22));\n}\n\nvar n__$1 \x3d n;\nvar digits \x3d cljs.core.List.EMPTY;\nvar divisor \x3d (1);\nwhile(true){\nif((n__$1 \x3d\x3d\x3d (0))){\nreturn digits;\n} else {\nvar q \x3d cljs.core.quot(n__$1,divisor);\nvar r \x3d cljs.core.rem(n__$1,divisor);\nvar G__7470 \x3d q;\nvar G__7471 \x3d cljs.core.cons(r,digits);\nvar G__7472 \x3d (divisor + (1));\nn__$1 \x3d G__7470;\ndigits \x3d G__7471;\ndivisor \x3d G__7472;\ncontinue;\n}\nbreak;\n}\n});\nclojure.math.combinatorics.remove_nth \x3d (function clojure$math$combinatorics$remove_nth(l,n){\nvar acc \x3d cljs.core.PersistentVector.EMPTY;\nvar l__$1 \x3d l;\nvar n__$1 \x3d n;\nwhile(true){\nif((n__$1 \x3d\x3d\x3d (0))){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(acc,cljs.core.rest(l__$1));\n} else {\nvar G__7473 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(acc,cljs.core.first(l__$1));\nvar G__7474 \x3d cljs.core.rest(l__$1);\nvar G__7475 \x3d (n__$1 - (1));\nacc \x3d G__7473;\nl__$1 \x3d G__7474;\nn__$1 \x3d G__7475;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Input should be a sorted sequential collection l of distinct items, \n * output is nth-permutation (0-based)\n */\nclojure.math.combinatorics.nth_permutation_distinct \x3d (function clojure$math$combinatorics$nth_permutation_distinct(l,n){\nif((n \x3c clojure.math.combinatorics.factorial(cljs.core.count(l)))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([n,\x22is too large. Input has only\x22,clojure.math.combinatorics.factorial(cljs.core.count(l)),\x22permutations.\x22], 0)),\x22\\n\x22,\x22(\x3c n (factorial (count l)))\x22].join(\x27\x27)));\n}\n\nvar length \x3d cljs.core.count(l);\nvar fact_nums \x3d clojure.math.combinatorics.factorial_numbers(n);\nvar indices \x3d cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((length - cljs.core.count(fact_nums)),(0)),fact_nums);\nvar l__$1 \x3d l;\nvar perm \x3d cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(indices)){\nreturn perm;\n} else {\nvar i \x3d cljs.core.first(indices);\nvar item \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(l__$1,i);\nvar G__7476 \x3d cljs.core.rest(indices);\nvar G__7477 \x3d clojure.math.combinatorics.remove_nth(l__$1,i);\nvar G__7478 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(perm,item);\nindices \x3d G__7476;\nl__$1 \x3d G__7477;\nperm \x3d G__7478;\ncontinue;\n}\nbreak;\n}\n});\nclojure.math.combinatorics.count_permutations_from_frequencies \x3d (function clojure$math$combinatorics$count_permutations_from_frequencies(freqs){\nvar counts \x3d cljs.core.vals(freqs);\nreturn cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._SLASH_,clojure.math.combinatorics.factorial(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,counts)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(clojure.math.combinatorics.factorial,counts));\n});\n/**\n * Counts the number of distinct permutations of l\n */\nclojure.math.combinatorics.count_permutations \x3d (function clojure$math$combinatorics$count_permutations(l){\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(l))){\nreturn clojure.math.combinatorics.factorial(cljs.core.count(l));\n} else {\nreturn clojure.math.combinatorics.count_permutations_from_frequencies(cljs.core.frequencies(l));\n}\n});\n/**\n * Takes a sorted frequency map and returns how far into the sequence of\n * lexicographic permutations you get by varying the first item\n */\nclojure.math.combinatorics.initial_perm_numbers \x3d (function clojure$math$combinatorics$initial_perm_numbers(freqs){\nreturn cljs.core.reductions.cljs$core$IFn$_invoke$arity$3(clojure.math.combinatorics._PLUS__SINGLEQUOTE_,(0),(function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$initial_perm_numbers_$_iter__7201(s__7202){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7202__$1 \x3d s__7202;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7202__$1);\nif(temp__5804__auto__){\nvar s__7202__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7202__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7202__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7204 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7203 \x3d (0);\nwhile(true){\nif((i__7203 \x3c size__5522__auto__)){\nvar vec__7205 \x3d cljs.core._nth(c__5521__auto__,i__7203);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7205,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7205,(1),null);\ncljs.core.chunk_append(b__7204,clojure.math.combinatorics.count_permutations_from_frequencies(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(freqs,k,(v - (1)))));\n\nvar G__7479 \x3d (i__7203 + (1));\ni__7203 \x3d G__7479;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7204),clojure$math$combinatorics$initial_perm_numbers_$_iter__7201(cljs.core.chunk_rest(s__7202__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7204),null);\n}\n} else {\nvar vec__7208 \x3d cljs.core.first(s__7202__$2);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7208,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7208,(1),null);\nreturn cljs.core.cons(clojure.math.combinatorics.count_permutations_from_frequencies(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(freqs,k,(v - (1)))),clojure$math$combinatorics$initial_perm_numbers_$_iter__7201(cljs.core.rest(s__7202__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(freqs);\n})());\n});\n/**\n * Finds the index and remainder from the initial-perm-numbers.\n */\nclojure.math.combinatorics.index_remainder \x3d (function clojure$math$combinatorics$index_remainder(perm_numbers,n){\nvar perm_numbers__$1 \x3d perm_numbers;\nvar index \x3d (0);\nwhile(true){\nif((((cljs.core.first(perm_numbers__$1) \x3c\x3d n)) \x26\x26 ((n \x3c cljs.core.second(perm_numbers__$1))))){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [index,(n - cljs.core.first(perm_numbers__$1))], null);\n} else {\nvar G__7481 \x3d cljs.core.rest(perm_numbers__$1);\nvar G__7482 \x3d (index + (1));\nperm_numbers__$1 \x3d G__7481;\nindex \x3d G__7482;\ncontinue;\n}\nbreak;\n}\n});\nclojure.math.combinatorics.dec_key \x3d (function clojure$math$combinatorics$dec_key(m,k){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((1),(m.cljs$core$IFn$_invoke$arity$1 ? m.cljs$core$IFn$_invoke$arity$1(k) : m.call(null,k)))){\nreturn cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(m,k);\n} else {\nreturn cljs.core.update_in.cljs$core$IFn$_invoke$arity$3(m,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [k], null),cljs.core.dec);\n}\n});\n/**\n * Input is a non-negative base 10 integer n, and a sorted frequency map freqs.\n * Output is a list of \x27digits\x27 in this wacky duplicate factorial number system\n */\nclojure.math.combinatorics.factorial_numbers_with_duplicates \x3d (function clojure$math$combinatorics$factorial_numbers_with_duplicates(n,freqs){\nvar n__$1 \x3d n;\nvar digits \x3d cljs.core.PersistentVector.EMPTY;\nvar freqs__$1 \x3d freqs;\nwhile(true){\nif((n__$1 \x3d\x3d\x3d (0))){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(digits,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,cljs.core.vals(freqs__$1)),(0)));\n} else {\nvar vec__7214 \x3d clojure.math.combinatorics.index_remainder(clojure.math.combinatorics.initial_perm_numbers(freqs__$1),n__$1);\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7214,(0),null);\nvar remainder \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7214,(1),null);\nvar G__7483 \x3d remainder;\nvar G__7484 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(digits,index);\nvar G__7485 \x3d (function (){var nth_key \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(freqs__$1),index);\nreturn clojure.math.combinatorics.dec_key(freqs__$1,nth_key);\n})();\nn__$1 \x3d G__7483;\ndigits \x3d G__7484;\nfreqs__$1 \x3d G__7485;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Input should be a sorted sequential collection l of distinct items, \n * output is nth-permutation (0-based)\n */\nclojure.math.combinatorics.nth_permutation_duplicates \x3d (function clojure$math$combinatorics$nth_permutation_duplicates(l,n){\nif((n \x3c clojure.math.combinatorics.count_permutations(l))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([n,\x22is too large. Input has only\x22,clojure.math.combinatorics.count_permutations(l),\x22permutations.\x22], 0)),\x22\\n\x22,\x22(\x3c n (count-permutations l))\x22].join(\x27\x27)));\n}\n\nvar freqs \x3d cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.sorted_map(),cljs.core.frequencies(l));\nvar indices \x3d clojure.math.combinatorics.factorial_numbers_with_duplicates(n,freqs);\nvar perm \x3d cljs.core.PersistentVector.EMPTY;\nwhile(true){\nif(cljs.core.empty_QMARK_(indices)){\nreturn perm;\n} else {\nvar i \x3d cljs.core.first(indices);\nvar item \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$2(cljs.core.keys(freqs),i);\nvar G__7487 \x3d clojure.math.combinatorics.dec_key(freqs,item);\nvar G__7488 \x3d cljs.core.rest(indices);\nvar G__7489 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(perm,item);\nfreqs \x3d G__7487;\nindices \x3d G__7488;\nperm \x3d G__7489;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * (nth (permutations items)) but calculated more directly.\n */\nclojure.math.combinatorics.nth_permutation \x3d (function clojure$math$combinatorics$nth_permutation(items,n){\nif(cljs.core.truth_(clojure.math.combinatorics.sorted_numbers_QMARK_(items))){\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nreturn clojure.math.combinatorics.nth_permutation_distinct(items,n);\n} else {\nreturn clojure.math.combinatorics.nth_permutation_duplicates(items,n);\n}\n} else {\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nvar v \x3d cljs.core.vec(items);\nvar perm_indices \x3d clojure.math.combinatorics.nth_permutation_distinct(cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(items)),n);\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(v,perm_indices));\n} else {\nvar v \x3d cljs.core.vec(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(items));\nvar f \x3d cljs.core.frequencies(items);\nvar indices \x3d clojure.math.combinatorics.join((function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$nth_permutation_$_iter__7217(s__7218){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7218__$1 \x3d s__7218;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7218__$1);\nif(temp__5804__auto__){\nvar s__7218__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7218__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7218__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7220 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7219 \x3d (0);\nwhile(true){\nif((i__7219 \x3c size__5522__auto__)){\nvar i \x3d cljs.core._nth(c__5521__auto__,i__7219);\ncljs.core.chunk_append(b__7220,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((function (){var G__7221 \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7221) : f.call(null,G__7221));\n})(),i));\n\nvar G__7490 \x3d (i__7219 + (1));\ni__7219 \x3d G__7490;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7220),clojure$math$combinatorics$nth_permutation_$_iter__7217(cljs.core.chunk_rest(s__7218__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7220),null);\n}\n} else {\nvar i \x3d cljs.core.first(s__7218__$2);\nreturn cljs.core.cons(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((function (){var G__7222 \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7222) : f.call(null,G__7222));\n})(),i),clojure$math$combinatorics$nth_permutation_$_iter__7217(cljs.core.rest(s__7218__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(v)));\n})());\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(v,clojure.math.combinatorics.nth_permutation_duplicates(indices,n)));\n}\n}\n});\n/**\n * (drop n (permutations items)) but calculated more directly.\n */\nclojure.math.combinatorics.drop_permutations \x3d (function clojure$math$combinatorics$drop_permutations(items,n){\nif((n \x3d\x3d\x3d (0))){\nreturn clojure.math.combinatorics.permutations(items);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(n,clojure.math.combinatorics.count_permutations(items))){\nreturn cljs.core.List.EMPTY;\n} else {\nif(cljs.core.truth_(clojure.math.combinatorics.sorted_numbers_QMARK_(items))){\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nreturn clojure.math.combinatorics.vec_lex_permutations(clojure.math.combinatorics.nth_permutation_distinct(items,n));\n} else {\nreturn clojure.math.combinatorics.vec_lex_permutations(clojure.math.combinatorics.nth_permutation_duplicates(items,n));\n}\n} else {\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nvar v \x3d cljs.core.vec(items);\nvar perm_indices \x3d clojure.math.combinatorics.nth_permutation_distinct(cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(items)),n);\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.map,v),clojure.math.combinatorics.vec_lex_permutations(perm_indices));\n} else {\nvar v \x3d cljs.core.vec(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(items));\nvar f \x3d cljs.core.frequencies(items);\nvar indices \x3d clojure.math.combinatorics.join((function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$drop_permutations_$_iter__7223(s__7224){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7224__$1 \x3d s__7224;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7224__$1);\nif(temp__5804__auto__){\nvar s__7224__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7224__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7224__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7226 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7225 \x3d (0);\nwhile(true){\nif((i__7225 \x3c size__5522__auto__)){\nvar i \x3d cljs.core._nth(c__5521__auto__,i__7225);\ncljs.core.chunk_append(b__7226,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((function (){var G__7227 \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7227) : f.call(null,G__7227));\n})(),i));\n\nvar G__7491 \x3d (i__7225 + (1));\ni__7225 \x3d G__7491;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7226),clojure$math$combinatorics$drop_permutations_$_iter__7223(cljs.core.chunk_rest(s__7224__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7226),null);\n}\n} else {\nvar i \x3d cljs.core.first(s__7224__$2);\nreturn cljs.core.cons(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((function (){var G__7228 \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7228) : f.call(null,G__7228));\n})(),i),clojure$math$combinatorics$drop_permutations_$_iter__7223(cljs.core.rest(s__7224__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(v)));\n})());\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.map,v),clojure.math.combinatorics.vec_lex_permutations(clojure.math.combinatorics.nth_permutation_duplicates(indices,n)));\n}\n}\n\n}\n}\n});\nclojure.math.combinatorics.n_take_k \x3d (function clojure$math$combinatorics$n_take_k(n,k){\nwhile(true){\nif((k \x3c (0))){\nreturn (0);\n} else {\nif((k \x3e n)){\nreturn (0);\n} else {\nif((k \x3d\x3d\x3d (0))){\nreturn (1);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(1))){\nreturn n;\n} else {\nif((k \x3e cljs.core.quot(n,(2)))){\nvar G__7492 \x3d n;\nvar G__7493 \x3d (n - k);\nn \x3d G__7492;\nk \x3d G__7493;\ncontinue;\n} else {\nreturn (cljs.core.apply.cljs$core$IFn$_invoke$arity$2(clojure.math.combinatorics._STAR__SINGLEQUOTE_,cljs.core.range.cljs$core$IFn$_invoke$arity$2(((n - k) + (1)),(n + (1)))) / cljs.core.apply.cljs$core$IFn$_invoke$arity$2(clojure.math.combinatorics._STAR__SINGLEQUOTE_,cljs.core.range.cljs$core$IFn$_invoke$arity$2((1),(k + (1)))));\n\n}\n}\n}\n}\n}\nbreak;\n}\n});\nclojure.math.combinatorics.count_combinations_from_frequencies \x3d (function clojure$math$combinatorics$count_combinations_from_frequencies(freqs,t){\nvar counts \x3d cljs.core.vals(freqs);\nvar sum \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,counts);\nif((t \x3d\x3d\x3d (0))){\nreturn (1);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(t,(1))){\nreturn cljs.core.count(freqs);\n} else {\nif(cljs.core.every_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 1, [(1),null], null), null),counts)){\nreturn clojure.math.combinatorics.n_take_k(cljs.core.count(freqs),t);\n} else {\nif((t \x3e sum)){\nreturn (0);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(t,sum)){\nreturn (1);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(freqs),(1))){\nreturn (1);\n} else {\nvar new_freqs \x3d clojure.math.combinatorics.dec_key(freqs,cljs.core.first(cljs.core.keys(freqs)));\nvar G__7229 \x3d clojure.math.combinatorics.count_combinations_from_frequencies.call(null,new_freqs,(t - (1)));\nvar G__7230 \x3d clojure.math.combinatorics.count_combinations_from_frequencies.call(null,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(freqs,cljs.core.first(cljs.core.keys(freqs))),t);\nreturn (clojure.math.combinatorics._PLUS__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 ? clojure.math.combinatorics._PLUS__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(G__7229,G__7230) : clojure.math.combinatorics._PLUS__SINGLEQUOTE_.call(null,G__7229,G__7230));\n\n}\n}\n}\n}\n}\n}\n});\n/**\n * We need an internal version that doesn\x27t memoize each call to count-combinations-from-frequencies\n * so that we can memoize over a series of calls.\n */\nclojure.math.combinatorics.count_combinations_unmemoized \x3d (function clojure$math$combinatorics$count_combinations_unmemoized(items,t){\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nreturn clojure.math.combinatorics.n_take_k(cljs.core.count(items),t);\n} else {\nreturn clojure.math.combinatorics.count_combinations_from_frequencies.call(null,cljs.core.frequencies(items),t);\n}\n});\n/**\n * (count (combinations items t)) but computed more directly\n */\nclojure.math.combinatorics.count_combinations \x3d (function clojure$math$combinatorics$count_combinations(items,t){\nvar count_combinations_from_frequencies_orig_val__7231 \x3d clojure.math.combinatorics.count_combinations_from_frequencies;\nvar count_combinations_from_frequencies_temp_val__7232 \x3d cljs.core.memoize(clojure.math.combinatorics.count_combinations_from_frequencies);\n(clojure.math.combinatorics.count_combinations_from_frequencies \x3d count_combinations_from_frequencies_temp_val__7232);\n\ntry{return clojure.math.combinatorics.count_combinations_unmemoized(items,t);\n}finally {(clojure.math.combinatorics.count_combinations_from_frequencies \x3d count_combinations_from_frequencies_orig_val__7231);\n}});\nclojure.math.combinatorics.expt_int \x3d (function clojure$math$combinatorics$expt_int(base,pow){\nvar n \x3d pow;\nvar y \x3d (1);\nvar z \x3d base;\nwhile(true){\nvar t \x3d cljs.core.even_QMARK_(n);\nvar n__$1 \x3d cljs.core.quot(n,(2));\nif(t){\nvar G__7494 \x3d n__$1;\nvar G__7495 \x3d y;\nvar G__7496 \x3d (clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 ? clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(z,z) : clojure.math.combinatorics._STAR__SINGLEQUOTE_.call(null,z,z));\nn \x3d G__7494;\ny \x3d G__7495;\nz \x3d G__7496;\ncontinue;\n} else {\nif((n__$1 \x3d\x3d\x3d (0))){\nreturn (clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 ? clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(z,y) : clojure.math.combinatorics._STAR__SINGLEQUOTE_.call(null,z,y));\n} else {\nvar G__7497 \x3d n__$1;\nvar G__7498 \x3d (clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 ? clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(z,y) : clojure.math.combinatorics._STAR__SINGLEQUOTE_.call(null,z,y));\nvar G__7499 \x3d (clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 ? clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(z,z) : clojure.math.combinatorics._STAR__SINGLEQUOTE_.call(null,z,z));\nn \x3d G__7497;\ny \x3d G__7498;\nz \x3d G__7499;\ncontinue;\n\n}\n}\nbreak;\n}\n});\nclojure.math.combinatorics.count_subsets_unmemoized \x3d (function clojure$math$combinatorics$count_subsets_unmemoized(items){\nif(cljs.core.empty_QMARK_(items)){\nreturn (1);\n} else {\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nreturn clojure.math.combinatorics.expt_int((2),cljs.core.count(items));\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$2(clojure.math.combinatorics._PLUS__SINGLEQUOTE_,(function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$count_subsets_unmemoized_$_iter__7233(s__7234){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7234__$1 \x3d s__7234;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7234__$1);\nif(temp__5804__auto__){\nvar s__7234__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7234__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7234__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7236 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7235 \x3d (0);\nwhile(true){\nif((i__7235 \x3c size__5522__auto__)){\nvar i \x3d cljs.core._nth(c__5521__auto__,i__7235);\ncljs.core.chunk_append(b__7236,clojure.math.combinatorics.count_combinations_unmemoized(items,i));\n\nvar G__7500 \x3d (i__7235 + (1));\ni__7235 \x3d G__7500;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7236),clojure$math$combinatorics$count_subsets_unmemoized_$_iter__7233(cljs.core.chunk_rest(s__7234__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7236),null);\n}\n} else {\nvar i \x3d cljs.core.first(s__7234__$2);\nreturn cljs.core.cons(clojure.math.combinatorics.count_combinations_unmemoized(items,i),clojure$math$combinatorics$count_subsets_unmemoized_$_iter__7233(cljs.core.rest(s__7234__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2((0),(cljs.core.count(items) + (1))));\n})());\n\n}\n}\n});\n/**\n * (count (subsets items)) but computed more directly\n */\nclojure.math.combinatorics.count_subsets \x3d (function clojure$math$combinatorics$count_subsets(items){\nvar count_combinations_from_frequencies_orig_val__7237 \x3d clojure.math.combinatorics.count_combinations_from_frequencies;\nvar count_combinations_from_frequencies_temp_val__7238 \x3d cljs.core.memoize(clojure.math.combinatorics.count_combinations_from_frequencies);\n(clojure.math.combinatorics.count_combinations_from_frequencies \x3d count_combinations_from_frequencies_temp_val__7238);\n\ntry{return clojure.math.combinatorics.count_subsets_unmemoized(items);\n}finally {(clojure.math.combinatorics.count_combinations_from_frequencies \x3d count_combinations_from_frequencies_orig_val__7237);\n}});\n/**\n * The nth element of the sequence of t-combinations of items,\n * where items is a collection of distinct elements\n */\nclojure.math.combinatorics.nth_combination_distinct \x3d (function clojure$math$combinatorics$nth_combination_distinct(items,t,n){\nvar comb \x3d cljs.core.PersistentVector.EMPTY;\nvar items__$1 \x3d items;\nvar t__$1 \x3d t;\nvar n__$1 \x3d n;\nwhile(true){\nif((((n__$1 \x3d\x3d\x3d (0))) || (cljs.core.empty_QMARK_(items__$1)))){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(comb,cljs.core.take.cljs$core$IFn$_invoke$arity$2(t__$1,items__$1));\n} else {\nvar dc_dt \x3d clojure.math.combinatorics.n_take_k((cljs.core.count(items__$1) - (1)),(t__$1 - (1)));\nif((n__$1 \x3c dc_dt)){\nvar G__7501 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(comb,cljs.core.first(items__$1));\nvar G__7502 \x3d cljs.core.rest(items__$1);\nvar G__7503 \x3d (t__$1 - (1));\nvar G__7504 \x3d n__$1;\ncomb \x3d G__7501;\nitems__$1 \x3d G__7502;\nt__$1 \x3d G__7503;\nn__$1 \x3d G__7504;\ncontinue;\n} else {\nvar G__7505 \x3d comb;\nvar G__7506 \x3d cljs.core.rest(items__$1);\nvar G__7507 \x3d t__$1;\nvar G__7508 \x3d (n__$1 - dc_dt);\ncomb \x3d G__7505;\nitems__$1 \x3d G__7506;\nt__$1 \x3d G__7507;\nn__$1 \x3d G__7508;\ncontinue;\n}\n}\nbreak;\n}\n});\n/**\n * The nth element of the sequence of t-combinations of the multiset\n * represented by freqs\n */\nclojure.math.combinatorics.nth_combination_freqs \x3d (function clojure$math$combinatorics$nth_combination_freqs(freqs,t,n){\nvar comb \x3d cljs.core.PersistentVector.EMPTY;\nvar freqs__$1 \x3d freqs;\nvar t__$1 \x3d t;\nvar n__$1 \x3d n;\nwhile(true){\nif((((n__$1 \x3d\x3d\x3d (0))) || (cljs.core.empty_QMARK_(freqs__$1)))){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(comb,cljs.core.take.cljs$core$IFn$_invoke$arity$2(t__$1,clojure.math.combinatorics.join((function (){var iter__5523__auto__ \x3d ((function (comb,freqs__$1,t__$1,n__$1){\nreturn (function clojure$math$combinatorics$nth_combination_freqs_$_iter__7249(s__7250){\nreturn (new cljs.core.LazySeq(null,((function (comb,freqs__$1,t__$1,n__$1){\nreturn (function (){\nvar s__7250__$1 \x3d s__7250;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7250__$1);\nif(temp__5804__auto__){\nvar s__7250__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7250__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7250__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7252 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7251 \x3d (0);\nwhile(true){\nif((i__7251 \x3c size__5522__auto__)){\nvar vec__7253 \x3d cljs.core._nth(c__5521__auto__,i__7251);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7253,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7253,(1),null);\ncljs.core.chunk_append(b__7252,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(v,k));\n\nvar G__7509 \x3d (i__7251 + (1));\ni__7251 \x3d G__7509;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7252),clojure$math$combinatorics$nth_combination_freqs_$_iter__7249(cljs.core.chunk_rest(s__7250__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7252),null);\n}\n} else {\nvar vec__7256 \x3d cljs.core.first(s__7250__$2);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7256,(0),null);\nvar v \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7256,(1),null);\nreturn cljs.core.cons(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(v,k),clojure$math$combinatorics$nth_combination_freqs_$_iter__7249(cljs.core.rest(s__7250__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(comb,freqs__$1,t__$1,n__$1))\n,null,null));\n});})(comb,freqs__$1,t__$1,n__$1))\n;\nreturn iter__5523__auto__(freqs__$1);\n})())));\n} else {\nvar first_key \x3d cljs.core.first(cljs.core.keys(freqs__$1));\nvar remove_one_key \x3d clojure.math.combinatorics.dec_key(freqs__$1,first_key);\nvar dc_dt \x3d clojure.math.combinatorics.count_combinations_from_frequencies.call(null,remove_one_key,(t__$1 - (1)));\nif((n__$1 \x3c dc_dt)){\nvar G__7510 \x3d cljs.core.conj.cljs$core$IFn$_invoke$arity$2(comb,first_key);\nvar G__7511 \x3d remove_one_key;\nvar G__7512 \x3d (t__$1 - (1));\nvar G__7513 \x3d n__$1;\ncomb \x3d G__7510;\nfreqs__$1 \x3d G__7511;\nt__$1 \x3d G__7512;\nn__$1 \x3d G__7513;\ncontinue;\n} else {\nvar G__7514 \x3d comb;\nvar G__7515 \x3d cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(freqs__$1,first_key);\nvar G__7516 \x3d t__$1;\nvar G__7517 \x3d (n__$1 - dc_dt);\ncomb \x3d G__7514;\nfreqs__$1 \x3d G__7515;\nt__$1 \x3d G__7516;\nn__$1 \x3d G__7517;\ncontinue;\n}\n}\nbreak;\n}\n});\n/**\n * The nth element of the sequence of t-combinations of items\n */\nclojure.math.combinatorics.nth_combination \x3d (function clojure$math$combinatorics$nth_combination(items,t,n){\nif((n \x3c clojure.math.combinatorics.count_combinations(items,t))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([n,\x22is too large. Input has only\x22,clojure.math.combinatorics.count_combinations_unmemoized(items,t),\x22combinations.\x22], 0)),\x22\\n\x22,\x22(\x3c n (count-combinations items t))\x22].join(\x27\x27)));\n}\n\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nreturn clojure.math.combinatorics.nth_combination_distinct(items,t,n);\n} else {\nvar count_combinations_from_frequencies_orig_val__7259 \x3d clojure.math.combinatorics.count_combinations_from_frequencies;\nvar count_combinations_from_frequencies_temp_val__7260 \x3d cljs.core.memoize(clojure.math.combinatorics.count_combinations_from_frequencies);\n(clojure.math.combinatorics.count_combinations_from_frequencies \x3d count_combinations_from_frequencies_temp_val__7260);\n\ntry{var v \x3d cljs.core.vec(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(items));\nvar f \x3d cljs.core.frequencies(items);\nvar indices \x3d clojure.math.combinatorics.join((function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$nth_combination_$_iter__7261(s__7262){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7262__$1 \x3d s__7262;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7262__$1);\nif(temp__5804__auto__){\nvar s__7262__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7262__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7262__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7264 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7263 \x3d (0);\nwhile(true){\nif((i__7263 \x3c size__5522__auto__)){\nvar i \x3d cljs.core._nth(c__5521__auto__,i__7263);\ncljs.core.chunk_append(b__7264,cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((function (){var G__7265 \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7265) : f.call(null,G__7265));\n})(),i));\n\nvar G__7518 \x3d (i__7263 + (1));\ni__7263 \x3d G__7518;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7264),clojure$math$combinatorics$nth_combination_$_iter__7261(cljs.core.chunk_rest(s__7262__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7264),null);\n}\n} else {\nvar i \x3d cljs.core.first(s__7262__$2);\nreturn cljs.core.cons(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2((function (){var G__7266 \x3d (v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(i) : v.call(null,i));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7266) : f.call(null,G__7266));\n})(),i),clojure$math$combinatorics$nth_combination_$_iter__7261(cljs.core.rest(s__7262__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(v)));\n})());\nvar indices_freqs \x3d cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.sorted_map(),cljs.core.frequencies(indices));\nreturn cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(v,clojure.math.combinatorics.nth_combination_freqs(indices_freqs,t,n)));\n}finally {(clojure.math.combinatorics.count_combinations_from_frequencies \x3d count_combinations_from_frequencies_orig_val__7259);\n}}\n});\nclojure.math.combinatorics.nth_subset \x3d (function clojure$math$combinatorics$nth_subset(items,n){\nif((n \x3c clojure.math.combinatorics.count_subsets(items))){\n} else {\nthrow (new Error([\x22Assert failed: \x22,cljs.core.print_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([n,\x22is too large. Input has only\x22,clojure.math.combinatorics.count_subsets(items),\x22subsets.\x22], 0)),\x22\\n\x22,\x22(\x3c n (count-subsets items))\x22].join(\x27\x27)));\n}\n\nvar size \x3d (0);\nvar n__$1 \x3d n;\nwhile(true){\nvar num_combinations \x3d clojure.math.combinatorics.count_combinations(items,size);\nif((n__$1 \x3c num_combinations)){\nreturn clojure.math.combinatorics.nth_combination(items,size,n__$1);\n} else {\nvar G__7519 \x3d (size + (1));\nvar G__7520 \x3d (n__$1 - num_combinations);\nsize \x3d G__7519;\nn__$1 \x3d G__7520;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * The opposite of nth, i.e., from an item in a list, find the n\n */\nclojure.math.combinatorics.list_index \x3d (function clojure$math$combinatorics$list_index(l,item){\nvar l__$1 \x3d l;\nvar n \x3d (0);\nwhile(true){\nif(cljs.core.seq(l__$1)){\n} else {\nthrow (new Error(\x22Assert failed: (seq l)\x22));\n}\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(item,cljs.core.first(l__$1))){\nreturn n;\n} else {\nvar G__7521 \x3d cljs.core.rest(l__$1);\nvar G__7522 \x3d (n + (1));\nl__$1 \x3d G__7521;\nn \x3d G__7522;\ncontinue;\n}\nbreak;\n}\n});\nclojure.math.combinatorics.permutation_index_distinct \x3d (function clojure$math$combinatorics$permutation_index_distinct(l){\nvar l__$1 \x3d l;\nvar index \x3d (0);\nvar n \x3d (cljs.core.count(l__$1) - (1));\nwhile(true){\nif(cljs.core.empty_QMARK_(l__$1)){\nreturn index;\n} else {\nvar G__7523 \x3d cljs.core.rest(l__$1);\nvar G__7524 \x3d (function (){var G__7271 \x3d index;\nvar G__7272 \x3d (function (){var G__7273 \x3d clojure.math.combinatorics.factorial(n);\nvar G__7274 \x3d clojure.math.combinatorics.list_index(cljs.core.sort.cljs$core$IFn$_invoke$arity$1(l__$1),cljs.core.first(l__$1));\nreturn (clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 ? clojure.math.combinatorics._STAR__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(G__7273,G__7274) : clojure.math.combinatorics._STAR__SINGLEQUOTE_.call(null,G__7273,G__7274));\n})();\nreturn (clojure.math.combinatorics._PLUS__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2 ? clojure.math.combinatorics._PLUS__SINGLEQUOTE_.cljs$core$IFn$_invoke$arity$2(G__7271,G__7272) : clojure.math.combinatorics._PLUS__SINGLEQUOTE_.call(null,G__7271,G__7272));\n})();\nvar G__7525 \x3d (n - (1));\nl__$1 \x3d G__7523;\nindex \x3d G__7524;\nn \x3d G__7525;\ncontinue;\n}\nbreak;\n}\n});\nclojure.math.combinatorics.permutation_index_duplicates \x3d (function clojure$math$combinatorics$permutation_index_duplicates(l){\nvar l__$1 \x3d l;\nvar index \x3d (0);\nvar freqs \x3d cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.sorted_map(),cljs.core.frequencies(l__$1));\nwhile(true){\nif(cljs.core.empty_QMARK_(l__$1)){\nreturn index;\n} else {\nvar G__7526 \x3d cljs.core.rest(l__$1);\nvar G__7527 \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(clojure.math.combinatorics._PLUS__SINGLEQUOTE_,index,(function (){var iter__5523__auto__ \x3d ((function (l__$1,index,freqs){\nreturn (function clojure$math$combinatorics$permutation_index_duplicates_$_iter__7280(s__7281){\nreturn (new cljs.core.LazySeq(null,((function (l__$1,index,freqs){\nreturn (function (){\nvar s__7281__$1 \x3d s__7281;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7281__$1);\nif(temp__5804__auto__){\nvar s__7281__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7281__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7281__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7283 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7282 \x3d (0);\nwhile(true){\nif((i__7282 \x3c size__5522__auto__)){\nvar k \x3d cljs.core._nth(c__5521__auto__,i__7282);\ncljs.core.chunk_append(b__7283,clojure.math.combinatorics.count_permutations_from_frequencies(clojure.math.combinatorics.dec_key(freqs,k)));\n\nvar G__7529 \x3d (i__7282 + (1));\ni__7282 \x3d G__7529;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7283),clojure$math$combinatorics$permutation_index_duplicates_$_iter__7280(cljs.core.chunk_rest(s__7281__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7283),null);\n}\n} else {\nvar k \x3d cljs.core.first(s__7281__$2);\nreturn cljs.core.cons(clojure.math.combinatorics.count_permutations_from_frequencies(clojure.math.combinatorics.dec_key(freqs,k)),clojure$math$combinatorics$permutation_index_duplicates_$_iter__7280(cljs.core.rest(s__7281__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(l__$1,index,freqs))\n,null,null));\n});})(l__$1,index,freqs))\n;\nreturn iter__5523__auto__(cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (l__$1,index,freqs,iter__5523__auto__){\nreturn (function (p1__7275_SHARP_){\nreturn (cljs.core.compare(p1__7275_SHARP_,cljs.core.first(l__$1)) \x3c (0));\n});})(l__$1,index,freqs,iter__5523__auto__))\n,cljs.core.keys(freqs)));\n})());\nvar G__7528 \x3d clojure.math.combinatorics.dec_key(freqs,cljs.core.first(l__$1));\nl__$1 \x3d G__7526;\nindex \x3d G__7527;\nfreqs \x3d G__7528;\ncontinue;\n}\nbreak;\n}\n});\n/**\n * Input must be a sortable collection of items.  Returns the n such that\n *  (nth-permutation (sort items) n) is items.\n */\nclojure.math.combinatorics.permutation_index \x3d (function clojure$math$combinatorics$permutation_index(items){\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nreturn clojure.math.combinatorics.permutation_index_distinct(items);\n} else {\nreturn clojure.math.combinatorics.permutation_index_duplicates(items);\n}\n});\nclojure.math.combinatorics.update \x3d (function clojure$math$combinatorics$update(vec,index,f){\nvar item \x3d (vec.cljs$core$IFn$_invoke$arity$1 ? vec.cljs$core$IFn$_invoke$arity$1(index) : vec.call(null,index));\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(vec,index,(f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(item) : f.call(null,item)));\n});\nclojure.math.combinatorics.reify_bool \x3d (function clojure$math$combinatorics$reify_bool(statement){\nif(cljs.core.truth_(statement)){\nreturn (1);\n} else {\nreturn (0);\n}\n});\nclojure.math.combinatorics.init \x3d (function clojure$math$combinatorics$init(n,s){\nif(cljs.core.truth_(s)){\nreturn cljs.core.vec((function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$init_$_iter__7284(s__7285){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7285__$1 \x3d s__7285;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7285__$1);\nif(temp__5804__auto__){\nvar s__7285__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7285__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7285__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7287 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7286 \x3d (0);\nwhile(true){\nif((i__7286 \x3c size__5522__auto__)){\nvar i \x3d cljs.core._nth(c__5521__auto__,i__7286);\ncljs.core.chunk_append(b__7287,(function (){var x__5130__auto__ \x3d (0);\nvar y__5131__auto__ \x3d (i - ((n - s) - (-1)));\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})());\n\nvar G__7530 \x3d (i__7286 + (1));\ni__7286 \x3d G__7530;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7287),clojure$math$combinatorics$init_$_iter__7284(cljs.core.chunk_rest(s__7285__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7287),null);\n}\n} else {\nvar i \x3d cljs.core.first(s__7285__$2);\nreturn cljs.core.cons((function (){var x__5130__auto__ \x3d (0);\nvar y__5131__auto__ \x3d (i - ((n - s) - (-1)));\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})(),clojure$math$combinatorics$init_$_iter__7284(cljs.core.rest(s__7285__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2((1),(n + (1))));\n})());\n} else {\nreturn cljs.core.vec(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(n,(0)));\n}\n});\nclojure.math.combinatorics.growth_strings_H \x3d (function clojure$math$combinatorics$growth_strings_H(var_args){\nvar G__7289 \x3d arguments.length;\nswitch (G__7289) {\ncase 3:\nreturn clojure.math.combinatorics.growth_strings_H.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 5:\nreturn clojure.math.combinatorics.growth_strings_H.cljs$core$IFn$_invoke$arity$5((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(clojure.math.combinatorics.growth_strings_H.cljs$core$IFn$_invoke$arity$3 \x3d (function (n,r,s){\nreturn clojure.math.combinatorics.growth_strings_H.cljs$core$IFn$_invoke$arity$5(n,clojure.math.combinatorics.init(n,s),cljs.core.vec(cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(n,(1))),r,s);\n}));\n\n(clojure.math.combinatorics.growth_strings_H.cljs$core$IFn$_invoke$arity$5 \x3d (function (n,a,b,r,s){\nreturn cljs.core.cons(a,(new cljs.core.LazySeq(null,(function (){\nif((function (){var and__5043__auto__ \x3d (cljs.core.peek(b) \x3e cljs.core.peek(a));\nif(and__5043__auto__){\nif(cljs.core.truth_(r)){\nreturn (cljs.core.peek(a) \x3c (r - (1)));\n} else {\nreturn true;\n}\n} else {\nreturn and__5043__auto__;\n}\n})()){\nreturn clojure.math.combinatorics.growth_strings_H.cljs$core$IFn$_invoke$arity$5(n,clojure.math.combinatorics.update(a,(n - (1)),cljs.core.inc),b,r,s);\n} else {\nvar j \x3d (function (){var j \x3d (n - (2));\nwhile(true){\nif((function (){var and__5043__auto__ \x3d ((a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(j) : a.call(null,j)) \x3c (b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(j) : b.call(null,j)));\nif(and__5043__auto__){\nvar and__5043__auto____$1 \x3d (cljs.core.truth_(r)?((a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(j) : a.call(null,j)) \x3c (r - (1))):true);\nif(and__5043__auto____$1){\nif(cljs.core.truth_(s)){\nreturn (((s - (b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(j) : b.call(null,j))) - clojure.math.combinatorics.reify_bool((((a.cljs$core$IFn$_invoke$arity$1 ? a.cljs$core$IFn$_invoke$arity$1(j) : a.call(null,j)) + (1)) \x3d\x3d\x3d (b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(j) : b.call(null,j))))) \x3c\x3d (n - j));\n} else {\nreturn true;\n}\n} else {\nreturn and__5043__auto____$1;\n}\n} else {\nreturn and__5043__auto__;\n}\n})()){\nreturn j;\n} else {\nvar G__7532 \x3d (j - (1));\nj \x3d G__7532;\ncontinue;\n}\nbreak;\n}\n})();\nif((j \x3d\x3d\x3d (0))){\nreturn cljs.core.List.EMPTY;\n} else {\nvar a__$1 \x3d clojure.math.combinatorics.update(a,j,cljs.core.inc);\nvar x \x3d (cljs.core.truth_(s)?(s - ((b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(j) : b.call(null,j)) + clojure.math.combinatorics.reify_bool(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((a__$1.cljs$core$IFn$_invoke$arity$1 ? a__$1.cljs$core$IFn$_invoke$arity$1(j) : a__$1.call(null,j)),(b.cljs$core$IFn$_invoke$arity$1 ? b.cljs$core$IFn$_invoke$arity$1(j) : b.call(null,j)))))):null);\nvar vec__7290 \x3d (function (){var a__$2 \x3d a__$1;\nvar b__$1 \x3d b;\nvar i \x3d (j + (1));\nvar current_max \x3d ((b__$1.cljs$core$IFn$_invoke$arity$1 ? b__$1.cljs$core$IFn$_invoke$arity$1(j) : b__$1.call(null,j)) + clojure.math.combinatorics.reify_bool(((b__$1.cljs$core$IFn$_invoke$arity$1 ? b__$1.cljs$core$IFn$_invoke$arity$1(j) : b__$1.call(null,j)) \x3d\x3d\x3d (a__$2.cljs$core$IFn$_invoke$arity$1 ? a__$2.cljs$core$IFn$_invoke$arity$1(j) : a__$2.call(null,j)))));\nwhile(true){\nif((i \x3d\x3d\x3d n)){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [a__$2,b__$1], null);\n} else {\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d s;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (i \x3e ((n - x) - (1)));\n} else {\nreturn and__5043__auto__;\n}\n})())){\nvar new_a_i \x3d ((i - n) + s);\nvar G__7533 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a__$2,i,new_a_i);\nvar G__7534 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b__$1,i,current_max);\nvar G__7535 \x3d (i + (1));\nvar G__7536 \x3d (function (){var x__5130__auto__ \x3d current_max;\nvar y__5131__auto__ \x3d (new_a_i + (1));\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})();\na__$2 \x3d G__7533;\nb__$1 \x3d G__7534;\ni \x3d G__7535;\ncurrent_max \x3d G__7536;\ncontinue;\n} else {\nvar G__7537 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(a__$2,i,(0));\nvar G__7538 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(b__$1,i,current_max);\nvar G__7539 \x3d (i + (1));\nvar G__7540 \x3d current_max;\na__$2 \x3d G__7537;\nb__$1 \x3d G__7538;\ni \x3d G__7539;\ncurrent_max \x3d G__7540;\ncontinue;\n\n}\n}\nbreak;\n}\n})();\nvar a__$2 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7290,(0),null);\nvar b__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7290,(1),null);\nreturn clojure.math.combinatorics.growth_strings_H.cljs$core$IFn$_invoke$arity$5(n,a__$2,b__$1,r,s);\n}\n}\n}),null,null)));\n}));\n\n(clojure.math.combinatorics.growth_strings_H.cljs$lang$maxFixedArity \x3d 5);\n\nclojure.math.combinatorics.lex_partitions_H \x3d (function clojure$math$combinatorics$lex_partitions_H(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___7541 \x3d arguments.length;\nvar i__5770__auto___7542 \x3d (0);\nwhile(true){\nif((i__5770__auto___7542 \x3c len__5769__auto___7541)){\nargs__5775__auto__.push((arguments[i__5770__auto___7542]));\n\nvar G__7543 \x3d (i__5770__auto___7542 + (1));\ni__5770__auto___7542 \x3d G__7543;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn clojure.math.combinatorics.lex_partitions_H.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(clojure.math.combinatorics.lex_partitions_H.cljs$core$IFn$_invoke$arity$variadic \x3d (function (N,p__7295){\nvar map__7296 \x3d p__7295;\nvar map__7296__$1 \x3d cljs.core.__destructure_map(map__7296);\nvar from \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7296__$1,new cljs.core.Keyword(null,\x22min\x22,\x22min\x22,444991522));\nvar to \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7296__$1,new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(N,(0))){\nif(((((function (){var or__5045__auto__ \x3d from;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (0);\n}\n})() \x3c\x3d (0))) \x26\x26 (((0) \x3c\x3d (function (){var or__5045__auto__ \x3d to;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (0);\n}\n})())))){\nreturn cljs.core.list(cljs.core.List.EMPTY);\n} else {\nreturn cljs.core.List.EMPTY;\n}\n} else {\nvar from__$1 \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d from;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (from \x3c\x3d (1));\n} else {\nreturn and__5043__auto__;\n}\n})())?null:from);\nvar to__$1 \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d to;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (to \x3e\x3d N);\n} else {\nreturn and__5043__auto__;\n}\n})())?null:to);\nif((!(((((1) \x3c\x3d (function (){var or__5045__auto__ \x3d from__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (1);\n}\n})())) \x26\x26 (((((function (){var or__5045__auto__ \x3d from__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (1);\n}\n})() \x3c\x3d (function (){var or__5045__auto__ \x3d to__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn N;\n}\n})())) \x26\x26 (((function (){var or__5045__auto__ \x3d to__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn N;\n}\n})() \x3c\x3d N)))))))){\nreturn cljs.core.List.EMPTY;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(N,(0))){\nreturn cljs.core.list(cljs.core.List.EMPTY);\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(N,(1))){\nreturn cljs.core.list(cljs.core.list(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0)], null)));\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(to__$1,(1))){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.range.cljs$core$IFn$_invoke$arity$1(N),null,(1),null))))),null,(1),null)))));\n} else {\nvar growth_strings \x3d clojure.math.combinatorics.growth_strings_H.cljs$core$IFn$_invoke$arity$3(N,to__$1,from__$1);\nvar iter__5523__auto__ \x3d (function clojure$math$combinatorics$iter__7297(s__7298){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7298__$1 \x3d s__7298;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7298__$1);\nif(temp__5804__auto__){\nvar s__7298__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7298__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7298__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7300 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7299 \x3d (0);\nwhile(true){\nif((i__7299 \x3c size__5522__auto__)){\nvar growth_string \x3d cljs.core._nth(c__5521__auto__,i__7299);\nvar groups \x3d cljs.core.group_by(growth_string,cljs.core.range.cljs$core$IFn$_invoke$arity$1(N));\ncljs.core.chunk_append(b__7300,cljs.core.map.cljs$core$IFn$_invoke$arity$2(groups,cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(groups))));\n\nvar G__7544 \x3d (i__7299 + (1));\ni__7299 \x3d G__7544;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7300),clojure$math$combinatorics$iter__7297(cljs.core.chunk_rest(s__7298__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7300),null);\n}\n} else {\nvar growth_string \x3d cljs.core.first(s__7298__$2);\nvar groups \x3d cljs.core.group_by(growth_string,cljs.core.range.cljs$core$IFn$_invoke$arity$1(N));\nreturn cljs.core.cons(cljs.core.map.cljs$core$IFn$_invoke$arity$2(groups,cljs.core.range.cljs$core$IFn$_invoke$arity$1(cljs.core.count(groups))),clojure$math$combinatorics$iter__7297(cljs.core.rest(s__7298__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(growth_strings);\n\n}\n}\n}\n}\n}\n}));\n\n(clojure.math.combinatorics.lex_partitions_H.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(clojure.math.combinatorics.lex_partitions_H.cljs$lang$applyTo \x3d (function (seq7293){\nvar G__7294 \x3d cljs.core.first(seq7293);\nvar seq7293__$1 \x3d cljs.core.next(seq7293);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7294,seq7293__$1);\n}));\n\nclojure.math.combinatorics.partitions_H \x3d (function clojure$math$combinatorics$partitions_H(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___7545 \x3d arguments.length;\nvar i__5770__auto___7546 \x3d (0);\nwhile(true){\nif((i__5770__auto___7546 \x3c len__5769__auto___7545)){\nargs__5775__auto__.push((arguments[i__5770__auto___7546]));\n\nvar G__7547 \x3d (i__5770__auto___7546 + (1));\ni__5770__auto___7546 \x3d G__7547;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn clojure.math.combinatorics.partitions_H.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(clojure.math.combinatorics.partitions_H.cljs$core$IFn$_invoke$arity$variadic \x3d (function (items,args){\nvar items__$1 \x3d cljs.core.vec(items);\nvar N \x3d cljs.core.count(items__$1);\nvar lex \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$3(clojure.math.combinatorics.lex_partitions_H,N,args);\nvar iter__5523__auto__ \x3d (function clojure$math$combinatorics$iter__7303(s__7304){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7304__$1 \x3d s__7304;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7304__$1);\nif(temp__5804__auto__){\nvar s__7304__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7304__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7304__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7306 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7305 \x3d (0);\nwhile(true){\nif((i__7305 \x3c size__5522__auto__)){\nvar parts \x3d cljs.core._nth(c__5521__auto__,i__7305);\ncljs.core.chunk_append(b__7306,(function (){var iter__5523__auto__ \x3d ((function (i__7305,parts,c__5521__auto__,size__5522__auto__,b__7306,s__7304__$2,temp__5804__auto__,items__$1,N,lex){\nreturn (function clojure$math$combinatorics$iter__7303_$_iter__7307(s__7308){\nreturn (new cljs.core.LazySeq(null,((function (i__7305,parts,c__5521__auto__,size__5522__auto__,b__7306,s__7304__$2,temp__5804__auto__,items__$1,N,lex){\nreturn (function (){\nvar s__7308__$1 \x3d s__7308;\nwhile(true){\nvar temp__5804__auto____$1 \x3d cljs.core.seq(s__7308__$1);\nif(temp__5804__auto____$1){\nvar s__7308__$2 \x3d temp__5804__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__7308__$2)){\nvar c__5521__auto____$1 \x3d cljs.core.chunk_first(s__7308__$2);\nvar size__5522__auto____$1 \x3d cljs.core.count(c__5521__auto____$1);\nvar b__7310 \x3d cljs.core.chunk_buffer(size__5522__auto____$1);\nif((function (){var i__7309 \x3d (0);\nwhile(true){\nif((i__7309 \x3c size__5522__auto____$1)){\nvar part \x3d cljs.core._nth(c__5521__auto____$1,i__7309);\ncljs.core.chunk_append(b__7310,cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (i__7309,i__7305,part,c__5521__auto____$1,size__5522__auto____$1,b__7310,s__7308__$2,temp__5804__auto____$1,parts,c__5521__auto__,size__5522__auto__,b__7306,s__7304__$2,temp__5804__auto__,items__$1,N,lex){\nreturn (function (v,o){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(items__$1.cljs$core$IFn$_invoke$arity$1 ? items__$1.cljs$core$IFn$_invoke$arity$1(o) : items__$1.call(null,o)));\n});})(i__7309,i__7305,part,c__5521__auto____$1,size__5522__auto____$1,b__7310,s__7308__$2,temp__5804__auto____$1,parts,c__5521__auto__,size__5522__auto__,b__7306,s__7304__$2,temp__5804__auto__,items__$1,N,lex))\n,cljs.core.transient$(cljs.core.PersistentVector.EMPTY),part)));\n\nvar G__7548 \x3d (i__7309 + (1));\ni__7309 \x3d G__7548;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7310),clojure$math$combinatorics$iter__7303_$_iter__7307(cljs.core.chunk_rest(s__7308__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7310),null);\n}\n} else {\nvar part \x3d cljs.core.first(s__7308__$2);\nreturn cljs.core.cons(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (i__7305,part,s__7308__$2,temp__5804__auto____$1,parts,c__5521__auto__,size__5522__auto__,b__7306,s__7304__$2,temp__5804__auto__,items__$1,N,lex){\nreturn (function (v,o){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(items__$1.cljs$core$IFn$_invoke$arity$1 ? items__$1.cljs$core$IFn$_invoke$arity$1(o) : items__$1.call(null,o)));\n});})(i__7305,part,s__7308__$2,temp__5804__auto____$1,parts,c__5521__auto__,size__5522__auto__,b__7306,s__7304__$2,temp__5804__auto__,items__$1,N,lex))\n,cljs.core.transient$(cljs.core.PersistentVector.EMPTY),part)),clojure$math$combinatorics$iter__7303_$_iter__7307(cljs.core.rest(s__7308__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(i__7305,parts,c__5521__auto__,size__5522__auto__,b__7306,s__7304__$2,temp__5804__auto__,items__$1,N,lex))\n,null,null));\n});})(i__7305,parts,c__5521__auto__,size__5522__auto__,b__7306,s__7304__$2,temp__5804__auto__,items__$1,N,lex))\n;\nreturn iter__5523__auto__(parts);\n})());\n\nvar G__7549 \x3d (i__7305 + (1));\ni__7305 \x3d G__7549;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7306),clojure$math$combinatorics$iter__7303(cljs.core.chunk_rest(s__7304__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7306),null);\n}\n} else {\nvar parts \x3d cljs.core.first(s__7304__$2);\nreturn cljs.core.cons((function (){var iter__5523__auto__ \x3d ((function (parts,s__7304__$2,temp__5804__auto__,items__$1,N,lex){\nreturn (function clojure$math$combinatorics$iter__7303_$_iter__7311(s__7312){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7312__$1 \x3d s__7312;\nwhile(true){\nvar temp__5804__auto____$1 \x3d cljs.core.seq(s__7312__$1);\nif(temp__5804__auto____$1){\nvar s__7312__$2 \x3d temp__5804__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__7312__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7312__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7314 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7313 \x3d (0);\nwhile(true){\nif((i__7313 \x3c size__5522__auto__)){\nvar part \x3d cljs.core._nth(c__5521__auto__,i__7313);\ncljs.core.chunk_append(b__7314,cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (i__7313,part,c__5521__auto__,size__5522__auto__,b__7314,s__7312__$2,temp__5804__auto____$1,parts,s__7304__$2,temp__5804__auto__,items__$1,N,lex){\nreturn (function (v,o){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(items__$1.cljs$core$IFn$_invoke$arity$1 ? items__$1.cljs$core$IFn$_invoke$arity$1(o) : items__$1.call(null,o)));\n});})(i__7313,part,c__5521__auto__,size__5522__auto__,b__7314,s__7312__$2,temp__5804__auto____$1,parts,s__7304__$2,temp__5804__auto__,items__$1,N,lex))\n,cljs.core.transient$(cljs.core.PersistentVector.EMPTY),part)));\n\nvar G__7550 \x3d (i__7313 + (1));\ni__7313 \x3d G__7550;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7314),clojure$math$combinatorics$iter__7303_$_iter__7311(cljs.core.chunk_rest(s__7312__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7314),null);\n}\n} else {\nvar part \x3d cljs.core.first(s__7312__$2);\nreturn cljs.core.cons(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (part,s__7312__$2,temp__5804__auto____$1,parts,s__7304__$2,temp__5804__auto__,items__$1,N,lex){\nreturn (function (v,o){\nreturn cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(items__$1.cljs$core$IFn$_invoke$arity$1 ? items__$1.cljs$core$IFn$_invoke$arity$1(o) : items__$1.call(null,o)));\n});})(part,s__7312__$2,temp__5804__auto____$1,parts,s__7304__$2,temp__5804__auto__,items__$1,N,lex))\n,cljs.core.transient$(cljs.core.PersistentVector.EMPTY),part)),clojure$math$combinatorics$iter__7303_$_iter__7311(cljs.core.rest(s__7312__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});})(parts,s__7304__$2,temp__5804__auto__,items__$1,N,lex))\n;\nreturn iter__5523__auto__(parts);\n})(),clojure$math$combinatorics$iter__7303(cljs.core.rest(s__7304__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(lex);\n}));\n\n(clojure.math.combinatorics.partitions_H.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(clojure.math.combinatorics.partitions_H.cljs$lang$applyTo \x3d (function (seq7301){\nvar G__7302 \x3d cljs.core.first(seq7301);\nvar seq7301__$1 \x3d cljs.core.next(seq7301);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7302,seq7301__$1);\n}));\n\n\nclojure.math.combinatorics.multiset_partitions_M \x3d (function clojure$math$combinatorics$multiset_partitions_M(var_args){\nvar G__7316 \x3d arguments.length;\nswitch (G__7316) {\ncase 3:\nreturn clojure.math.combinatorics.multiset_partitions_M.cljs$core$IFn$_invoke$arity$3((arguments[(0)]),(arguments[(1)]),(arguments[(2)]));\n\nbreak;\ncase 11:\nreturn clojure.math.combinatorics.multiset_partitions_M.cljs$core$IFn$_invoke$arity$11((arguments[(0)]),(arguments[(1)]),(arguments[(2)]),(arguments[(3)]),(arguments[(4)]),(arguments[(5)]),(arguments[(6)]),(arguments[(7)]),(arguments[(8)]),(arguments[(9)]),(arguments[(10)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(clojure.math.combinatorics.multiset_partitions_M.cljs$core$IFn$_invoke$arity$3 \x3d (function (multiset,r,s){\nvar n \x3d cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,cljs.core.vals(multiset));\nvar m \x3d cljs.core.count(multiset);\nvar f \x3d cljs.core.PersistentVector.EMPTY;\nvar c \x3d cljs.core.PersistentVector.EMPTY;\nvar u \x3d cljs.core.PersistentVector.EMPTY;\nvar v \x3d cljs.core.PersistentVector.EMPTY;\nvar vec__7317 \x3d (function (){var j \x3d (0);\nvar c__$1 \x3d c;\nvar u__$1 \x3d u;\nvar v__$1 \x3d v;\nwhile(true){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(j,m)){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [c__$1,u__$1,v__$1], null);\n} else {\nvar G__7552 \x3d (j + (1));\nvar G__7553 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c__$1,j,(j + (1)));\nvar G__7554 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(u__$1,j,(function (){var G__7322 \x3d (j + (1));\nreturn (multiset.cljs$core$IFn$_invoke$arity$1 ? multiset.cljs$core$IFn$_invoke$arity$1(G__7322) : multiset.call(null,G__7322));\n})());\nvar G__7555 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v__$1,j,(function (){var G__7323 \x3d (j + (1));\nreturn (multiset.cljs$core$IFn$_invoke$arity$1 ? multiset.cljs$core$IFn$_invoke$arity$1(G__7323) : multiset.call(null,G__7323));\n})());\nj \x3d G__7552;\nc__$1 \x3d G__7553;\nu__$1 \x3d G__7554;\nv__$1 \x3d G__7555;\ncontinue;\n}\nbreak;\n}\n})();\nvar c__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7317,(0),null);\nvar u__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7317,(1),null);\nvar v__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7317,(2),null);\nvar a \x3d (0);\nvar b \x3d m;\nvar l \x3d (0);\nvar f__$1 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic(f,(0),(0),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([(1),m], 0));\nvar stack \x3d cljs.core.List.EMPTY;\nreturn clojure.math.combinatorics.multiset_partitions_M.cljs$core$IFn$_invoke$arity$11(n,m,f__$1,c__$1,u__$1,v__$1,a,b,l,r,s);\n}));\n\n(clojure.math.combinatorics.multiset_partitions_M.cljs$core$IFn$_invoke$arity$11 \x3d (function (n,m,f,c,u,v,a,b,l,r,s){\nwhile(true){\nvar vec__7324 \x3d (function (){var j \x3d a;\nvar k \x3d b;\nvar x \x3d false;\nvar u__$1 \x3d u;\nvar v__$1 \x3d v;\nvar c__$1 \x3d c;\nwhile(true){\nif((j \x3e\x3d b)){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [u__$1,v__$1,c__$1,j,k], null);\n} else {\nvar u__$2 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(u__$1,k,((u__$1.cljs$core$IFn$_invoke$arity$1 ? u__$1.cljs$core$IFn$_invoke$arity$1(j) : u__$1.call(null,j)) - (v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(j) : v__$1.call(null,j))));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((u__$2.cljs$core$IFn$_invoke$arity$1 ? u__$2.cljs$core$IFn$_invoke$arity$1(k) : u__$2.call(null,k)),(0))){\nvar G__7556 \x3d (j + (1));\nvar G__7557 \x3d k;\nvar G__7558 \x3d true;\nvar G__7559 \x3d u__$2;\nvar G__7560 \x3d v__$1;\nvar G__7561 \x3d c__$1;\nj \x3d G__7556;\nk \x3d G__7557;\nx \x3d G__7558;\nu__$1 \x3d G__7559;\nv__$1 \x3d G__7560;\nc__$1 \x3d G__7561;\ncontinue;\n} else {\nif(cljs.core.not(x)){\nvar c__$2 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c__$1,k,(c__$1.cljs$core$IFn$_invoke$arity$1 ? c__$1.cljs$core$IFn$_invoke$arity$1(j) : c__$1.call(null,j)));\nvar v__$2 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v__$1,k,(function (){var x__5133__auto__ \x3d (v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(j) : v__$1.call(null,j));\nvar y__5134__auto__ \x3d (u__$2.cljs$core$IFn$_invoke$arity$1 ? u__$2.cljs$core$IFn$_invoke$arity$1(k) : u__$2.call(null,k));\nreturn ((x__5133__auto__ \x3c y__5134__auto__) ? x__5133__auto__ : y__5134__auto__);\n})());\nvar x__$1 \x3d ((u__$2.cljs$core$IFn$_invoke$arity$1 ? u__$2.cljs$core$IFn$_invoke$arity$1(k) : u__$2.call(null,k)) \x3c (v__$2.cljs$core$IFn$_invoke$arity$1 ? v__$2.cljs$core$IFn$_invoke$arity$1(j) : v__$2.call(null,j)));\nvar k__$1 \x3d (k + (1));\nvar j__$1 \x3d (j + (1));\nvar G__7562 \x3d j__$1;\nvar G__7563 \x3d k__$1;\nvar G__7564 \x3d x__$1;\nvar G__7565 \x3d u__$2;\nvar G__7566 \x3d v__$2;\nvar G__7567 \x3d c__$2;\nj \x3d G__7562;\nk \x3d G__7563;\nx \x3d G__7564;\nu__$1 \x3d G__7565;\nv__$1 \x3d G__7566;\nc__$1 \x3d G__7567;\ncontinue;\n} else {\nvar c__$2 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(c__$1,k,(c__$1.cljs$core$IFn$_invoke$arity$1 ? c__$1.cljs$core$IFn$_invoke$arity$1(j) : c__$1.call(null,j)));\nvar v__$2 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v__$1,k,(u__$2.cljs$core$IFn$_invoke$arity$1 ? u__$2.cljs$core$IFn$_invoke$arity$1(k) : u__$2.call(null,k)));\nvar k__$1 \x3d (k + (1));\nvar j__$1 \x3d (j + (1));\nvar G__7568 \x3d j__$1;\nvar G__7569 \x3d k__$1;\nvar G__7570 \x3d x;\nvar G__7571 \x3d u__$2;\nvar G__7572 \x3d v__$2;\nvar G__7573 \x3d c__$2;\nj \x3d G__7568;\nk \x3d G__7569;\nx \x3d G__7570;\nu__$1 \x3d G__7571;\nv__$1 \x3d G__7572;\nc__$1 \x3d G__7573;\ncontinue;\n}\n}\n}\nbreak;\n}\n})();\nvar u__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7324,(0),null);\nvar v__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7324,(1),null);\nvar c__$1 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7324,(2),null);\nvar j \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7324,(3),null);\nvar k \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7324,(4),null);\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d r;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (((k \x3e b)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(l,(r - (1)))));\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn (clojure.math.combinatorics.m5.cljs$core$IFn$_invoke$arity$11 ? clojure.math.combinatorics.m5.cljs$core$IFn$_invoke$arity$11(n,m,f,c__$1,u__$1,v__$1,a,b,l,r,s) : clojure.math.combinatorics.m5.call(null,n,m,f,c__$1,u__$1,v__$1,a,b,l,r,s));\n} else {\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d s;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (((k \x3c\x3d b)) \x26\x26 (((l + (1)) \x3c s)));\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn (clojure.math.combinatorics.m5.cljs$core$IFn$_invoke$arity$11 ? clojure.math.combinatorics.m5.cljs$core$IFn$_invoke$arity$11(n,m,f,c__$1,u__$1,v__$1,a,b,l,r,s) : clojure.math.combinatorics.m5.call(null,n,m,f,c__$1,u__$1,v__$1,a,b,l,r,s));\n} else {\nif((k \x3e b)){\nvar a__$1 \x3d b;\nvar b__$1 \x3d k;\nvar l__$1 \x3d (l + (1));\nvar f__$1 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(f,(l__$1 + (1)),b__$1);\nvar G__7574 \x3d n;\nvar G__7575 \x3d m;\nvar G__7576 \x3d f__$1;\nvar G__7577 \x3d c__$1;\nvar G__7578 \x3d u__$1;\nvar G__7579 \x3d v__$1;\nvar G__7580 \x3d a__$1;\nvar G__7581 \x3d b__$1;\nvar G__7582 \x3d l__$1;\nvar G__7583 \x3d r;\nvar G__7584 \x3d s;\nn \x3d G__7574;\nm \x3d G__7575;\nf \x3d G__7576;\nc \x3d G__7577;\nu \x3d G__7578;\nv \x3d G__7579;\na \x3d G__7580;\nb \x3d G__7581;\nl \x3d G__7582;\nr \x3d G__7583;\ns \x3d G__7584;\ncontinue;\n} else {\nvar part \x3d (function (){var iter__5523__auto__ \x3d ((function (n,m,f,c,u,v,a,b,l,r,s,vec__7324,u__$1,v__$1,c__$1,j,k){\nreturn (function clojure$math$combinatorics$iter__7327(s__7328){\nreturn (new cljs.core.LazySeq(null,((function (n,m,f,c,u,v,a,b,l,r,s,vec__7324,u__$1,v__$1,c__$1,j,k){\nreturn (function (){\nvar s__7328__$1 \x3d s__7328;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7328__$1);\nif(temp__5804__auto__){\nvar s__7328__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7328__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7328__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7330 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7329 \x3d (0);\nwhile(true){\nif((i__7329 \x3c size__5522__auto__)){\nvar y \x3d cljs.core._nth(c__5521__auto__,i__7329);\ncljs.core.chunk_append(b__7330,(function (){var first_col \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(y) : f.call(null,y));\nvar last_col \x3d ((function (){var G__7331 \x3d (y + (1));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7331) : f.call(null,G__7331));\n})() - (1));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__5523__auto__ \x3d ((function (i__7329,n,m,f,c,u,v,a,b,l,r,s,first_col,last_col,y,c__5521__auto__,size__5522__auto__,b__7330,s__7328__$2,temp__5804__auto__,vec__7324,u__$1,v__$1,c__$1,j,k){\nreturn (function clojure$math$combinatorics$iter__7327_$_iter__7332(s__7333){\nreturn (new cljs.core.LazySeq(null,((function (i__7329,n,m,f,c,u,v,a,b,l,r,s,first_col,last_col,y,c__5521__auto__,size__5522__auto__,b__7330,s__7328__$2,temp__5804__auto__,vec__7324,u__$1,v__$1,c__$1,j,k){\nreturn (function (){\nvar s__7333__$1 \x3d s__7333;\nwhile(true){\nvar temp__5804__auto____$1 \x3d cljs.core.seq(s__7333__$1);\nif(temp__5804__auto____$1){\nvar s__7333__$2 \x3d temp__5804__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__7333__$2)){\nvar c__5521__auto____$1 \x3d cljs.core.chunk_first(s__7333__$2);\nvar size__5522__auto____$1 \x3d cljs.core.count(c__5521__auto____$1);\nvar b__7335 \x3d cljs.core.chunk_buffer(size__5522__auto____$1);\nif((function (){var i__7334 \x3d (0);\nwhile(true){\nif((i__7334 \x3c size__5522__auto____$1)){\nvar z \x3d cljs.core._nth(c__5521__auto____$1,i__7334);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(z) : v__$1.call(null,z)),(0))){\ncljs.core.chunk_append(b__7335,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(c__$1.cljs$core$IFn$_invoke$arity$1 ? c__$1.cljs$core$IFn$_invoke$arity$1(z) : c__$1.call(null,z)),(v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(z) : v__$1.call(null,z))], null));\n\nvar G__7585 \x3d (i__7334 + (1));\ni__7334 \x3d G__7585;\ncontinue;\n} else {\nvar G__7586 \x3d (i__7334 + (1));\ni__7334 \x3d G__7586;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7335),clojure$math$combinatorics$iter__7327_$_iter__7332(cljs.core.chunk_rest(s__7333__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7335),null);\n}\n} else {\nvar z \x3d cljs.core.first(s__7333__$2);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(z) : v__$1.call(null,z)),(0))){\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(c__$1.cljs$core$IFn$_invoke$arity$1 ? c__$1.cljs$core$IFn$_invoke$arity$1(z) : c__$1.call(null,z)),(v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(z) : v__$1.call(null,z))], null),clojure$math$combinatorics$iter__7327_$_iter__7332(cljs.core.rest(s__7333__$2)));\n} else {\nvar G__7587 \x3d cljs.core.rest(s__7333__$2);\ns__7333__$1 \x3d G__7587;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(i__7329,n,m,f,c,u,v,a,b,l,r,s,first_col,last_col,y,c__5521__auto__,size__5522__auto__,b__7330,s__7328__$2,temp__5804__auto__,vec__7324,u__$1,v__$1,c__$1,j,k))\n,null,null));\n});})(i__7329,n,m,f,c,u,v,a,b,l,r,s,first_col,last_col,y,c__5521__auto__,size__5522__auto__,b__7330,s__7328__$2,temp__5804__auto__,vec__7324,u__$1,v__$1,c__$1,j,k))\n;\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2(first_col,(last_col + (1))));\n})());\n})());\n\nvar G__7588 \x3d (i__7329 + (1));\ni__7329 \x3d G__7588;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7330),clojure$math$combinatorics$iter__7327(cljs.core.chunk_rest(s__7328__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7330),null);\n}\n} else {\nvar y \x3d cljs.core.first(s__7328__$2);\nreturn cljs.core.cons((function (){var first_col \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(y) : f.call(null,y));\nvar last_col \x3d ((function (){var G__7336 \x3d (y + (1));\nreturn (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__7336) : f.call(null,G__7336));\n})() - (1));\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__5523__auto__ \x3d ((function (n,m,f,c,u,v,a,b,l,r,s,first_col,last_col,y,s__7328__$2,temp__5804__auto__,vec__7324,u__$1,v__$1,c__$1,j,k){\nreturn (function clojure$math$combinatorics$iter__7327_$_iter__7337(s__7338){\nreturn (new cljs.core.LazySeq(null,((function (n,m,f,c,u,v,a,b,l,r,s,first_col,last_col,y,s__7328__$2,temp__5804__auto__,vec__7324,u__$1,v__$1,c__$1,j,k){\nreturn (function (){\nvar s__7338__$1 \x3d s__7338;\nwhile(true){\nvar temp__5804__auto____$1 \x3d cljs.core.seq(s__7338__$1);\nif(temp__5804__auto____$1){\nvar s__7338__$2 \x3d temp__5804__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__7338__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7338__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7340 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7339 \x3d (0);\nwhile(true){\nif((i__7339 \x3c size__5522__auto__)){\nvar z \x3d cljs.core._nth(c__5521__auto__,i__7339);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(z) : v__$1.call(null,z)),(0))){\ncljs.core.chunk_append(b__7340,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(c__$1.cljs$core$IFn$_invoke$arity$1 ? c__$1.cljs$core$IFn$_invoke$arity$1(z) : c__$1.call(null,z)),(v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(z) : v__$1.call(null,z))], null));\n\nvar G__7589 \x3d (i__7339 + (1));\ni__7339 \x3d G__7589;\ncontinue;\n} else {\nvar G__7590 \x3d (i__7339 + (1));\ni__7339 \x3d G__7590;\ncontinue;\n}\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7340),clojure$math$combinatorics$iter__7327_$_iter__7337(cljs.core.chunk_rest(s__7338__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7340),null);\n}\n} else {\nvar z \x3d cljs.core.first(s__7338__$2);\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(z) : v__$1.call(null,z)),(0))){\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(c__$1.cljs$core$IFn$_invoke$arity$1 ? c__$1.cljs$core$IFn$_invoke$arity$1(z) : c__$1.call(null,z)),(v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(z) : v__$1.call(null,z))], null),clojure$math$combinatorics$iter__7327_$_iter__7337(cljs.core.rest(s__7338__$2)));\n} else {\nvar G__7591 \x3d cljs.core.rest(s__7338__$2);\ns__7338__$1 \x3d G__7591;\ncontinue;\n}\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(n,m,f,c,u,v,a,b,l,r,s,first_col,last_col,y,s__7328__$2,temp__5804__auto__,vec__7324,u__$1,v__$1,c__$1,j,k))\n,null,null));\n});})(n,m,f,c,u,v,a,b,l,r,s,first_col,last_col,y,s__7328__$2,temp__5804__auto__,vec__7324,u__$1,v__$1,c__$1,j,k))\n;\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2(first_col,(last_col + (1))));\n})());\n})(),clojure$math$combinatorics$iter__7327(cljs.core.rest(s__7328__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(n,m,f,c,u,v,a,b,l,r,s,vec__7324,u__$1,v__$1,c__$1,j,k))\n,null,null));\n});})(n,m,f,c,u,v,a,b,l,r,s,vec__7324,u__$1,v__$1,c__$1,j,k))\n;\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$1((l + (1))));\n})();\nreturn cljs.core.cons(part,(new cljs.core.LazySeq(null,((function (n,m,f,c,u,v,a,b,l,r,s,part,vec__7324,u__$1,v__$1,c__$1,j,k){\nreturn (function (){\nreturn (clojure.math.combinatorics.m5.cljs$core$IFn$_invoke$arity$11 ? clojure.math.combinatorics.m5.cljs$core$IFn$_invoke$arity$11(n,m,f,c__$1,u__$1,v__$1,a,b,l,r,s) : clojure.math.combinatorics.m5.call(null,n,m,f,c__$1,u__$1,v__$1,a,b,l,r,s));\n});})(n,m,f,c,u,v,a,b,l,r,s,part,vec__7324,u__$1,v__$1,c__$1,j,k))\n,null,null)));\n\n}\n}\n}\nbreak;\n}\n}));\n\n(clojure.math.combinatorics.multiset_partitions_M.cljs$lang$maxFixedArity \x3d 11);\n\nclojure.math.combinatorics.m5 \x3d (function clojure$math$combinatorics$m5(n,m,f,c,u,v,a,b,l,r,s){\nvar j \x3d (function (){var j \x3d (b - (1));\nwhile(true){\nif(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2((v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(j) : v.call(null,j)),(0))){\nreturn j;\n} else {\nvar G__7592 \x3d (j - (1));\nj \x3d G__7592;\ncontinue;\n}\nbreak;\n}\n})();\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d r;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(j,a)) \x26\x26 (((((v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(j) : v.call(null,j)) - (1)) * (r - l)) \x3c (u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(j) : u.call(null,j)))));\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn (clojure.math.combinatorics.m6.cljs$core$IFn$_invoke$arity$11 ? clojure.math.combinatorics.m6.cljs$core$IFn$_invoke$arity$11(n,m,f,c,u,v,a,b,l,r,s) : clojure.math.combinatorics.m6.call(null,n,m,f,c,u,v,a,b,l,r,s));\n} else {\nif(((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(j,a)) \x26\x26 (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((v.cljs$core$IFn$_invoke$arity$1 ? v.cljs$core$IFn$_invoke$arity$1(j) : v.call(null,j)),(1))))){\nreturn (clojure.math.combinatorics.m6.cljs$core$IFn$_invoke$arity$11 ? clojure.math.combinatorics.m6.cljs$core$IFn$_invoke$arity$11(n,m,f,c,u,v,a,b,l,r,s) : clojure.math.combinatorics.m6.call(null,n,m,f,c,u,v,a,b,l,r,s));\n} else {\nvar v__$1 \x3d clojure.math.combinatorics.update(v,j,cljs.core.dec);\nvar diff_uv \x3d (cljs.core.truth_(s)?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,(function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$m5_$_iter__7341(s__7342){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7342__$1 \x3d s__7342;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7342__$1);\nif(temp__5804__auto__){\nvar s__7342__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7342__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7342__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7344 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7343 \x3d (0);\nwhile(true){\nif((i__7343 \x3c size__5522__auto__)){\nvar i \x3d cljs.core._nth(c__5521__auto__,i__7343);\ncljs.core.chunk_append(b__7344,((u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(i) : u.call(null,i)) - (v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(i) : v__$1.call(null,i))));\n\nvar G__7593 \x3d (i__7343 + (1));\ni__7343 \x3d G__7593;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7344),clojure$math$combinatorics$m5_$_iter__7341(cljs.core.chunk_rest(s__7342__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7344),null);\n}\n} else {\nvar i \x3d cljs.core.first(s__7342__$2);\nreturn cljs.core.cons(((u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(i) : u.call(null,i)) - (v__$1.cljs$core$IFn$_invoke$arity$1 ? v__$1.cljs$core$IFn$_invoke$arity$1(i) : v__$1.call(null,i))),clojure$math$combinatorics$m5_$_iter__7341(cljs.core.rest(s__7342__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$2(a,(j + (1))));\n})()):null);\nvar v__$2 \x3d (function (){var ks \x3d cljs.core.range.cljs$core$IFn$_invoke$arity$2((j + (1)),b);\nvar v__$2 \x3d v__$1;\nwhile(true){\nif(cljs.core.empty_QMARK_(ks)){\nreturn v__$2;\n} else {\nvar k \x3d cljs.core.first(ks);\nvar G__7594 \x3d cljs.core.rest(ks);\nvar G__7595 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v__$2,k,(u.cljs$core$IFn$_invoke$arity$1 ? u.cljs$core$IFn$_invoke$arity$1(k) : u.call(null,k)));\nks \x3d G__7594;\nv__$2 \x3d G__7595;\ncontinue;\n}\nbreak;\n}\n})();\nvar min_partitions_after_this \x3d (cljs.core.truth_(s)?(s - (l + (1))):(0));\nvar amount_to_dec \x3d (cljs.core.truth_(s)?(function (){var x__5130__auto__ \x3d (0);\nvar y__5131__auto__ \x3d (min_partitions_after_this - diff_uv);\nreturn ((x__5130__auto__ \x3e y__5131__auto__) ? x__5130__auto__ : y__5131__auto__);\n})():(0));\nvar v__$3 \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(amount_to_dec,(0)))?v__$2:(function (){var k_1 \x3d (b - (1));\nvar v__$3 \x3d v__$2;\nvar amount \x3d amount_to_dec;\nwhile(true){\nvar vk \x3d (v__$3.cljs$core$IFn$_invoke$arity$1 ? v__$3.cljs$core$IFn$_invoke$arity$1(k_1) : v__$3.call(null,k_1));\nif((amount \x3e vk)){\nvar G__7596 \x3d (k_1 - (1));\nvar G__7597 \x3d cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v__$3,k_1,(0));\nvar G__7598 \x3d (amount - vk);\nk_1 \x3d G__7596;\nv__$3 \x3d G__7597;\namount \x3d G__7598;\ncontinue;\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v__$3,k_1,(vk - amount));\n}\nbreak;\n}\n})());\nreturn clojure.math.combinatorics.multiset_partitions_M.cljs$core$IFn$_invoke$arity$11(n,m,f,c,u,v__$3,a,b,l,r,s);\n\n}\n}\n});\nclojure.math.combinatorics.m6 \x3d (function clojure$math$combinatorics$m6(n,m,f,c,u,v,a,b,l,r,s){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(l,(0))){\nreturn cljs.core.List.EMPTY;\n} else {\nvar l__$1 \x3d (l - (1));\nvar b__$1 \x3d a;\nvar a__$1 \x3d (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(l__$1) : f.call(null,l__$1));\nreturn clojure.math.combinatorics.m5(n,m,f,c,u,v,a__$1,b__$1,l__$1,r,s);\n}\n});\nclojure.math.combinatorics.partitions_M \x3d (function clojure$math$combinatorics$partitions_M(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___7599 \x3d arguments.length;\nvar i__5770__auto___7600 \x3d (0);\nwhile(true){\nif((i__5770__auto___7600 \x3c len__5769__auto___7599)){\nargs__5775__auto__.push((arguments[i__5770__auto___7600]));\n\nvar G__7601 \x3d (i__5770__auto___7600 + (1));\ni__5770__auto___7600 \x3d G__7601;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn clojure.math.combinatorics.partitions_M.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(clojure.math.combinatorics.partitions_M.cljs$core$IFn$_invoke$arity$variadic \x3d (function (items,p__7347){\nvar map__7348 \x3d p__7347;\nvar map__7348__$1 \x3d cljs.core.__destructure_map(map__7348);\nvar from \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7348__$1,new cljs.core.Keyword(null,\x22min\x22,\x22min\x22,444991522));\nvar to \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__7348__$1,new cljs.core.Keyword(null,\x22max\x22,\x22max\x22,61366548));\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(items),(0))){\nif(((((function (){var or__5045__auto__ \x3d from;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (0);\n}\n})() \x3c\x3d (0))) \x26\x26 (((0) \x3c\x3d (function (){var or__5045__auto__ \x3d to;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (0);\n}\n})())))){\nreturn cljs.core.list(cljs.core.List.EMPTY);\n} else {\nreturn cljs.core.List.EMPTY;\n}\n} else {\nvar items__$1 \x3d cljs.core.vec(items);\nvar ditems \x3d cljs.core.vec(cljs.core.distinct.cljs$core$IFn$_invoke$arity$1(items__$1));\nvar freqs \x3d cljs.core.frequencies(items__$1);\nvar N \x3d cljs.core.count(items__$1);\nvar M \x3d cljs.core.count(ditems);\nvar from__$1 \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d from;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (from \x3c\x3d (1));\n} else {\nreturn and__5043__auto__;\n}\n})())?null:from);\nvar to__$1 \x3d (cljs.core.truth_((function (){var and__5043__auto__ \x3d to;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn (to \x3e\x3d N);\n} else {\nreturn and__5043__auto__;\n}\n})())?null:to);\nif((!(((((1) \x3c\x3d (function (){var or__5045__auto__ \x3d from__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (1);\n}\n})())) \x26\x26 (((((function (){var or__5045__auto__ \x3d from__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn (1);\n}\n})() \x3c\x3d (function (){var or__5045__auto__ \x3d to__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn N;\n}\n})())) \x26\x26 (((function (){var or__5045__auto__ \x3d to__$1;\nif(cljs.core.truth_(or__5045__auto__)){\nreturn or__5045__auto__;\n} else {\nreturn N;\n}\n})() \x3c\x3d N)))))))){\nreturn cljs.core.List.EMPTY;\n} else {\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(N,(1))){\nreturn cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.vec(cljs.core.sequence.cljs$core$IFn$_invoke$arity$1(cljs.core.seq(cljs.core.concat.cljs$core$IFn$_invoke$arity$1((new cljs.core.List(null,cljs.core.first(items__$1),null,(1),null)))))),null,(1),null))))),null,(1),null)))));\n} else {\nvar start_multiset \x3d cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__5523__auto__ \x3d (function clojure$math$combinatorics$iter__7349(s__7350){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7350__$1 \x3d s__7350;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7350__$1);\nif(temp__5804__auto__){\nvar s__7350__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7350__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7350__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7352 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7351 \x3d (0);\nwhile(true){\nif((i__7351 \x3c size__5522__auto__)){\nvar i \x3d cljs.core._nth(c__5521__auto__,i__7351);\nvar j \x3d (i + (1));\ncljs.core.chunk_append(b__7352,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [j,(function (){var G__7353 \x3d (ditems.cljs$core$IFn$_invoke$arity$1 ? ditems.cljs$core$IFn$_invoke$arity$1(i) : ditems.call(null,i));\nreturn (freqs.cljs$core$IFn$_invoke$arity$1 ? freqs.cljs$core$IFn$_invoke$arity$1(G__7353) : freqs.call(null,G__7353));\n})()], null));\n\nvar G__7602 \x3d (i__7351 + (1));\ni__7351 \x3d G__7602;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7352),clojure$math$combinatorics$iter__7349(cljs.core.chunk_rest(s__7350__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7352),null);\n}\n} else {\nvar i \x3d cljs.core.first(s__7350__$2);\nvar j \x3d (i + (1));\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [j,(function (){var G__7354 \x3d (ditems.cljs$core$IFn$_invoke$arity$1 ? ditems.cljs$core$IFn$_invoke$arity$1(i) : ditems.call(null,i));\nreturn (freqs.cljs$core$IFn$_invoke$arity$1 ? freqs.cljs$core$IFn$_invoke$arity$1(G__7354) : freqs.call(null,G__7354));\n})()], null),clojure$math$combinatorics$iter__7349(cljs.core.rest(s__7350__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(cljs.core.range.cljs$core$IFn$_invoke$arity$1(M));\n})());\nvar parts \x3d clojure.math.combinatorics.multiset_partitions_M.cljs$core$IFn$_invoke$arity$3(start_multiset,to__$1,from__$1);\nvar iter__5523__auto__ \x3d (function clojure$math$combinatorics$iter__7355(s__7356){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7356__$1 \x3d s__7356;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__7356__$1);\nif(temp__5804__auto__){\nvar s__7356__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__7356__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7356__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7358 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7357 \x3d (0);\nwhile(true){\nif((i__7357 \x3c size__5522__auto__)){\nvar part \x3d cljs.core._nth(c__5521__auto__,i__7357);\ncljs.core.chunk_append(b__7358,(function (){var iter__5523__auto__ \x3d ((function (i__7357,part,c__5521__auto__,size__5522__auto__,b__7358,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to){\nreturn (function clojure$math$combinatorics$iter__7355_$_iter__7359(s__7360){\nreturn (new cljs.core.LazySeq(null,((function (i__7357,part,c__5521__auto__,size__5522__auto__,b__7358,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to){\nreturn (function (){\nvar s__7360__$1 \x3d s__7360;\nwhile(true){\nvar temp__5804__auto____$1 \x3d cljs.core.seq(s__7360__$1);\nif(temp__5804__auto____$1){\nvar s__7360__$2 \x3d temp__5804__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__7360__$2)){\nvar c__5521__auto____$1 \x3d cljs.core.chunk_first(s__7360__$2);\nvar size__5522__auto____$1 \x3d cljs.core.count(c__5521__auto____$1);\nvar b__7362 \x3d cljs.core.chunk_buffer(size__5522__auto____$1);\nif((function (){var i__7361 \x3d (0);\nwhile(true){\nif((i__7361 \x3c size__5522__auto____$1)){\nvar multiset \x3d cljs.core._nth(c__5521__auto____$1,i__7361);\ncljs.core.chunk_append(b__7362,cljs.core.vec(clojure.math.combinatorics.mapjoin(((function (i__7361,i__7357,multiset,c__5521__auto____$1,size__5522__auto____$1,b__7362,s__7360__$2,temp__5804__auto____$1,part,c__5521__auto__,size__5522__auto__,b__7358,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to){\nreturn (function (p__7363){\nvar vec__7364 \x3d p__7363;\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7364,(0),null);\nvar numtimes \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7364,(1),null);\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(numtimes,(function (){var G__7367 \x3d (index - (1));\nreturn (ditems.cljs$core$IFn$_invoke$arity$1 ? ditems.cljs$core$IFn$_invoke$arity$1(G__7367) : ditems.call(null,G__7367));\n})());\n});})(i__7361,i__7357,multiset,c__5521__auto____$1,size__5522__auto____$1,b__7362,s__7360__$2,temp__5804__auto____$1,part,c__5521__auto__,size__5522__auto__,b__7358,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to))\n,multiset)));\n\nvar G__7603 \x3d (i__7361 + (1));\ni__7361 \x3d G__7603;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7362),clojure$math$combinatorics$iter__7355_$_iter__7359(cljs.core.chunk_rest(s__7360__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7362),null);\n}\n} else {\nvar multiset \x3d cljs.core.first(s__7360__$2);\nreturn cljs.core.cons(cljs.core.vec(clojure.math.combinatorics.mapjoin(((function (i__7357,multiset,s__7360__$2,temp__5804__auto____$1,part,c__5521__auto__,size__5522__auto__,b__7358,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to){\nreturn (function (p__7368){\nvar vec__7369 \x3d p__7368;\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7369,(0),null);\nvar numtimes \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7369,(1),null);\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(numtimes,(function (){var G__7372 \x3d (index - (1));\nreturn (ditems.cljs$core$IFn$_invoke$arity$1 ? ditems.cljs$core$IFn$_invoke$arity$1(G__7372) : ditems.call(null,G__7372));\n})());\n});})(i__7357,multiset,s__7360__$2,temp__5804__auto____$1,part,c__5521__auto__,size__5522__auto__,b__7358,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to))\n,multiset)),clojure$math$combinatorics$iter__7355_$_iter__7359(cljs.core.rest(s__7360__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n});})(i__7357,part,c__5521__auto__,size__5522__auto__,b__7358,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to))\n,null,null));\n});})(i__7357,part,c__5521__auto__,size__5522__auto__,b__7358,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to))\n;\nreturn iter__5523__auto__(part);\n})());\n\nvar G__7604 \x3d (i__7357 + (1));\ni__7357 \x3d G__7604;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7358),clojure$math$combinatorics$iter__7355(cljs.core.chunk_rest(s__7356__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7358),null);\n}\n} else {\nvar part \x3d cljs.core.first(s__7356__$2);\nreturn cljs.core.cons((function (){var iter__5523__auto__ \x3d ((function (part,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to){\nreturn (function clojure$math$combinatorics$iter__7355_$_iter__7373(s__7374){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__7374__$1 \x3d s__7374;\nwhile(true){\nvar temp__5804__auto____$1 \x3d cljs.core.seq(s__7374__$1);\nif(temp__5804__auto____$1){\nvar s__7374__$2 \x3d temp__5804__auto____$1;\nif(cljs.core.chunked_seq_QMARK_(s__7374__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__7374__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__7376 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__7375 \x3d (0);\nwhile(true){\nif((i__7375 \x3c size__5522__auto__)){\nvar multiset \x3d cljs.core._nth(c__5521__auto__,i__7375);\ncljs.core.chunk_append(b__7376,cljs.core.vec(clojure.math.combinatorics.mapjoin(((function (i__7375,multiset,c__5521__auto__,size__5522__auto__,b__7376,s__7374__$2,temp__5804__auto____$1,part,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to){\nreturn (function (p__7377){\nvar vec__7378 \x3d p__7377;\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7378,(0),null);\nvar numtimes \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7378,(1),null);\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(numtimes,(function (){var G__7381 \x3d (index - (1));\nreturn (ditems.cljs$core$IFn$_invoke$arity$1 ? ditems.cljs$core$IFn$_invoke$arity$1(G__7381) : ditems.call(null,G__7381));\n})());\n});})(i__7375,multiset,c__5521__auto__,size__5522__auto__,b__7376,s__7374__$2,temp__5804__auto____$1,part,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to))\n,multiset)));\n\nvar G__7605 \x3d (i__7375 + (1));\ni__7375 \x3d G__7605;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7376),clojure$math$combinatorics$iter__7355_$_iter__7373(cljs.core.chunk_rest(s__7374__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__7376),null);\n}\n} else {\nvar multiset \x3d cljs.core.first(s__7374__$2);\nreturn cljs.core.cons(cljs.core.vec(clojure.math.combinatorics.mapjoin(((function (multiset,s__7374__$2,temp__5804__auto____$1,part,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to){\nreturn (function (p__7382){\nvar vec__7383 \x3d p__7382;\nvar index \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7383,(0),null);\nvar numtimes \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__7383,(1),null);\nreturn cljs.core.repeat.cljs$core$IFn$_invoke$arity$2(numtimes,(function (){var G__7386 \x3d (index - (1));\nreturn (ditems.cljs$core$IFn$_invoke$arity$1 ? ditems.cljs$core$IFn$_invoke$arity$1(G__7386) : ditems.call(null,G__7386));\n})());\n});})(multiset,s__7374__$2,temp__5804__auto____$1,part,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to))\n,multiset)),clojure$math$combinatorics$iter__7355_$_iter__7373(cljs.core.rest(s__7374__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});})(part,s__7356__$2,temp__5804__auto__,start_multiset,parts,items__$1,ditems,freqs,N,M,from__$1,to__$1,map__7348,map__7348__$1,from,to))\n;\nreturn iter__5523__auto__(part);\n})(),clojure$math$combinatorics$iter__7355(cljs.core.rest(s__7356__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(parts);\n\n}\n}\n}\n}));\n\n(clojure.math.combinatorics.partitions_M.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(clojure.math.combinatorics.partitions_M.cljs$lang$applyTo \x3d (function (seq7345){\nvar G__7346 \x3d cljs.core.first(seq7345);\nvar seq7345__$1 \x3d cljs.core.next(seq7345);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7346,seq7345__$1);\n}));\n\n/**\n * All the lexicographic distinct partitions of items.\n *  Optionally pass in :min and/or :max to specify inclusive bounds on the number of parts the items can be split into.\n */\nclojure.math.combinatorics.partitions \x3d (function clojure$math$combinatorics$partitions(var_args){\nvar args__5775__auto__ \x3d [];\nvar len__5769__auto___7606 \x3d arguments.length;\nvar i__5770__auto___7607 \x3d (0);\nwhile(true){\nif((i__5770__auto___7607 \x3c len__5769__auto___7606)){\nargs__5775__auto__.push((arguments[i__5770__auto___7607]));\n\nvar G__7608 \x3d (i__5770__auto___7607 + (1));\ni__5770__auto___7607 \x3d G__7608;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__5776__auto__ \x3d ((((1) \x3c args__5775__auto__.length))?(new cljs.core.IndexedSeq(args__5775__auto__.slice((1)),(0),null)):null);\nreturn clojure.math.combinatorics.partitions.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__5776__auto__);\n});\n\n(clojure.math.combinatorics.partitions.cljs$core$IFn$_invoke$arity$variadic \x3d (function (items,args){\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(items),(0))){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(clojure.math.combinatorics.partitions_H,items,args);\n} else {\nif(cljs.core.truth_(clojure.math.combinatorics.all_different_QMARK_(items))){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(clojure.math.combinatorics.partitions_H,items,args);\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(clojure.math.combinatorics.partitions_M,items,args);\n\n}\n}\n}));\n\n(clojure.math.combinatorics.partitions.cljs$lang$maxFixedArity \x3d (1));\n\n/** @this {Function} */\n(clojure.math.combinatorics.partitions.cljs$lang$applyTo \x3d (function (seq7387){\nvar G__7388 \x3d cljs.core.first(seq7387);\nvar seq7387__$1 \x3d cljs.core.next(seq7387);\nvar self__5754__auto__ \x3d this;\nreturn self__5754__auto__.cljs$core$IFn$_invoke$arity$variadic(G__7388,seq7387__$1);\n}));\n\n");
SHADOW_ENV.evalLoad("shadow.js.shim.module$$use_gesture$react.js", true , "goog.provide(\x22shadow.js.shim.module$$use_gesture$react\x22);\ngoog.provide(\x22module$shadow_js_shim_module$$use_gesture$react\x22);\nshadow.js.shim.module$$use_gesture$react \x3d shadow$bridge(\x22@use-gesture/react\x22);\nmodule$shadow_js_shim_module$$use_gesture$react.default \x3d shadow.js.shim.module$$use_gesture$react;\n");
SHADOW_ENV.evalLoad("tableground.views.js", true , "goog.provide(\x27tableground.views\x27);\ntableground.views.rotate_fn \x3d (function tableground$views$rotate_fn(mesh_ref){\nvar new_r \x3d (mesh_ref.current.rotation.x + 0.005);\nreturn (mesh_ref.current.rotation.x \x3d new_r);\n});\ntableground.views.roll_pot \x3d (function tableground$views$roll_pot(){\nreturn cljs.core.rand_nth(new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [\x221\x22,\x222\x22,\x223\x22,\x224\x22,\x225\x22,\x226\x22], null));\n});\ntableground.views.intersect_point \x3d (new shadow.js.shim.module$three.Vector3());\ntableground.views.hot_plane \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\ntableground.views.play_area \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\ntableground.views.box_geom \x3d (new shadow.js.shim.module$three.BoxGeometry((1),(1),(1)));\ntableground.views.bid_boxes \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\ntableground.views.hidden_boxes \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\ntableground.views.pot_value \x3d reagent.core.atom.cljs$core$IFn$_invoke$arity$1(tableground.views.roll_pot());\ntableground.views.bid_total \x3d reagent.core.atom.cljs$core$IFn$_invoke$arity$1((0));\ntableground.views.popup_msg \x3d reagent.core.atom.cljs$core$IFn$_invoke$arity$1(null);\ntableground.views.game_state \x3d reagent.core.atom.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22turn\x22,\x22turn\x22,75759344),(1),new cljs.core.Keyword(null,\x22player-boxes\x22,\x22player-boxes\x22,-635668928),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\x223\x22,null,\x224\x22,null,\x225\x22,null,\x226\x22,null,\x221\x22,null,\x222\x22,null], null), null),new cljs.core.Keyword(null,\x22opponent-boxes\x22,\x22opponent-boxes\x22,1038098234),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\x223\x22,null,\x224\x22,null,\x225\x22,null,\x226\x22,null,\x221\x22,null,\x222\x22,null], null), null),new cljs.core.Keyword(null,\x22player-score\x22,\x22player-score\x22,-564716352),(0),new cljs.core.Keyword(null,\x22opponent-score\x22,\x22opponent-score\x22,2136563163),(0)], null));\nif((typeof tableground !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof tableground.views !\x3d\x3d \x27undefined\x27) \x26\x26 (typeof tableground.views.grid_offsets !\x3d\x3d \x27undefined\x27)){\n} else {\ntableground.views.grid_offsets \x3d new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.2,-0.6], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),-0.6], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1.2,-0.6], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.2,0.6], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),0.6], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [1.2,0.6], null)], null);\n}\ntableground.views.compute_play_area_bounds \x3d (function tableground$views$compute_play_area_bounds(){\nvar bounds \x3d cljs.core.deref(tableground.views.play_area);\nvar get_xz \x3d cljs.core.juxt.cljs$core$IFn$_invoke$arity$2((function (p1__33187_SHARP_){\nreturn p1__33187_SHARP_.x;\n}),(function (p1__33188_SHARP_){\nreturn p1__33188_SHARP_.z;\n}));\nvar geom \x3d bounds.geometry;\ngeom.computeBoundingBox();\n\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$3(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core.map,cljs.core._PLUS_),cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(get_xz(bounds.position)),cljs.core.map.cljs$core$IFn$_invoke$arity$2(get_xz,cljs.core.juxt.cljs$core$IFn$_invoke$arity$2((function (p1__33189_SHARP_){\nreturn p1__33189_SHARP_.min;\n}),(function (p1__33190_SHARP_){\nreturn p1__33190_SHARP_.max;\n}))(geom.boundingBox)));\n});\ntableground.views.play_area_intersect_QMARK_ \x3d (function tableground$views$play_area_intersect_QMARK_(x,z){\nvar vec__33191 \x3d tableground.views.compute_play_area_bounds();\nvar vec__33194 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33191,(0),null);\nvar min_x \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33194,(0),null);\nvar min_z \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33194,(1),null);\nvar vec__33197 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33191,(1),null);\nvar max_x \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33197,(0),null);\nvar max_z \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33197,(1),null);\nreturn (((((min_x \x3c x)) \x26\x26 ((x \x3c max_x)))) \x26\x26 ((((min_z \x3c z)) \x26\x26 ((z \x3c max_z)))));\n});\ntableground.views.compute_play_area_center \x3d (function tableground$views$compute_play_area_center(){\nvar vec__33200 \x3d tableground.views.compute_play_area_bounds();\nvar vec__33203 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33200,(0),null);\nvar min_x \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33203,(0),null);\nvar min_z \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33203,(1),null);\nvar vec__33206 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33200,(1),null);\nvar max_x \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33206,(0),null);\nvar max_z \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33206,(1),null);\nreturn cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.partial.cljs$core$IFn$_invoke$arity$2(cljs.core._STAR_,0.5),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(min_x + max_x),(min_z + max_z)], null));\n});\ntableground.views.enforce_and_return_played \x3d (function tableground$views$enforce_and_return_played(played){\ncljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p__33209,p__33210){\nvar vec__33211 \x3d p__33209;\nvar _face_text \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33211,(0),null);\nvar vec__33214 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33211,(1),null);\nvar mesh_ref \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33214,(0),null);\nvar _reset_fn \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33214,(1),null);\nvar vec__33217 \x3d p__33210;\nvar x \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33217,(0),null);\nvar z \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33217,(1),null);\n(mesh_ref.current.position.x \x3d x);\n\nreturn (mesh_ref.current.position.z \x3d z);\n}),played,cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (p__33220,p__33221){\nvar vec__33222 \x3d p__33220;\nvar dx \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33222,(0),null);\nvar dz \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33222,(1),null);\nvar vec__33225 \x3d p__33221;\nvar ox \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33225,(0),null);\nvar oz \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33225,(1),null);\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(dx + ox),(dz + oz)], null);\n}),tableground.views.grid_offsets,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(tableground.views.compute_play_area_center()))));\n\nreturn played;\n});\ntableground.views.dot_geom \x3d (new shadow.js.shim.module$three.CylinderGeometry(0.1,0.1,0.02,(16)));\ntableground.views.dot_mat \x3d (new shadow.js.shim.module$three.MeshPhysicalMaterial(cljs.core.clj__GT_js(new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22grey\x22], null))));\ntableground.views.pot_box_ref \x3d cljs.core.atom.cljs$core$IFn$_invoke$arity$1(null);\ntableground.views.dice_rotations \x3d new cljs.core.PersistentArrayMap(null, 6, [\x221\x22,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),(0)], null),\x222\x22,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.57,(0),(0)], null),\x223\x22,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),1.57], null),\x224\x22,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),-1.57], null),\x225\x22,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1.57,(0),(0)], null),\x226\x22,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-3.14,(0),(0)], null)], null);\ntableground.views.pot_box \x3d (function tableground$views$pot_box(face_text){\nvar mesh_ref \x3d shadow.js.shim.module$react.useRef();\nvar _ \x3d cljs.core.reset_BANG_(tableground.views.pot_box_ref,mesh_ref);\nvar rot \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(tableground.views.dice_rotations,face_text);\nvar font_loader \x3d shadow.js.shim.module$$react_three$fiber.useLoader(shadow.js.shim.module$three$addons$loaders$FontLoader.FontLoader,\x22/marcellus.json\x22);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22ref\x22,\x22ref\x22,1289896967),mesh_ref,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.box_geom,new cljs.core.Keyword(null,\x22castShadow\x22,\x22castShadow\x22,1475003551),true,new cljs.core.Keyword(null,\x22receiveShadow\x22,\x22receiveShadow\x22,773566383),true,new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(0),-3.5], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),rot], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),0.5,(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.25,-0.25,0.5], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.57,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.25,0.25,0.5], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.57,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.5,(0),(0)], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),1.57], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.5,0.25,0.25], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),1.57], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.5,-0.25,-0.25], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),1.57], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.5,0.25,-0.25], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),-1.57], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.5,-0.25,-0.25], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),-1.57], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.5,-0.25,0.25], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),-1.57], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.5,0.25,0.25], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),-1.57], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null)], null),new cljs.core.PersistentVector(null, 6, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),-0.5], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1.57,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.25,0.25,-0.5], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1.57,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.25,-0.25,-0.5], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1.57,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.25,0.25,-0.5], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1.57,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.25,-0.25,-0.5], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1.57,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null)], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.25,-0.5,-0.3], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-3.14,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.25,-0.5,(0)], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-3.14,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.25,-0.5,0.3], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-3.14,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.25,-0.5,-0.3], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-3.14,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.25,-0.5,(0)], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-3.14,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.25,-0.5,0.3], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-3.14,(0),(0)], null),new cljs.core.Keyword(null,\x22material\x22,\x22material\x22,460118677),tableground.views.dot_mat,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.dot_geom], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meshPhysicalMaterial\x22,\x22meshPhysicalMaterial\x22,1544836631),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22black\x22], null)], null)], null),new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.3,(0),-3.8], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.1,(0),(0)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22BoxGeometry\x22,\x22BoxGeometry\x22,824599000),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(1),(1),0.1], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meshPhysicalMaterial\x22,\x22meshPhysicalMaterial\x22,1544836631),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22black\x22], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.core.adapt_react_class(shadow.js.shim.module$$react_three$drei.Text3D),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22font\x22,\x22font\x22,-1506159249),font_loader.data,new cljs.core.Keyword(null,\x22height\x22,\x22height\x22,1025178622),0.05,new cljs.core.Keyword(null,\x22size\x22,\x22size\x22,1098693007),0.5,new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.2,-0.25,0.1], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),(0)], null)], null),face_text,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meshPhysicalMaterial\x22,\x22meshPhysicalMaterial\x22,1544836631),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22black\x22,new cljs.core.Keyword(null,\x22emissive\x22,\x22emissive\x22,-761267227),\x22gold\x22], null)], null)], null)], null)], null);\n});\ntableground.views.player_box \x3d (function tableground$views$player_box(var_args){\nvar G__33229 \x3d arguments.length;\nswitch (G__33229) {\ncase 0:\nreturn tableground.views.player_box.cljs$core$IFn$_invoke$arity$0();\n\nbreak;\ncase 1:\nreturn tableground.views.player_box.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ndefault:\nthrow (new Error([\x22Invalid arity: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join(\x27\x27)));\n\n}\n});\n\n(tableground.views.player_box.cljs$core$IFn$_invoke$arity$0 \x3d (function (){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22f\x3e\x22,\x22f\x3e\x22,1484564198),tableground.views.player_box,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),(0)], null),new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22orange\x22,new cljs.core.Keyword(null,\x22face-text\x22,\x22face-text\x22,-1856480469),\x220\x22], null)], null);\n}));\n\n(tableground.views.player_box.cljs$core$IFn$_invoke$arity$1 \x3d (function (p__33230){\nvar map__33231 \x3d p__33230;\nvar map__33231__$1 \x3d cljs.core.__destructure_map(map__33231);\nvar position \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33231__$1,new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912));\nvar color \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33231__$1,new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173));\nvar face_text \x3d cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33231__$1,new cljs.core.Keyword(null,\x22face-text\x22,\x22face-text\x22,-1856480469));\nvar mesh_ref \x3d shadow.js.shim.module$react.useRef();\nvar line_ref \x3d shadow.js.shim.module$react.useRef();\nvar font_loader \x3d shadow.js.shim.module$$react_three$fiber.useLoader(shadow.js.shim.module$three$addons$loaders$FontLoader.FontLoader,\x22/marcellus.json\x22);\nvar set_line_vis \x3d (function (on_QMARK_){\nreturn (line_ref.current.visible \x3d on_QMARK_);\n});\nvar set_xz \x3d (function (p__33232){\nvar vec__33233 \x3d p__33232;\nvar x \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33233,(0),null);\nvar z \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33233,(1),null);\n(mesh_ref.current.position.x \x3d x);\n\nreturn (mesh_ref.current.position.z \x3d z);\n});\nvar set_y \x3d (function (y){\nreturn (mesh_ref.current.position.y \x3d y);\n});\nvar set_hover \x3d (function (hovered_QMARK_){\nreturn (document.body.style.cursor \x3d (cljs.core.truth_(hovered_QMARK_)?\x22pointer\x22:\x22\x22));\n});\nvar bind_hover \x3d shadow.js.shim.module$$use_gesture$react.useHover((function (e){\nif(cljs.core.truth_((function (){var and__5043__auto__ \x3d e.last;\nif(cljs.core.truth_(and__5043__auto__)){\nreturn cljs.core.not(e.down);\n} else {\nreturn and__5043__auto__;\n}\n})())){\nreturn set_hover(false);\n} else {\nif(cljs.core.truth_(e.first)){\nreturn set_hover(true);\n} else {\nreturn null;\n}\n}\n}));\nvar bind_drag \x3d shadow.js.shim.module$$use_gesture$react.useDrag((function (e){\nif(cljs.core.truth_(e.first)){\nset_line_vis(true);\n\nset_y((cljs.core.second(position) + 0.3));\n} else {\n}\n\ne.event.ray.intersectPlane(cljs.core.deref(tableground.views.hot_plane),tableground.views.intersect_point);\n\nif(cljs.core.truth_(e.last)){\nif((!(tableground.views.play_area_intersect_QMARK_(tableground.views.intersect_point.x,tableground.views.intersect_point.z)))){\nset_xz(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(position,(0)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(position,(2))], null));\n\ncljs.core.reset_BANG_(tableground.views.bid_total,cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(parseInt,cljs.core.keys(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(tableground.views.bid_boxes,(function (played){\nreturn tableground.views.enforce_and_return_played(cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(played,face_text));\n}))))));\n} else {\ncljs.core.reset_BANG_(tableground.views.bid_total,cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(parseInt,cljs.core.keys(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(tableground.views.bid_boxes,(function (played){\nreturn tableground.views.enforce_and_return_played(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(played,face_text,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [mesh_ref,(function (){\nreturn set_xz(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.nth.cljs$core$IFn$_invoke$arity$2(position,(0)),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(position,(2))], null));\n})], null)));\n}))))));\n}\n\nset_hover(false);\n\nset_line_vis(false);\n\nset_y(cljs.core.second(position));\n} else {\nif(cljs.core.truth_(e.active)){\nset_xz(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tableground.views.intersect_point.x,tableground.views.intersect_point.z], null));\n} else {\n}\n}\n\nreturn e.event.stopPropagation();\n}));\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic(cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1((bind_drag.cljs$core$IFn$_invoke$arity$0 ? bind_drag.cljs$core$IFn$_invoke$arity$0() : bind_drag.call(null))),cljs.core.js__GT_clj.cljs$core$IFn$_invoke$arity$1((bind_hover.cljs$core$IFn$_invoke$arity$0 ? bind_hover.cljs$core$IFn$_invoke$arity$0() : bind_hover.call(null))),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22touch-action\x22,\x22touch-action\x22,-128660292),new cljs.core.Keyword(null,\x22none\x22,\x22none\x22,1333468478)], null),new cljs.core.Keyword(null,\x22ref\x22,\x22ref\x22,1289896967),mesh_ref,new cljs.core.Keyword(null,\x22geometry\x22,\x22geometry\x22,-405034994),tableground.views.box_geom,new cljs.core.Keyword(null,\x22castShadow\x22,\x22castShadow\x22,1475003551),true,new cljs.core.Keyword(null,\x22receiveShadow\x22,\x22receiveShadow\x22,773566383),true,new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),position], null)], 0)),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.core.adapt_react_class(shadow.js.shim.module$$react_three$drei.Line),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22ref\x22,\x22ref\x22,1289896967),line_ref,new cljs.core.Keyword(null,\x22points\x22,\x22points\x22,-1486596883),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(0),(0)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(-1),(0)], null)], null),new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22blue\x22,new cljs.core.Keyword(null,\x22line-width\x22,\x22line-width\x22,-906934988),(3),new cljs.core.Keyword(null,\x22visible\x22,\x22visible\x22,-1024216805),true], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.core.adapt_react_class(shadow.js.shim.module$$react_three$drei.Text3D),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22font\x22,\x22font\x22,-1506159249),font_loader.data,new cljs.core.Keyword(null,\x22height\x22,\x22height\x22,1025178622),0.15,new cljs.core.Keyword(null,\x22size\x22,\x22size\x22,1098693007),0.5,new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.15,0.4,0.2], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.57,(0),(0)], null)], null),face_text,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meshPhysicalMaterial\x22,\x22meshPhysicalMaterial\x22,1544836631),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22black\x22,new cljs.core.Keyword(null,\x22emissive\x22,\x22emissive\x22,-761267227),\x22gold\x22], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meshStandardMaterial\x22,\x22meshStandardMaterial\x22,-2120289909),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),color], null)], null)], null);\n}));\n\n(tableground.views.player_box.cljs$lang$maxFixedArity \x3d 1);\n\ntableground.views.plane_from_geom \x3d (function tableground$views$plane_from_geom(geom){\nvar plane \x3d (new shadow.js.shim.module$three.Plane());\nvar norm \x3d (new shadow.js.shim.module$three.Vector3());\nvar pt \x3d (new shadow.js.shim.module$three.Vector3());\nnorm.set((0),(0),(1)).applyQuaternion(geom.quaternion);\n\npt.copy(geom.position);\n\nplane.setFromNormalAndCoplanarPoint(norm,pt);\n\nreturn plane;\n});\ntableground.views.popup_panel \x3d (function tableground$views$popup_panel(msg,btns){\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div\x22,\x22div\x22,1057191632),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.Keyword(null,\x22fixed\x22,\x22fixed\x22,-562004358),new cljs.core.Keyword(null,\x22z-index\x22,\x22z-index\x22,1892827090),(101),new cljs.core.Keyword(null,\x22height\x22,\x22height\x22,1025178622),\x2298%\x22,new cljs.core.Keyword(null,\x22width\x22,\x22width\x22,-384071477),\x2298%\x22,new cljs.core.Keyword(null,\x22display\x22,\x22display\x22,242065432),new cljs.core.Keyword(null,\x22flex\x22,\x22flex\x22,-1425124628),new cljs.core.Keyword(null,\x22align-items\x22,\x22align-items\x22,-267946462),new cljs.core.Keyword(null,\x22center\x22,\x22center\x22,-748944368),new cljs.core.Keyword(null,\x22justify-content\x22,\x22justify-content\x22,-1990475787),new cljs.core.Keyword(null,\x22center\x22,\x22center\x22,-748944368),new cljs.core.Keyword(null,\x22background-color\x22,\x22background-color\x22,570434026),\x22rgba(200,200,200, 0.5)\x22], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div\x22,\x22div\x22,1057191632),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22background-color\x22,\x22background-color\x22,570434026),\x22white\x22,new cljs.core.Keyword(null,\x22display\x22,\x22display\x22,242065432),new cljs.core.Keyword(null,\x22flex\x22,\x22flex\x22,-1425124628),new cljs.core.Keyword(null,\x22flex-direction\x22,\x22flex-direction\x22,364609438),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),new cljs.core.Keyword(null,\x22margin\x22,\x22margin\x22,-995903681),\x2216px\x22,new cljs.core.Keyword(null,\x22padding\x22,\x22padding\x22,1660304693),\x220px 24px 24px 24px\x22,new cljs.core.Keyword(null,\x22box-shadow\x22,\x22box-shadow\x22,1600206755),\x223px 4px 8px\x22], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22p\x22,\x22p\x22,151049309),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22margin-left\x22,\x22margin-left\x22,2015598377),\x2216px\x22,new cljs.core.Keyword(null,\x22margin-right\x22,\x22margin-right\x22,809689658),\x2216px\x22], null)], null),msg], null),cljs.core.into.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22\x3c\x3e\x22,\x22\x3c\x3e\x22,1280186386)], null),(function (){var iter__5523__auto__ \x3d (function tableground$views$popup_panel_$_iter__33236(s__33237){\nreturn (new cljs.core.LazySeq(null,(function (){\nvar s__33237__$1 \x3d s__33237;\nwhile(true){\nvar temp__5804__auto__ \x3d cljs.core.seq(s__33237__$1);\nif(temp__5804__auto__){\nvar s__33237__$2 \x3d temp__5804__auto__;\nif(cljs.core.chunked_seq_QMARK_(s__33237__$2)){\nvar c__5521__auto__ \x3d cljs.core.chunk_first(s__33237__$2);\nvar size__5522__auto__ \x3d cljs.core.count(c__5521__auto__);\nvar b__33239 \x3d cljs.core.chunk_buffer(size__5522__auto__);\nif((function (){var i__33238 \x3d (0);\nwhile(true){\nif((i__33238 \x3c size__5522__auto__)){\nvar vec__33240 \x3d cljs.core._nth(c__5521__auto__,i__33238);\nvar btn_txt \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33240,(0),null);\nvar btn_fn \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33240,(1),null);\ncljs.core.chunk_append(b__33239,new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22button\x22,\x22button\x22,1456579943),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22align-self\x22,\x22align-self\x22,1475936794),new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958)], null),new cljs.core.Keyword(null,\x22on-click\x22,\x22on-click\x22,1632826543),btn_fn], null),btn_txt], null));\n\nvar G__33317 \x3d (i__33238 + (1));\ni__33238 \x3d G__33317;\ncontinue;\n} else {\nreturn true;\n}\nbreak;\n}\n})()){\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__33239),tableground$views$popup_panel_$_iter__33236(cljs.core.chunk_rest(s__33237__$2)));\n} else {\nreturn cljs.core.chunk_cons(cljs.core.chunk(b__33239),null);\n}\n} else {\nvar vec__33243 \x3d cljs.core.first(s__33237__$2);\nvar btn_txt \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33243,(0),null);\nvar btn_fn \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33243,(1),null);\nreturn cljs.core.cons(new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22button\x22,\x22button\x22,1456579943),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22align-self\x22,\x22align-self\x22,1475936794),new cljs.core.Keyword(null,\x22end\x22,\x22end\x22,-268185958)], null),new cljs.core.Keyword(null,\x22on-click\x22,\x22on-click\x22,1632826543),btn_fn], null),btn_txt], null),tableground$views$popup_panel_$_iter__33236(cljs.core.rest(s__33237__$2)));\n}\n} else {\nreturn null;\n}\nbreak;\n}\n}),null,null));\n});\nreturn iter__5523__auto__(btns);\n})())], null)], null);\n});\ntableground.views.play_opponent_turn \x3d (function tableground$views$play_opponent_turn(){\nreturn cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(tableground.views.game_state,(function (state){\nvar opponent_boxes \x3d new cljs.core.Keyword(null,\x22opponent-boxes\x22,\x22opponent-boxes\x22,1038098234).cljs$core$IFn$_invoke$arity$1(state);\nvar nonce \x3d cljs.core.rand_int(clojure.math.combinatorics.count_subsets(opponent_boxes));\nvar opponent_plays \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((3),new cljs.core.Keyword(null,\x22turn\x22,\x22turn\x22,75759344).cljs$core$IFn$_invoke$arity$1(state)))?opponent_boxes:clojure.math.combinatorics.nth_subset(opponent_boxes,nonce));\nvar opponent_total \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(parseInt,opponent_plays));\nvar opponent_msg \x3d [\x22Opponent plays \x22,\x22[\x22,clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22, \x22,opponent_plays),\x22]\x22,\x22 for a total of \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(opponent_total)].join(\x27\x27);\nvar played \x3d cljs.core.keys(cljs.core.deref(tableground.views.bid_boxes));\nvar player_rem \x3d clojure.set.difference.cljs$core$IFn$_invoke$arity$2(new cljs.core.Keyword(null,\x22player-boxes\x22,\x22player-boxes\x22,-635668928).cljs$core$IFn$_invoke$arity$1(state),cljs.core.set(cljs.core.keys(cljs.core.deref(tableground.views.bid_boxes))));\nvar player_total \x3d cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(cljs.core._PLUS_,cljs.core.map.cljs$core$IFn$_invoke$arity$2(parseInt,played));\nvar player_msg \x3d [\x22You played \x22,\x22[\x22,clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22, \x22,cljs.core.keys(cljs.core.deref(tableground.views.bid_boxes))),\x22]\x22,\x22 for a total of \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(player_total)].join(\x27\x27);\nvar verdict \x3d cljs.core.compare(player_total,opponent_total);\nvar verdict_msg \x3d (function (){var G__33250 \x3d verdict;\nswitch (G__33250) {\ncase (0):\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22\x3c\x3e\x22,\x22\x3c\x3e\x22,1280186386),\x22It\x27s a tie. \x22,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22b\x22,\x22b\x22,1482224470),\x22Scores are unchanged.\x22], null)], null);\n\nbreak;\ncase (1):\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22\x3c\x3e\x22,\x22\x3c\x3e\x22,1280186386),\x22You win the bid.\x22,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22b\x22,\x22b\x22,1482224470),\x22 You gain \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(tableground.views.pot_value)),\x22 points\x22], null)], null);\n\nbreak;\ncase (-1):\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22\x3c\x3e\x22,\x22\x3c\x3e\x22,1280186386),\x22You lose the bid.\x22,new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22b\x22,\x22b\x22,1482224470),\x22 Opponent gains \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(cljs.core.deref(tableground.views.pot_value)),\x22 points\x22], null)], null);\n\nbreak;\ndefault:\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__33250)].join(\x27\x27)));\n\n}\n})();\nvar vec__33247 \x3d (function (){var G__33251 \x3d verdict;\nswitch (G__33251) {\ncase (0):\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22player-score\x22,\x22player-score\x22,-564716352)),cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22opponent-score\x22,\x22opponent-score\x22,2136563163))], null);\n\nbreak;\ncase (1):\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(parseInt(cljs.core.deref(tableground.views.pot_value)) + cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22player-score\x22,\x22player-score\x22,-564716352))),cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22opponent-score\x22,\x22opponent-score\x22,2136563163))], null);\n\nbreak;\ncase (-1):\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22player-score\x22,\x22player-score\x22,-564716352)),(parseInt(cljs.core.deref(tableground.views.pot_value)) + cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22opponent-score\x22,\x22opponent-score\x22,2136563163)))], null);\n\nbreak;\ndefault:\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__33251)].join(\x27\x27)));\n\n}\n})();\nvar player_score \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33247,(0),null);\nvar opponent_score \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33247,(1),null);\nvar game_result_msg \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22turn\x22,\x22turn\x22,75759344)),(3)))?new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22\x3c\x3e\x22,\x22\x3c\x3e\x22,1280186386),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22h3\x22,\x22h3\x22,2067611163),\x22Game result\x22], null),[\x22The final score is \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(player_score),\x22 - \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(opponent_score),\x22.\x22].join(\x27\x27),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22br\x22,\x22br\x22,934104792)], null),(function (){var G__33252 \x3d cljs.core.compare(player_score,opponent_score);\nswitch (G__33252) {\ncase (0):\nreturn \x22The game ends in a tie.\x22;\n\nbreak;\ncase (1):\nreturn \x22You\x27re the winner!\x22;\n\nbreak;\ncase (-1):\nreturn \x22You were runner-up.\x22;\n\nbreak;\ndefault:\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__33252)].join(\x27\x27)));\n\n}\n})()], null):null);\nvar emoji_msg \x3d ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22turn\x22,\x22turn\x22,75759344)),(3)))?(function (){var G__33253 \x3d cljs.core.compare(player_score,opponent_score);\nswitch (G__33253) {\ncase (0):\nreturn \x22\\u2696\\uFE0F \x22;\n\nbreak;\ncase (1):\nreturn \x22\\uD83C\\uDFC6\x22;\n\nbreak;\ncase (-1):\nreturn \x22\\uD83E\\uDD48\x22;\n\nbreak;\ndefault:\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__33253)].join(\x27\x27)));\n\n}\n})():(function (){var G__33254 \x3d verdict;\nswitch (G__33254) {\ncase (1):\nreturn \x22\\u2705\x22;\n\nbreak;\ncase (0):\nreturn \x22\\u26AA\x22;\n\nbreak;\ncase (-1):\nreturn \x22\\uD83D\\uDEAB\x22;\n\nbreak;\ndefault:\nthrow (new Error([\x22No matching clause: \x22,cljs.core.str.cljs$core$IFn$_invoke$arity$1(G__33254)].join(\x27\x27)));\n\n}\n})());\nvar final_msg \x3d new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22\x3c\x3e\x22,\x22\x3c\x3e\x22,1280186386),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22h1\x22,\x22h1\x22,-1896887462),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22text-align\x22,\x22text-align\x22,1786091845),new cljs.core.Keyword(null,\x22center\x22,\x22center\x22,-748944368)], null)], null),emoji_msg], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22h3\x22,\x22h3\x22,2067611163),\x22Bid result\x22], null),player_msg,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22br\x22,\x22br\x22,934104792)], null),opponent_msg,new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22br\x22,\x22br\x22,934104792)], null),verdict_msg,game_result_msg], null);\nvar opponent_rem \x3d clojure.set.difference.cljs$core$IFn$_invoke$arity$2(opponent_boxes,opponent_plays);\ncljs.core.reset_BANG_(tableground.views.popup_msg,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [final_msg,cljs.core.PersistentArrayMap.createAsIfByAssoc([((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22turn\x22,\x22turn\x22,75759344)),(3)))?\x22Play Again.\x22:\x22Continue.\x22),(function (){\nreturn cljs.core.reset_BANG_(tableground.views.popup_msg,null);\n})])], null));\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(tableground.views.bid_boxes,(function (boxes){\nvar seq__33255_33323 \x3d cljs.core.seq(boxes);\nvar chunk__33256_33324 \x3d null;\nvar count__33257_33325 \x3d (0);\nvar i__33258_33326 \x3d (0);\nwhile(true){\nif((i__33258_33326 \x3c count__33257_33325)){\nvar vec__33271_33327 \x3d chunk__33256_33324.cljs$core$IIndexed$_nth$arity$2(null,i__33258_33326);\nvar _face_value_33328 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33271_33327,(0),null);\nvar vec__33274_33329 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33271_33327,(1),null);\nvar box_ref_33330 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33274_33329,(0),null);\nvar _reset_fn_33331 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33274_33329,(1),null);\n(box_ref_33330.current.visible \x3d false);\n\n(box_ref_33330.current.position.y \x3d (15));\n\n\nvar G__33332 \x3d seq__33255_33323;\nvar G__33333 \x3d chunk__33256_33324;\nvar G__33334 \x3d count__33257_33325;\nvar G__33335 \x3d (i__33258_33326 + (1));\nseq__33255_33323 \x3d G__33332;\nchunk__33256_33324 \x3d G__33333;\ncount__33257_33325 \x3d G__33334;\ni__33258_33326 \x3d G__33335;\ncontinue;\n} else {\nvar temp__5804__auto___33336 \x3d cljs.core.seq(seq__33255_33323);\nif(temp__5804__auto___33336){\nvar seq__33255_33337__$1 \x3d temp__5804__auto___33336;\nif(cljs.core.chunked_seq_QMARK_(seq__33255_33337__$1)){\nvar c__5568__auto___33338 \x3d cljs.core.chunk_first(seq__33255_33337__$1);\nvar G__33339 \x3d cljs.core.chunk_rest(seq__33255_33337__$1);\nvar G__33340 \x3d c__5568__auto___33338;\nvar G__33341 \x3d cljs.core.count(c__5568__auto___33338);\nvar G__33342 \x3d (0);\nseq__33255_33323 \x3d G__33339;\nchunk__33256_33324 \x3d G__33340;\ncount__33257_33325 \x3d G__33341;\ni__33258_33326 \x3d G__33342;\ncontinue;\n} else {\nvar vec__33277_33343 \x3d cljs.core.first(seq__33255_33337__$1);\nvar _face_value_33344 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33277_33343,(0),null);\nvar vec__33280_33345 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33277_33343,(1),null);\nvar box_ref_33346 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33280_33345,(0),null);\nvar _reset_fn_33347 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33280_33345,(1),null);\n(box_ref_33346.current.visible \x3d false);\n\n(box_ref_33346.current.position.y \x3d (15));\n\n\nvar G__33348 \x3d cljs.core.next(seq__33255_33337__$1);\nvar G__33349 \x3d null;\nvar G__33350 \x3d (0);\nvar G__33351 \x3d (0);\nseq__33255_33323 \x3d G__33348;\nchunk__33256_33324 \x3d G__33349;\ncount__33257_33325 \x3d G__33350;\ni__33258_33326 \x3d G__33351;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(tableground.views.hidden_boxes,(function (p1__33246_SHARP_){\nreturn cljs.core.into.cljs$core$IFn$_invoke$arity$2(p1__33246_SHARP_,boxes);\n}));\n\nreturn null;\n}));\n\ncljs.core.reset_BANG_(tableground.views.bid_total,(0));\n\ncljs.core.reset_BANG_(tableground.views.pot_value,tableground.views.roll_pot());\n\nif(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$2(state,new cljs.core.Keyword(null,\x22turn\x22,\x22turn\x22,75759344)),(3))){\ncljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(tableground.views.hidden_boxes,(function (boxes){\nvar seq__33283_33352 \x3d cljs.core.seq(boxes);\nvar chunk__33284_33353 \x3d null;\nvar count__33285_33354 \x3d (0);\nvar i__33286_33355 \x3d (0);\nwhile(true){\nif((i__33286_33355 \x3c count__33285_33354)){\nvar vec__33299_33356 \x3d chunk__33284_33353.cljs$core$IIndexed$_nth$arity$2(null,i__33286_33355);\nvar _face_value_33357 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33299_33356,(0),null);\nvar vec__33302_33358 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33299_33356,(1),null);\nvar box_ref_33359 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33302_33358,(0),null);\nvar reset_fn_33360 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33302_33358,(1),null);\n(box_ref_33359.current.visible \x3d true);\n\n(reset_fn_33360.cljs$core$IFn$_invoke$arity$0 ? reset_fn_33360.cljs$core$IFn$_invoke$arity$0() : reset_fn_33360.call(null));\n\n(box_ref_33359.current.position.y \x3d 0.2);\n\n\nvar G__33361 \x3d seq__33283_33352;\nvar G__33362 \x3d chunk__33284_33353;\nvar G__33363 \x3d count__33285_33354;\nvar G__33364 \x3d (i__33286_33355 + (1));\nseq__33283_33352 \x3d G__33361;\nchunk__33284_33353 \x3d G__33362;\ncount__33285_33354 \x3d G__33363;\ni__33286_33355 \x3d G__33364;\ncontinue;\n} else {\nvar temp__5804__auto___33365 \x3d cljs.core.seq(seq__33283_33352);\nif(temp__5804__auto___33365){\nvar seq__33283_33366__$1 \x3d temp__5804__auto___33365;\nif(cljs.core.chunked_seq_QMARK_(seq__33283_33366__$1)){\nvar c__5568__auto___33367 \x3d cljs.core.chunk_first(seq__33283_33366__$1);\nvar G__33368 \x3d cljs.core.chunk_rest(seq__33283_33366__$1);\nvar G__33369 \x3d c__5568__auto___33367;\nvar G__33370 \x3d cljs.core.count(c__5568__auto___33367);\nvar G__33371 \x3d (0);\nseq__33283_33352 \x3d G__33368;\nchunk__33284_33353 \x3d G__33369;\ncount__33285_33354 \x3d G__33370;\ni__33286_33355 \x3d G__33371;\ncontinue;\n} else {\nvar vec__33305_33372 \x3d cljs.core.first(seq__33283_33366__$1);\nvar _face_value_33373 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33305_33372,(0),null);\nvar vec__33308_33374 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33305_33372,(1),null);\nvar box_ref_33375 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33308_33374,(0),null);\nvar reset_fn_33376 \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33308_33374,(1),null);\n(box_ref_33375.current.visible \x3d true);\n\n(reset_fn_33376.cljs$core$IFn$_invoke$arity$0 ? reset_fn_33376.cljs$core$IFn$_invoke$arity$0() : reset_fn_33376.call(null));\n\n(box_ref_33375.current.position.y \x3d 0.2);\n\n\nvar G__33377 \x3d cljs.core.next(seq__33283_33366__$1);\nvar G__33378 \x3d null;\nvar G__33379 \x3d (0);\nvar G__33380 \x3d (0);\nseq__33283_33352 \x3d G__33377;\nchunk__33284_33353 \x3d G__33378;\ncount__33285_33354 \x3d G__33379;\ni__33286_33355 \x3d G__33380;\ncontinue;\n}\n} else {\n}\n}\nbreak;\n}\n\nreturn null;\n}));\n\nreturn new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22turn\x22,\x22turn\x22,75759344),(1),new cljs.core.Keyword(null,\x22player-boxes\x22,\x22player-boxes\x22,-635668928),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\x223\x22,null,\x224\x22,null,\x225\x22,null,\x226\x22,null,\x221\x22,null,\x222\x22,null], null), null),new cljs.core.Keyword(null,\x22opponent-boxes\x22,\x22opponent-boxes\x22,1038098234),new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 6, [\x223\x22,null,\x224\x22,null,\x225\x22,null,\x226\x22,null,\x221\x22,null,\x222\x22,null], null), null),new cljs.core.Keyword(null,\x22player-score\x22,\x22player-score\x22,-564716352),(0),new cljs.core.Keyword(null,\x22opponent-score\x22,\x22opponent-score\x22,2136563163),(0)], null);\n} else {\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.update.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(state,new cljs.core.Keyword(null,\x22opponent-boxes\x22,\x22opponent-boxes\x22,1038098234),opponent_rem),new cljs.core.Keyword(null,\x22player-boxes\x22,\x22player-boxes\x22,-635668928),player_rem),new cljs.core.Keyword(null,\x22turn\x22,\x22turn\x22,75759344),cljs.core.inc),new cljs.core.Keyword(null,\x22player-score\x22,\x22player-score\x22,-564716352),player_score),new cljs.core.Keyword(null,\x22opponent-score\x22,\x22opponent-score\x22,2136563163),opponent_score);\n}\n}));\n});\ntableground.views.submit_bid \x3d (function tableground$views$submit_bid(){\nreturn tableground.views.play_opponent_turn();\n});\ntableground.views.tutorial_panel \x3d new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22\x3c\x3e\x22,\x22\x3c\x3e\x22,1280186386),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22h3\x22,\x22h3\x22,2067611163),\x22Basics:\x22], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22p\x22,\x22p\x22,151049309),\x22Each turn the black die is rolled. The number rolled becomes the value of the pot. You then bid from your hand (by dragging boxes to the green pad) to try to win the pot. Once you submit your bid, your opponent will bid from their hand. If there\x27s a higher bidder, the pot value is added to their score. Everything that has been bid is discarded. After three turns, the player with a higher score wins.\x22], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22h3\x22,\x22h3\x22,2067611163),\x22Opponent Strategy:\x22], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22p\x22,\x22p\x22,151049309),\x22For the first two turns the opponent will bid randomly (uniform chance of playing any of the available moves). On the third turn, the opponent will always bid whatever is left in their hand.\x22], null),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22br\x22,\x22br\x22,934104792)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22p\x22,\x22p\x22,151049309),\x22Can you win three games in a row?\x22], null)], null);\ntableground.views.text_panel \x3d (function tableground$views$text_panel(){\nreturn new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div\x22,\x22div\x22,1057191632),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22z-index\x22,\x22z-index\x22,1892827090),(100),new cljs.core.Keyword(null,\x22transform-origin\x22,\x22transform-origin\x22,-586167370),\x22top left\x22,new cljs.core.Keyword(null,\x22transform\x22,\x22transform\x22,1381301764),\x22scale(0.7)\x22,new cljs.core.Keyword(null,\x22left\x22,\x22left\x22,-399115937),(8),new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.Keyword(null,\x22absolute\x22,\x22absolute\x22,1655386478)], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22button\x22,\x22button\x22,1456579943),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 8, [new cljs.core.Keyword(null,\x22border-radius\x22,\x22border-radius\x22,419594011),\x22100%\x22,new cljs.core.Keyword(null,\x22margin-top\x22,\x22margin-top\x22,392161226),(8),new cljs.core.Keyword(null,\x22display\x22,\x22display\x22,242065432),new cljs.core.Keyword(null,\x22flex\x22,\x22flex\x22,-1425124628),new cljs.core.Keyword(null,\x22justify-content\x22,\x22justify-content\x22,-1990475787),new cljs.core.Keyword(null,\x22center\x22,\x22center\x22,-748944368),new cljs.core.Keyword(null,\x22align-items\x22,\x22align-items\x22,-267946462),new cljs.core.Keyword(null,\x22center\x22,\x22center\x22,-748944368),new cljs.core.Keyword(null,\x22aspect-ratio\x22,\x22aspect-ratio\x22,1674013504),(1),new cljs.core.Keyword(null,\x22border\x22,\x22border\x22,1444987323),new cljs.core.Keyword(null,\x22solid\x22,\x22solid\x22,-2023773691),new cljs.core.Keyword(null,\x22padding\x22,\x22padding\x22,1660304693),(6)], null),new cljs.core.Keyword(null,\x22on-click\x22,\x22on-click\x22,1632826543),(function (){\nreturn cljs.core.reset_BANG_(tableground.views.popup_msg,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tableground.views.tutorial_panel,new cljs.core.PersistentArrayMap(null, 1, [\x22Continue.\x22,(function (){\nreturn cljs.core.reset_BANG_(tableground.views.popup_msg,null);\n})], null)], null));\n})], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22b\x22,\x22b\x22,1482224470),\x22?\x22], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22h1\x22,\x22h1\x22,-1896887462),\x22Turn: \x22,cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(tableground.views.game_state),new cljs.core.Keyword(null,\x22turn\x22,\x22turn\x22,75759344)),\x22/3\x22], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22h2\x22,\x22h2\x22,-372662728),\x22Opponent Score: \x22,cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(tableground.views.game_state),new cljs.core.Keyword(null,\x22opponent-score\x22,\x22opponent-score\x22,2136563163))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22p\x22,\x22p\x22,151049309),\x22Opponent Hand: \x22,clojure.string.join.cljs$core$IFn$_invoke$arity$2(\x22, \x22,cljs.core.sort.cljs$core$IFn$_invoke$arity$1(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(tableground.views.game_state),new cljs.core.Keyword(null,\x22opponent-boxes\x22,\x22opponent-boxes\x22,1038098234))))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22h2\x22,\x22h2\x22,-372662728),\x22Your Score: \x22,cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.deref(tableground.views.game_state),new cljs.core.Keyword(null,\x22player-score\x22,\x22player-score\x22,-564716352))], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22p\x22,\x22p\x22,151049309),\x22Your Bid: \x22,cljs.core.deref(tableground.views.bid_total)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22button\x22,\x22button\x22,1456579943),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22on-click\x22,\x22on-click\x22,1632826543),tableground.views.submit_bid], null),\x22Submit Bid\x22], null)], null);\n});\ntableground.views.panel_fn \x3d (function tableground$views$panel_fn(){\nreturn new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div\x22,\x22div\x22,1057191632),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 6, [new cljs.core.Keyword(null,\x22display\x22,\x22display\x22,242065432),new cljs.core.Keyword(null,\x22flex\x22,\x22flex\x22,-1425124628),new cljs.core.Keyword(null,\x22touch-action\x22,\x22touch-action\x22,-128660292),new cljs.core.Keyword(null,\x22none\x22,\x22none\x22,1333468478),new cljs.core.Keyword(null,\x22flex-direction\x22,\x22flex-direction\x22,364609438),new cljs.core.Keyword(null,\x22column\x22,\x22column\x22,2078222095),new cljs.core.Keyword(null,\x22flex-grow\x22,\x22flex-grow\x22,1865160747),(1),new cljs.core.Keyword(null,\x22height\x22,\x22height\x22,1025178622),\x2298%\x22,new cljs.core.Keyword(null,\x22margin-right\x22,\x22margin-right\x22,809689658),(16)], null)], null),(function (){var temp__5804__auto__ \x3d cljs.core.deref(tableground.views.popup_msg);\nif(cljs.core.truth_(temp__5804__auto__)){\nvar vec__33313 \x3d temp__5804__auto__;\nvar msg \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33313,(0),null);\nvar btns \x3d cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33313,(1),null);\nreturn new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [tableground.views.popup_panel,msg,btns], null);\n} else {\nreturn null;\n}\n})(),new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tableground.views.text_panel], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22\x3e\x22,\x22\x3e\x22,-555517146),shadow.js.shim.module$react.Suspense,new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22fallback\x22,\x22fallback\x22,761637929),reagent.core.as_element.cljs$core$IFn$_invoke$arity$1(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22div\x22,\x22div\x22,1057191632),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22h1\x22,\x22h1\x22,-1896887462),\x22loading...\x22], null)], null)),new cljs.core.Keyword(null,\x22style\x22,\x22style\x22,-496642736),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22display\x22,\x22display\x22,242065432),new cljs.core.Keyword(null,\x22flex\x22,\x22flex\x22,-1425124628),new cljs.core.Keyword(null,\x22flex-grow\x22,\x22flex-grow\x22,1865160747),(1)], null)], null),new cljs.core.PersistentVector(null, 13, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22\x3e\x22,\x22\x3e\x22,-555517146),shadow.js.shim.module$$react_three$fiber.Canvas,new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22camera\x22,\x22camera\x22,-1190348585),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(10),(8)], null),new cljs.core.Keyword(null,\x22fov\x22,\x22fov\x22,-12463282),(50)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22hemisphereLight\x22,\x22hemisphereLight\x22,1354905528),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22intensity\x22,\x22intensity\x22,1142770863),0.2,new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22#ffffcb\x22,new cljs.core.Keyword(null,\x22ground-color\x22,\x22ground-color\x22,-1832095873),\x22#080820\x22], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.core.adapt_react_class(shadow.js.shim.module$$react_three$drei.Sky),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22distance\x22,\x22distance\x22,-1671893894),(450000),new cljs.core.Keyword(null,\x22sunPosition\x22,\x22sunPosition\x22,2057488813),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),(1),(0)], null),new cljs.core.Keyword(null,\x22inclination\x22,\x22inclination\x22,-214950214),(0),new cljs.core.Keyword(null,\x22azimuth\x22,\x22azimuth\x22,-165971535),0.25], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22directionalLight\x22,\x22directionalLight\x22,1856345040),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(10),(-10)], null),new cljs.core.Keyword(null,\x22intensity\x22,\x22intensity\x22,1142770863),0.2], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22SpotLight\x22,\x22SpotLight\x22,-2039451784),new cljs.core.PersistentArrayMap(null, 4, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(2),5.2,-4.5], null),new cljs.core.Keyword(null,\x22intensity\x22,\x22intensity\x22,1142770863),0.2,new cljs.core.Keyword(null,\x22target\x22,\x22target\x22,253001721),tableground.views.pot_box_ref.current,new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22white\x22], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22f\x3e\x22,\x22f\x3e\x22,1484564198),tableground.views.pot_box,cljs.core.deref(tableground.views.pot_value)], null)], null),new cljs.core.PersistentVector(null, 7, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22group\x22,\x22group\x22,582596132),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22f\x3e\x22,\x22f\x3e\x22,1484564198),tableground.views.player_box,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.7,0.2,2.5], null),new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22red\x22,new cljs.core.Keyword(null,\x22face-text\x22,\x22face-text\x22,-1856480469),\x221\x22], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22f\x3e\x22,\x22f\x3e\x22,1484564198),tableground.views.player_box,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.5,0.2,2.5], null),new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22orange\x22,new cljs.core.Keyword(null,\x22face-text\x22,\x22face-text\x22,-1856480469),\x222\x22], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22f\x3e\x22,\x22f\x3e\x22,1484564198),tableground.views.player_box,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1.7,0.2,2.5], null),new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22yellow\x22,new cljs.core.Keyword(null,\x22face-text\x22,\x22face-text\x22,-1856480469),\x223\x22], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22f\x3e\x22,\x22f\x3e\x22,1484564198),tableground.views.player_box,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-0.7,0.2,3.7], null),new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22green\x22,new cljs.core.Keyword(null,\x22face-text\x22,\x22face-text\x22,-1856480469),\x224\x22], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22f\x3e\x22,\x22f\x3e\x22,1484564198),tableground.views.player_box,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.5,0.2,3.7], null),new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22blue\x22,new cljs.core.Keyword(null,\x22face-text\x22,\x22face-text\x22,-1856480469),\x225\x22], null)], null),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22f\x3e\x22,\x22f\x3e\x22,1484564198),tableground.views.player_box,new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [1.7,0.2,3.7], null),new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22violet\x22,new cljs.core.Keyword(null,\x22face-text\x22,\x22face-text\x22,-1856480469),\x226\x22], null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [0.5,-0.3,(3)], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.57,(0),(0)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22BoxGeometry\x22,\x22BoxGeometry\x22,824599000),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),(4),0.01], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meshPhysicalMaterial\x22,\x22meshPhysicalMaterial\x22,1544836631),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22#f0f0f0\x22], null)], null)], null),new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),-0.3,(-1)], null),new cljs.core.Keyword(null,\x22ref\x22,\x22ref\x22,1289896967),(function (p1__33311_SHARP_){\nreturn cljs.core.reset_BANG_(tableground.views.play_area,p1__33311_SHARP_);\n})], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22BoxGeometry\x22,\x22BoxGeometry\x22,824599000),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22args\x22,\x22args\x22,1315556576),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(5),0.01,(3)], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22meshPhysicalMaterial\x22,\x22meshPhysicalMaterial\x22,1544836631),new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\x22color\x22,\x22color\x22,1011675173),\x22lightgreen\x22], null)], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22mesh\x22,\x22mesh\x22,456320595),new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),-0.3,(-3)], null),new cljs.core.Keyword(null,\x22rotation\x22,\x22rotation\x22,-1728051644),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [-1.57,(0),(0)], null),new cljs.core.Keyword(null,\x22ref\x22,\x22ref\x22,1289896967),(function (p1__33312_SHARP_){\nreturn cljs.core.reset_BANG_(tableground.views.hot_plane,(cljs.core.truth_(p1__33312_SHARP_)?tableground.views.plane_from_geom(p1__33312_SHARP_):null));\n})], null)], null),new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [reagent.core.adapt_react_class(shadow.js.shim.module$$react_three$drei.ContactShadows),new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null,\x22position\x22,\x22position\x22,-2011731912),new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [(0),-0.29,(0)], null),new cljs.core.Keyword(null,\x22opacity\x22,\x22opacity\x22,397153780),(1),new cljs.core.Keyword(null,\x22scale\x22,\x22scale\x22,-230427353),(20),new cljs.core.Keyword(null,\x22blur\x22,\x22blur\x22,-453500461),1.75,new cljs.core.Keyword(null,\x22far\x22,\x22far\x22,85807546),4.5], null)], null)], null)], null)], null);\n});\ntableground.views.main_panel \x3d (function tableground$views$main_panel(){\nreturn new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null,\x22f\x3e\x22,\x22f\x3e\x22,1484564198),tableground.views.panel_fn], null);\n});\n");
SHADOW_ENV.evalLoad("tableground.core.js", true , "goog.provide(\x27tableground.core\x27);\ntableground.core.mount_root \x3d (function tableground$core$mount_root(){\nre_frame.core.clear_subscription_cache_BANG_();\n\nvar root_el \x3d document.getElementById(\x22app\x22);\nreagent.dom.unmount_component_at_node(root_el);\n\nreturn reagent.dom.render.cljs$core$IFn$_invoke$arity$2(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [tableground.views.main_panel], null),root_el);\n});\ntableground.core.init \x3d (function tableground$core$init(){\nre_frame.core.dispatch_sync(new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(\x22tableground.events\x22,\x22initialize-db\x22,\x22tableground.events/initialize-db\x22,-1268042262)], null));\n\nreturn tableground.core.mount_root();\n});\n");
SHADOW_ENV.evalLoad("shadow.module.app.append.js", false , "\ntry { tableground.core.init(); } catch (e) { console.error(\x22An error occurred when calling (tableground.core/init)\x22); throw(e); }");
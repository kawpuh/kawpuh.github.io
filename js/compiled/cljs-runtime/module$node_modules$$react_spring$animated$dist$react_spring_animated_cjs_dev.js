shadow$provide.module$node_modules$$react_spring$animated$dist$react_spring_animated_cjs_dev=function(global,require,module,exports){function makeAnimated(value){return(shared.isAnimatedString(value)?AnimatedString:AnimatedValue).create(value)}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};return _extends.apply(this,
arguments)}function getAnimatedState(props,host){const dependencies=new Set;JSCompiler_object_inline_dependencies_93=dependencies;props.style&&(props=_extends({},props,{style:host.createAnimatedStyle(props.style)}));props=new AnimatedObject(props);JSCompiler_object_inline_dependencies_93=null;return[props,dependencies]}Object.defineProperty(exports,"__esModule",{value:!0});var shared=require("module$node_modules$$react_spring$shared$dist$react_spring_shared_cjs"),React=require("module$node_modules$react$index"),
React__namespace=function(e){if(e&&e.__esModule)return e;var n=Object.create(null);e&&Object.keys(e).forEach(function(k){if("default"!==k){var d=Object.getOwnPropertyDescriptor(e,k);Object.defineProperty(n,k,d.get?d:{enumerable:!0,get:function(){return e[k]}})}});n["default"]=e;return Object.freeze(n)}(React);const $node=Symbol.for("Animated:node"),getPayload=owner=>owner&&owner[$node]&&owner[$node].getPayload();class Animated{constructor(){this.payload=void 0;shared.defineHidden(this,$node,this)}getPayload(){return this.payload||
[]}}class AnimatedValue extends Animated{constructor(_value){super();this.done=!0;this.v0=this.lastVelocity=this.lastPosition=this.elapsedTime=void 0;this.durationProgress=0;this._value=_value;shared.is.num(this._value)&&(this.lastPosition=this._value)}static create(value){return new AnimatedValue(value)}getPayload(){return[this]}getValue(){return this._value}setValue(value,step){shared.is.num(value)&&(this.lastPosition=value,step&&(value=Math.round(value/step)*step,this.done&&(this.lastPosition=
value)));if(this._value===value)return!1;this._value=value;return!0}reset(){const {done}=this;this.done=!1;shared.is.num(this._value)&&(this.durationProgress=this.elapsedTime=0,this.lastPosition=this._value,done&&(this.lastVelocity=null),this.v0=null)}}class AnimatedString extends AnimatedValue{constructor(value){super(0);this._string=null;this._toString=void 0;this._toString=shared.createInterpolator({output:[value,value]})}static create(value){return new AnimatedString(value)}getValue(){let value=
this._string;return null==value?this._string=this._toString(this._value):value}setValue(value){if(shared.is.str(value)){if(value==this._string)return!1;this._string=value;this._value=1}else if(super.setValue(value))this._string=null;else return!1;return!0}reset(goal){goal&&(this._toString=shared.createInterpolator({output:[this.getValue(),goal]}));this._value=0;super.reset()}}var JSCompiler_object_inline_dependencies_93=null;class AnimatedObject extends Animated{constructor(source){super();this.source=
source;this.setValue(source)}getValue(animated){const values={};shared.eachProp(this.source,(source,key)=>{source&&source[$node]===source?values[key]=source.getValue(animated):shared.hasFluidValue(source)?values[key]=shared.getFluidValue(source):animated||(values[key]=source)});return values}setValue(source){this.source=source;this.payload=this._makePayload(source)}reset(){this.payload&&shared.each(this.payload,node=>node.reset())}_makePayload(source){if(source){const payload=new Set;shared.eachProp(source,
this._addToPayload,payload);return Array.from(payload)}}_addToPayload(source){JSCompiler_object_inline_dependencies_93&&shared.hasFluidValue(source)&&JSCompiler_object_inline_dependencies_93.add(source);(source=getPayload(source))&&shared.each(source,node=>this.add(node))}}class AnimatedArray extends AnimatedObject{constructor(source){super(source)}static create(source){return new AnimatedArray(source)}getValue(){return this.source.map(node=>node.getValue())}setValue(source){const payload=this.getPayload();
if(source.length==payload.length)return payload.map((node,i)=>node.setValue(source[i])).some(Boolean);super.setValue(source.map(makeAnimated));return!0}}const withAnimated=(Component,host)=>{const hasInstance=!shared.is.fun(Component)||Component.prototype&&Component.prototype.isReactComponent;return React.forwardRef((givenProps,givenRef)=>{const instanceRef=React.useRef(null),ref=hasInstance&&React.useCallback(value=>{givenRef&&(shared.is.fun(givenRef)?givenRef(value):givenRef.current=value);instanceRef.current=
value},[givenRef]),[props,deps]=getAnimatedState(givenProps,host),forceUpdate=shared.useForceUpdate();givenProps=()=>{const instance=instanceRef.current;hasInstance&&!instance||!1!==(instance?host.applyAnimatedValues(instance,props.getValue(!0)):!1)||forceUpdate()};const observer$jscomp$0=new PropsObserver(givenProps,deps),observerRef=React.useRef();shared.useIsomorphicLayoutEffect(()=>{observerRef.current=observer$jscomp$0;shared.each(deps,dep=>shared.addFluidObserver(dep,observer$jscomp$0));return()=>
{observerRef.current&&(shared.each(observerRef.current.deps,dep=>shared.removeFluidObserver(dep,observerRef.current)),shared.raf.cancel(observerRef.current.update))}});React.useEffect(givenProps,[]);shared.useOnce(()=>()=>{const observer=observerRef.current;shared.each(observer.deps,dep=>shared.removeFluidObserver(dep,observer))});givenProps=host.getComponentProps(props.getValue());return React__namespace.createElement(Component,_extends({},givenProps,{ref}))})};class PropsObserver{constructor(update,
deps){this.update=update;this.deps=deps}eventObserved(event){"change"==event.type&&shared.raf.write(this.update)}}const cacheKey=Symbol.for("AnimatedComponent"),getDisplayName=arg=>shared.is.str(arg)?arg:arg&&shared.is.str(arg.displayName)?arg.displayName:shared.is.fun(arg)&&arg.name||null;exports.Animated=Animated;exports.AnimatedArray=AnimatedArray;exports.AnimatedObject=AnimatedObject;exports.AnimatedString=AnimatedString;exports.AnimatedValue=AnimatedValue;exports.createHost=(components,{applyAnimatedValues:_applyAnimatedValues=
()=>!1,createAnimatedStyle:_createAnimatedStyle=style=>new AnimatedObject(style),getComponentProps:_getComponentProps=props=>props}={})=>{const hostConfig={applyAnimatedValues:_applyAnimatedValues,createAnimatedStyle:_createAnimatedStyle,getComponentProps:_getComponentProps},animated=Component=>{const displayName=getDisplayName(Component)||"Anonymous";Component=shared.is.str(Component)?animated[Component]||(animated[Component]=withAnimated(Component,hostConfig)):Component[cacheKey]||(Component[cacheKey]=
withAnimated(Component,hostConfig));Component.displayName=`Animated(${displayName})`;return Component};shared.eachProp(components,(Component,key)=>{shared.is.arr(components)&&(key=getDisplayName(Component));animated[key]=animated(Component)});return{animated}};exports.getAnimated=owner=>owner&&owner[$node];exports.getAnimatedType=function(value){const parentNode=value&&value[$node];return parentNode?parentNode.constructor:shared.is.arr(value)?AnimatedArray:shared.isAnimatedString(value)?AnimatedString:
AnimatedValue};exports.getPayload=getPayload;exports.isAnimated=value=>!!value&&value[$node]===value;exports.setAnimated=(owner,node)=>shared.defineHidden(owner,$node,node)}
//# sourceMappingURL=module$node_modules$$react_spring$animated$dist$react_spring_animated_cjs_dev.js.map

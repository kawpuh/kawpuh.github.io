shadow$provide.module$node_modules$$react_spring$shared$dist$react_spring_shared_cjs_dev=function(global,require,module,exports){function noop(){}function flush(queue,iterator){if(queue.size){const items=Array.from(queue);queue.clear();items.forEach(iterator)}}function flushStartQueue(){startQueue.forEach(startSafely);startQueue.clear();rafz.raf(advance)}function startSafely(animation){currentFrame.includes(animation)||startUnsafely(animation)}function startUnsafely(animation){currentFrame.splice(findIndex(currentFrame,
other=>other.priority>animation.priority),0,animation)}function advance(dt){const nextFrame=prevFrame;for(let i=0;i<currentFrame.length;i++){const animation=currentFrame[i];priority=animation.priority;animation.idle||(willAdvance(animation),animation.advance(dt),animation.idle||nextFrame.push(animation))}priority=0;prevFrame=currentFrame;prevFrame.length=0;currentFrame=nextFrame;return 0<currentFrame.length}function findIndex(arr,test){test=arr.findIndex(test);return 0>test?arr.length:test}function call(...parts){return"\\(\\s*("+
parts.join(")\\s*,\\s*(")+")\\s*\\)"}function hue2rgb(p,q,t){0>t&&(t+=1);1<t&&--t;return t<1/6?p+6*(q-p)*t:.5>t?q:t<2/3?p+(q-p)*(2/3-t)*6:p}function hslToRgb(h,s,l){s=.5>l?l*(1+s):l+s-l*s;const p=2*l-s;l=hue2rgb(p,s,h+1/3);const g=hue2rgb(p,s,h);h=hue2rgb(p,s,h-1/3);return Math.round(255*l)<<24|Math.round(255*g)<<16|Math.round(255*h)<<8}function parse255(str){str=parseInt(str,10);return 0>str?0:255<str?255:str}function parse1(str){str=parseFloat(str);return 0>str?0:1<str?255:Math.round(255*str)}function parsePercentage(str){str=
parseFloat(str);return 0>str?0:100<str?1:str/100}function colorToRgba(input){let match,int32Color="number"===typeof input?input>>>0===input&&0<=input&&4294967295>=input?input:null:(match=hex6.exec(input))?parseInt(match[1]+"ff",16)>>>0:colors$1&&void 0!==colors$1[input]?colors$1[input]:(match=rgb.exec(input))?(parse255(match[1])<<24|parse255(match[2])<<16|parse255(match[3])<<8|255)>>>0:(match=rgba.exec(input))?(parse255(match[1])<<24|parse255(match[2])<<16|parse255(match[3])<<8|parse1(match[4]))>>>
0:(match=hex3.exec(input))?parseInt(match[1]+match[1]+match[2]+match[2]+match[3]+match[3]+"ff",16)>>>0:(match=hex8.exec(input))?parseInt(match[1],16)>>>0:(match=hex4.exec(input))?parseInt(match[1]+match[1]+match[2]+match[2]+match[3]+match[3]+match[4]+match[4],16)>>>0:(match=hsl.exec(input))?(hslToRgb((parseFloat(match[1])%360+360)%360/360,parsePercentage(match[2]),parsePercentage(match[3]))|255)>>>0:(match=hsla.exec(input))?(hslToRgb((parseFloat(match[1])%360+360)%360/360,parsePercentage(match[2]),
parsePercentage(match[3]))|parse1(match[4]))>>>0:null;if(null===int32Color)return input;int32Color=int32Color||0;return`rgba(${(int32Color&4278190080)>>>24}, ${(int32Color&16711680)>>>16}, ${(int32Color&65280)>>>8}, ${(int32Color&255)/255})`}function _extends(){_extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i],key;for(key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target};return _extends.apply(this,
arguments)}function callFluidObserver(observer,event){observer.eventObserved?observer.eventObserved(event):observer(event)}function areInputsEqual(next,prev){if(next.length!==prev.length)return!1;for(let i=0;i<next.length;i++)if(next[i]!==prev[i])return!1;return!0}Object.defineProperty(exports,"__esModule",{value:!0});var rafz=require("module$node_modules$$react_spring$rafz$dist$react_spring_rafz_cjs"),react=require("module$node_modules$react$index");const is={arr:Array.isArray,obj:a=>!!a&&"Object"===
a.constructor.name,fun:a=>"function"===typeof a,str:a=>"string"===typeof a,num:a=>"number"===typeof a,und:a=>void 0===a},isSSR=()=>"undefined"===typeof window||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent);let createStringInterpolator$1,to,colors$1=null,skipAnimation=!1,willAdvance=noop;const assign=globals=>{globals.to&&(to=globals.to);globals.now&&(rafz.raf.now=globals.now);void 0!==globals.colors&&(colors$1=globals.colors);null!=globals.skipAnimation&&(skipAnimation=
globals.skipAnimation);globals.createStringInterpolator&&(createStringInterpolator$1=globals.createStringInterpolator);globals.requestAnimationFrame&&rafz.raf.use(globals.requestAnimationFrame);globals.batchedUpdates&&(rafz.raf.batchedUpdates=globals.batchedUpdates);globals.willAdvance&&(willAdvance=globals.willAdvance);globals.frameLoop&&(rafz.raf.frameLoop=globals.frameLoop)};global=Object.freeze({__proto__:null,get createStringInterpolator(){return createStringInterpolator$1},get to(){return to},
get colors(){return colors$1},get skipAnimation(){return skipAnimation},get willAdvance(){return willAdvance},assign});const startQueue=new Set;let currentFrame=[],prevFrame=[],priority=0;const frameLoop={get idle(){return!startQueue.size&&!currentFrame.length},start(animation){priority>animation.priority?(startQueue.add(animation),rafz.raf.onStart(flushStartQueue)):(startSafely(animation),rafz.raf(advance))},advance,sort(animation){if(priority)rafz.raf.onFrame(()=>frameLoop.sort(animation));else{const prevIndex=
currentFrame.indexOf(animation);~prevIndex&&(currentFrame.splice(prevIndex,1),startUnsafely(animation))}},clear(){currentFrame=[];startQueue.clear()}},rgb=new RegExp("rgb"+call("[-+]?\\d*\\.?\\d+","[-+]?\\d*\\.?\\d+","[-+]?\\d*\\.?\\d+")),rgba=new RegExp("rgba"+call("[-+]?\\d*\\.?\\d+","[-+]?\\d*\\.?\\d+","[-+]?\\d*\\.?\\d+","[-+]?\\d*\\.?\\d+")),hsl=new RegExp("hsl"+call("[-+]?\\d*\\.?\\d+","[-+]?\\d*\\.?\\d+%","[-+]?\\d*\\.?\\d+%")),hsla=new RegExp("hsla"+call("[-+]?\\d*\\.?\\d+","[-+]?\\d*\\.?\\d+%",
"[-+]?\\d*\\.?\\d+%","[-+]?\\d*\\.?\\d+")),hex3=/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex4=/^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,hex6=/^#([0-9a-fA-F]{6})$/,hex8=/^#([0-9a-fA-F]{8})$/,createInterpolator=(range,output,extrapolate)=>{if(is.fun(range))return range;if(is.arr(range))return createInterpolator({range,output,extrapolate});if(is.str(range.output[0]))return createStringInterpolator$1(range);const outputRange=range.output,inputRange=range.range||
[0,1],extrapolateLeft=range.extrapolateLeft||range.extrapolate||"extend",extrapolateRight=range.extrapolateRight||range.extrapolate||"extend",easing=range.easing||(t=>t);return input=>{for(var JSCompiler_inline_result,i=1;i<inputRange.length-1&&!(inputRange[i]>=input);++i);JSCompiler_inline_result=i-1;a:{i=inputRange[JSCompiler_inline_result];var inputMax=inputRange[JSCompiler_inline_result+1],outputMin=outputRange[JSCompiler_inline_result];JSCompiler_inline_result=outputRange[JSCompiler_inline_result+
1];var map=range.map;map=map?map(input):input;if(map<i)if("identity"===extrapolateLeft){input=map;break a}else"clamp"===extrapolateLeft&&(map=i);if(map>inputMax)if("identity"===extrapolateRight){input=map;break a}else"clamp"===extrapolateRight&&(map=inputMax);outputMin===JSCompiler_inline_result?input=outputMin:i===inputMax?input=input<=i?outputMin:JSCompiler_inline_result:(map=-Infinity===i?-map:Infinity===inputMax?map-i:(map-i)/(inputMax-i),map=easing(map),input=map=-Infinity===outputMin?-map:Infinity===
JSCompiler_inline_result?map+outputMin:map*(JSCompiler_inline_result-outputMin)+outputMin)}return input}},$get=Symbol.for("FluidValue.get"),$observers=Symbol.for("FluidValue.observers"),getFluidValue=arg=>arg&&arg[$get]?arg[$get]():arg;class FluidValue{constructor(get){this[$get]=void 0;this[$observers]=void 0;if(!get&&!(get=this.get))throw Error("Unknown getter");setHidden(this,$get,get)}}const setHidden=(target,key,value)=>Object.defineProperty(target,key,{value,writable:!0,configurable:!0}),numberRegex=
/[+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,colorRegex=/(#(?:[0-9a-f]{2}){2,4}|(#[0-9a-f]{3})|(rgb|hsl)a?\((-?\d+%?[,\s]+){2,3}\s*[\d\.]+%?\))/gi,unitRegex=new RegExp(`(${numberRegex.source})(%|[a-z]+)`,"i"),rgbaRegex=/rgba\(([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+), ([0-9\.-]+)\)/gi,cssVariableRegex=/var\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\)/,variableToRgba=input=>{var JSCompiler_inline_result;if(JSCompiler_inline_result=cssVariableRegex.exec(input)){var [,token,fallback]=JSCompiler_inline_result;
JSCompiler_inline_result=[token,fallback]}else JSCompiler_inline_result=[,];const [token$jscomp$0,fallback$jscomp$0]=JSCompiler_inline_result;if(!token$jscomp$0||isSSR())return input;if(JSCompiler_inline_result=window.getComputedStyle(document.documentElement).getPropertyValue(token$jscomp$0))return JSCompiler_inline_result.trim();if(fallback$jscomp$0&&fallback$jscomp$0.startsWith("--")){if(JSCompiler_inline_result=window.getComputedStyle(document.documentElement).getPropertyValue(fallback$jscomp$0))return JSCompiler_inline_result}else{if(fallback$jscomp$0&&
cssVariableRegex.test(fallback$jscomp$0))return variableToRgba(fallback$jscomp$0);if(fallback$jscomp$0)return fallback$jscomp$0}return input};let namedColorRegex;const rgbaRound=(_,p1,p2,p3,p4)=>`rgba(${Math.round(p1)}, ${Math.round(p2)}, ${Math.round(p3)}, ${p4})`;require=fn=>{let called=!1;if("function"!=typeof fn)throw new TypeError("react-spring: once requires a function parameter");return(...args)=>{called||(fn(...args),called=!0)}};const warnInterpolate=require(console.warn),warnDirectCall=
require(console.warn),useIsomorphicLayoutEffect=isSSR()?react.useEffect:react.useLayoutEffect,useIsMounted=()=>{const isMounted=react.useRef(!1);useIsomorphicLayoutEffect(()=>{isMounted.current=!0;return()=>{isMounted.current=!1}},[]);return isMounted},emptyDeps=[];Object.defineProperty(exports,"raf",{enumerable:!0,get:function(){return rafz.raf}});exports.FluidValue=FluidValue;exports.Globals=global;exports.addFluidObserver=function(target,observer){if(target[$get]){let observers=target[$observers];
observers||setHidden(target,$observers,observers=new Set);observers.has(observer)||(observers.add(observer),target.observerAdded&&target.observerAdded(observers.size,observer))}return observer};exports.callFluidObserver=callFluidObserver;exports.callFluidObservers=function(target,event){(target=target[$observers])&&target.forEach(observer=>{callFluidObserver(observer,event)})};exports.colorToRgba=colorToRgba;exports.colors={transparent:0,aliceblue:4042850303,antiquewhite:4209760255,aqua:16777215,
aquamarine:2147472639,azure:4043309055,beige:4126530815,bisque:4293182719,black:255,blanchedalmond:4293643775,blue:65535,blueviolet:2318131967,brown:2771004159,burlywood:3736635391,burntsienna:3934150143,cadetblue:1604231423,chartreuse:2147418367,chocolate:3530104575,coral:4286533887,cornflowerblue:1687547391,cornsilk:4294499583,crimson:3692313855,cyan:16777215,darkblue:35839,darkcyan:9145343,darkgoldenrod:3095792639,darkgray:2846468607,darkgreen:6553855,darkgrey:2846468607,darkkhaki:3182914559,darkmagenta:2332068863,
darkolivegreen:1433087999,darkorange:4287365375,darkorchid:2570243327,darkred:2332033279,darksalmon:3918953215,darkseagreen:2411499519,darkslateblue:1211993087,darkslategray:793726975,darkslategrey:793726975,darkturquoise:13554175,darkviolet:2483082239,deeppink:4279538687,deepskyblue:12582911,dimgray:1768516095,dimgrey:1768516095,dodgerblue:512819199,firebrick:2988581631,floralwhite:4294635775,forestgreen:579543807,fuchsia:4278255615,gainsboro:3705462015,ghostwhite:4177068031,gold:4292280575,goldenrod:3668254975,
gray:2155905279,green:8388863,greenyellow:2919182335,grey:2155905279,honeydew:4043305215,hotpink:4285117695,indianred:3445382399,indigo:1258324735,ivory:4294963455,khaki:4041641215,lavender:3873897215,lavenderblush:4293981695,lawngreen:2096890111,lemonchiffon:4294626815,lightblue:2916673279,lightcoral:4034953471,lightcyan:3774873599,lightgoldenrodyellow:4210742015,lightgray:3553874943,lightgreen:2431553791,lightgrey:3553874943,lightpink:4290167295,lightsalmon:4288707327,lightseagreen:548580095,lightskyblue:2278488831,
lightslategray:2005441023,lightslategrey:2005441023,lightsteelblue:2965692159,lightyellow:4294959359,lime:16711935,limegreen:852308735,linen:4210091775,magenta:4278255615,maroon:2147483903,mediumaquamarine:1724754687,mediumblue:52735,mediumorchid:3126187007,mediumpurple:2473647103,mediumseagreen:1018393087,mediumslateblue:2070474495,mediumspringgreen:16423679,mediumturquoise:1221709055,mediumvioletred:3340076543,midnightblue:421097727,mintcream:4127193855,mistyrose:4293190143,moccasin:4293178879,
navajowhite:4292783615,navy:33023,oldlace:4260751103,olive:2155872511,olivedrab:1804477439,orange:4289003775,orangered:4282712319,orchid:3664828159,palegoldenrod:4008225535,palegreen:2566625535,paleturquoise:2951671551,palevioletred:3681588223,papayawhip:4293907967,peachpuff:4292524543,peru:3448061951,pink:4290825215,plum:3718307327,powderblue:2967529215,purple:2147516671,rebeccapurple:1714657791,red:4278190335,rosybrown:3163525119,royalblue:1097458175,saddlebrown:2336560127,salmon:4202722047,sandybrown:4104413439,
seagreen:780883967,seashell:4294307583,sienna:2689740287,silver:3233857791,skyblue:2278484991,slateblue:1784335871,slategray:1887473919,slategrey:1887473919,snow:4294638335,springgreen:16744447,steelblue:1182971135,tan:3535047935,teal:8421631,thistle:3636451583,tomato:4284696575,turquoise:1088475391,violet:4001558271,wheat:4125012991,white:4294967295,whitesmoke:4126537215,yellow:4294902015,yellowgreen:2597139199};exports.createInterpolator=createInterpolator;exports.createStringInterpolator=config=>
{namedColorRegex||(namedColorRegex=colors$1?new RegExp(`(${Object.keys(colors$1).join("|")})(?!\\w)`,"g"):/^\b$/);const output$jscomp$0=config.output.map(value=>getFluidValue(value).replace(cssVariableRegex,variableToRgba).replace(colorRegex,colorToRgba).replace(namedColorRegex,colorToRgba)),keyframes=output$jscomp$0.map(value=>value.match(numberRegex).map(Number)),interpolators=keyframes[0].map((_,i)=>keyframes.map(values=>{if(!(i in values))throw Error('The arity of each "output" value must be equal');
return values[i]})).map(output=>createInterpolator(_extends({},config,{output})));return input=>{var _output$find;const missingUnit=!unitRegex.test(output$jscomp$0[0])&&(null==(_output$find=output$jscomp$0.find(value=>unitRegex.test(value)))?void 0:_output$find.replace(numberRegex,""));let i=0;return output$jscomp$0[0].replace(numberRegex,()=>`${interpolators[i++](input)}${missingUnit||""}`).replace(rgbaRegex,rgbaRound)}};exports.defineHidden=(obj,key,value)=>Object.defineProperty(obj,key,{value,
writable:!0,configurable:!0});exports.deprecateDirectCall=function(){warnDirectCall('react-spring: Directly calling start instead of using the api object is deprecated in v9 (use ".start" instead), this will be removed in later 0.X.0 versions')};exports.deprecateInterpolate=function(){warnInterpolate('react-spring: The "interpolate" function is deprecated in v9 (use "to" instead)')};exports.each=(obj,fn)=>obj.forEach(fn);exports.eachProp=function(obj,fn,ctx){if(is.arr(obj))for(var i=0;i<obj.length;i++)fn.call(ctx,
obj[i],`${i}`);else for(i in obj)obj.hasOwnProperty(i)&&fn.call(ctx,obj[i],i)};exports.flush=flush;exports.flushCalls=(queue,...args)=>flush(queue,fn=>fn(...args));exports.frameLoop=frameLoop;exports.getFluidObservers=target=>target[$observers]||null;exports.getFluidValue=getFluidValue;exports.hasFluidValue=arg=>!(!arg||!arg[$get]);exports.hex3=hex3;exports.hex4=hex4;exports.hex6=hex6;exports.hex8=hex8;exports.hsl=hsl;exports.hsla=hsla;exports.is=is;exports.isAnimatedString=function(value){return is.str(value)&&
("#"==value[0]||/\d/.test(value)||!isSSR()&&cssVariableRegex.test(value)||value in(colors$1||{}))};exports.isEqual=function(a,b){if(is.arr(a)){if(!is.arr(b)||a.length!==b.length)return!1;for(let i=0;i<a.length;i++)if(a[i]!==b[i])return!1;return!0}return a===b};exports.isSSR=isSSR;exports.noop=noop;exports.removeFluidObserver=function(target,observer){let observers=target[$observers];if(observers&&observers.has(observer)){const count=observers.size-1;count?observers.delete(observer):target[$observers]=
null;target.observerRemoved&&target.observerRemoved(count,observer)}};exports.rgb=rgb;exports.rgba=rgba;exports.setFluidGetter=(target,get)=>setHidden(target,$get,get);exports.toArray=a=>is.und(a)?[]:is.arr(a)?a:[a];exports.useForceUpdate=function(){const update=react.useState()[1],isMounted=useIsMounted();return()=>{isMounted.current&&update(Math.random())}};exports.useIsomorphicLayoutEffect=useIsomorphicLayoutEffect;exports.useMemoOne=function(getResult,inputs){const [initial]=react.useState(()=>
({inputs,result:getResult()})),committed=react.useRef(),prevCache=committed.current;let cache=prevCache;cache?inputs&&cache.inputs&&areInputsEqual(inputs,cache.inputs)||(cache={inputs,result:getResult()}):cache=initial;react.useEffect(()=>{committed.current=cache;prevCache==initial&&(initial.inputs=initial.result=void 0)},[cache]);return cache.result};exports.useOnce=effect=>react.useEffect(effect,emptyDeps);exports.usePrev=function(value){const prevRef=react.useRef();react.useEffect(()=>{prevRef.current=
value});return prevRef.current};exports.useReducedMotion=()=>{const [reducedMotion,setReducedMotion]=react.useState(null);useIsomorphicLayoutEffect(()=>{const mql=window.matchMedia("(prefers-reduced-motion)"),handleMediaChange=e=>{setReducedMotion(e.matches);assign({skipAnimation:e.matches})};handleMediaChange(mql);mql.addEventListener("change",handleMediaChange);return()=>{mql.removeEventListener("change",handleMediaChange)}},[]);return reducedMotion}}
//# sourceMappingURL=module$node_modules$$react_spring$shared$dist$react_spring_shared_cjs_dev.js.map
